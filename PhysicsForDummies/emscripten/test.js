// Note: For maximum-speed code, see "Optimizing Code" on the Emscripten wiki, https://github.com/kripken/emscripten/wiki/Optimizing-Code
// Note: Some Emscripten settings may limit the speed of the generated code.
// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = eval('(function() { try { return Module || {} } catch(e) { return {} } })()');
// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}
// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function';
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;
if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  Module['print'] = function print(x) {
    process['stdout'].write(x + '\n');
  };
  Module['printErr'] = function printErr(x) {
    process['stderr'].write(x + '\n');
  };
  var nodeFS = require('fs');
  var nodePath = require('path');
  Module['read'] = function read(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };
  Module['readBinary'] = function readBinary(filename) { return Module['read'](filename, true) };
  Module['load'] = function load(f) {
    globalEval(read(f));
  };
  Module['arguments'] = process['argv'].slice(2);
  module['exports'] = Module;
}
else if (ENVIRONMENT_IS_SHELL) {
  Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm
  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available (jsc?)' };
  }
  Module['readBinary'] = function readBinary(f) {
    return read(f, 'binary');
  };
  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }
  this['Module'] = Module;
  eval("if (typeof gc === 'function' && gc.toString().indexOf('[native code]') > 0) var gc = undefined"); // wipe out the SpiderMonkey shell 'gc' function, which can confuse closure (uses it as a minified name, and it is then initted to a non-falsey value unexpectedly)
}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };
  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }
  if (typeof console !== 'undefined') {
    Module['print'] = function print(x) {
      console.log(x);
    };
    Module['printErr'] = function printErr(x) {
      console.log(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }
  if (ENVIRONMENT_IS_WEB) {
    this['Module'] = Module;
  } else {
    Module['load'] = importScripts;
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}
function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] == 'undefined' && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
// *** Environment setup code ***
// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];
// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];
// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}
// === Auto-generated preamble library stuff ===
//========================================
// Runtime code shared with compiler
//========================================
var Runtime = {
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  forceAlign: function (target, quantum) {
    quantum = quantum || 4;
    if (quantum == 1) return target;
    if (isNumber(target) && isNumber(quantum)) {
      return Math.ceil(target/quantum)*quantum;
    } else if (isNumber(quantum) && isPowerOfTwo(quantum)) {
      return '(((' +target + ')+' + (quantum-1) + ')&' + -quantum + ')';
    }
    return 'Math.ceil((' + target + ')/' + quantum + ')*' + quantum;
  },
  isNumberType: function (type) {
    return type in Runtime.INT_TYPES || type in Runtime.FLOAT_TYPES;
  },
  isPointerType: function isPointerType(type) {
  return type[type.length-1] == '*';
},
  isStructType: function isStructType(type) {
  if (isPointerType(type)) return false;
  if (isArrayType(type)) return true;
  if (/<?{ ?[^}]* ?}>?/.test(type)) return true; // { i32, i8 } etc. - anonymous struct types
  // See comment in isStructPointerType()
  return type[0] == '%';
},
  INT_TYPES: {"i1":0,"i8":0,"i16":0,"i32":0,"i64":0},
  FLOAT_TYPES: {"float":0,"double":0},
  or64: function (x, y) {
    var l = (x | 0) | (y | 0);
    var h = (Math.round(x / 4294967296) | Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  and64: function (x, y) {
    var l = (x | 0) & (y | 0);
    var h = (Math.round(x / 4294967296) & Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  xor64: function (x, y) {
    var l = (x | 0) ^ (y | 0);
    var h = (Math.round(x / 4294967296) ^ Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  dedup: function dedup(items, ident) {
  var seen = {};
  if (ident) {
    return items.filter(function(item) {
      if (seen[item[ident]]) return false;
      seen[item[ident]] = true;
      return true;
    });
  } else {
    return items.filter(function(item) {
      if (seen[item]) return false;
      seen[item] = true;
      return true;
    });
  }
},
  set: function set() {
  var args = typeof arguments[0] === 'object' ? arguments[0] : arguments;
  var ret = {};
  for (var i = 0; i < args.length; i++) {
    ret[args[i]] = 0;
  }
  return ret;
},
  STACK_ALIGN: 8,
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (type == 'i64' || type == 'double' || vararg) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  calculateStructAlignment: function calculateStructAlignment(type) {
    type.flatSize = 0;
    type.alignSize = 0;
    var diffs = [];
    var prev = -1;
    var index = 0;
    type.flatIndexes = type.fields.map(function(field) {
      index++;
      var size, alignSize;
      if (Runtime.isNumberType(field) || Runtime.isPointerType(field)) {
        size = Runtime.getNativeTypeSize(field); // pack char; char; in structs, also char[X]s.
        alignSize = Runtime.getAlignSize(field, size);
      } else if (Runtime.isStructType(field)) {
        if (field[1] === '0') {
          // this is [0 x something]. When inside another structure like here, it must be at the end,
          // and it adds no size
          // XXX this happens in java-nbody for example... assert(index === type.fields.length, 'zero-length in the middle!');
          size = 0;
          if (Types.types[field]) {
            alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
          } else {
            alignSize = type.alignSize || QUANTUM_SIZE;
          }
        } else {
          size = Types.types[field].flatSize;
          alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
        }
      } else if (field[0] == 'b') {
        // bN, large number field, like a [N x i8]
        size = field.substr(1)|0;
        alignSize = 1;
      } else if (field[0] === '<') {
        // vector type
        size = alignSize = Types.types[field].flatSize; // fully aligned
      } else if (field[0] === 'i') {
        // illegal integer field, that could not be legalized because it is an internal structure field
        // it is ok to have such fields, if we just use them as markers of field size and nothing more complex
        size = alignSize = parseInt(field.substr(1))/8;
        assert(size % 1 === 0, 'cannot handle non-byte-size field ' + field);
      } else {
        assert(false, 'invalid type for calculateStructAlignment');
      }
      if (type.packed) alignSize = 1;
      type.alignSize = Math.max(type.alignSize, alignSize);
      var curr = Runtime.alignMemory(type.flatSize, alignSize); // if necessary, place this on aligned memory
      type.flatSize = curr + size;
      if (prev >= 0) {
        diffs.push(curr-prev);
      }
      prev = curr;
      return curr;
    });
    if (type.name_[0] === '[') {
      // arrays have 2 elements, so we get the proper difference. then we scale here. that way we avoid
      // allocating a potentially huge array for [999999 x i8] etc.
      type.flatSize = parseInt(type.name_.substr(1))*type.flatSize/2;
    }
    type.flatSize = Runtime.alignMemory(type.flatSize, type.alignSize);
    if (diffs.length == 0) {
      type.flatFactor = type.flatSize;
    } else if (Runtime.dedup(diffs).length == 1) {
      type.flatFactor = diffs[0];
    }
    type.needsFlattening = (type.flatFactor != 1);
    return type.flatIndexes;
  },
  generateStructInfo: function (struct, typeName, offset) {
    var type, alignment;
    if (typeName) {
      offset = offset || 0;
      type = (typeof Types === 'undefined' ? Runtime.typeInfo : Types.types)[typeName];
      if (!type) return null;
      if (type.fields.length != struct.length) {
        printErr('Number of named fields must match the type for ' + typeName + ': possibly duplicate struct names. Cannot return structInfo');
        return null;
      }
      alignment = type.flatIndexes;
    } else {
      var type = { fields: struct.map(function(item) { return item[0] }) };
      alignment = Runtime.calculateStructAlignment(type);
    }
    var ret = {
      __size__: type.flatSize
    };
    if (typeName) {
      struct.forEach(function(item, i) {
        if (typeof item === 'string') {
          ret[item] = alignment[i] + offset;
        } else {
          // embedded struct
          var key;
          for (var k in item) key = k;
          ret[key] = Runtime.generateStructInfo(item[key], type.fields[i], alignment[i]);
        }
      });
    } else {
      struct.forEach(function(item, i) {
        ret[item[1]] = alignment[i];
      });
    }
    return ret;
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  getAsmConst: function (code, numArgs) {
    // code is a constant string on the heap, so we can cache these
    if (!Runtime.asmConstCache) Runtime.asmConstCache = {};
    var func = Runtime.asmConstCache[code];
    if (func) return func;
    var args = [];
    for (var i = 0; i < numArgs; i++) {
      args.push(String.fromCharCode(36) + i); // $0, $1 etc
    }
    return Runtime.asmConstCache[code] = eval('(function(' + args.join(',') + '){ ' + Pointer_stringify(code) + ' })'); // new Function does not allow upvars in node
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[func]) {
      Runtime.funcWrappers[func] = function dynCall_wrapper() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return Runtime.funcWrappers[func];
  },
  UTF8Processor: function () {
    var buffer = [];
    var needed = 0;
    this.processCChar = function (code) {
      code = code & 0xFF;
      if (buffer.length == 0) {
        if ((code & 0x80) == 0x00) {        // 0xxxxxxx
          return String.fromCharCode(code);
        }
        buffer.push(code);
        if ((code & 0xE0) == 0xC0) {        // 110xxxxx
          needed = 1;
        } else if ((code & 0xF0) == 0xE0) { // 1110xxxx
          needed = 2;
        } else {                            // 11110xxx
          needed = 3;
        }
        return '';
      }
      if (needed) {
        buffer.push(code);
        needed--;
        if (needed > 0) return '';
      }
      var c1 = buffer[0];
      var c2 = buffer[1];
      var c3 = buffer[2];
      var c4 = buffer[3];
      var ret;
      if (buffer.length == 2) {
        ret = String.fromCharCode(((c1 & 0x1F) << 6)  | (c2 & 0x3F));
      } else if (buffer.length == 3) {
        ret = String.fromCharCode(((c1 & 0x0F) << 12) | ((c2 & 0x3F) << 6)  | (c3 & 0x3F));
      } else {
        // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
        var codePoint = ((c1 & 0x07) << 18) | ((c2 & 0x3F) << 12) |
                        ((c3 & 0x3F) << 6)  | (c4 & 0x3F);
        ret = String.fromCharCode(
          Math.floor((codePoint - 0x10000) / 0x400) + 0xD800,
          (codePoint - 0x10000) % 0x400 + 0xDC00);
      }
      buffer.length = 0;
      return ret;
    }
    this.processJSString = function processJSString(string) {
      string = unescape(encodeURIComponent(string));
      var ret = [];
      for (var i = 0; i < string.length; i++) {
        ret.push(string.charCodeAt(i));
      }
      return ret;
    }
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+7)&-8); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + size)|0;STATICTOP = (((STATICTOP)+7)&-8); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + size)|0;DYNAMICTOP = (((DYNAMICTOP)+7)&-8); if (DYNAMICTOP >= TOTAL_MEMORY) enlargeMemory();; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 8))*(quantum ? quantum : 8); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*(+4294967296))) : ((+((low>>>0)))+((+((high|0)))*(+4294967296)))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}
//========================================
// Runtime essentials
//========================================
var __THREW__ = 0; // Used in checking for thrown exceptions.
var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;
var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD, tempDouble, tempFloat;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;
function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}
var globalScope = this;
// C calling interface. A convenient way to call C functions (in C files, or
// defined with extern "C").
//
// Note: LLVM optimizations can inline and remove functions, after which you will not be
//       able to call them. Closure can also do so. To avoid that, add your function to
//       the exports using something like
//
//         -s EXPORTED_FUNCTIONS='["_main", "_myfunc"]'
//
// @param ident      The name of the C function (note that C++ functions will be name-mangled - use extern "C")
// @param returnType The return type of the function, one of the JS types 'number', 'string' or 'array' (use 'number' for any C pointer, and
//                   'array' for JavaScript arrays and typed arrays; note that arrays are 8-bit).
// @param argTypes   An array of the types of arguments for the function (if there are no arguments, this can be ommitted). Types are as in returnType,
//                   except that 'array' is not possible (there is no way for us to know the length of the array)
// @param args       An array of the arguments to the function, as native JS values (as in returnType)
//                   Note that string arguments will be stored on the stack (the JS string will become a C string on the stack).
// @return           The return value, as a native JS value (as in returnType)
function ccall(ident, returnType, argTypes, args) {
  return ccallFunc(getCFunc(ident), returnType, argTypes, args);
}
Module["ccall"] = ccall;
// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  try {
    var func = Module['_' + ident]; // closure exported function
    if (!func) func = eval('_' + ident); // explicit lookup
  } catch(e) {
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}
// Internal function that does a C call using a function, not an identifier
function ccallFunc(func, returnType, argTypes, args) {
  var stack = 0;
  function toC(value, type) {
    if (type == 'string') {
      if (value === null || value === undefined || value === 0) return 0; // null string
      value = intArrayFromString(value);
      type = 'array';
    }
    if (type == 'array') {
      if (!stack) stack = Runtime.stackSave();
      var ret = Runtime.stackAlloc(value.length);
      writeArrayToMemory(value, ret);
      return ret;
    }
    return value;
  }
  function fromC(value, type) {
    if (type == 'string') {
      return Pointer_stringify(value);
    }
    assert(type != 'array');
    return value;
  }
  var i = 0;
  var cArgs = args ? args.map(function(arg) {
    return toC(arg, argTypes[i++]);
  }) : [];
  var ret = fromC(func.apply(null, cArgs), returnType);
  if (stack) Runtime.stackRestore(stack);
  return ret;
}
// Returns a native JS wrapper for a C function. This is similar to ccall, but
// returns a function you can call repeatedly in a normal way. For example:
//
//   var my_function = cwrap('my_c_function', 'number', ['number', 'number']);
//   alert(my_function(5, 22));
//   alert(my_function(99, 12));
//
function cwrap(ident, returnType, argTypes) {
  var func = getCFunc(ident);
  return function() {
    return ccallFunc(func, returnType, argTypes, Array.prototype.slice.call(arguments));
  }
}
Module["cwrap"] = cwrap;
// Sets a value in memory in a dynamic way at run-time. Uses the
// type data. This is the same as makeSetValue, except that
// makeSetValue is done at compile-time and generates the needed
// code then, whereas this function picks the right code at
// run-time.
// Note that setValue and getValue only do *aligned* writes and reads!
// Note that ccall uses JS types as for defining types, while setValue and
// getValue need LLVM types ('i8', 'i32') - this is a lower-level operation
function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[(ptr)]=value; break;
      case 'i8': HEAP8[(ptr)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module['setValue'] = setValue;
// Parallel to setValue.
function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[(ptr)];
      case 'i8': return HEAP8[(ptr)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module['getValue'] = getValue;
var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;
Module['ALLOC_DYNAMIC'] = ALLOC_DYNAMIC;
Module['ALLOC_NONE'] = ALLOC_NONE;
// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }
  var singleType = typeof types === 'string' ? types : null;
  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }
  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)|0)]=0;
    }
    return ret;
  }
  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }
  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];
    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }
    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }
    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later
    setValue(ret+i, curr, type);
    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }
  return ret;
}
Module['allocate'] = allocate;
function Pointer_stringify(ptr, /* optional */ length) {
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = false;
  var t;
  var i = 0;
  while (1) {
    t = HEAPU8[(((ptr)+(i))|0)];
    if (t >= 128) hasUtf = true;
    else if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;
  var ret = '';
  if (!hasUtf) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  var utf8 = new Runtime.UTF8Processor();
  for (i = 0; i < length; i++) {
    t = HEAPU8[(((ptr)+(i))|0)];
    ret += utf8.processCChar(t);
  }
  return ret;
}
Module['Pointer_stringify'] = Pointer_stringify;
// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.
function UTF16ToString(ptr) {
  var i = 0;
  var str = '';
  while (1) {
    var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
    if (codeUnit == 0)
      return str;
    ++i;
    // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
    str += String.fromCharCode(codeUnit);
  }
}
Module['UTF16ToString'] = UTF16ToString;
// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr', 
// null-terminated and encoded in UTF16LE form. The copy will require at most (str.length*2+1)*2 bytes of space in the HEAP.
function stringToUTF16(str, outPtr) {
  for(var i = 0; i < str.length; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[(((outPtr)+(i*2))>>1)]=codeUnit
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[(((outPtr)+(str.length*2))>>1)]=0
}
Module['stringToUTF16'] = stringToUTF16;
// Given a pointer 'ptr' to a null-terminated UTF32LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.
function UTF32ToString(ptr) {
  var i = 0;
  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}
Module['UTF32ToString'] = UTF32ToString;
// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr', 
// null-terminated and encoded in UTF32LE form. The copy will require at most (str.length+1)*4 bytes of space in the HEAP,
// but can use less, since str.length does not return the number of characters in the string, but the number of UTF-16 code units in the string.
function stringToUTF32(str, outPtr) {
  var iChar = 0;
  for(var iCodeUnit = 0; iCodeUnit < str.length; ++iCodeUnit) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    var codeUnit = str.charCodeAt(iCodeUnit); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++iCodeUnit);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[(((outPtr)+(iChar*4))>>2)]=codeUnit
    ++iChar;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[(((outPtr)+(iChar*4))>>2)]=0
}
Module['stringToUTF32'] = stringToUTF32;
function demangle(func) {
  try {
    if (typeof func === 'number') func = Pointer_stringify(func);
    if (func[0] !== '_') return func;
    if (func[1] !== '_') return func; // C function
    if (func[2] !== 'Z') return func;
    switch (func[3]) {
      case 'n': return 'operator new()';
      case 'd': return 'operator delete()';
    }
    var i = 3;
    // params, etc.
    var basicTypes = {
      'v': 'void',
      'b': 'bool',
      'c': 'char',
      's': 'short',
      'i': 'int',
      'l': 'long',
      'f': 'float',
      'd': 'double',
      'w': 'wchar_t',
      'a': 'signed char',
      'h': 'unsigned char',
      't': 'unsigned short',
      'j': 'unsigned int',
      'm': 'unsigned long',
      'x': 'long long',
      'y': 'unsigned long long',
      'z': '...'
    };
    function dump(x) {
      //return;
      if (x) Module.print(x);
      Module.print(func);
      var pre = '';
      for (var a = 0; a < i; a++) pre += ' ';
      Module.print (pre + '^');
    }
    var subs = [];
    function parseNested() {
      i++;
      if (func[i] === 'K') i++; // ignore const
      var parts = [];
      while (func[i] !== 'E') {
        if (func[i] === 'S') { // substitution
          i++;
          var next = func.indexOf('_', i);
          var num = func.substring(i, next) || 0;
          parts.push(subs[num] || '?');
          i = next+1;
          continue;
        }
        if (func[i] === 'C') { // constructor
          parts.push(parts[parts.length-1]);
          i += 2;
          continue;
        }
        var size = parseInt(func.substr(i));
        var pre = size.toString().length;
        if (!size || !pre) { i--; break; } // counter i++ below us
        var curr = func.substr(i + pre, size);
        parts.push(curr);
        subs.push(curr);
        i += pre + size;
      }
      i++; // skip E
      return parts;
    }
    var first = true;
    function parse(rawList, limit, allowVoid) { // main parser
      limit = limit || Infinity;
      var ret = '', list = [];
      function flushList() {
        return '(' + list.join(', ') + ')';
      }
      var name;
      if (func[i] === 'N') {
        // namespaced N-E
        name = parseNested().join('::');
        limit--;
        if (limit === 0) return rawList ? [name] : name;
      } else {
        // not namespaced
        if (func[i] === 'K' || (first && func[i] === 'L')) i++; // ignore const and first 'L'
        var size = parseInt(func.substr(i));
        if (size) {
          var pre = size.toString().length;
          name = func.substr(i + pre, size);
          i += pre + size;
        }
      }
      first = false;
      if (func[i] === 'I') {
        i++;
        var iList = parse(true);
        var iRet = parse(true, 1, true);
        ret += iRet[0] + ' ' + name + '<' + iList.join(', ') + '>';
      } else {
        ret = name;
      }
      paramLoop: while (i < func.length && limit-- > 0) {
        //dump('paramLoop');
        var c = func[i++];
        if (c in basicTypes) {
          list.push(basicTypes[c]);
        } else {
          switch (c) {
            case 'P': list.push(parse(true, 1, true)[0] + '*'); break; // pointer
            case 'R': list.push(parse(true, 1, true)[0] + '&'); break; // reference
            case 'L': { // literal
              i++; // skip basic type
              var end = func.indexOf('E', i);
              var size = end - i;
              list.push(func.substr(i, size));
              i += size + 2; // size + 'EE'
              break;
            }
            case 'A': { // array
              var size = parseInt(func.substr(i));
              i += size.toString().length;
              if (func[i] !== '_') throw '?';
              i++; // skip _
              list.push(parse(true, 1, true)[0] + ' [' + size + ']');
              break;
            }
            case 'E': break paramLoop;
            default: ret += '?' + c; break paramLoop;
          }
        }
      }
      if (!allowVoid && list.length === 1 && list[0] === 'void') list = []; // avoid (void)
      return rawList ? list : ret + flushList();
    }
    return parse();
  } catch(e) {
    return func;
  }
}
function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}
function stackTrace() {
  var stack = new Error().stack;
  return stack ? demangleAll(stack) : '(no stack trace available)'; // Stack trace is not available at least on IE10 and Safari 6.
}
// Memory management
var PAGE_SIZE = 4096;
function alignMemoryPage(x) {
  return (x+4095)&-4096;
}
var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;
var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk
function enlargeMemory() {
  abort('Cannot enlarge memory arrays in asm.js. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value ' + TOTAL_MEMORY + ', or (2) set Module.TOTAL_MEMORY before the program runs.');
}
var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;
var FAST_MEMORY = Module['FAST_MEMORY'] || 2097152;
// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'Cannot fallback to non-typed array case: Code is too specialized');
var buffer = new ArrayBuffer(TOTAL_MEMORY);
HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);
// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');
Module['HEAP'] = HEAP;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;
function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}
var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited
var runtimeInitialized = false;
function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}
function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}
function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}
function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
}
function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}
function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module['addOnPreRun'] = Module.addOnPreRun = addOnPreRun;
function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module['addOnInit'] = Module.addOnInit = addOnInit;
function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module['addOnPreMain'] = Module.addOnPreMain = addOnPreMain;
function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module['addOnExit'] = Module.addOnExit = addOnExit;
function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module['addOnPostRun'] = Module.addOnPostRun = addOnPostRun;
// Tools
// This processes a JS string into a C-line array of numbers, 0-terminated.
// For LLVM-originating strings, see parser.js:parseLLVMString function
function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var ret = (new Runtime.UTF8Processor()).processJSString(stringy);
  if (length) {
    ret.length = length;
  }
  if (!dontAddNull) {
    ret.push(0);
  }
  return ret;
}
Module['intArrayFromString'] = intArrayFromString;
function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;
// Write a Javascript array to somewhere in the heap
function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))|0)]=chr
    i = i + 1;
  }
}
Module['writeStringToMemory'] = writeStringToMemory;
function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[(((buffer)+(i))|0)]=array[i];
  }
}
Module['writeArrayToMemory'] = writeArrayToMemory;
function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; i++) {
    HEAP8[(((buffer)+(i))|0)]=str.charCodeAt(i)
  }
  if (!dontAddNull) HEAP8[(((buffer)+(str.length))|0)]=0
}
Module['writeAsciiToMemory'] = writeAsciiToMemory;
function unSign(value, bits, ignore, sig) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore, sig) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}
if (!Math['imul']) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];
var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;
// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled
function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
}
Module['addRunDependency'] = addRunDependency;
function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module['removeRunDependency'] = removeRunDependency;
Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data
var memoryInitializer = null;
// === Body ===
STATIC_BASE = 8;
STATICTOP = STATIC_BASE + 19160;
var _stdout;
var _stdout=_stdout=allocate([0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
var _stdin;
var _stdin=_stdin=allocate([0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
var _stderr;
var _stderr=_stderr=allocate([0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
/* global initializers */ __ATINIT__.push({ func: function() { runPostSets() } },{ func: function() { __GLOBAL__I_a() } },{ func: function() { __GLOBAL__I_a263() } });
var ___fsmu8;
var ___dso_handle;
var __ZTVN10__cxxabiv120__si_class_type_infoE;
__ZTVN10__cxxabiv120__si_class_type_infoE=allocate([0,0,0,0,32,52,0,0,34,1,0,0,178,0,0,0,74,0,0,0,184,0,0,0,8,0,0,0,10,0,0,0,4,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
var __ZTVN10__cxxabiv117__class_type_infoE;
__ZTVN10__cxxabiv117__class_type_infoE=allocate([0,0,0,0,48,52,0,0,34,1,0,0,24,1,0,0,74,0,0,0,184,0,0,0,8,0,0,0,26,0,0,0,2,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
var __ZN10GameEngineC1Ev;
var __ZN5SceneC1Ei;
var __ZN12GLFWGraphicsC1Eii;
var __ZN9GLFWInputC1EP10GLFWwindow;
var __ZN14EnemyCannoneerC1EP4body;
var __ZN14EnemyRiflesmenC1EP4body;
var __ZN7GrappleC1EiP4body;
var __ZN7MissileC1EiP4body;
var __ZN6PlayerC1EiP4body;
var __ZN8ShrapnelC1EiP4body;
var __ZNSt13runtime_errorC1EPKc;
var __ZNSt13runtime_errorD1Ev;
var __ZNSt12length_errorD1Ev;
var __ZNSt12out_of_rangeD1Ev;
var __ZNSt3__16localeC1Ev;
var __ZNSt3__16localeC1ERKS0_;
var __ZNSt3__16localeD1Ev;
var __ZNSt8bad_castC1Ev;
var __ZNSt8bad_castD1Ev;
/* memory initializer */ allocate([0,0,0,0,0,0,64,65,24,7,0,0,0,0,0,0,216,12,0,0,0,0,0,0,0,0,0,0,0,0,36,64,0,0,0,0,0,0,89,64,0,0,0,0,0,136,195,64,0,0,0,0,132,215,151,65,0,128,224,55,121,195,65,67,23,110,5,181,181,184,147,70,245,249,63,233,3,79,56,77,50,29,48,249,72,119,130,90,60,191,115,127,221,79,21,117,0,0,128,63,0,0,0,0,0,0,0,0,205,204,76,191,74,117,108,0,0,0,0,0,105,110,118,97,108,105,100,0,109,117,108,116,105,112,108,101,32,73,72,68,82,0,0,0,74,117,110,0,0,0,0,0,104,115,122,32,61,61,32,49,48,56,0,0,0,0,0,0,65,112,114,0,0,0,0,0,66,77,80,32,82,76,69,0,77,97,114,0,0,0,0,0,109,111,110,111,99,104,114,111,109,101,0,0,0,0,0,0,70,101,98,0,0,0,0,0,98,97,100,32,66,77,80,0,74,97,110,0,0,0,0,0,117,110,107,110,111,119,110,32,66,77,80,0,0,0,0,0,68,101,99,101,109,98,101,114,0,0,0,0,0,0,0,0,110,111,116,32,66,77,80,0,78,111,118,101,109,98,101,114,0,0,0,0,0,0,0,0,105,108,108,101,103,97,108,32,99,111,100,101,32,105,110,32,114,97,115,116,101,114,0,0,117,110,115,117,112,112,111,114,116,101,100,32,108,111,99,97,108,101,32,102,111,114,32,115,116,97,110,100,97,114,100,32,105,110,112,117,116,0,0,0,79,99,116,111,98,101,114,0,116,111,111,32,109,97,110,121,32,99,111,100,101,115,0,0,83,101,112,116,101,109,98,101,114,0,0,0,0,0,0,0,110,111,32,99,108,101,97,114,32,99,111,100,101,0,0,0,46,47,114,101,100,100,105,97,109,111,110,100,46,112,110,103,0,0,0,0,0,0,0,0,65,117,103,117,115,116,0,0,117,110,107,110,111,119,110,32,99,111,100,101,0,0,0,0,74,117,108,121,0,0,0,0,109,105,115,115,105,110,103,32,99,111,108,111,114,32,116,97,98,108,101,0,0,0,0,0,74,117,110,101,0,0,0,0,98,97,100,32,73,109,97,103,101,32,68,101,115,99,114,105,112,116,111,114,0,0,0,0,77,97,121,0,0,0,0,0,119,114,111,110,103,32,99,111,108,111,114,32,102,111,114,109,97,116,0,0,0,0,0,0,65,112,114,105,108,0,0,0,117,110,115,117,112,112,111,114,116,101,100,32,98,105,116,32,100,101,112,116,104,0,0,0,77,97,114,99,104,0,0,0,119,114,111,110,103,32,99,104,97,110,110,101,108,32,99,111,117,110,116,0,0,0,0,0,70,101,98,114,117,97,114,121,0,0,0,0,0,0,0,0,119,114,111,110,103,32,118,101,114,115,105,111,110,0,0,0,74,97,110,117,97,114,121,0,110,111,116,32,80,83,68,0,98,97,115,105,99,95,115,116,114,105,110,103,0,0,0,0,80,73,67,84,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,0,0,0,0,83,128,246,52,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,0,0,0,0,98,97,100,32,102,111,114,109,97,116,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,0,0,0,0,48,0,0,0,0,0,0,0,114,101,113,95,99,111,109,112,32,62,61,32,49,32,38,38,32,114,101,113,95,99,111,109,112,32,60,61,32,52,0,0,83,0,0,0,101,0,0,0,112,0,0,0,0,0,0,0,114,98,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,0,0,0,0,98,97,100,32,102,105,108,101,0,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,0,0,0,0,98,97,100,32,112,97,108,101,116,116,101,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,98,97,100,32,99,111,109,112,114,101,115,115,105,111,110,0,77,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,110,111,32,112,114,101,115,101,116,32,100,105,99,116,0,0,65,0,0,0,112,0,0,0,114,0,0,0,0,0,0,0,98,97,100,32,122,108,105,98,32,104,101,97,100,101,114,0,77,0,0,0,97,0,0,0,114,0,0,0,0,0,0,0,114,101,97,100,32,112,97,115,116,32,98,117,102,102,101,114,0,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,0,0,0,0,122,108,105,98,32,99,111,114,114,117,112,116,0,0,0,0,110,111,116,32,71,73,70,0,74,0,0,0,97,0,0,0,110,0,0,0,0,0,0,0,97,45,62,110,117,109,95,98,105,116,115,32,61,61,32,48,0,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,115,105,122,101,115,91,105,93,32,60,61,32,40,49,32,60,60,32,105,41,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,98,97,100,32,99,111,100,101,108,101,110,103,116,104,115,0,79,0,0,0,99,0,0,0,116,0,0,0,111,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,99,32,61,61,32,49,56,0,83,0,0,0,101,0,0,0,112,0,0,0,116,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,99,32,62,61,32,48,32,38,38,32,99,32,60,32,49,57,0,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,117,0,0,0,115,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,122,45,62,99,111,100,101,95,98,117,102,102,101,114,32,60,32,40,49,85,32,60,60,32,122,45,62,110,117,109,95,98,105,116,115,41,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,122,45,62,115,105,122,101,91,98,93,32,61,61,32,115,0,111,117,116,112,117,116,32,98,117,102,102,101,114,32,108,105,109,105,116,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,105,0,0,0,108,0,0,0,0,0,0,0,98,97,100,32,100,105,115,116,0,0,0,0,0,0,0,0,43,88,32,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,99,0,0,0,104,0,0,0,0,0,0,0,98,97,100,32,104,117,102,102,109,97,110,32,99,111,100,101,0,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,114,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,45,89,32,0,0,0,0,0,35,63,82,65,68,73,65,78,67,69,10,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,105,110,118,97,108,105,100,32,100,101,99,111,100,101,100,32,115,99,97,110,108,105,110,101,32,108,101,110,103,116,104,0,117,110,115,117,112,112,111,114,116,101,100,32,100,97,116,97,32,108,97,121,111,117,116,0,80,77,0,0,0,0,0,0,117,110,115,117,112,112,111,114,116,101,100,32,102,111,114,109,97,116,0,0,0,0,0,0,65,77,0,0,0,0,0,0,110,111,116,32,72,68,82,0,98,97,100,32,99,111,100,101,32,108,101,110,103,116,104,115,0,0,0,0,0,0,0,0,117,110,105,102,111,114,109,32,109,97,116,52,32,109,118,112,77,97,116,59,9,9,32,32,10,97,116,116,114,105,98,117,116,101,32,118,101,99,52,32,118,80,111,115,105,116,105,111,110,59,32,32,32,32,10,118,111,105,100,32,109,97,105,110,40,41,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,10,123,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,10,32,32,32,103,108,95,80,111,115,105,116,105,111,110,32,61,32,109,118,112,77,97,116,42,118,80,111,115,105,116,105,111,110,59,32,32,10,125,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,10,0,0,80,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,98,97,100,32,68,72,84,32,104,101,97,100,101,114,0,0,65,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,98,97,100,32,68,81,84,32,116,97,98,108,101,0,0,0,98,97,100,32,68,81,84,32,116,121,112,101,0,0,0,0,109,118,112,77,97,116,0,0,98,97,100,32,68,82,73,32,108,101,110,0,0,0,0,0,70,79,82,77,65,84,61,51,50,45,98,105,116,95,114,108,101,95,114,103,98,101,0,0,112,114,111,103,114,101,115,115,105,118,101,32,106,112,101,103,0,0,0,0,0,0,0,0,101,120,112,101,99,116,101,100,32,109,97,114,107,101,114,0,98,97,100,32,84,81,0,0,98,97,100,32,86,0,0,0,98,97,100,32,72,0,0,0,98,97,100,32,99,111,109,112,111,110,101,110,116,32,73,68,0,0,0,0,0,0,0,0,98,97,100,32,99,111,109,112,111,110,101,110,116,32,99,111,117,110,116,0,0,0,0,0,48,32,119,105,100,116,104,0,110,111,32,104,101,97,100,101,114,32,104,101,105,103,104,116,0,0,0,0,0,0,0,0,99,111,108,111,114,0,0,0,108,111,99,97,108,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,0,0,0,111,110,108,121,32,56,45,98,105,116,0,0,0,0,0,0,35,63,82,65,68,73,65,78,67,69,0,0,0,0,0,0,98,97,100,32,83,79,70,32,108,101,110,0,0,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,110,111,32,83,79,70,0,0,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,115,116,100,58,58,98,97,100,95,99,97,115,116,0,0,0,110,111,32,83,79,73,0,0,37,0,0,0,97,0,0,0,32,0,0,0,37,0,0,0,98,0,0,0,32,0,0,0,37,0,0,0,100,0,0,0,32,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,89,0,0,0,0,0,0,0,0,0,0,0,98,97,100,32,112,110,103,32,115,105,103,0,0,0,0,0,37,97,32,37,98,32,37,100,32,37,72,58,37,77,58,37,83,32,37,89,0,0,0,0,105,109,103,95,110,32,43,32,49,32,61,61,32,111,117,116,95,110,0,0,0,0,0,0,115,116,100,58,58,98,97,100,95,97,108,108,111,99,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,0,0,0,0,0,0,0,0,105,110,118,97,108,105,100,32,102,105,108,116,101,114,0,0,37,72,58,37,77,58,37,83,0,0,0,0,0,0,0,0,110,111,116,32,101,110,111,117,103,104,32,112,105,120,101,108,115,0,0,0,0,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,111,117,116,95,110,32,61,61,32,115,45,62,105,109,103,95,110,32,124,124,32,111,117,116,95,110,32,61,61,32,115,45,62,105,109,103,95,110,32,43,32,49,0,0,0,0,0,0,37,109,47,37,100,47,37,121,0,0,0,0,0,0,0,0,111,117,116,95,110,32,61,61,32,50,32,124,124,32,111,117,116,95,110,32,61,61,32,52,0,0,0,0,0,0,0,0,80,104,121,115,71,97,109,101,47,83,111,117,114,99,101,47,111,112,101,110,103,108,47,115,116,98,95,105,109,97,103,101,46,99,112,112,0,0,0,0,102,0,0,0,97,0,0,0,108,0,0,0,115,0,0,0,101,0,0,0,0,0,0,0,115,45,62,105,109,103,95,111,117,116,95,110,32,61,61,32,52,0,0,0,0,0,0,0,117,110,107,110,111,119,110,32,105,109,97,103,101,32,116,121,112,101,0,0,0,0,0,0,37,112,0,0,0,0,0,0,102,97,108,115,101,0,0,0,110,111,32,73,68,65,84,0,111,117,116,111,102,100,97,116,97,0,0,0,0,0,0,0,116,0,0,0,114,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,71,76,70,87,0,0,0,0,111,117,116,111,102,109,101,109,0,0,0,0,0,0,0,0,116,114,117,101,0,0,0,0,58,32,0,0,0,0,0,0,110,111,32,80,76,84,69,0,116,82,78,83,32,119,105,116,104,32,97,108,112,104,97,0,98,97,100,32,116,82,78,83,32,108,101,110,0,0,0,0,105,111,115,95,98,97,115,101,58,58,99,108,101,97,114,0,116,82,78,83,32,98,101,102,111,114,101,32,80,76,84,69,0,0,0,0,0,0,0,0,116,82,78,83,32,97,102,116,101,114,32,73,68,65,84,0,46,47,98,108,117,101,100,105,97,109,111,110,100,46,112,110,103,0,0,0,0,0,0,0,105,110,118,97,108,105,100,32,80,76,84,69,0,0,0,0,102,105,114,115,116,32,110,111,116,32,73,72,68,82,0,0,99,97,110,39,116,32,102,111,112,101,110,0,0,0,0,0,67,0,0,0,0,0,0,0,48,45,112,105,120,101,108,32,105,109,97,103,101,0,0,0,118,101,99,116,111,114,0,0,98,97,100,32,105,110,116,101,114,108,97,99,101,32,109,101,116,104,111,100,0,0,0,0,112,114,101,99,105,115,105,111,110,32,109,101,100,105,117,109,112,32,102,108,111,97,116,59,10,117,110,105,102,111,114,109,32,118,101,99,52,32,99,111,108,111,114,59,118,111,105,100,32,109,97,105,110,40,41,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,10,123,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,10,32,32,103,108,95,70,114,97,103,67,111,108,111,114,32,61,32,99,111,108,111,114,59,9,9,9,9,9,9,10,125,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,10,0,0,0,0,37,46,48,76,102,0,0,0,98,97,100,32,102,105,108,116,101,114,32,109,101,116,104,111,100,0,0,0,0,0,0,0,109,111,110,101,121,95,103,101,116,32,101,114,114,111,114,0,98,97,100,32,99,111,109,112,32,109,101,116,104,111,100,0,83,97,116,0,0,0,0,0,70,114,105,0,0,0,0,0,105,111,115,116,114,101,97,109,0,0,0,0,0,0,0,0,37,76,102,0,0,0,0,0,84,104,117,0,0,0,0,0,87,101,100,0,0,0,0,0,84,117,101,0,0,0,0,0,98,97,100,32,99,116,121,112,101,0,0,0,0,0,0,0,77,111,110,0,0,0,0,0,83,117,110,0,0,0,0,0,83,97,116,117,114,100,97,121,0,0,0,0,0,0,0,0,70,114,105,100,97,121,0,0,84,104,117,114,115,100,97,121,0,0,0,0,0,0,0,0,87,101,100,110,101,115,100,97,121,0,0,0,0,0,0,0,84,117,101,115,100,97,121,0,77,111,110,100,97,121,0,0,83,117,110,100,97,121,0,0,56,98,105,116,32,111,110,108,121,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,0,0,0,0,117,110,115,112,101,99,105,102,105,101,100,32,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,32,101,114,114,111,114,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,117,0,0,0,114,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,114,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,116,111,111,32,108,97,114,103,101,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,110,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,98,97,100,32,83,79,83,0,77,0,0,0,111,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,98,97,100,32,65,67,32,104,117,102,102,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,98,97,100,32,68,67,32,104,117,102,102,0,0,0,0,0,98,97,100,32,83,79,83,32,108,101,110,0,0,0,0,0,68,101,99,0,0,0,0,0,98,97,100,32,83,79,83,32,99,111,109,112,111,110,101,110,116,32,99,111,117,110,116,0,78,111,118,0,0,0,0,0,40,40,40,106,45,62,99,111,100,101,95,98,117,102,102,101,114,41,32,62,62,32,40,51,50,32,45,32,104,45,62,115,105,122,101,91,99,93,41,41,32,38,32,98,109,97,115,107,91,104,45,62,115,105,122,101,91,99,93,93,41,32,61,61,32,104,45,62,99,111,100,101,91,99,93,0,0,0,0,0,79,99,116,0,0,0,0,0,98,97,100,32,114,101,113,95,99,111,109,112,0,0,0,0,83,101,112,0,0,0,0,0,98,97,100,32,109,97,115,107,115,0,0,0,0,0,0,0,65,117,103,0,0,0,0,0,98,97,100,32,98,112,112,0,98,97,100,32,73,72,68,82,32,108,101,110,0,0,0,0,46,47,111,114,97,110,103,101,100,105,97,109,111,110,100,46,112,110,103,0,0,0,0,0,102,105,108,108,95,98,105,116,115,0,0,0,0,0,0,0,98,109,112,95,108,111,97,100,0,0,0,0,0,0,0,0,100,101,99,111,100,101,0,0,112,97,114,115,101,95,117,110,99,111,109,112,114,101,115,115,101,100,95,98,108,111,99,107,0,0,0,0,0,0,0,0,99,111,109,112,117,116,101,95,104,117,102,102,109,97,110,95,99,111,100,101,115,0,0,0,99,114,101,97,116,101,95,112,110,103,95,105,109,97,103,101,95,114,97,119,0,0,0,0,99,111,109,112,117,116,101,95,116,114,97,110,115,112,97,114,101,110,99,121,0,0,0,0,122,104,117,102,102,109,97,110,95,100,101,99,111,100,101,0,122,98,117,105,108,100,95,104,117,102,102,109,97,110,0,0,115,116,98,105,95,100,101,95,105,112,104,111,110,101,0,0,99,111,110,118,101,114,116,95,102,111,114,109,97,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,37,0,0,0,89,0,0,0,45,0,0,0,37,0,0,0,109,0,0,0,45,0,0,0,37,0,0,0,100,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,0,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,37,72,58,37,77,58,37,83,37,72,58,37,77,0,0,0,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,37,89,45,37,109,45,37,100,37,109,47,37,100,47,37,121,37,72,58,37,77,58,37,83,37,0,0,0,0,0,0,0,37,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,191,0,0,0,191,0,0,0,63,0,0,0,191,0,0,0,63,0,0,0,63,0,0,0,191,0,0,0,63,0,0,0,191,0,0,0,191,16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,4,0,0,0,4,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,8,0,0,0,8,0,0,0,4,0,0,0,4,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,137,80,78,71,13,10,26,10,88,88,88,88,32,99,104,117,110,107,32,110,111,116,32,107,110,111,119,110,0,0,0,0,0,0,0,0,40,46,0,0,40,0,0,0,140,0,0,0,74,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,46,0,0,232,0,0,0,194,0,0,0,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,46,0,0,80,0,0,0,48,1,0,0,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,46,0,0,106,0,0,0,32,0,0,0,108,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,46,0,0,106,0,0,0,10,0,0,0,108,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,46,0,0,106,0,0,0,88,0,0,0,108,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,46,0,0,32,1,0,0,94,0,0,0,62,0,0,0,2,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,46,0,0,40,1,0,0,222,0,0,0,62,0,0,0,4,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,46,0,0,192,0,0,0,224,0,0,0,62,0,0,0,8,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,46,0,0,42,1,0,0,168,0,0,0,62,0,0,0,6,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,47,0,0,38,1,0,0,104,0,0,0,62,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,47,0,0,190,0,0,0,132,0,0,0,62,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,47,0,0,50,0,0,0,134,0,0,0,62,0,0,0,122,0,0,0,4,0,0,0,30,0,0,0,6,0,0,0,28,0,0,0,54,0,0,0,2,0,0,0,248,255,255,255,208,47,0,0,20,0,0,0,10,0,0,0,34,0,0,0,14,0,0,0,2,0,0,0,32,0,0,0,126,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,47,0,0,22,1,0,0,8,1,0,0,62,0,0,0,18,0,0,0,16,0,0,0,58,0,0,0,24,0,0,0,18,0,0,0,2,0,0,0,4,0,0,0,248,255,255,255,248,47,0,0,64,0,0,0,104,0,0,0,116,0,0,0,124,0,0,0,90,0,0,0,44,0,0,0,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,48,0,0,86,0,0,0,226,0,0,0,62,0,0,0,46,0,0,0,40,0,0,0,124,0,0,0,72,0,0,0,84,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,48,0,0,112,0,0,0,76,0,0,0,62,0,0,0,42,0,0,0,78,0,0,0,22,0,0,0,92,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,48,0,0,26,1,0,0,2,0,0,0,62,0,0,0,26,0,0,0,30,0,0,0,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,48,0,0,58,0,0,0,250,0,0,0,62,0,0,0,40,0,0,0,14,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,48,0,0,252,0,0,0,136,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,48,0,0,36,0,0,0,166,0,0,0,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,48,0,0,8,0,0,0,206,0,0,0,62,0,0,0,8,0,0,0,6,0,0,0,12,0,0,0,4,0,0,0,10,0,0,0,4,0,0,0,2,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,48,0,0,110,0,0,0,22,0,0,0,62,0,0,0,20,0,0,0,24,0,0,0,34,0,0,0,22,0,0,0,20,0,0,0,8,0,0,0,6,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,48,0,0,52,0,0,0,30,0,0,0,62,0,0,0,46,0,0,0,44,0,0,0,32,0,0,0,38,0,0,0,26,0,0,0,42,0,0,0,36,0,0,0,52,0,0,0,50,0,0,0,48,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,48,0,0,66,0,0,0,4,0,0,0,62,0,0,0,76,0,0,0,68,0,0,0,62,0,0,0,64,0,0,0,56,0,0,0,66,0,0,0,60,0,0,0,74,0,0,0,72,0,0,0,70,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,49,0,0,82,0,0,0,102,0,0,0,62,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,49,0,0,34,0,0,0,208,0,0,0,62,0,0,0,24,0,0,0,16,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,49,0,0,14,0,0,0,220,0,0,0,62,0,0,0,2,0,0,0,10,0,0,0,22,0,0,0,120,0,0,0,96,0,0,0,32,0,0,0,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,49,0,0,212,0,0,0,160,0,0,0,62,0,0,0,14,0,0,0,16,0,0,0,26,0,0,0,50,0,0,0,8,0,0,0,28,0,0,0,86,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,49,0,0,212,0,0,0,26,0,0,0,62,0,0,0,6,0,0,0,4,0,0,0,8,0,0,0,94,0,0,0,60,0,0,0,18,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,49,0,0,212,0,0,0,114,0,0,0,62,0,0,0,12,0,0,0,8,0,0,0,30,0,0,0,30,0,0,0,68,0,0,0,14,0,0,0,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,49,0,0,212,0,0,0,44,0,0,0,62,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,49,0,0,72,0,0,0,188,0,0,0,62,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,49,0,0,212,0,0,0,90,0,0,0,62,0,0,0,20,0,0,0,2,0,0,0,4,0,0,0,10,0,0,0,20,0,0,0,30,0,0,0,34,0,0,0,6,0,0,0,4,0,0,0,8,0,0,0,10,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,49,0,0,46,1,0,0,48,0,0,0,62,0,0,0,12,0,0,0,22,0,0,0,24,0,0,0,38,0,0,0,8,0,0,0,6,0,0,0,28,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,50,0,0,78,0,0,0,4,1,0,0,70,0,0,0,14,0,0,0,14,0,0,0,34,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,50,0,0,212,0,0,0,96,0,0,0,62,0,0,0,12,0,0,0,8,0,0,0,30,0,0,0,30,0,0,0,68,0,0,0,14,0,0,0,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,50,0,0,212,0,0,0,196,0,0,0,62,0,0,0,12,0,0,0,8,0,0,0,30,0,0,0,30,0,0,0,68,0,0,0,14,0,0,0,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,50,0,0,154,0,0,0,14,1,0,0,116,0,0,0,24,0,0,0,16,0,0,0,14,0,0,0,82,0,0,0,98,0,0,0,36,0,0,0,26,0,0,0,24,0,0,0,6,0,0,0,46,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,50,0,0,12,0,0,0,142,0,0,0,98,0,0,0,42,0,0,0,28,0,0,0,10,0,0,0,48,0,0,0,80,0,0,0,18,0,0,0,6,0,0,0,12,0,0,0,26,0,0,0,16,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,144,50,0,0,56,0,0,0,248,0,0,0,252,255,255,255,252,255,255,255,144,50,0,0,174,0,0,0,152,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,168,50,0,0,254,0,0,0,16,1,0,0,252,255,255,255,252,255,255,255,168,50,0,0,128,0,0,0,238,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,192,50,0,0,98,0,0,0,50,1,0,0,248,255,255,255,248,255,255,255,192,50,0,0,214,0,0,0,12,1,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,216,50,0,0,120,0,0,0,246,0,0,0,248,255,255,255,248,255,255,255,216,50,0,0,164,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,50,0,0,240,0,0,0,216,0,0,0,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,51,0,0,28,1,0,0,218,0,0,0,26,0,0,0,24,0,0,0,16,0,0,0,14,0,0,0,56,0,0,0,98,0,0,0,36,0,0,0,26,0,0,0,24,0,0,0,6,0,0,0,32,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,51,0,0,186,0,0,0,210,0,0,0,64,0,0,0,42,0,0,0,28,0,0,0,10,0,0,0,84,0,0,0,80,0,0,0,18,0,0,0,6,0,0,0,12,0,0,0,26,0,0,0,44,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,51,0,0,6,1,0,0,172,0,0,0,62,0,0,0,62,0,0,0,118,0,0,0,52,0,0,0,126,0,0,0,8,0,0,0,58,0,0,0,52,0,0,0,38,0,0,0,70,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,51,0,0,118,0,0,0,68,0,0,0,62,0,0,0,110,0,0,0,4,0,0,0,82,0,0,0,32,0,0,0,122,0,0,0,46,0,0,0,114,0,0,0,86,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,51,0,0,10,1,0,0,138,0,0,0,62,0,0,0,16,0,0,0,58,0,0,0,12,0,0,0,78,0,0,0,128,0,0,0,88,0,0,0,88,0,0,0,94,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,51,0,0,84,0,0,0,202,0,0,0,62,0,0,0,100,0,0,0,106,0,0,0,56,0,0,0,112,0,0,0,48,0,0,0,34,0,0,0,72,0,0,0,108,0,0,0,106,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,51,0,0,100,0,0,0,20,0,0,0,68,0,0,0,24,0,0,0,16,0,0,0,14,0,0,0,82,0,0,0,98,0,0,0,36,0,0,0,66,0,0,0,76,0,0,0,16,0,0,0,46,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,52,0,0,18,0,0,0,0,1,0,0,102,0,0,0,42,0,0,0,28,0,0,0,10,0,0,0,48,0,0,0,80,0,0,0,18,0,0,0,92,0,0,0,22,0,0,0,2,0,0,0,16,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,52,0,0,34,1,0,0,234,0,0,0,74,0,0,0,184,0,0,0,8,0,0,0,2,0,0,0,8,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,52,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,52,0,0,204,0,0,0,180,0,0,0,50,0,0,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,52,0,0,116,0,0,0,146,0,0,0,10,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,52,0,0,122,0,0,0,242,0,0,0,114,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,52,0,0,244,0,0,0,228,0,0,0,90,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,52,0,0,158,0,0,0,52,1,0,0,76,0,0,0,22,0,0,0,118,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,52,0,0,236,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,52,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,52,0,0,46,0,0,0,24,0,0,0,110,0,0,0,36,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,52,0,0,18,1,0,0,144,0,0,0,110,0,0,0,38,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,53,0,0,156,0,0,0,70,0,0,0,110,0,0,0,42,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,53,0,0,2,0,0,0,4,0,0,0,6,0,0,0,124,0,0,0,126,0,0,0,44,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,53,0,0,28,0,0,0,74,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,53,0,0,36,1,0,0,38,0,0,0,36,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,83,116,57,116,121,112,101,95,105,110,102,111,0,0,0,0,83,116,57,101,120,99,101,112,116,105,111,110,0,0,0,0,83,116,57,98,97,100,95,97,108,108,111,99,0,0,0,0,83,116,56,98,97,100,95,99,97,115,116,0,0,0,0,0,83,116,49,51,114,117,110,116,105,109,101,95,101,114,114,111,114,0,0,0,0,0,0,0,83,116,49,50,111,117,116,95,111,102,95,114,97,110,103,101,0,0,0,0,0,0,0,0,83,116,49,50,108,101,110,103,116,104,95,101,114,114,111,114,0,0,0,0,0,0,0,0,83,116,49,49,108,111,103,105,99,95,101,114,114,111,114,0,78,83,116,51,95,95,49,57,116,105,109,101,95,98,97,115,101,69,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,119,69,69,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,119,69,69,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,119,69,69,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,99,69,69,0,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,119,69,69,0,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,99,69,69,0,0,0,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,55,102,97,105,108,117,114,101,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,119,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,99,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,119,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,99,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,115,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,105,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,102,97,99,101,116,69,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,95,95,105,109,112,69,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,119,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,99,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,119,69,69,0,0,0,0,0,0,0].concat([78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,99,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,57,95,95,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,69,0,0,0,78,83,116,51,95,95,49,49,55,95,95,119,105,100,101,110,95,102,114,111,109,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,78,83,116,51,95,95,49,49,54,95,95,110,97,114,114,111,119,95,116,111,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,101,114,114,111,114,95,99,97,116,101,103,111,114,121,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,95,95,115,104,97,114,101,100,95,99,111,117,110,116,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,112,117,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,103,101,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,51,109,101,115,115,97,103,101,115,95,98,97,115,101,69,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,78,83,116,51,95,95,49,49,50,115,121,115,116,101,109,95,101,114,114,111,114,69,0,0,78,83,116,51,95,95,49,49,50,99,111,100,101,99,118,116,95,98,97,115,101,69,0,0,78,83,116,51,95,95,49,49,50,95,95,100,111,95,109,101,115,115,97,103,101,69,0,0,78,83,116,51,95,95,49,49,49,95,95,115,116,100,111,117,116,98,117,102,73,119,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,115,116,100,111,117,116,98,117,102,73,99,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,119,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,99,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,119,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,99,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,49,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,48,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,49,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,48,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,95,98,97,115,101,69,0,0,0,0,78,83,116,51,95,95,49,49,48,99,116,121,112,101,95,98,97,115,101,69,0,0,0,0,78,83,116,51,95,95,49,49,48,95,95,116,105,109,101,95,112,117,116,69,0,0,0,0,78,83,116,51,95,95,49,49,48,95,95,115,116,100,105,110,98,117,102,73,119,69,69,0,78,83,116,51,95,95,49,49,48,95,95,115,116,100,105,110,98,117,102,73,99,69,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,49,95,95,118,109,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,0,57,71,76,70,87,73,110,112,117,116,0,0,0,0,0,0,56,83,104,114,97,112,110,101,108,0,0,0,0,0,0,0,55,98,103,105,109,97,103,101,0,0,0,0,0,0,0,0,55,77,105,115,115,105,108,101,0,0,0,0,0,0,0,0,55,71,114,97,112,112,108,101,0,0,0,0,0,0,0,0,54,80,108,97,121,101,114,0,54,69,102,102,101,99,116,0,53,115,104,97,112,101,0,0,53,83,99,101,110,101,0,0,53,65,99,116,111,114,0,0,51,98,111,120,0,0,0,0,51,77,111,98,0,0,0,0,49,54,80,108,97,116,102,111,114,109,71,114,97,112,104,105,99,115,0,0,0,0,0,0,49,52,69,110,101,109,121,82,105,102,108,101,115,109,101,110,0,0,0,0,0,0,0,0,49,52,69,110,101,109,121,67,97,110,110,111,110,101,101,114,0,0,0,0,0,0,0,0,49,51,80,108,97,116,102,111,114,109,73,110,112,117,116,0,49,50,71,76,70,87,71,114,97,112,104,105,99,115,0,0,49,49,83,109,111,107,101,69,102,102,101,99,116,0,0,0,49,48,71,97,109,101,79,98,106,101,99,116,0,0,0,0,0,0,0,0,72,33,0,0,0,0,0,0,88,33,0,0,0,0,0,0,104,33,0,0,32,46,0,0,0,0,0,0,0,0,0,0,120,33,0,0,32,46,0,0,0,0,0,0,0,0,0,0,136,33,0,0,32,46,0,0,0,0,0,0,0,0,0,0,160,33,0,0,120,46,0,0,0,0,0,0,0,0,0,0,184,33,0,0,120,46,0,0,0,0,0,0,0,0,0,0,208,33,0,0,32,46,0,0,0,0,0,0,0,0,0,0,224,33,0,0,80,31,0,0,248,33,0,0,0,0,0,0,2,0,0,0,184,49,0,0,2,0,0,0,56,51,0,0,0,0,0,0,80,31,0,0,64,34,0,0,0,0,0,0,2,0,0,0,184,49,0,0,2,0,0,0,64,51,0,0,0,0,0,0,80,31,0,0,136,34,0,0,0,0,0,0,2,0,0,0,184,49,0,0,2,0,0,0,72,51,0,0,0,0,0,0,80,31,0,0,208,34,0,0,0,0,0,0,2,0,0,0,184,49,0,0,2,0,0,0,80,51,0,0,0,0,0,0,0,0,0,0,24,35,0,0,128,48,0,0,0,0,0,0,0,0,0,0,72,35,0,0,128,48,0,0,0,0,0,0,80,31,0,0,120,35,0,0,0,0,0,0,1,0,0,0,120,50,0,0,0,0,0,0,80,31,0,0,144,35,0,0,0,0,0,0,1,0,0,0,120,50,0,0,0,0,0,0,80,31,0,0,168,35,0,0,0,0,0,0,1,0,0,0,128,50,0,0,0,0,0,0,80,31,0,0,192,35,0,0,0,0,0,0,1,0,0,0,128,50,0,0,0,0,0,0,80,31,0,0,216,35,0,0,0,0,0,0,2,0,0,0,184,49,0,0,2,0,0,0,232,51,0,0,0,8,0,0,80,31,0,0,32,36,0,0,0,0,0,0,2,0,0,0,184,49,0,0,2,0,0,0,232,51,0,0,0,8,0,0,80,31,0,0,104,36,0,0,0,0,0,0,3,0,0,0,184,49,0,0,2,0,0,0,136,46,0,0,2,0,0,0,24,50,0,0,0,8,0,0,80,31,0,0,176,36,0,0,0,0,0,0,3,0,0,0,184,49,0,0,2,0,0,0,136,46,0,0,2,0,0,0,32,50,0,0,0,8,0,0,0,0,0,0,248,36,0,0,184,49,0,0,0,0,0,0,0,0,0,0,16,37,0,0,184,49,0,0,0,0,0,0,80,31,0,0,40,37,0,0,0,0,0,0,2,0,0,0,184,49,0,0,2,0,0,0,136,50,0,0,2,0,0,0,80,31,0,0,64,37,0,0,0,0,0,0,2,0,0,0,184,49,0,0,2,0,0,0,136,50,0,0,2,0,0,0,0,0,0,0,88,37,0,0,0,0,0,0,112,37,0,0,240,50,0,0,0,0,0,0,80,31,0,0,144,37,0,0,0,0,0,0,2,0,0,0,184,49,0,0,2,0,0,0,48,47,0,0,0,0,0,0,80,31,0,0,216,37,0,0,0,0,0,0,2,0,0,0,184,49,0,0,2,0,0,0,72,47,0,0,0,0,0,0,80,31,0,0,32,38,0,0,0,0,0,0,2,0,0,0,184,49,0,0,2,0,0,0,96,47,0,0,0,0,0,0,80,31,0,0,104,38,0,0,0,0,0,0,2,0,0,0,184,49,0,0,2,0,0,0,120,47,0,0,0,0,0,0,0,0,0,0,176,38,0,0,184,49,0,0,0,0,0,0,0,0,0,0,200,38,0,0,184,49,0,0,0,0,0,0,80,31,0,0,224,38,0,0,0,0,0,0,2,0,0,0,184,49,0,0,2,0,0,0,0,51,0,0,2,0,0,0,80,31,0,0,8,39,0,0,0,0,0,0,2,0,0,0,184,49,0,0,2,0,0,0,0,51,0,0,2,0,0,0,80,31,0,0,48,39,0,0,0,0,0,0,2,0,0,0,184,49,0,0,2,0,0,0,0,51,0,0,2,0,0,0,80,31,0,0,88,39,0,0,0,0,0,0,2,0,0,0,184,49,0,0,2,0,0,0,0,51,0,0,2,0,0,0,0,0,0,0,128,39,0,0,112,50,0,0,0,0,0,0,0,0,0,0,152,39,0,0,184,49,0,0,0,0,0,0,80,31,0,0,176,39,0,0,0,0,0,0,2,0,0,0,184,49,0,0,2,0,0,0,224,51,0,0,2,0,0,0,80,31,0,0,200,39,0,0,0,0,0,0,2,0,0,0,184,49,0,0,2,0,0,0,224,51,0,0,2,0,0,0,0,0,0,0,224,39,0,0,0,0,0,0,8,40,0,0,0,0,0,0,48,40,0,0,8,51,0,0,0,0,0,0,0,0,0,0,80,40,0,0,152,49,0,0,0,0,0,0,0,0,0,0,120,40,0,0,152,49,0,0,0,0,0,0,0,0,0,0,160,40,0,0,0,0,0,0,216,40,0,0,0,0,0,0,16,41,0,0,0,0,0,0,48,41,0,0,0,0,0,0,80,41,0,0,0,0,0,0,112,41,0,0,0,0,0,0,144,41,0,0,80,31,0,0,168,41,0,0,0,0,0,0,1,0,0,0,16,47,0,0,3,244,255,255,80,31,0,0,216,41,0,0,0,0,0,0,1,0,0,0,32,47,0,0,3,244,255,255,80,31,0,0,8,42,0,0,0,0,0,0,1,0,0,0,16,47,0,0,3,244,255,255,80,31,0,0,56,42,0,0,0,0,0,0,1,0,0,0,32,47,0,0,3,244,255,255,0,0,0,0,104,42,0,0,72,46,0,0,0,0,0,0,0,0,0,0,128,42,0,0,0,0,0,0,152,42,0,0,104,50,0,0,0,0,0,0,0,0,0,0,176,42,0,0,88,50,0,0,0,0,0,0,0,0,0,0,208,42,0,0,96,50,0,0,0,0,0,0,0,0,0,0,240,42,0,0,0,0,0,0,16,43,0,0,0,0,0,0,48,43,0,0,0,0,0,0,80,43,0,0,80,31,0,0,112,43,0,0,0,0,0,0,2,0,0,0,184,49,0,0,2,0,0,0,216,51,0,0,2,0,0,0,80,31,0,0,144,43,0,0,0,0,0,0,2,0,0,0,184,49,0,0,2,0,0,0,216,51,0,0,2,0,0,0,80,31,0,0,176,43,0,0,0,0,0,0,2,0,0,0,184,49,0,0,2,0,0,0,216,51,0,0,2,0,0,0,80,31,0,0,208,43,0,0,0,0,0,0,2,0,0,0,184,49,0,0,2,0,0,0,216,51,0,0,2,0,0,0,0,0,0,0,240,43,0,0,0,0,0,0,8,44,0,0,0,0,0,0,32,44,0,0,0,0,0,0,56,44,0,0,88,50,0,0,0,0,0,0,0,0,0,0,80,44,0,0,96,50,0,0,0,0,0,0,0,0,0,0,104,44,0,0,48,52,0,0,0,0,0,0,0,0,0,0,144,44,0,0,48,52,0,0,0,0,0,0,0,0,0,0,184,44,0,0,64,52,0,0,0,0,0,0,0,0,0,0,224,44,0,0,24,46,0,0,0,0,0,0,0,0,0,0,8,45,0,0,24,53,0,0,0,0,0,0,0,0,0,0,24,45,0,0,200,52,0,0,0,0,0,0,0,0,0,0,40,45,0,0,64,53,0,0,0,0,0,0,0,0,0,0,56,45,0,0,64,53,0,0,0,0,0,0,0,0,0,0,72,45,0,0,64,53,0,0,0,0,0,0,0,0,0,0,88,45,0,0,224,52,0,0,0,0,0,0,0,0,0,0,96,45,0,0,0,0,0,0,104,45,0,0,0,0,0,0,112,45,0,0,0,0,0,0,120,45,0,0,0,0,0,0,128,45,0,0,184,52,0,0,0,0,0,0,0,0,0,0,136,45,0,0,64,53,0,0,0,0,0,0,0,0,0,0,144,45,0,0,0,0,0,0,168,45,0,0,224,52,0,0,0,0,0,0,0,0,0,0,192,45,0,0,224,52,0,0,0,0,0,0,0,0,0,0,216,45,0,0,0,0,0,0,232,45,0,0,240,52,0,0,0,0,0,0,0,0,0,0,248,45,0,0,176,52,0,0,0,0,0,0,0,0,0,0,8,46,0,0,200,52,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,65,66,67,68,69,70,120,88,43,45,112,80,105,73,110,78,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,7,0,0,0,9,0,0,0,13,0,0,0,17,0,0,0,25,0,0,0,33,0,0,0,49,0,0,0,65,0,0,0,97,0,0,0,129,0,0,0,193,0,0,0,1,1,0,0,129,1,0,0,1,2,0,0,1,3,0,0,1,4,0,0,1,6,0,0,1,8,0,0,1,12,0,0,1,16,0,0,1,24,0,0,1,32,0,0,1,48,0,0,1,64,0,0,1,96,0,0,0,0,0,0,0,0,0,0,0,1,8,16,9,2,3,10,17,24,32,25,18,11,4,5,12,19,26,33,40,48,41,34,27,20,13,6,7,14,21,28,35,42,49,56,57,50,43,36,29,22,15,23,30,37,44,51,58,59,52,45,38,31,39,46,53,60,61,54,47,55,62,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,0,0,0,0,0,1,0,0,0,3,0,0,0,7,0,0,0,15,0,0,0,31,0,0,0,63,0,0,0,127,0,0,0,255,0,0,0,255,1,0,0,255,3,0,0,255,7,0,0,255,15,0,0,255,31,0,0,255,63,0,0,255,127,0,0,255,255,0,0,0,0,0,0,4,0,0,0,120,0,0,0,102,0,0,0,0,0,0,0,0,1,0,5,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,13,0,0,0,15,0,0,0,17,0,0,0,19,0,0,0,23,0,0,0,27,0,0,0,31,0,0,0,35,0,0,0,43,0,0,0,51,0,0,0,59,0,0,0,67,0,0,0,83,0,0,0,99,0,0,0,115,0,0,0,131,0,0,0,163,0,0,0,195,0,0,0,227,0,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,63,0,0,0,0,46,186,232,62,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,6,0,0,0,6,0,0,0,7,0,0,0,7,0,0,0,8,0,0,0,8,0,0,0,9,0,0,0,9,0,0,0,10,0,0,0,10,0,0,0,11,0,0,0,11,0,0,0,12,0,0,0,12,0,0,0,13,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0])
, "i8", ALLOC_NONE, Runtime.GLOBAL_BASE)
var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);
assert(tempDoublePtr % 8 == 0);
function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much
  HEAP8[tempDoublePtr] = HEAP8[ptr];
  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];
  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];
  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];
}
function copyTempDouble(ptr) {
  HEAP8[tempDoublePtr] = HEAP8[ptr];
  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];
  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];
  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];
  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];
  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];
  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];
  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];
}
  var _sqrtf=Math_sqrt;
  Module["_memset"] = _memset;var _llvm_memset_p0i8_i64=_memset;
  function _llvm_lifetime_start() {}
  function _llvm_lifetime_end() {}
  var _fabsf=Math_abs;
  var _cos=Math_cos;
  var _sin=Math_sin;
  function ___gxx_personality_v0() {
    }
  Module["_memcpy"] = _memcpy;var _llvm_memcpy_p0i8_p0i8_i32=_memcpy;
  function ___cxa_allocate_exception(size) {
      return _malloc(size);
    }
  function ___cxa_free_exception(ptr) {
      try {
        return _free(ptr);
      } catch(e) { // XXX FIXME
      }
    }
  function _llvm_eh_exception() {
      return HEAP32[((_llvm_eh_exception.buf)>>2)];
    }
  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }
  function ___cxa_is_number_type(type) {
      var isNumber = false;
      try { if (type == __ZTIi) isNumber = true } catch(e){}
      try { if (type == __ZTIj) isNumber = true } catch(e){}
      try { if (type == __ZTIl) isNumber = true } catch(e){}
      try { if (type == __ZTIm) isNumber = true } catch(e){}
      try { if (type == __ZTIx) isNumber = true } catch(e){}
      try { if (type == __ZTIy) isNumber = true } catch(e){}
      try { if (type == __ZTIf) isNumber = true } catch(e){}
      try { if (type == __ZTId) isNumber = true } catch(e){}
      try { if (type == __ZTIe) isNumber = true } catch(e){}
      try { if (type == __ZTIc) isNumber = true } catch(e){}
      try { if (type == __ZTIa) isNumber = true } catch(e){}
      try { if (type == __ZTIh) isNumber = true } catch(e){}
      try { if (type == __ZTIs) isNumber = true } catch(e){}
      try { if (type == __ZTIt) isNumber = true } catch(e){}
      return isNumber;
    }function ___cxa_does_inherit(definiteType, possibilityType, possibility) {
      if (possibility == 0) return false;
      if (possibilityType == 0 || possibilityType == definiteType)
        return true;
      var possibility_type_info;
      if (___cxa_is_number_type(possibilityType)) {
        possibility_type_info = possibilityType;
      } else {
        var possibility_type_infoAddr = HEAP32[((possibilityType)>>2)] - 8;
        possibility_type_info = HEAP32[((possibility_type_infoAddr)>>2)];
      }
      switch (possibility_type_info) {
      case 0: // possibility is a pointer
        // See if definite type is a pointer
        var definite_type_infoAddr = HEAP32[((definiteType)>>2)] - 8;
        var definite_type_info = HEAP32[((definite_type_infoAddr)>>2)];
        if (definite_type_info == 0) {
          // Also a pointer; compare base types of pointers
          var defPointerBaseAddr = definiteType+8;
          var defPointerBaseType = HEAP32[((defPointerBaseAddr)>>2)];
          var possPointerBaseAddr = possibilityType+8;
          var possPointerBaseType = HEAP32[((possPointerBaseAddr)>>2)];
          return ___cxa_does_inherit(defPointerBaseType, possPointerBaseType, possibility);
        } else
          return false; // one pointer and one non-pointer
      case 1: // class with no base class
        return false;
      case 2: // class with base class
        var parentTypeAddr = possibilityType + 8;
        var parentType = HEAP32[((parentTypeAddr)>>2)];
        return ___cxa_does_inherit(definiteType, parentType, possibility);
      default:
        return false; // some unencountered type
      }
    }
  function ___resumeException(ptr) {
      if (HEAP32[((_llvm_eh_exception.buf)>>2)] == 0) HEAP32[((_llvm_eh_exception.buf)>>2)]=ptr;
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";;
    }function ___cxa_find_matching_catch(thrown, throwntype) {
      if (thrown == -1) thrown = HEAP32[((_llvm_eh_exception.buf)>>2)];
      if (throwntype == -1) throwntype = HEAP32[(((_llvm_eh_exception.buf)+(4))>>2)];
      var typeArray = Array.prototype.slice.call(arguments, 2);
      // If throwntype is a pointer, this means a pointer has been
      // thrown. When a pointer is thrown, actually what's thrown
      // is a pointer to the pointer. We'll dereference it.
      if (throwntype != 0 && !___cxa_is_number_type(throwntype)) {
        var throwntypeInfoAddr= HEAP32[((throwntype)>>2)] - 8;
        var throwntypeInfo= HEAP32[((throwntypeInfoAddr)>>2)];
        if (throwntypeInfo == 0)
          thrown = HEAP32[((thrown)>>2)];
      }
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (___cxa_does_inherit(typeArray[i], throwntype, thrown))
          return ((asm["setTempRet0"](typeArray[i]),thrown)|0);
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      return ((asm["setTempRet0"](throwntype),thrown)|0);
    }function ___cxa_throw(ptr, type, destructor) {
      if (!___cxa_throw.initialized) {
        try {
          HEAP32[((__ZTVN10__cxxabiv119__pointer_type_infoE)>>2)]=0; // Workaround for libcxxabi integration bug
        } catch(e){}
        try {
          HEAP32[((__ZTVN10__cxxabiv117__class_type_infoE)>>2)]=1; // Workaround for libcxxabi integration bug
        } catch(e){}
        try {
          HEAP32[((__ZTVN10__cxxabiv120__si_class_type_infoE)>>2)]=2; // Workaround for libcxxabi integration bug
        } catch(e){}
        ___cxa_throw.initialized = true;
      }
      HEAP32[((_llvm_eh_exception.buf)>>2)]=ptr
      HEAP32[(((_llvm_eh_exception.buf)+(4))>>2)]=type
      HEAP32[(((_llvm_eh_exception.buf)+(8))>>2)]=destructor
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";;
    }
  function _atexit(func, arg) {
      __ATEXIT__.unshift({ func: func, arg: arg });
    }var ___cxa_atexit=_atexit;
  function _rand() {
      return Math.floor(Math.random()*0x80000000);
    }
  function _emscripten_set_main_loop(func, fps, simulateInfiniteLoop) {
      Module['noExitRuntime'] = true;
      Browser.mainLoop.runner = function Browser_mainLoop_runner() {
        if (ABORT) return;
        if (Browser.mainLoop.queue.length > 0) {
          var start = Date.now();
          var blocker = Browser.mainLoop.queue.shift();
          blocker.func(blocker.arg);
          if (Browser.mainLoop.remainingBlockers) {
            var remaining = Browser.mainLoop.remainingBlockers;
            var next = remaining%1 == 0 ? remaining-1 : Math.floor(remaining);
            if (blocker.counted) {
              Browser.mainLoop.remainingBlockers = next;
            } else {
              // not counted, but move the progress along a tiny bit
              next = next + 0.5; // do not steal all the next one's progress
              Browser.mainLoop.remainingBlockers = (8*remaining + next)/9;
            }
          }
          console.log('main loop blocker "' + blocker.name + '" took ' + (Date.now() - start) + ' ms'); //, left: ' + Browser.mainLoop.remainingBlockers);
          Browser.mainLoop.updateStatus();
          setTimeout(Browser.mainLoop.runner, 0);
          return;
        }
        if (Browser.mainLoop.shouldPause) {
          // catch pauses from non-main loop sources
          Browser.mainLoop.paused = true;
          Browser.mainLoop.shouldPause = false;
          return;
        }
        if (Module['preMainLoop']) {
          Module['preMainLoop']();
        }
        try {
          Runtime.dynCall('v', func);
        } catch (e) {
          if (e instanceof ExitStatus) {
            return;
          } else {
            if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
            throw e;
          }
        }
        if (Module['postMainLoop']) {
          Module['postMainLoop']();
        }
        if (Browser.mainLoop.shouldPause) {
          // catch pauses from the main loop itself
          Browser.mainLoop.paused = true;
          Browser.mainLoop.shouldPause = false;
          return;
        }
        Browser.mainLoop.scheduler();
      }
      if (fps && fps > 0) {
        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler() {
          setTimeout(Browser.mainLoop.runner, 1000/fps); // doing this each time means that on exception, we stop
        }
      } else {
        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler() {
          Browser.requestAnimationFrame(Browser.mainLoop.runner);
        }
      }
      Browser.mainLoop.scheduler();
      if (simulateInfiniteLoop) {
        throw 'SimulateInfiniteLoop';
      }
    }
  function _llvm_umul_with_overflow_i32(x, y) {
      x = x>>>0;
      y = y>>>0;
      return ((asm["setTempRet0"](x*y > 4294967295),(x*y)>>>0)|0);
    }
  function _llvm_uadd_with_overflow_i32(x, y) {
      x = x>>>0;
      y = y>>>0;
      return ((asm["setTempRet0"](x+y > 4294967295),(x+y)>>>0)|0);
    }
  var GLFW={keyFunc:null,charFunc:null,mouseButtonFunc:null,mousePosFunc:null,mouseWheelFunc:null,resizeFunc:null,closeFunc:null,refreshFunc:null,params:null,initTime:null,wheelPos:0,buttons:0,keys:0,initWindowWidth:640,initWindowHeight:480,windowX:0,windowY:0,windowWidth:0,windowHeight:0,DOMToGLFWKeyCode:function (keycode) {
        switch (keycode) {
          case 0x09: return 295 ; //DOM_VK_TAB -> GLFW_KEY_TAB
          case 0x1B: return 255 ; //DOM_VK_ESCAPE -> GLFW_KEY_ESC
          case 0x6A: return 313 ; //DOM_VK_MULTIPLY -> GLFW_KEY_KP_MULTIPLY
          case 0x6B: return 315 ; //DOM_VK_ADD -> GLFW_KEY_KP_ADD
          case 0x6D: return 314 ; //DOM_VK_SUBTRACT -> GLFW_KEY_KP_SUBTRACT
          case 0x6E: return 316 ; //DOM_VK_DECIMAL -> GLFW_KEY_KP_DECIMAL
          case 0x6F: return 312 ; //DOM_VK_DIVIDE -> GLFW_KEY_KP_DIVIDE
          case 0x70: return 258 ; //DOM_VK_F1 -> GLFW_KEY_F1
          case 0x71: return 259 ; //DOM_VK_F2 -> GLFW_KEY_F2
          case 0x72: return 260 ; //DOM_VK_F3 -> GLFW_KEY_F3
          case 0x73: return 261 ; //DOM_VK_F4 -> GLFW_KEY_F4
          case 0x74: return 262 ; //DOM_VK_F5 -> GLFW_KEY_F5
          case 0x75: return 263 ; //DOM_VK_F6 -> GLFW_KEY_F6
          case 0x76: return 264 ; //DOM_VK_F7 -> GLFW_KEY_F7
          case 0x77: return 265 ; //DOM_VK_F8 -> GLFW_KEY_F8
          case 0x78: return 266 ; //DOM_VK_F9 -> GLFW_KEY_F9
          case 0x79: return 267 ; //DOM_VK_F10 -> GLFW_KEY_F10
          case 0x7a: return 268 ; //DOM_VK_F11 -> GLFW_KEY_F11
          case 0x7b: return 269 ; //DOM_VK_F12 -> GLFW_KEY_F12
          case 0x25: return 285 ; //DOM_VK_LEFT -> GLFW_KEY_LEFT
          case 0x26: return 283 ; //DOM_VK_UP -> GLFW_KEY_UP
          case 0x27: return 286 ; //DOM_VK_RIGHT -> GLFW_KEY_RIGHT
          case 0x28: return 284 ; //DOM_VK_DOWN -> GLFW_KEY_DOWN
          case 0x21: return 298 ; //DOM_VK_PAGE_UP -> GLFW_KEY_PAGEUP
          case 0x22: return 299 ; //DOM_VK_PAGE_DOWN -> GLFW_KEY_PAGEDOWN
          case 0x24: return 300 ; //DOM_VK_HOME -> GLFW_KEY_HOME
          case 0x23: return 301 ; //DOM_VK_END -> GLFW_KEY_END
          case 0x2d: return 296 ; //DOM_VK_INSERT -> GLFW_KEY_INSERT
          case 16  : return 287 ; //DOM_VK_SHIFT -> GLFW_KEY_LSHIFT
          case 0x05: return 287 ; //DOM_VK_LEFT_SHIFT -> GLFW_KEY_LSHIFT
          case 0x06: return 288 ; //DOM_VK_RIGHT_SHIFT -> GLFW_KEY_RSHIFT
          case 17  : return 289 ; //DOM_VK_CONTROL -> GLFW_KEY_LCTRL
          case 0x03: return 289 ; //DOM_VK_LEFT_CONTROL -> GLFW_KEY_LCTRL
          case 0x04: return 290 ; //DOM_VK_RIGHT_CONTROL -> GLFW_KEY_RCTRL
          case 18  : return 291 ; //DOM_VK_ALT -> GLFW_KEY_LALT
          case 0x02: return 291 ; //DOM_VK_LEFT_ALT -> GLFW_KEY_LALT
          case 0x01: return 292 ; //DOM_VK_RIGHT_ALT -> GLFW_KEY_RALT
          case 96  : return 302 ; //GLFW_KEY_KP_0
          case 97  : return 303 ; //GLFW_KEY_KP_1
          case 98  : return 304 ; //GLFW_KEY_KP_2
          case 99  : return 305 ; //GLFW_KEY_KP_3
          case 100 : return 306 ; //GLFW_KEY_KP_4
          case 101 : return 307 ; //GLFW_KEY_KP_5
          case 102 : return 308 ; //GLFW_KEY_KP_6
          case 103 : return 309 ; //GLFW_KEY_KP_7
          case 104 : return 310 ; //GLFW_KEY_KP_8
          case 105 : return 311 ; //GLFW_KEY_KP_9
          default  : return keycode;
        };
      },getUnicodeChar:function (value) {
        var output = '';
        if (value > 0xFFFF) {
          value -= 0x10000;
          output += String.fromCharCode(value >>> 10 & 0x3FF | 0xD800);
          value = 0xDC00 | value & 0x3FF;
        }
        output += String.fromCharCode(value);
        return output;
      },onKeyPress:function (event) {
        //charCode is only available whith onKeyPress event
        var char = GLFW.getUnicodeChar(event.charCode);
        if (event.charCode) {
          var char = GLFW.getUnicodeChar(event.charCode);
          if (char !== null && GLFW.charFunc) {
            event.preventDefault();
            Runtime.dynCall('vii', GLFW.charFunc, [event.charCode, 1]);
          }
        }
      },onKeyChanged:function (event, status) {
        var key = GLFW.DOMToGLFWKeyCode(event.keyCode);
        if (key && GLFW.keyFunc) {
          GLFW.keys[key] = status;
          event.preventDefault();
          Runtime.dynCall('vii', GLFW.keyFunc, [key, status]);
        }
      },onKeydown:function (event) {
        GLFW.onKeyChanged(event, 1);//GLFW_PRESS
      },onKeyup:function (event) {
        GLFW.onKeyChanged(event, 0);//GLFW_RELEASE
      },onMousemove:function (event) {
        /* Send motion event only if the motion changed, prevents
         * spamming our app with uncessary callback call. It does happen in
         * Chrome on Windows.
         */
        var lastX = Browser.mouseX;
        var lastY = Browser.mouseY;
        Browser.calculateMouseEvent(event);
        var newX = Browser.mouseX;
        var newY = Browser.mouseY;
        if (event.target == Module["canvas"] && GLFW.mousePosFunc) {
          event.preventDefault();
          Runtime.dynCall('vii', GLFW.mousePosFunc, [lastX, lastY]);
        }
      },onMouseButtonChanged:function (event, status) {
        if (GLFW.mouseButtonFunc == null) {
          return;
        }
        Browser.calculateMouseEvent(event);
        if (event.target != Module["canvas"]) {
          return;
        }
        if (status == 1) {//GLFW_PRESS
          try {
            event.target.setCapture();
          } catch (e) {}
        }
        event.preventDefault();
        //DOM and glfw have the same button codes
        Runtime.dynCall('vii', GLFW.mouseButtonFunc, [event['button'], status]);
      },onMouseButtonDown:function (event) {
        GLFW.buttons |= (1 << event['button']);
        GLFW.onMouseButtonChanged(event, 1);//GLFW_PRESS
      },onMouseButtonUp:function (event) {
        GLFW.buttons &= ~(1 << event['button']);
        GLFW.onMouseButtonChanged(event, 0);//GLFW_RELEASE
      },onMouseWheel:function (event) {
        if (event.detail > 0) {
          GLFW.wheelPos++;
        }
        if (event.detail < 0) {
          GLFW.wheelPos--;
        }
        if (GLFW.mouseWheelFunc && event.target == Module["canvas"]) {
          Runtime.dynCall('vi', GLFW.mouseWheelFunc, [GLFW.wheelPos]);
          event.preventDefault();
        }
      },onFullScreenEventChange:function (event) {
        var width;
        var height;
        if (document["fullScreen"] || document["mozFullScreen"] || document["webkitIsFullScreen"]) {
          width = screen["width"];
          height = screen["height"];
        }
        else {
          width = GLFW.windowWidth;
          height = GLFW.windowHeight;
          // TODO set position
          document.removeEventListener('fullscreenchange', GLFW.onFullScreenEventChange, true);
          document.removeEventListener('mozfullscreenchange', GLFW.onFullScreenEventChange, true);
          document.removeEventListener('webkitfullscreenchange', GLFW.onFullScreenEventChange, true);
        }
        Browser.setCanvasSize(width, height);
        if (GLFW.resizeFunc) {
          Runtime.dynCall('vii', GLFW.resizeFunc, [width, height]);
        }
      },requestFullScreen:function () {
        var RFS = Module["canvas"]['requestFullscreen'] ||
                  Module["canvas"]['requestFullScreen'] ||
                  Module["canvas"]['mozRequestFullScreen'] ||
                  Module["canvas"]['webkitRequestFullScreen'] ||
                  (function() {});
        RFS.apply(Module["canvas"], []);
      },cancelFullScreen:function () {
        var CFS = document['exitFullscreen'] ||
                  document['cancelFullScreen'] ||
                  document['mozCancelFullScreen'] ||
                  document['webkitCancelFullScreen'] ||
            (function() {});
        CFS.apply(document, []);
      }};function _glfwInit() {
      GLFW.initTime = Date.now() / 1000;
      window.addEventListener("keydown", GLFW.onKeydown, true);
      window.addEventListener("keypress", GLFW.onKeyPress, true);
      window.addEventListener("keyup", GLFW.onKeyup, true);
      window.addEventListener("mousemove", GLFW.onMousemove, true);
      window.addEventListener("mousedown", GLFW.onMouseButtonDown, true);
      window.addEventListener("mouseup", GLFW.onMouseButtonUp, true);
      window.addEventListener('DOMMouseScroll', GLFW.onMouseWheel, true);
      window.addEventListener('mousewheel', GLFW.onMouseWheel, true);
      __ATEXIT__.push({ func: function() {
        window.removeEventListener("keydown", GLFW.onKeydown, true);
        window.removeEventListener("keypress", GLFW.onKeyPress, true);
        window.removeEventListener("keyup", GLFW.onKeyup, true);
        window.removeEventListener("mousemove", GLFW.onMousemove, true);
        window.removeEventListener("mousedown", GLFW.onMouseButtonDown, true);
        window.removeEventListener("mouseup", GLFW.onMouseButtonUp, true);
        window.removeEventListener('DOMMouseScroll', GLFW.onMouseWheel, true);
        window.removeEventListener('mousewheel', GLFW.onMouseWheel, true);
        Module["canvas"].width = Module["canvas"].height = 1;
      }});
      //TODO: Init with correct values
      GLFW.params = new Array();
      GLFW.params[0x00030001] = true; //GLFW_MOUSE_CURSOR
      GLFW.params[0x00030002] = false; //GLFW_STICKY_KEYS
      GLFW.params[0x00030003] = true; //GLFW_STICKY_MOUSE_BUTTONS
      GLFW.params[0x00030004] = false; //GLFW_SYSTEM_KEYS
      GLFW.params[0x00030005] = false; //GLFW_KEY_REPEAT
      GLFW.params[0x00030006] = true; //GLFW_AUTO_POLL_EVENTS
      GLFW.params[0x00020001] = true; //GLFW_OPENED
      GLFW.params[0x00020002] = true; //GLFW_ACTIVE
      GLFW.params[0x00020003] = false; //GLFW_ICONIFIED
      GLFW.params[0x00020004] = true; //GLFW_ACCELERATED
      GLFW.params[0x00020005] = 0; //GLFW_RED_BITS
      GLFW.params[0x00020006] = 0; //GLFW_GREEN_BITS
      GLFW.params[0x00020007] = 0; //GLFW_BLUE_BITS
      GLFW.params[0x00020008] = 0; //GLFW_ALPHA_BITS
      GLFW.params[0x00020009] = 0; //GLFW_DEPTH_BITS
      GLFW.params[0x0002000A] = 0; //GLFW_STENCIL_BITS
      GLFW.params[0x0002000B] = 0; //GLFW_REFRESH_RATE
      GLFW.params[0x0002000C] = 0; //GLFW_ACCUM_RED_BITS
      GLFW.params[0x0002000D] = 0; //GLFW_ACCUM_GREEN_BITS
      GLFW.params[0x0002000E] = 0; //GLFW_ACCUM_BLUE_BITS
      GLFW.params[0x0002000F] = 0; //GLFW_ACCUM_ALPHA_BITS
      GLFW.params[0x00020010] = 0; //GLFW_AUX_BUFFERS
      GLFW.params[0x00020011] = 0; //GLFW_STEREO
      GLFW.params[0x00020012] = 0; //GLFW_WINDOW_NO_RESIZE
      GLFW.params[0x00020013] = 0; //GLFW_FSAA_SAMPLES
      GLFW.params[0x00020014] = 0; //GLFW_OPENGL_VERSION_MAJOR
      GLFW.params[0x00020015] = 0; //GLFW_OPENGL_VERSION_MINOR
      GLFW.params[0x00020016] = 0; //GLFW_OPENGL_FORWARD_COMPAT
      GLFW.params[0x00020017] = 0; //GLFW_OPENGL_DEBUG_CONTEXT
      GLFW.params[0x00020018] = 0; //GLFW_OPENGL_PROFILE
      GLFW.keys = new Array();
      return 1; //GL_TRUE
    }
  var GL={counter:1,lastError:0,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],currArrayBuffer:0,currElementArrayBuffer:0,byteSizeByTypeRoot:5120,byteSizeByType:[1,1,2,2,4,4,4,2,3,4,8],programInfos:{},stringCache:{},packAlignment:4,unpackAlignment:4,init:function () {
        Browser.moduleContextCreatedCallbacks.push(GL.initExtensions);
      },recordError:function recordError(errorCode) {
        if (!GL.lastError) {
          GL.lastError = errorCode;
        }
      },getNewId:function (table) {
        var ret = GL.counter++;
        for (var i = table.length; i < ret; i++) {
          table[i] = null;
        }
        return ret;
      },MINI_TEMP_BUFFER_SIZE:16,miniTempBuffer:null,miniTempBufferViews:[0],MAX_TEMP_BUFFER_SIZE:2097152,tempBufferIndexLookup:null,tempVertexBuffers:null,tempIndexBuffers:null,tempQuadIndexBuffer:null,generateTempBuffers:function (quads) {
        GL.tempBufferIndexLookup = new Uint8Array(GL.MAX_TEMP_BUFFER_SIZE+1);
        GL.tempVertexBuffers = [];
        GL.tempIndexBuffers = [];
        var last = -1, curr = -1;
        var size = 1;
        for (var i = 0; i <= GL.MAX_TEMP_BUFFER_SIZE; i++) {
          if (i > size) {
            size <<= 1;
          }
          if (size != last) {
            curr++;
            GL.tempVertexBuffers[curr] = Module.ctx.createBuffer();
            Module.ctx.bindBuffer(Module.ctx.ARRAY_BUFFER, GL.tempVertexBuffers[curr]);
            Module.ctx.bufferData(Module.ctx.ARRAY_BUFFER, size, Module.ctx.DYNAMIC_DRAW);
            Module.ctx.bindBuffer(Module.ctx.ARRAY_BUFFER, null);
            GL.tempIndexBuffers[curr] = Module.ctx.createBuffer();
            Module.ctx.bindBuffer(Module.ctx.ELEMENT_ARRAY_BUFFER, GL.tempIndexBuffers[curr]);
            Module.ctx.bufferData(Module.ctx.ELEMENT_ARRAY_BUFFER, size, Module.ctx.DYNAMIC_DRAW);
            Module.ctx.bindBuffer(Module.ctx.ELEMENT_ARRAY_BUFFER, null);
            last = size;
          }
          GL.tempBufferIndexLookup[i] = curr;
        }
        if (quads) {
          // GL_QUAD indexes can be precalculated
          GL.tempQuadIndexBuffer = Module.ctx.createBuffer();
          Module.ctx.bindBuffer(Module.ctx.ELEMENT_ARRAY_BUFFER, GL.tempQuadIndexBuffer);
          var numIndexes = GL.MAX_TEMP_BUFFER_SIZE >> 1;
          var quadIndexes = new Uint16Array(numIndexes);
          var i = 0, v = 0;
          while (1) {
            quadIndexes[i++] = v;
            if (i >= numIndexes) break;
            quadIndexes[i++] = v+1;
            if (i >= numIndexes) break;
            quadIndexes[i++] = v+2;
            if (i >= numIndexes) break;
            quadIndexes[i++] = v;
            if (i >= numIndexes) break;
            quadIndexes[i++] = v+2;
            if (i >= numIndexes) break;
            quadIndexes[i++] = v+3;
            if (i >= numIndexes) break;
            v += 4;
          }
          Module.ctx.bufferData(Module.ctx.ELEMENT_ARRAY_BUFFER, quadIndexes, Module.ctx.STATIC_DRAW);
          Module.ctx.bindBuffer(Module.ctx.ELEMENT_ARRAY_BUFFER, null);
        }
      },findToken:function (source, token) {
        function isIdentChar(ch) {
          if (ch >= 48 && ch <= 57) // 0-9
            return true;
          if (ch >= 65 && ch <= 90) // A-Z
            return true;
          if (ch >= 97 && ch <= 122) // a-z
            return true;
          return false;
        }
        var i = -1;
        do {
          i = source.indexOf(token, i + 1);
          if (i < 0) {
            break;
          }
          if (i > 0 && isIdentChar(source[i - 1])) {
            continue;
          }
          i += token.length;
          if (i < source.length - 1 && isIdentChar(source[i + 1])) {
            continue;
          }
          return true;
        } while (true);
        return false;
      },getSource:function (shader, count, string, length) {
        var source = '';
        for (var i = 0; i < count; ++i) {
          var frag;
          if (length) {
            var len = HEAP32[(((length)+(i*4))>>2)];
            if (len < 0) {
              frag = Pointer_stringify(HEAP32[(((string)+(i*4))>>2)]);
            } else {
              frag = Pointer_stringify(HEAP32[(((string)+(i*4))>>2)], len);
            }
          } else {
            frag = Pointer_stringify(HEAP32[(((string)+(i*4))>>2)]);
          }
          source += frag;
        }
        // Let's see if we need to enable the standard derivatives extension
        type = Module.ctx.getShaderParameter(GL.shaders[shader], 0x8B4F /* GL_SHADER_TYPE */);
        if (type == 0x8B30 /* GL_FRAGMENT_SHADER */) {
          if (GL.findToken(source, "dFdx") ||
              GL.findToken(source, "dFdy") ||
              GL.findToken(source, "fwidth")) {
            source = "#extension GL_OES_standard_derivatives : enable\n" + source;
            var extension = Module.ctx.getExtension("OES_standard_derivatives");
          }
        }
        return source;
      },computeImageSize:function (width, height, sizePerPixel, alignment) {
        function roundedToNextMultipleOf(x, y) {
          return Math.floor((x + y - 1) / y) * y
        }
        var plainRowSize = width * sizePerPixel;
        var alignedRowSize = roundedToNextMultipleOf(plainRowSize, alignment);
        return (height <= 0) ? 0 :
                 ((height - 1) * alignedRowSize + plainRowSize);
      },getTexPixelData:function (type, format, width, height, pixels, internalFormat) {
        var sizePerPixel;
        switch (type) {
          case 0x1401 /* GL_UNSIGNED_BYTE */:
            switch (format) {
              case 0x1906 /* GL_ALPHA */:
              case 0x1909 /* GL_LUMINANCE */:
                sizePerPixel = 1;
                break;
              case 0x1907 /* GL_RGB */:
                sizePerPixel = 3;
                break;
              case 0x1908 /* GL_RGBA */:
                sizePerPixel = 4;
                break;
              case 0x190A /* GL_LUMINANCE_ALPHA */:
                sizePerPixel = 2;
                break;
              default:
                throw 'Invalid format (' + format + ')';
            }
            break;
          case 0x1403 /* GL_UNSIGNED_SHORT */:
            if (format == 0x1902 /* GL_DEPTH_COMPONENT */) {
              sizePerPixel = 2;
            } else {
              throw 'Invalid format (' + format + ')';
            }
            break;
          case 0x1405 /* GL_UNSIGNED_INT */:
            if (format == 0x1902 /* GL_DEPTH_COMPONENT */) {
              sizePerPixel = 4;
            } else {
              throw 'Invalid format (' + format + ')';
            }
            break;
          case 0x84FA /* UNSIGNED_INT_24_8_WEBGL */:
            sizePerPixel = 4;
            break;
          case 0x8363 /* GL_UNSIGNED_SHORT_5_6_5 */:
          case 0x8033 /* GL_UNSIGNED_SHORT_4_4_4_4 */:
          case 0x8034 /* GL_UNSIGNED_SHORT_5_5_5_1 */:
            sizePerPixel = 2;
            break;
          case 0x1406 /* GL_FLOAT */:
            switch (format) {
              case 0x1907 /* GL_RGB */:
                sizePerPixel = 3*4;
                break;
              case 0x1908 /* GL_RGBA */:
                sizePerPixel = 4*4;
                break;
              default:
                throw 'Invalid format (' + format + ')';
            }
            internalFormat = Module.ctx.RGBA;
            break;
          default:
            throw 'Invalid type (' + type + ')';
        }
        var bytes = GL.computeImageSize(width, height, sizePerPixel, GL.unpackAlignment);
        if (type == 0x1401 /* GL_UNSIGNED_BYTE */) {
          pixels = HEAPU8.subarray((pixels),(pixels+bytes));
        } else if (type == 0x1406 /* GL_FLOAT */) {
          pixels = HEAPF32.subarray((pixels)>>2,(pixels+bytes)>>2);
        } else if (type == 0x1405 /* GL_UNSIGNED_INT */ || type == 0x84FA /* UNSIGNED_INT_24_8_WEBGL */) {
          pixels = HEAPU32.subarray((pixels)>>2,(pixels+bytes)>>2);
        } else {
          pixels = HEAPU16.subarray((pixels)>>1,(pixels+bytes)>>1);
        }
        return {
          pixels: pixels,
          internalFormat: internalFormat
        }
      },initExtensions:function () {
        if (GL.initExtensions.done) return;
        GL.initExtensions.done = true;
        if (!Module.useWebGL) return; // an app might link both gl and 2d backends
        GL.miniTempBuffer = new Float32Array(GL.MINI_TEMP_BUFFER_SIZE);
        for (var i = 0; i < GL.MINI_TEMP_BUFFER_SIZE; i++) {
          GL.miniTempBufferViews[i] = GL.miniTempBuffer.subarray(0, i+1);
        }
        GL.maxVertexAttribs = Module.ctx.getParameter(Module.ctx.MAX_VERTEX_ATTRIBS);
        // Detect the presence of a few extensions manually, this GL interop layer itself will need to know if they exist. 
        GL.compressionExt = Module.ctx.getExtension('WEBGL_compressed_texture_s3tc') ||
                            Module.ctx.getExtension('MOZ_WEBGL_compressed_texture_s3tc') ||
                            Module.ctx.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');
        GL.anisotropicExt = Module.ctx.getExtension('EXT_texture_filter_anisotropic') ||
                            Module.ctx.getExtension('MOZ_EXT_texture_filter_anisotropic') ||
                            Module.ctx.getExtension('WEBKIT_EXT_texture_filter_anisotropic');
        GL.floatExt = Module.ctx.getExtension('OES_texture_float');
        // These are the 'safe' feature-enabling extensions that don't add any performance impact related to e.g. debugging, and
        // should be enabled by default so that client GLES2/GL code will not need to go through extra hoops to get its stuff working.
        // As new extensions are ratified at http://www.khronos.org/registry/webgl/extensions/ , feel free to add your new extensions
        // here, as long as they don't produce a performance impact for users that might not be using those extensions.
        // E.g. debugging-related extensions should probably be off by default.
        var automaticallyEnabledExtensions = [ "OES_texture_float", "OES_texture_half_float", "OES_standard_derivatives",
                                               "OES_vertex_array_object", "WEBGL_compressed_texture_s3tc", "WEBGL_depth_texture",
                                               "OES_element_index_uint", "EXT_texture_filter_anisotropic", "ANGLE_instanced_arrays",
                                               "OES_texture_float_linear", "OES_texture_half_float_linear", "WEBGL_compressed_texture_atc",
                                               "WEBGL_compressed_texture_pvrtc", "EXT_color_buffer_half_float", "WEBGL_color_buffer_float",
                                               "EXT_frag_depth", "EXT_sRGB", "WEBGL_draw_buffers", "WEBGL_shared_resources" ];
        function shouldEnableAutomatically(extension) {
          for(var i in automaticallyEnabledExtensions) {
            var include = automaticallyEnabledExtensions[i];
            if (ext.indexOf(include) != -1) {
              return true;
            }
          }
          return false;
        }
        var extensions = Module.ctx.getSupportedExtensions();
        for(var e in extensions) {
          var ext = extensions[e].replace('MOZ_', '').replace('WEBKIT_', '');
          if (automaticallyEnabledExtensions.indexOf(ext) != -1) {
            Module.ctx.getExtension(ext); // Calling .getExtension enables that extension permanently, no need to store the return value to be enabled.
          }
        }
      },populateUniformTable:function (program) {
        var p = GL.programs[program];
        GL.programInfos[program] = {
          uniforms: {},
          maxUniformLength: 0, // This is eagerly computed below, since we already enumerate all uniforms anyway.
          maxAttributeLength: -1 // This is lazily computed and cached, computed when/if first asked, "-1" meaning not computed yet.
        };
        var ptable = GL.programInfos[program];
        var utable = ptable.uniforms;
        // A program's uniform table maps the string name of an uniform to an integer location of that uniform.
        // The global GL.uniforms map maps integer locations to WebGLUniformLocations.
        var numUniforms = Module.ctx.getProgramParameter(p, Module.ctx.ACTIVE_UNIFORMS);
        for (var i = 0; i < numUniforms; ++i) {
          var u = Module.ctx.getActiveUniform(p, i);
          var name = u.name;
          ptable.maxUniformLength = Math.max(ptable.maxUniformLength, name.length+1);
          // Strip off any trailing array specifier we might have got, e.g. "[0]".
          if (name.indexOf(']', name.length-1) !== -1) {
            var ls = name.lastIndexOf('[');
            name = name.slice(0, ls);
          }
          // Optimize memory usage slightly: If we have an array of uniforms, e.g. 'vec3 colors[3];', then 
          // only store the string 'colors' in utable, and 'colors[0]', 'colors[1]' and 'colors[2]' will be parsed as 'colors'+i.
          // Note that for the GL.uniforms table, we still need to fetch the all WebGLUniformLocations for all the indices.
          var loc = Module.ctx.getUniformLocation(p, name);
          var id = GL.getNewId(GL.uniforms);
          utable[name] = [u.size, id];
          GL.uniforms[id] = loc;
          for (var j = 1; j < u.size; ++j) {
            var n = name + '['+j+']';
            loc = Module.ctx.getUniformLocation(p, n);
            id = GL.getNewId(GL.uniforms);
            GL.uniforms[id] = loc;
          }
        }
      }};function _glViewport(x0, x1, x2, x3) { Module.ctx.viewport(x0, x1, x2, x3) }
  function _glClear(x0) { Module.ctx.clear(x0) }
  function _glGenTextures(n, textures) {
      for (var i = 0; i < n; i++) {
        var id = GL.getNewId(GL.textures);
        var texture = Module.ctx.createTexture();
        texture.name = id;
        GL.textures[id] = texture;
        HEAP32[(((textures)+(i*4))>>2)]=id;
      }
    }
  function _glBindTexture(target, texture) {
      Module.ctx.bindTexture(target, texture ? GL.textures[texture] : null);
    }
  function _glTexImage2D(target, level, internalFormat, width, height, border, format, type, pixels) {
      if (pixels) {
        var data = GL.getTexPixelData(type, format, width, height, pixels, internalFormat);
        pixels = data.pixels;
        internalFormat = data.internalFormat;
      } else {
        pixels = null;
      }
      Module.ctx.texImage2D(target, level, internalFormat, width, height, border, format, type, pixels);
    }
  function _glTexParameteri(x0, x1, x2) { Module.ctx.texParameteri(x0, x1, x2) }
  function _glfwPollEvents() {}
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};
  var ___errno_state=0;function ___setErrNo(value) {
      // For convenient setting and returning of errno.
      HEAP32[((___errno_state)>>2)]=value
      return value;
    }
  var TTY={ttys:[],init:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY
        //   // device, it always assumes it's a TTY device. because of this, we're forcing
        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible
        //   // with text files until FS.init can be refactored.
        //   process['stdin']['setEncoding']('utf8');
        // }
      },shutdown:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
        //   process['stdin']['pause']();
        // }
      },register:function (dev, ops) {
        TTY.ttys[dev] = { input: [], output: [], ops: ops };
        FS.registerDevice(dev, TTY.stream_ops);
      },stream_ops:{open:function (stream) {
          var tty = TTY.ttys[stream.node.rdev];
          if (!tty) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          stream.tty = tty;
          stream.seekable = false;
        },close:function (stream) {
          // flush any pending line data
          if (stream.tty.output.length) {
            stream.tty.ops.put_char(stream.tty, 10);
          }
        },read:function (stream, buffer, offset, length, pos /* ignored */) {
          if (!stream.tty || !stream.tty.ops.get_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          var bytesRead = 0;
          for (var i = 0; i < length; i++) {
            var result;
            try {
              result = stream.tty.ops.get_char(stream.tty);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            if (result === undefined && bytesRead === 0) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
            if (result === null || result === undefined) break;
            bytesRead++;
            buffer[offset+i] = result;
          }
          if (bytesRead) {
            stream.node.timestamp = Date.now();
          }
          return bytesRead;
        },write:function (stream, buffer, offset, length, pos) {
          if (!stream.tty || !stream.tty.ops.put_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          for (var i = 0; i < length; i++) {
            try {
              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
          }
          if (length) {
            stream.node.timestamp = Date.now();
          }
          return i;
        }},default_tty_ops:{get_char:function (tty) {
          if (!tty.input.length) {
            var result = null;
            if (ENVIRONMENT_IS_NODE) {
              result = process['stdin']['read']();
              if (!result) {
                if (process['stdin']['_readableState'] && process['stdin']['_readableState']['ended']) {
                  return null;  // EOF
                }
                return undefined;  // no data available
              }
            } else if (typeof window != 'undefined' &&
              typeof window.prompt == 'function') {
              // Browser.
              result = window.prompt('Input: ');  // returns null on cancel
              if (result !== null) {
                result += '\n';
              }
            } else if (typeof readline == 'function') {
              // Command line.
              result = readline();
              if (result !== null) {
                result += '\n';
              }
            }
            if (!result) {
              return null;
            }
            tty.input = intArrayFromString(result, true);
          }
          return tty.input.shift();
        },put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['print'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }},default_tty1_ops:{put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['printErr'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }}};
  var MEMFS={ops_table:null,CONTENT_OWNING:1,CONTENT_FLEXIBLE:2,CONTENT_FIXED:3,mount:function (mount) {
        return MEMFS.createNode(null, '/', 16384 | 0777, 0);
      },createNode:function (parent, name, mode, dev) {
        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
          // no supported
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (!MEMFS.ops_table) {
          MEMFS.ops_table = {
            dir: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                lookup: MEMFS.node_ops.lookup,
                mknod: MEMFS.node_ops.mknod,
                mknod: MEMFS.node_ops.mknod,
                rename: MEMFS.node_ops.rename,
                unlink: MEMFS.node_ops.unlink,
                rmdir: MEMFS.node_ops.rmdir,
                readdir: MEMFS.node_ops.readdir,
                symlink: MEMFS.node_ops.symlink
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek
              }
            },
            file: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek,
                read: MEMFS.stream_ops.read,
                write: MEMFS.stream_ops.write,
                allocate: MEMFS.stream_ops.allocate,
                mmap: MEMFS.stream_ops.mmap
              }
            },
            link: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                readlink: MEMFS.node_ops.readlink
              },
              stream: {}
            },
            chrdev: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: FS.chrdev_stream_ops
            },
          };
        }
        var node = FS.createNode(parent, name, mode, dev);
        if (FS.isDir(node.mode)) {
          node.node_ops = MEMFS.ops_table.dir.node;
          node.stream_ops = MEMFS.ops_table.dir.stream;
          node.contents = {};
        } else if (FS.isFile(node.mode)) {
          node.node_ops = MEMFS.ops_table.file.node;
          node.stream_ops = MEMFS.ops_table.file.stream;
          node.contents = [];
          node.contentMode = MEMFS.CONTENT_FLEXIBLE;
        } else if (FS.isLink(node.mode)) {
          node.node_ops = MEMFS.ops_table.link.node;
          node.stream_ops = MEMFS.ops_table.link.stream;
        } else if (FS.isChrdev(node.mode)) {
          node.node_ops = MEMFS.ops_table.chrdev.node;
          node.stream_ops = MEMFS.ops_table.chrdev.stream;
        }
        node.timestamp = Date.now();
        // add the new node to the parent
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },ensureFlexible:function (node) {
        if (node.contentMode !== MEMFS.CONTENT_FLEXIBLE) {
          var contents = node.contents;
          node.contents = Array.prototype.slice.call(contents);
          node.contentMode = MEMFS.CONTENT_FLEXIBLE;
        }
      },node_ops:{getattr:function (node) {
          var attr = {};
          // device numbers reuse inode numbers.
          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
          attr.ino = node.id;
          attr.mode = node.mode;
          attr.nlink = 1;
          attr.uid = 0;
          attr.gid = 0;
          attr.rdev = node.rdev;
          if (FS.isDir(node.mode)) {
            attr.size = 4096;
          } else if (FS.isFile(node.mode)) {
            attr.size = node.contents.length;
          } else if (FS.isLink(node.mode)) {
            attr.size = node.link.length;
          } else {
            attr.size = 0;
          }
          attr.atime = new Date(node.timestamp);
          attr.mtime = new Date(node.timestamp);
          attr.ctime = new Date(node.timestamp);
          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
          //       but this is not required by the standard.
          attr.blksize = 4096;
          attr.blocks = Math.ceil(attr.size / attr.blksize);
          return attr;
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
          if (attr.size !== undefined) {
            MEMFS.ensureFlexible(node);
            var contents = node.contents;
            if (attr.size < contents.length) contents.length = attr.size;
            else while (attr.size > contents.length) contents.push(0);
          }
        },lookup:function (parent, name) {
          throw FS.genericErrors[ERRNO_CODES.ENOENT];
        },mknod:function (parent, name, mode, dev) {
          return MEMFS.createNode(parent, name, mode, dev);
        },rename:function (old_node, new_dir, new_name) {
          // if we're overwriting a directory at new_name, make sure it's empty.
          if (FS.isDir(old_node.mode)) {
            var new_node;
            try {
              new_node = FS.lookupNode(new_dir, new_name);
            } catch (e) {
            }
            if (new_node) {
              for (var i in new_node.contents) {
                throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
              }
            }
          }
          // do the internal rewiring
          delete old_node.parent.contents[old_node.name];
          old_node.name = new_name;
          new_dir.contents[new_name] = old_node;
          old_node.parent = new_dir;
        },unlink:function (parent, name) {
          delete parent.contents[name];
        },rmdir:function (parent, name) {
          var node = FS.lookupNode(parent, name);
          for (var i in node.contents) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
          }
          delete parent.contents[name];
        },readdir:function (node) {
          var entries = ['.', '..']
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newname, oldpath) {
          var node = MEMFS.createNode(parent, newname, 0777 | 40960, 0);
          node.link = oldpath;
          return node;
        },readlink:function (node) {
          if (!FS.isLink(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return node.link;
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (size > 8 && contents.subarray) { // non-trivial, and typed array
            buffer.set(contents.subarray(position, position + size), offset);
          } else
          {
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          }
          return size;
        },write:function (stream, buffer, offset, length, position, canOwn) {
          var node = stream.node;
          node.timestamp = Date.now();
          var contents = node.contents;
          if (length && contents.length === 0 && position === 0 && buffer.subarray) {
            // just replace it with the new data
            if (canOwn && offset === 0) {
              node.contents = buffer; // this could be a subarray of Emscripten HEAP, or allocated from some other source.
              node.contentMode = (buffer.buffer === HEAP8.buffer) ? MEMFS.CONTENT_OWNING : MEMFS.CONTENT_FIXED;
            } else {
              node.contents = new Uint8Array(buffer.subarray(offset, offset+length));
              node.contentMode = MEMFS.CONTENT_FIXED;
            }
            return length;
          }
          MEMFS.ensureFlexible(node);
          var contents = node.contents;
          while (contents.length < position) contents.push(0);
          for (var i = 0; i < length; i++) {
            contents[position + i] = buffer[offset + i];
          }
          return length;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.contents.length;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          stream.ungotten = [];
          stream.position = position;
          return position;
        },allocate:function (stream, offset, length) {
          MEMFS.ensureFlexible(stream.node);
          var contents = stream.node.contents;
          var limit = offset + length;
          while (limit > contents.length) contents.push(0);
        },mmap:function (stream, buffer, offset, length, position, prot, flags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          var ptr;
          var allocated;
          var contents = stream.node.contents;
          // Only make a new copy when MAP_PRIVATE is specified.
          if ( !(flags & 2) &&
                (contents.buffer === buffer || contents.buffer === buffer.buffer) ) {
            // We can't emulate MAP_SHARED when the file is not backed by the buffer
            // we're mapping to (e.g. the HEAP buffer).
            allocated = false;
            ptr = contents.byteOffset;
          } else {
            // Try to avoid unnecessary slices.
            if (position > 0 || position + length < contents.length) {
              if (contents.subarray) {
                contents = contents.subarray(position, position + length);
              } else {
                contents = Array.prototype.slice.call(contents, position, position + length);
              }
            }
            allocated = true;
            ptr = _malloc(length);
            if (!ptr) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
            }
            buffer.set(contents, ptr);
          }
          return { ptr: ptr, allocated: allocated };
        }}};
  var IDBFS={dbs:{},indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",mount:function (mount) {
        return MEMFS.mount.apply(null, arguments);
      },syncfs:function (mount, populate, callback) {
        IDBFS.getLocalSet(mount, function(err, local) {
          if (err) return callback(err);
          IDBFS.getRemoteSet(mount, function(err, remote) {
            if (err) return callback(err);
            var src = populate ? remote : local;
            var dst = populate ? local : remote;
            IDBFS.reconcile(src, dst, callback);
          });
        });
      },reconcile:function (src, dst, callback) {
        var total = 0;
        var create = {};
        for (var key in src.files) {
          if (!src.files.hasOwnProperty(key)) continue;
          var e = src.files[key];
          var e2 = dst.files[key];
          if (!e2 || e.timestamp > e2.timestamp) {
            create[key] = e;
            total++;
          }
        }
        var remove = {};
        for (var key in dst.files) {
          if (!dst.files.hasOwnProperty(key)) continue;
          var e = dst.files[key];
          var e2 = src.files[key];
          if (!e2) {
            remove[key] = e;
            total++;
          }
        }
        if (!total) {
          // early out
          return callback(null);
        }
        var completed = 0;
        function done(err) {
          if (err) return callback(err);
          if (++completed >= total) {
            return callback(null);
          }
        };
        // create a single transaction to handle and IDB reads / writes we'll need to do
        var db = src.type === 'remote' ? src.db : dst.db;
        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');
        transaction.onerror = function transaction_onerror() { callback(this.error); };
        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
        for (var path in create) {
          if (!create.hasOwnProperty(path)) continue;
          var entry = create[path];
          if (dst.type === 'local') {
            // save file to local
            try {
              if (FS.isDir(entry.mode)) {
                FS.mkdir(path, entry.mode);
              } else if (FS.isFile(entry.mode)) {
                var stream = FS.open(path, 'w+', 0666);
                FS.write(stream, entry.contents, 0, entry.contents.length, 0, true /* canOwn */);
                FS.close(stream);
              }
              done(null);
            } catch (e) {
              return done(e);
            }
          } else {
            // save file to IDB
            var req = store.put(entry, path);
            req.onsuccess = function req_onsuccess() { done(null); };
            req.onerror = function req_onerror() { done(this.error); };
          }
        }
        for (var path in remove) {
          if (!remove.hasOwnProperty(path)) continue;
          var entry = remove[path];
          if (dst.type === 'local') {
            // delete file from local
            try {
              if (FS.isDir(entry.mode)) {
                // TODO recursive delete?
                FS.rmdir(path);
              } else if (FS.isFile(entry.mode)) {
                FS.unlink(path);
              }
              done(null);
            } catch (e) {
              return done(e);
            }
          } else {
            // delete file from IDB
            var req = store.delete(path);
            req.onsuccess = function req_onsuccess() { done(null); };
            req.onerror = function req_onerror() { done(this.error); };
          }
        }
      },getLocalSet:function (mount, callback) {
        var files = {};
        function isRealDir(p) {
          return p !== '.' && p !== '..';
        };
        function toAbsolute(root) {
          return function(p) {
            return PATH.join2(root, p);
          }
        };
        var check = FS.readdir(mount.mountpoint)
          .filter(isRealDir)
          .map(toAbsolute(mount.mountpoint));
        while (check.length) {
          var path = check.pop();
          var stat, node;
          try {
            var lookup = FS.lookupPath(path);
            node = lookup.node;
            stat = FS.stat(path);
          } catch (e) {
            return callback(e);
          }
          if (FS.isDir(stat.mode)) {
            check.push.apply(check, FS.readdir(path)
              .filter(isRealDir)
              .map(toAbsolute(path)));
            files[path] = { mode: stat.mode, timestamp: stat.mtime };
          } else if (FS.isFile(stat.mode)) {
            files[path] = { contents: node.contents, mode: stat.mode, timestamp: stat.mtime };
          } else {
            return callback(new Error('node type not supported'));
          }
        }
        return callback(null, { type: 'local', files: files });
      },getDB:function (name, callback) {
        // look it up in the cache
        var db = IDBFS.dbs[name];
        if (db) {
          return callback(null, db);
        }
        var req;
        try {
          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        req.onupgradeneeded = function req_onupgradeneeded() {
          db = req.result;
          db.createObjectStore(IDBFS.DB_STORE_NAME);
        };
        req.onsuccess = function req_onsuccess() {
          db = req.result;
          // add to the cache
          IDBFS.dbs[name] = db;
          callback(null, db);
        };
        req.onerror = function req_onerror() {
          callback(this.error);
        };
      },getRemoteSet:function (mount, callback) {
        var files = {};
        IDBFS.getDB(mount.mountpoint, function(err, db) {
          if (err) return callback(err);
          var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');
          transaction.onerror = function transaction_onerror() { callback(this.error); };
          var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
          store.openCursor().onsuccess = function store_openCursor_onsuccess(event) {
            var cursor = event.target.result;
            if (!cursor) {
              return callback(null, { type: 'remote', db: db, files: files });
            }
            files[cursor.key] = cursor.value;
            cursor.continue();
          };
        });
      }};
  var NODEFS={isWindows:false,staticInit:function () {
        NODEFS.isWindows = !!process.platform.match(/^win/);
      },mount:function (mount) {
        assert(ENVIRONMENT_IS_NODE);
        return NODEFS.createNode(null, '/', NODEFS.getMode(mount.opts.root), 0);
      },createNode:function (parent, name, mode, dev) {
        if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node = FS.createNode(parent, name, mode);
        node.node_ops = NODEFS.node_ops;
        node.stream_ops = NODEFS.stream_ops;
        return node;
      },getMode:function (path) {
        var stat;
        try {
          stat = fs.lstatSync(path);
          if (NODEFS.isWindows) {
            // On Windows, directories return permission bits 'rw-rw-rw-', even though they have 'rwxrwxrwx', so 
            // propagate write bits to execute bits.
            stat.mode = stat.mode | ((stat.mode & 146) >> 1);
          }
        } catch (e) {
          if (!e.code) throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
        return stat.mode;
      },realPath:function (node) {
        var parts = [];
        while (node.parent !== node) {
          parts.push(node.name);
          node = node.parent;
        }
        parts.push(node.mount.opts.root);
        parts.reverse();
        return PATH.join.apply(null, parts);
      },flagsToPermissionStringMap:{0:"r",1:"r+",2:"r+",64:"r",65:"r+",66:"r+",129:"rx+",193:"rx+",514:"w+",577:"w",578:"w+",705:"wx",706:"wx+",1024:"a",1025:"a",1026:"a+",1089:"a",1090:"a+",1153:"ax",1154:"ax+",1217:"ax",1218:"ax+",4096:"rs",4098:"rs+"},flagsToPermissionString:function (flags) {
        if (flags in NODEFS.flagsToPermissionStringMap) {
          return NODEFS.flagsToPermissionStringMap[flags];
        } else {
          return flags;
        }
      },node_ops:{getattr:function (node) {
          var path = NODEFS.realPath(node);
          var stat;
          try {
            stat = fs.lstatSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          // node.js v0.10.20 doesn't report blksize and blocks on Windows. Fake them with default blksize of 4096.
          // See http://support.microsoft.com/kb/140365
          if (NODEFS.isWindows && !stat.blksize) {
            stat.blksize = 4096;
          }
          if (NODEFS.isWindows && !stat.blocks) {
            stat.blocks = (stat.size+stat.blksize-1)/stat.blksize|0;
          }
          return {
            dev: stat.dev,
            ino: stat.ino,
            mode: stat.mode,
            nlink: stat.nlink,
            uid: stat.uid,
            gid: stat.gid,
            rdev: stat.rdev,
            size: stat.size,
            atime: stat.atime,
            mtime: stat.mtime,
            ctime: stat.ctime,
            blksize: stat.blksize,
            blocks: stat.blocks
          };
        },setattr:function (node, attr) {
          var path = NODEFS.realPath(node);
          try {
            if (attr.mode !== undefined) {
              fs.chmodSync(path, attr.mode);
              // update the common node structure mode as well
              node.mode = attr.mode;
            }
            if (attr.timestamp !== undefined) {
              var date = new Date(attr.timestamp);
              fs.utimesSync(path, date, date);
            }
            if (attr.size !== undefined) {
              fs.truncateSync(path, attr.size);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },lookup:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          var mode = NODEFS.getMode(path);
          return NODEFS.createNode(parent, name, mode);
        },mknod:function (parent, name, mode, dev) {
          var node = NODEFS.createNode(parent, name, mode, dev);
          // create the backing node for this in the fs root as well
          var path = NODEFS.realPath(node);
          try {
            if (FS.isDir(node.mode)) {
              fs.mkdirSync(path, node.mode);
            } else {
              fs.writeFileSync(path, '', { mode: node.mode });
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return node;
        },rename:function (oldNode, newDir, newName) {
          var oldPath = NODEFS.realPath(oldNode);
          var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
          try {
            fs.renameSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },unlink:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.unlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },rmdir:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.rmdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readdir:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },symlink:function (parent, newName, oldPath) {
          var newPath = PATH.join2(NODEFS.realPath(parent), newName);
          try {
            fs.symlinkSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readlink:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        }},stream_ops:{open:function (stream) {
          var path = NODEFS.realPath(stream.node);
          try {
            if (FS.isFile(stream.node.mode)) {
              stream.nfd = fs.openSync(path, NODEFS.flagsToPermissionString(stream.flags));
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },close:function (stream) {
          try {
            if (FS.isFile(stream.node.mode) && stream.nfd) {
              fs.closeSync(stream.nfd);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },read:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(length);
          var res;
          try {
            res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          if (res > 0) {
            for (var i = 0; i < res; i++) {
              buffer[offset + i] = nbuffer[i];
            }
          }
          return res;
        },write:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(buffer.subarray(offset, offset + length));
          var res;
          try {
            res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return res;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              try {
                var stat = fs.fstatSync(stream.nfd);
                position += stat.size;
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES[e.code]);
              }
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          stream.position = position;
          return position;
        }}};
  var _stdin=allocate(1, "i32*", ALLOC_STATIC);
  var _stdout=allocate(1, "i32*", ALLOC_STATIC);
  var _stderr=allocate(1, "i32*", ALLOC_STATIC);
  function _fflush(stream) {
      // int fflush(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fflush.html
      // we don't currently perform any user-space buffering of data
    }var FS={root:null,mounts:[],devices:[null],streams:[null],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,ErrnoError:null,genericErrors:{},handleFSError:function (e) {
        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + stackTrace();
        return ___setErrNo(e.errno);
      },lookupPath:function (path, opts) {
        path = PATH.resolve(FS.cwd(), path);
        opts = opts || { recurse_count: 0 };
        if (opts.recurse_count > 8) {  // max recursive lookup of 8
          throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
        }
        // split the path
        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), false);
        // start at the root
        var current = FS.root;
        var current_path = '/';
        for (var i = 0; i < parts.length; i++) {
          var islast = (i === parts.length-1);
          if (islast && opts.parent) {
            // stop resolving
            break;
          }
          current = FS.lookupNode(current, parts[i]);
          current_path = PATH.join2(current_path, parts[i]);
          // jump to the mount's root node if this is a mountpoint
          if (FS.isMountpoint(current)) {
            current = current.mount.root;
          }
          // follow symlinks
          // by default, lookupPath will not follow a symlink if it is the final path component.
          // setting opts.follow = true will override this behavior.
          if (!islast || opts.follow) {
            var count = 0;
            while (FS.isLink(current.mode)) {
              var link = FS.readlink(current_path);
              current_path = PATH.resolve(PATH.dirname(current_path), link);
              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });
              current = lookup.node;
              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).
                throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
              }
            }
          }
        }
        return { path: current_path, node: current };
      },getPath:function (node) {
        var path;
        while (true) {
          if (FS.isRoot(node)) {
            var mount = node.mount.mountpoint;
            if (!path) return mount;
            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;
          }
          path = path ? node.name + '/' + path : node.name;
          node = node.parent;
        }
      },hashName:function (parentid, name) {
        var hash = 0;
        for (var i = 0; i < name.length; i++) {
          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;
        }
        return ((parentid + hash) >>> 0) % FS.nameTable.length;
      },hashAddNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        node.name_next = FS.nameTable[hash];
        FS.nameTable[hash] = node;
      },hashRemoveNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        if (FS.nameTable[hash] === node) {
          FS.nameTable[hash] = node.name_next;
        } else {
          var current = FS.nameTable[hash];
          while (current) {
            if (current.name_next === node) {
              current.name_next = node.name_next;
              break;
            }
            current = current.name_next;
          }
        }
      },lookupNode:function (parent, name) {
        var err = FS.mayLookup(parent);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        var hash = FS.hashName(parent.id, name);
        for (var node = FS.nameTable[hash]; node; node = node.name_next) {
          var nodeName = node.name;
          if (node.parent.id === parent.id && nodeName === name) {
            return node;
          }
        }
        // if we failed to find it in the cache, call into the VFS
        return FS.lookup(parent, name);
      },createNode:function (parent, name, mode, rdev) {
        if (!FS.FSNode) {
          FS.FSNode = function(parent, name, mode, rdev) {
            this.id = FS.nextInode++;
            this.name = name;
            this.mode = mode;
            this.node_ops = {};
            this.stream_ops = {};
            this.rdev = rdev;
            this.parent = null;
            this.mount = null;
            if (!parent) {
              parent = this;  // root node sets parent to itself
            }
            this.parent = parent;
            this.mount = parent.mount;
            FS.hashAddNode(this);
          };
          // compatibility
          var readMode = 292 | 73;
          var writeMode = 146;
          FS.FSNode.prototype = {};
          // NOTE we must use Object.defineProperties instead of individual calls to
          // Object.defineProperty in order to make closure compiler happy
          Object.defineProperties(FS.FSNode.prototype, {
            read: {
              get: function() { return (this.mode & readMode) === readMode; },
              set: function(val) { val ? this.mode |= readMode : this.mode &= ~readMode; }
            },
            write: {
              get: function() { return (this.mode & writeMode) === writeMode; },
              set: function(val) { val ? this.mode |= writeMode : this.mode &= ~writeMode; }
            },
            isFolder: {
              get: function() { return FS.isDir(this.mode); },
            },
            isDevice: {
              get: function() { return FS.isChrdev(this.mode); },
            },
          });
        }
        return new FS.FSNode(parent, name, mode, rdev);
      },destroyNode:function (node) {
        FS.hashRemoveNode(node);
      },isRoot:function (node) {
        return node === node.parent;
      },isMountpoint:function (node) {
        return node.mounted;
      },isFile:function (mode) {
        return (mode & 61440) === 32768;
      },isDir:function (mode) {
        return (mode & 61440) === 16384;
      },isLink:function (mode) {
        return (mode & 61440) === 40960;
      },isChrdev:function (mode) {
        return (mode & 61440) === 8192;
      },isBlkdev:function (mode) {
        return (mode & 61440) === 24576;
      },isFIFO:function (mode) {
        return (mode & 61440) === 4096;
      },isSocket:function (mode) {
        return (mode & 49152) === 49152;
      },flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function (str) {
        var flags = FS.flagModes[str];
        if (typeof flags === 'undefined') {
          throw new Error('Unknown file open mode: ' + str);
        }
        return flags;
      },flagsToPermissionString:function (flag) {
        var accmode = flag & 2097155;
        var perms = ['r', 'w', 'rw'][accmode];
        if ((flag & 512)) {
          perms += 'w';
        }
        return perms;
      },nodePermissions:function (node, perms) {
        if (FS.ignorePermissions) {
          return 0;
        }
        // return 0 if any user, group or owner bits are set.
        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {
          return ERRNO_CODES.EACCES;
        }
        return 0;
      },mayLookup:function (dir) {
        return FS.nodePermissions(dir, 'x');
      },mayCreate:function (dir, name) {
        try {
          var node = FS.lookupNode(dir, name);
          return ERRNO_CODES.EEXIST;
        } catch (e) {
        }
        return FS.nodePermissions(dir, 'wx');
      },mayDelete:function (dir, name, isdir) {
        var node;
        try {
          node = FS.lookupNode(dir, name);
        } catch (e) {
          return e.errno;
        }
        var err = FS.nodePermissions(dir, 'wx');
        if (err) {
          return err;
        }
        if (isdir) {
          if (!FS.isDir(node.mode)) {
            return ERRNO_CODES.ENOTDIR;
          }
          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
            return ERRNO_CODES.EBUSY;
          }
        } else {
          if (FS.isDir(node.mode)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return 0;
      },mayOpen:function (node, flags) {
        if (!node) {
          return ERRNO_CODES.ENOENT;
        }
        if (FS.isLink(node.mode)) {
          return ERRNO_CODES.ELOOP;
        } else if (FS.isDir(node.mode)) {
          if ((flags & 2097155) !== 0 ||  // opening for write
              (flags & 512)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
      },MAX_OPEN_FDS:4096,nextfd:function (fd_start, fd_end) {
        fd_start = fd_start || 1;
        fd_end = fd_end || FS.MAX_OPEN_FDS;
        for (var fd = fd_start; fd <= fd_end; fd++) {
          if (!FS.streams[fd]) {
            return fd;
          }
        }
        throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
      },getStream:function (fd) {
        return FS.streams[fd];
      },createStream:function (stream, fd_start, fd_end) {
        if (!FS.FSStream) {
          FS.FSStream = function(){};
          FS.FSStream.prototype = {};
          // compatibility
          Object.defineProperties(FS.FSStream.prototype, {
            object: {
              get: function() { return this.node; },
              set: function(val) { this.node = val; }
            },
            isRead: {
              get: function() { return (this.flags & 2097155) !== 1; }
            },
            isWrite: {
              get: function() { return (this.flags & 2097155) !== 0; }
            },
            isAppend: {
              get: function() { return (this.flags & 1024); }
            }
          });
        }
        if (stream.__proto__) {
          // reuse the object
          stream.__proto__ = FS.FSStream.prototype;
        } else {
          var newStream = new FS.FSStream();
          for (var p in stream) {
            newStream[p] = stream[p];
          }
          stream = newStream;
        }
        var fd = FS.nextfd(fd_start, fd_end);
        stream.fd = fd;
        FS.streams[fd] = stream;
        return stream;
      },closeStream:function (fd) {
        FS.streams[fd] = null;
      },chrdev_stream_ops:{open:function (stream) {
          var device = FS.getDevice(stream.node.rdev);
          // override node's stream ops with the device's
          stream.stream_ops = device.stream_ops;
          // forward the open call
          if (stream.stream_ops.open) {
            stream.stream_ops.open(stream);
          }
        },llseek:function () {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }},major:function (dev) {
        return ((dev) >> 8);
      },minor:function (dev) {
        return ((dev) & 0xff);
      },makedev:function (ma, mi) {
        return ((ma) << 8 | (mi));
      },registerDevice:function (dev, ops) {
        FS.devices[dev] = { stream_ops: ops };
      },getDevice:function (dev) {
        return FS.devices[dev];
      },syncfs:function (populate, callback) {
        if (typeof(populate) === 'function') {
          callback = populate;
          populate = false;
        }
        var completed = 0;
        var total = FS.mounts.length;
        function done(err) {
          if (err) {
            return callback(err);
          }
          if (++completed >= total) {
            callback(null);
          }
        };
        // sync all mounts
        for (var i = 0; i < FS.mounts.length; i++) {
          var mount = FS.mounts[i];
          if (!mount.type.syncfs) {
            done(null);
            continue;
          }
          mount.type.syncfs(mount, populate, done);
        }
      },mount:function (type, opts, mountpoint) {
        var lookup;
        if (mountpoint) {
          lookup = FS.lookupPath(mountpoint, { follow: false });
          mountpoint = lookup.path;  // use the absolute path
        }
        var mount = {
          type: type,
          opts: opts,
          mountpoint: mountpoint,
          root: null
        };
        // create a root node for the fs
        var root = type.mount(mount);
        root.mount = mount;
        mount.root = root;
        // assign the mount info to the mountpoint's node
        if (lookup) {
          lookup.node.mount = mount;
          lookup.node.mounted = true;
          // compatibility update FS.root if we mount to /
          if (mountpoint === '/') {
            FS.root = mount.root;
          }
        }
        // add to our cached list of mounts
        FS.mounts.push(mount);
        return root;
      },lookup:function (parent, name) {
        return parent.node_ops.lookup(parent, name);
      },mknod:function (path, mode, dev) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var err = FS.mayCreate(parent, name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.mknod) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.mknod(parent, name, mode, dev);
      },create:function (path, mode) {
        mode = mode !== undefined ? mode : 0666;
        mode &= 4095;
        mode |= 32768;
        return FS.mknod(path, mode, 0);
      },mkdir:function (path, mode) {
        mode = mode !== undefined ? mode : 0777;
        mode &= 511 | 512;
        mode |= 16384;
        return FS.mknod(path, mode, 0);
      },mkdev:function (path, mode, dev) {
        if (typeof(dev) === 'undefined') {
          dev = mode;
          mode = 0666;
        }
        mode |= 8192;
        return FS.mknod(path, mode, dev);
      },symlink:function (oldpath, newpath) {
        var lookup = FS.lookupPath(newpath, { parent: true });
        var parent = lookup.node;
        var newname = PATH.basename(newpath);
        var err = FS.mayCreate(parent, newname);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.symlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.symlink(parent, newname, oldpath);
      },rename:function (old_path, new_path) {
        var old_dirname = PATH.dirname(old_path);
        var new_dirname = PATH.dirname(new_path);
        var old_name = PATH.basename(old_path);
        var new_name = PATH.basename(new_path);
        // parents must exist
        var lookup, old_dir, new_dir;
        try {
          lookup = FS.lookupPath(old_path, { parent: true });
          old_dir = lookup.node;
          lookup = FS.lookupPath(new_path, { parent: true });
          new_dir = lookup.node;
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // need to be part of the same mount
        if (old_dir.mount !== new_dir.mount) {
          throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
        }
        // source must exist
        var old_node = FS.lookupNode(old_dir, old_name);
        // old path should not be an ancestor of the new path
        var relative = PATH.relative(old_path, new_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        // new path should not be an ancestor of the old path
        relative = PATH.relative(new_path, old_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
        }
        // see if the new path already exists
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {
          // not fatal
        }
        // early out if nothing needs to change
        if (old_node === new_node) {
          return;
        }
        // we'll need to delete the old entry
        var isdir = FS.isDir(old_node.mode);
        var err = FS.mayDelete(old_dir, old_name, isdir);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // need delete permissions if we'll be overwriting.
        // need create permissions if new doesn't already exist.
        err = new_node ?
          FS.mayDelete(new_dir, new_name, isdir) :
          FS.mayCreate(new_dir, new_name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!old_dir.node_ops.rename) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // if we are going to change the parent, check write permissions
        if (new_dir !== old_dir) {
          err = FS.nodePermissions(old_dir, 'w');
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        // remove the node from the lookup hash
        FS.hashRemoveNode(old_node);
        // do the underlying fs rename
        try {
          old_dir.node_ops.rename(old_node, new_dir, new_name);
        } catch (e) {
          throw e;
        } finally {
          // add the node back to the hash (in case node_ops.rename
          // changed its name)
          FS.hashAddNode(old_node);
        }
      },rmdir:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, true);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.rmdir) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        parent.node_ops.rmdir(parent, name);
        FS.destroyNode(node);
      },readdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        if (!node.node_ops.readdir) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        return node.node_ops.readdir(node);
      },unlink:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, false);
        if (err) {
          // POSIX says unlink should set EPERM, not EISDIR
          if (err === ERRNO_CODES.EISDIR) err = ERRNO_CODES.EPERM;
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.unlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        parent.node_ops.unlink(parent, name);
        FS.destroyNode(node);
      },readlink:function (path) {
        var lookup = FS.lookupPath(path, { follow: false });
        var link = lookup.node;
        if (!link.node_ops.readlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        return link.node_ops.readlink(link);
      },stat:function (path, dontFollow) {
        var lookup = FS.lookupPath(path, { follow: !dontFollow });
        var node = lookup.node;
        if (!node.node_ops.getattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return node.node_ops.getattr(node);
      },lstat:function (path) {
        return FS.stat(path, true);
      },chmod:function (path, mode, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          mode: (mode & 4095) | (node.mode & ~4095),
          timestamp: Date.now()
        });
      },lchmod:function (path, mode) {
        FS.chmod(path, mode, true);
      },fchmod:function (fd, mode) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chmod(stream.node, mode);
      },chown:function (path, uid, gid, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          timestamp: Date.now()
          // we ignore the uid / gid for now
        });
      },lchown:function (path, uid, gid) {
        FS.chown(path, uid, gid, true);
      },fchown:function (fd, uid, gid) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chown(stream.node, uid, gid);
      },truncate:function (path, len) {
        if (len < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: true });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!FS.isFile(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.nodePermissions(node, 'w');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        node.node_ops.setattr(node, {
          size: len,
          timestamp: Date.now()
        });
      },ftruncate:function (fd, len) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        FS.truncate(stream.node, len);
      },utime:function (path, atime, mtime) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        node.node_ops.setattr(node, {
          timestamp: Math.max(atime, mtime)
        });
      },open:function (path, flags, mode, fd_start, fd_end) {
        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;
        mode = typeof mode === 'undefined' ? 0666 : mode;
        if ((flags & 64)) {
          mode = (mode & 4095) | 32768;
        } else {
          mode = 0;
        }
        var node;
        if (typeof path === 'object') {
          node = path;
        } else {
          path = PATH.normalize(path);
          try {
            var lookup = FS.lookupPath(path, {
              follow: !(flags & 131072)
            });
            node = lookup.node;
          } catch (e) {
            // ignore
          }
        }
        // perhaps we need to create the node
        if ((flags & 64)) {
          if (node) {
            // if O_CREAT and O_EXCL are set, error out if the node already exists
            if ((flags & 128)) {
              throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
            }
          } else {
            // node doesn't exist, try to create it
            node = FS.mknod(path, mode, 0);
          }
        }
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        // can't truncate a device
        if (FS.isChrdev(node.mode)) {
          flags &= ~512;
        }
        // check permissions
        var err = FS.mayOpen(node, flags);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // do truncation if necessary
        if ((flags & 512)) {
          FS.truncate(node, 0);
        }
        // we've already handled these, don't pass down to the underlying vfs
        flags &= ~(128 | 512);
        // register the stream with the filesystem
        var stream = FS.createStream({
          node: node,
          path: FS.getPath(node),  // we want the absolute path to the node
          flags: flags,
          seekable: true,
          position: 0,
          stream_ops: node.stream_ops,
          // used by the file family libc calls (fopen, fwrite, ferror, etc.)
          ungotten: [],
          error: false
        }, fd_start, fd_end);
        // call the new stream's open function
        if (stream.stream_ops.open) {
          stream.stream_ops.open(stream);
        }
        if (Module['logReadFiles'] && !(flags & 1)) {
          if (!FS.readFiles) FS.readFiles = {};
          if (!(path in FS.readFiles)) {
            FS.readFiles[path] = 1;
            Module['printErr']('read file: ' + path);
          }
        }
        return stream;
      },close:function (stream) {
        try {
          if (stream.stream_ops.close) {
            stream.stream_ops.close(stream);
          }
        } catch (e) {
          throw e;
        } finally {
          FS.closeStream(stream.fd);
        }
      },llseek:function (stream, offset, whence) {
        if (!stream.seekable || !stream.stream_ops.llseek) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        return stream.stream_ops.llseek(stream, offset, whence);
      },read:function (stream, buffer, offset, length, position) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.read) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
        if (!seeking) stream.position += bytesRead;
        return bytesRead;
      },write:function (stream, buffer, offset, length, position, canOwn) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.write) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        if (stream.flags & 1024) {
          // seek to the end before writing in append mode
          FS.llseek(stream, 0, 2);
        }
        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
        if (!seeking) stream.position += bytesWritten;
        return bytesWritten;
      },allocate:function (stream, offset, length) {
        if (offset < 0 || length <= 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        if (!stream.stream_ops.allocate) {
          throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
        }
        stream.stream_ops.allocate(stream, offset, length);
      },mmap:function (stream, buffer, offset, length, position, prot, flags) {
        // TODO if PROT is PROT_WRITE, make sure we have write access
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EACCES);
        }
        if (!stream.stream_ops.mmap) {
          throw new FS.errnoError(ERRNO_CODES.ENODEV);
        }
        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
      },ioctl:function (stream, cmd, arg) {
        if (!stream.stream_ops.ioctl) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
        }
        return stream.stream_ops.ioctl(stream, cmd, arg);
      },readFile:function (path, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'r';
        opts.encoding = opts.encoding || 'binary';
        var ret;
        var stream = FS.open(path, opts.flags);
        var stat = FS.stat(path);
        var length = stat.size;
        var buf = new Uint8Array(length);
        FS.read(stream, buf, 0, length, 0);
        if (opts.encoding === 'utf8') {
          ret = '';
          var utf8 = new Runtime.UTF8Processor();
          for (var i = 0; i < length; i++) {
            ret += utf8.processCChar(buf[i]);
          }
        } else if (opts.encoding === 'binary') {
          ret = buf;
        } else {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        FS.close(stream);
        return ret;
      },writeFile:function (path, data, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'w';
        opts.encoding = opts.encoding || 'utf8';
        var stream = FS.open(path, opts.flags, opts.mode);
        if (opts.encoding === 'utf8') {
          var utf8 = new Runtime.UTF8Processor();
          var buf = new Uint8Array(utf8.processJSString(data));
          FS.write(stream, buf, 0, buf.length, 0);
        } else if (opts.encoding === 'binary') {
          FS.write(stream, data, 0, data.length, 0);
        } else {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        FS.close(stream);
      },cwd:function () {
        return FS.currentPath;
      },chdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        if (!FS.isDir(lookup.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        var err = FS.nodePermissions(lookup.node, 'x');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        FS.currentPath = lookup.path;
      },createDefaultDirectories:function () {
        FS.mkdir('/tmp');
      },createDefaultDevices:function () {
        // create /dev
        FS.mkdir('/dev');
        // setup /dev/null
        FS.registerDevice(FS.makedev(1, 3), {
          read: function() { return 0; },
          write: function() { return 0; }
        });
        FS.mkdev('/dev/null', FS.makedev(1, 3));
        // setup /dev/tty and /dev/tty1
        // stderr needs to print output using Module['printErr']
        // so we register a second tty just for it.
        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
        FS.mkdev('/dev/tty', FS.makedev(5, 0));
        FS.mkdev('/dev/tty1', FS.makedev(6, 0));
        // we're not going to emulate the actual shm device,
        // just create the tmp dirs that reside in it commonly
        FS.mkdir('/dev/shm');
        FS.mkdir('/dev/shm/tmp');
      },createStandardStreams:function () {
        // TODO deprecate the old functionality of a single
        // input / output callback and that utilizes FS.createDevice
        // and instead require a unique set of stream ops
        // by default, we symlink the standard streams to the
        // default tty devices. however, if the standard streams
        // have been overwritten we create a unique device for
        // them instead.
        if (Module['stdin']) {
          FS.createDevice('/dev', 'stdin', Module['stdin']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdin');
        }
        if (Module['stdout']) {
          FS.createDevice('/dev', 'stdout', null, Module['stdout']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdout');
        }
        if (Module['stderr']) {
          FS.createDevice('/dev', 'stderr', null, Module['stderr']);
        } else {
          FS.symlink('/dev/tty1', '/dev/stderr');
        }
        // open default streams for the stdin, stdout and stderr devices
        var stdin = FS.open('/dev/stdin', 'r');
        HEAP32[((_stdin)>>2)]=stdin.fd;
        assert(stdin.fd === 1, 'invalid handle for stdin (' + stdin.fd + ')');
        var stdout = FS.open('/dev/stdout', 'w');
        HEAP32[((_stdout)>>2)]=stdout.fd;
        assert(stdout.fd === 2, 'invalid handle for stdout (' + stdout.fd + ')');
        var stderr = FS.open('/dev/stderr', 'w');
        HEAP32[((_stderr)>>2)]=stderr.fd;
        assert(stderr.fd === 3, 'invalid handle for stderr (' + stderr.fd + ')');
      },ensureErrnoError:function () {
        if (FS.ErrnoError) return;
        FS.ErrnoError = function ErrnoError(errno) {
          this.errno = errno;
          for (var key in ERRNO_CODES) {
            if (ERRNO_CODES[key] === errno) {
              this.code = key;
              break;
            }
          }
          this.message = ERRNO_MESSAGES[errno];
          this.stack = stackTrace();
        };
        FS.ErrnoError.prototype = new Error();
        FS.ErrnoError.prototype.constructor = FS.ErrnoError;
        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)
        [ERRNO_CODES.ENOENT].forEach(function(code) {
          FS.genericErrors[code] = new FS.ErrnoError(code);
          FS.genericErrors[code].stack = '<generic error, no stack>';
        });
      },staticInit:function () {
        FS.ensureErrnoError();
        FS.nameTable = new Array(4096);
        FS.root = FS.createNode(null, '/', 16384 | 0777, 0);
        FS.mount(MEMFS, {}, '/');
        FS.createDefaultDirectories();
        FS.createDefaultDevices();
      },init:function (input, output, error) {
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
        FS.ensureErrnoError();
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        Module['stdin'] = input || Module['stdin'];
        Module['stdout'] = output || Module['stdout'];
        Module['stderr'] = error || Module['stderr'];
        FS.createStandardStreams();
      },quit:function () {
        FS.init.initialized = false;
        for (var i = 0; i < FS.streams.length; i++) {
          var stream = FS.streams[i];
          if (!stream) {
            continue;
          }
          FS.close(stream);
        }
      },getMode:function (canRead, canWrite) {
        var mode = 0;
        if (canRead) mode |= 292 | 73;
        if (canWrite) mode |= 146;
        return mode;
      },joinPath:function (parts, forceRelative) {
        var path = PATH.join.apply(null, parts);
        if (forceRelative && path[0] == '/') path = path.substr(1);
        return path;
      },absolutePath:function (relative, base) {
        return PATH.resolve(base, relative);
      },standardizePath:function (path) {
        return PATH.normalize(path);
      },findObject:function (path, dontResolveLastLink) {
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },analyzePath:function (path, dontResolveLastLink) {
        // operate from within the context of the symlink's target
        try {
          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          path = lookup.path;
        } catch (e) {
        }
        var ret = {
          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,
          parentExists: false, parentPath: null, parentObject: null
        };
        try {
          var lookup = FS.lookupPath(path, { parent: true });
          ret.parentExists = true;
          ret.parentPath = lookup.path;
          ret.parentObject = lookup.node;
          ret.name = PATH.basename(path);
          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          ret.exists = true;
          ret.path = lookup.path;
          ret.object = lookup.node;
          ret.name = lookup.node.name;
          ret.isRoot = lookup.path === '/';
        } catch (e) {
          ret.error = e.errno;
        };
        return ret;
      },createFolder:function (parent, name, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.mkdir(path, mode);
      },createPath:function (parent, path, canRead, canWrite) {
        parent = typeof parent === 'string' ? parent : FS.getPath(parent);
        var parts = path.split('/').reverse();
        while (parts.length) {
          var part = parts.pop();
          if (!part) continue;
          var current = PATH.join2(parent, part);
          try {
            FS.mkdir(current);
          } catch (e) {
            // ignore EEXIST
          }
          parent = current;
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.create(path, mode);
      },createDataFile:function (parent, name, data, canRead, canWrite, canOwn) {
        var path = name ? PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;
        var mode = FS.getMode(canRead, canWrite);
        var node = FS.create(path, mode);
        if (data) {
          if (typeof data === 'string') {
            var arr = new Array(data.length);
            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
            data = arr;
          }
          // make sure we can write to the file
          FS.chmod(node, mode | 146);
          var stream = FS.open(node, 'w');
          FS.write(stream, data, 0, data.length, 0, canOwn);
          FS.close(stream);
          FS.chmod(node, mode);
        }
        return node;
      },createDevice:function (parent, name, input, output) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(!!input, !!output);
        if (!FS.createDevice.major) FS.createDevice.major = 64;
        var dev = FS.makedev(FS.createDevice.major++, 0);
        // Create a fake device that a set of stream ops to emulate
        // the old behavior.
        FS.registerDevice(dev, {
          open: function(stream) {
            stream.seekable = false;
          },
          close: function(stream) {
            // flush any pending line data
            if (output && output.buffer && output.buffer.length) {
              output(10);
            }
          },
          read: function(stream, buffer, offset, length, pos /* ignored */) {
            var bytesRead = 0;
            for (var i = 0; i < length; i++) {
              var result;
              try {
                result = input();
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
              if (result === undefined && bytesRead === 0) {
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              buffer[offset+i] = result;
            }
            if (bytesRead) {
              stream.node.timestamp = Date.now();
            }
            return bytesRead;
          },
          write: function(stream, buffer, offset, length, pos) {
            for (var i = 0; i < length; i++) {
              try {
                output(buffer[offset+i]);
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
            }
            if (length) {
              stream.node.timestamp = Date.now();
            }
            return i;
          }
        });
        return FS.mkdev(path, mode, dev);
      },createLink:function (parent, name, target, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        return FS.symlink(target, path);
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
          function LazyUint8Array() {
            this.lengthKnown = false;
            this.chunks = []; // Loaded chunks. Index is the chunk number
          }
          LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
            if (idx > this.length-1 || idx < 0) {
              return undefined;
            }
            var chunkOffset = idx % this.chunkSize;
            var chunkNum = Math.floor(idx / this.chunkSize);
            return this.getter(chunkNum)[chunkOffset];
          }
          LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
            this.getter = getter;
          }
          LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
              // Find length
              var xhr = new XMLHttpRequest();
              xhr.open('HEAD', url, false);
              xhr.send(null);
              if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
              var datalength = Number(xhr.getResponseHeader("Content-length"));
              var header;
              var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
              var chunkSize = 1024*1024; // Chunk size in bytes
              if (!hasByteServing) chunkSize = datalength;
              // Function to get a range from the remote URL.
              var doXHR = (function(from, to) {
                if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
                if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
                // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
                var xhr = new XMLHttpRequest();
                xhr.open('GET', url, false);
                if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
                // Some hints to the browser that we want binary data.
                if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
                if (xhr.overrideMimeType) {
                  xhr.overrideMimeType('text/plain; charset=x-user-defined');
                }
                xhr.send(null);
                if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
                if (xhr.response !== undefined) {
                  return new Uint8Array(xhr.response || []);
                } else {
                  return intArrayFromString(xhr.responseText || '', true);
                }
              });
              var lazyArray = this;
              lazyArray.setDataGetter(function(chunkNum) {
                var start = chunkNum * chunkSize;
                var end = (chunkNum+1) * chunkSize - 1; // including this byte
                end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
                if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
                  lazyArray.chunks[chunkNum] = doXHR(start, end);
                }
                if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
                return lazyArray.chunks[chunkNum];
              });
              this._length = datalength;
              this._chunkSize = chunkSize;
              this.lengthKnown = true;
          }
          var lazyArray = new LazyUint8Array();
          Object.defineProperty(lazyArray, "length", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._length;
              }
          });
          Object.defineProperty(lazyArray, "chunkSize", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._chunkSize;
              }
          });
          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }
        var node = FS.createFile(parent, name, properties, canRead, canWrite);
        // This is a total hack, but I want to get this lazy file code out of the
        // core of MEMFS. If we want to keep this lazy file concept I feel it should
        // be its own thin LAZYFS proxying calls to MEMFS.
        if (properties.contents) {
          node.contents = properties.contents;
        } else if (properties.url) {
          node.contents = null;
          node.url = properties.url;
        }
        // override each stream op with one that tries to force load the lazy file first
        var stream_ops = {};
        var keys = Object.keys(node.stream_ops);
        keys.forEach(function(key) {
          var fn = node.stream_ops[key];
          stream_ops[key] = function forceLoadLazyFile() {
            if (!FS.forceLoadFile(node)) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            return fn.apply(null, arguments);
          };
        });
        // use a custom read function
        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
          if (!FS.forceLoadFile(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (contents.slice) { // normal array
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          } else {
            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
              buffer[offset + i] = contents.get(position + i);
            }
          }
          return size;
        };
        node.stream_ops = stream_ops;
        return node;
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn) {
        Browser.init();
        // TODO we should allow people to just pass in a complete filename instead
        // of parent and name being that we just join them anyways
        var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
        function processData(byteArray) {
          function finish(byteArray) {
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
            }
            if (onload) onload();
            removeRunDependency('cp ' + fullname);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency('cp ' + fullname);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency('cp ' + fullname);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_NAME:function () {
        return 'EM_FS_' + window.location.pathname;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
          console.log('creating db');
          var db = openRequest.result;
          db.createObjectStore(FS.DB_STORE_NAME);
        };
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var putRequest = files.put(FS.analyzePath(path).object.contents, path);
            putRequest.onsuccess = function putRequest_onsuccess() { ok++; if (ok + fail == total) finish() };
            putRequest.onerror = function putRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      },loadFilesFromDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = onerror; // no database to load from
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          try {
            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');
          } catch(e) {
            onerror(e);
            return;
          }
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var getRequest = files.get(path);
            getRequest.onsuccess = function getRequest_onsuccess() {
              if (FS.analyzePath(path).exists) {
                FS.unlink(path);
              }
              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
              ok++;
              if (ok + fail == total) finish();
            };
            getRequest.onerror = function getRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      }};var PATH={splitPath:function (filename) {
        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        return splitPathRe.exec(filename).slice(1);
      },normalizeArray:function (parts, allowAboveRoot) {
        // if the path tries to go above the root, `up` ends up > 0
        var up = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
          var last = parts[i];
          if (last === '.') {
            parts.splice(i, 1);
          } else if (last === '..') {
            parts.splice(i, 1);
            up++;
          } else if (up) {
            parts.splice(i, 1);
            up--;
          }
        }
        // if the path is allowed to go above the root, restore leading ..s
        if (allowAboveRoot) {
          for (; up--; up) {
            parts.unshift('..');
          }
        }
        return parts;
      },normalize:function (path) {
        var isAbsolute = path.charAt(0) === '/',
            trailingSlash = path.substr(-1) === '/';
        // Normalize the path
        path = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), !isAbsolute).join('/');
        if (!path && !isAbsolute) {
          path = '.';
        }
        if (path && trailingSlash) {
          path += '/';
        }
        return (isAbsolute ? '/' : '') + path;
      },dirname:function (path) {
        var result = PATH.splitPath(path),
            root = result[0],
            dir = result[1];
        if (!root && !dir) {
          // No dirname whatsoever
          return '.';
        }
        if (dir) {
          // It has a dirname, strip trailing slash
          dir = dir.substr(0, dir.length - 1);
        }
        return root + dir;
      },basename:function (path) {
        // EMSCRIPTEN return '/'' for '/', not an empty string
        if (path === '/') return '/';
        var lastSlash = path.lastIndexOf('/');
        if (lastSlash === -1) return path;
        return path.substr(lastSlash+1);
      },extname:function (path) {
        return PATH.splitPath(path)[3];
      },join:function () {
        var paths = Array.prototype.slice.call(arguments, 0);
        return PATH.normalize(paths.join('/'));
      },join2:function (l, r) {
        return PATH.normalize(l + '/' + r);
      },resolve:function () {
        var resolvedPath = '',
          resolvedAbsolute = false;
        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path = (i >= 0) ? arguments[i] : FS.cwd();
          // Skip empty and invalid entries
          if (typeof path !== 'string') {
            throw new TypeError('Arguments to path.resolve must be strings');
          } else if (!path) {
            continue;
          }
          resolvedPath = path + '/' + resolvedPath;
          resolvedAbsolute = path.charAt(0) === '/';
        }
        // At this point the path should be resolved to a full absolute path, but
        // handle relative paths to be safe (might happen when process.cwd() fails)
        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {
          return !!p;
        }), !resolvedAbsolute).join('/');
        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
      },relative:function (from, to) {
        from = PATH.resolve(from).substr(1);
        to = PATH.resolve(to).substr(1);
        function trim(arr) {
          var start = 0;
          for (; start < arr.length; start++) {
            if (arr[start] !== '') break;
          }
          var end = arr.length - 1;
          for (; end >= 0; end--) {
            if (arr[end] !== '') break;
          }
          if (start > end) return [];
          return arr.slice(start, end - start + 1);
        }
        var fromParts = trim(from.split('/'));
        var toParts = trim(to.split('/'));
        var length = Math.min(fromParts.length, toParts.length);
        var samePartsLength = length;
        for (var i = 0; i < length; i++) {
          if (fromParts[i] !== toParts[i]) {
            samePartsLength = i;
            break;
          }
        }
        var outputParts = [];
        for (var i = samePartsLength; i < fromParts.length; i++) {
          outputParts.push('..');
        }
        outputParts = outputParts.concat(toParts.slice(samePartsLength));
        return outputParts.join('/');
      }};var Browser={mainLoop:{scheduler:null,shouldPause:false,paused:false,queue:[],pause:function () {
          Browser.mainLoop.shouldPause = true;
        },resume:function () {
          if (Browser.mainLoop.paused) {
            Browser.mainLoop.paused = false;
            Browser.mainLoop.scheduler();
          }
          Browser.mainLoop.shouldPause = false;
        },updateStatus:function () {
          if (Module['setStatus']) {
            var message = Module['statusMessage'] || 'Please wait...';
            var remaining = Browser.mainLoop.remainingBlockers;
            var expected = Browser.mainLoop.expectedBlockers;
            if (remaining) {
              if (remaining < expected) {
                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');
              } else {
                Module['setStatus'](message);
              }
            } else {
              Module['setStatus']('');
            }
          }
        }},isFullScreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function () {
        if (!Module["preloadPlugins"]) Module["preloadPlugins"] = []; // needs to exist even in workers
        if (Browser.initted || ENVIRONMENT_IS_WORKER) return;
        Browser.initted = true;
        try {
          new Blob();
          Browser.hasBlobConstructor = true;
        } catch(e) {
          Browser.hasBlobConstructor = false;
          console.log("warning: no blob constructor, cannot create blobs with mimetypes");
        }
        Browser.BlobBuilder = typeof MozBlobBuilder != "undefined" ? MozBlobBuilder : (typeof WebKitBlobBuilder != "undefined" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? console.log("warning: no BlobBuilder") : null));
        Browser.URLObject = typeof window != "undefined" ? (window.URL ? window.URL : window.webkitURL) : undefined;
        if (!Module.noImageDecoding && typeof Browser.URLObject === 'undefined') {
          console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");
          Module.noImageDecoding = true;
        }
        // Support for plugins that can process preloaded files. You can add more of these to
        // your app by creating and appending to Module.preloadPlugins.
        //
        // Each plugin is asked if it can handle a file based on the file's name. If it can,
        // it is given the file's raw data. When it is done, it calls a callback with the file's
        // (possibly modified) data. For example, a plugin might decompress a file, or it
        // might create some side data structure for use later (like an Image element, etc.).
        var imagePlugin = {};
        imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {
          return !Module.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/i.test(name);
        };
        imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {
          var b = null;
          if (Browser.hasBlobConstructor) {
            try {
              b = new Blob([byteArray], { type: Browser.getMimetype(name) });
              if (b.size !== byteArray.length) { // Safari bug #118630
                // Safari's Blob can only take an ArrayBuffer
                b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });
              }
            } catch(e) {
              Runtime.warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');
            }
          }
          if (!b) {
            var bb = new Browser.BlobBuilder();
            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range
            b = bb.getBlob();
          }
          var url = Browser.URLObject.createObjectURL(b);
          var img = new Image();
          img.onload = function img_onload() {
            assert(img.complete, 'Image ' + name + ' could not be decoded');
            var canvas = document.createElement('canvas');
            canvas.width = img.width;
            canvas.height = img.height;
            var ctx = canvas.getContext('2d');
            ctx.drawImage(img, 0, 0);
            Module["preloadedImages"][name] = canvas;
            Browser.URLObject.revokeObjectURL(url);
            if (onload) onload(byteArray);
          };
          img.onerror = function img_onerror(event) {
            console.log('Image ' + url + ' could not be decoded');
            if (onerror) onerror();
          };
          img.src = url;
        };
        Module['preloadPlugins'].push(imagePlugin);
        var audioPlugin = {};
        audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {
          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };
        };
        audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {
          var done = false;
          function finish(audio) {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = audio;
            if (onload) onload(byteArray);
          }
          function fail() {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = new Audio(); // empty shim
            if (onerror) onerror();
          }
          if (Browser.hasBlobConstructor) {
            try {
              var b = new Blob([byteArray], { type: Browser.getMimetype(name) });
            } catch(e) {
              return fail();
            }
            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!
            var audio = new Audio();
            audio.addEventListener('canplaythrough', function() { finish(audio) }, false); // use addEventListener due to chromium bug 124926
            audio.onerror = function audio_onerror(event) {
              if (done) return;
              console.log('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');
              function encode64(data) {
                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
                var PAD = '=';
                var ret = '';
                var leftchar = 0;
                var leftbits = 0;
                for (var i = 0; i < data.length; i++) {
                  leftchar = (leftchar << 8) | data[i];
                  leftbits += 8;
                  while (leftbits >= 6) {
                    var curr = (leftchar >> (leftbits-6)) & 0x3f;
                    leftbits -= 6;
                    ret += BASE[curr];
                  }
                }
                if (leftbits == 2) {
                  ret += BASE[(leftchar&3) << 4];
                  ret += PAD + PAD;
                } else if (leftbits == 4) {
                  ret += BASE[(leftchar&0xf) << 2];
                  ret += PAD;
                }
                return ret;
              }
              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);
              finish(audio); // we don't wait for confirmation this worked - but it's worth trying
            };
            audio.src = url;
            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror
            Browser.safeSetTimeout(function() {
              finish(audio); // try to use it even though it is not necessarily ready to play
            }, 10000);
          } else {
            return fail();
          }
        };
        Module['preloadPlugins'].push(audioPlugin);
        // Canvas event setup
        var canvas = Module['canvas'];
        canvas.requestPointerLock = canvas['requestPointerLock'] ||
                                    canvas['mozRequestPointerLock'] ||
                                    canvas['webkitRequestPointerLock'];
        canvas.exitPointerLock = document['exitPointerLock'] ||
                                 document['mozExitPointerLock'] ||
                                 document['webkitExitPointerLock'] ||
                                 function(){}; // no-op if function does not exist
        canvas.exitPointerLock = canvas.exitPointerLock.bind(document);
        function pointerLockChange() {
          Browser.pointerLock = document['pointerLockElement'] === canvas ||
                                document['mozPointerLockElement'] === canvas ||
                                document['webkitPointerLockElement'] === canvas;
        }
        document.addEventListener('pointerlockchange', pointerLockChange, false);
        document.addEventListener('mozpointerlockchange', pointerLockChange, false);
        document.addEventListener('webkitpointerlockchange', pointerLockChange, false);
        if (Module['elementPointerLock']) {
          canvas.addEventListener("click", function(ev) {
            if (!Browser.pointerLock && canvas.requestPointerLock) {
              canvas.requestPointerLock();
              ev.preventDefault();
            }
          }, false);
        }
      },createContext:function (canvas, useWebGL, setInModule, webGLContextAttributes) {
        var ctx;
        try {
          if (useWebGL) {
            var contextAttributes = {
              antialias: false,
              alpha: false
            };
            if (webGLContextAttributes) {
              for (var attribute in webGLContextAttributes) {
                contextAttributes[attribute] = webGLContextAttributes[attribute];
              }
            }
            ['experimental-webgl', 'webgl'].some(function(webglId) {
              return ctx = canvas.getContext(webglId, contextAttributes);
            });
          } else {
            ctx = canvas.getContext('2d');
          }
          if (!ctx) throw ':(';
        } catch (e) {
          Module.print('Could not create canvas - ' + e);
          return null;
        }
        if (useWebGL) {
          // Set the background of the WebGL canvas to black
          canvas.style.backgroundColor = "black";
          // Warn on context loss
          canvas.addEventListener('webglcontextlost', function(event) {
            alert('WebGL context lost. You will need to reload the page.');
          }, false);
        }
        if (setInModule) {
          Module.ctx = ctx;
          Module.useWebGL = useWebGL;
          Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });
          Browser.init();
        }
        return ctx;
      },destroyContext:function (canvas, useWebGL, setInModule) {},fullScreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullScreen:function (lockPointer, resizeCanvas) {
        Browser.lockPointer = lockPointer;
        Browser.resizeCanvas = resizeCanvas;
        if (typeof Browser.lockPointer === 'undefined') Browser.lockPointer = true;
        if (typeof Browser.resizeCanvas === 'undefined') Browser.resizeCanvas = false;
        var canvas = Module['canvas'];
        function fullScreenChange() {
          Browser.isFullScreen = false;
          if ((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
               document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
               document['fullScreenElement'] || document['fullscreenElement']) === canvas) {
            canvas.cancelFullScreen = document['cancelFullScreen'] ||
                                      document['mozCancelFullScreen'] ||
                                      document['webkitCancelFullScreen'];
            canvas.cancelFullScreen = canvas.cancelFullScreen.bind(document);
            if (Browser.lockPointer) canvas.requestPointerLock();
            Browser.isFullScreen = true;
            if (Browser.resizeCanvas) Browser.setFullScreenCanvasSize();
          } else if (Browser.resizeCanvas){
            Browser.setWindowedCanvasSize();
          }
          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullScreen);
        }
        if (!Browser.fullScreenHandlersInstalled) {
          Browser.fullScreenHandlersInstalled = true;
          document.addEventListener('fullscreenchange', fullScreenChange, false);
          document.addEventListener('mozfullscreenchange', fullScreenChange, false);
          document.addEventListener('webkitfullscreenchange', fullScreenChange, false);
        }
        canvas.requestFullScreen = canvas['requestFullScreen'] ||
                                   canvas['mozRequestFullScreen'] ||
                                   (canvas['webkitRequestFullScreen'] ? function() { canvas['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) } : null);
        canvas.requestFullScreen();
      },requestAnimationFrame:function requestAnimationFrame(func) {
        if (typeof window === 'undefined') { // Provide fallback to setTimeout if window is undefined (e.g. in Node.js)
          setTimeout(func, 1000/60);
        } else {
          if (!window.requestAnimationFrame) {
            window.requestAnimationFrame = window['requestAnimationFrame'] ||
                                           window['mozRequestAnimationFrame'] ||
                                           window['webkitRequestAnimationFrame'] ||
                                           window['msRequestAnimationFrame'] ||
                                           window['oRequestAnimationFrame'] ||
                                           window['setTimeout'];
          }
          window.requestAnimationFrame(func);
        }
      },safeCallback:function (func) {
        return function() {
          if (!ABORT) return func.apply(null, arguments);
        };
      },safeRequestAnimationFrame:function (func) {
        return Browser.requestAnimationFrame(function() {
          if (!ABORT) func();
        });
      },safeSetTimeout:function (func, timeout) {
        return setTimeout(function() {
          if (!ABORT) func();
        }, timeout);
      },safeSetInterval:function (func, timeout) {
        return setInterval(function() {
          if (!ABORT) func();
        }, timeout);
      },getMimetype:function (name) {
        return {
          'jpg': 'image/jpeg',
          'jpeg': 'image/jpeg',
          'png': 'image/png',
          'bmp': 'image/bmp',
          'ogg': 'audio/ogg',
          'wav': 'audio/wav',
          'mp3': 'audio/mpeg'
        }[name.substr(name.lastIndexOf('.')+1)];
      },getUserMedia:function (func) {
        if(!window.getUserMedia) {
          window.getUserMedia = navigator['getUserMedia'] ||
                                navigator['mozGetUserMedia'];
        }
        window.getUserMedia(func);
      },getMovementX:function (event) {
        return event['movementX'] ||
               event['mozMovementX'] ||
               event['webkitMovementX'] ||
               0;
      },getMovementY:function (event) {
        return event['movementY'] ||
               event['mozMovementY'] ||
               event['webkitMovementY'] ||
               0;
      },mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,calculateMouseEvent:function (event) { // event should be mousemove, mousedown or mouseup
        if (Browser.pointerLock) {
          // When the pointer is locked, calculate the coordinates
          // based on the movement of the mouse.
          // Workaround for Firefox bug 764498
          if (event.type != 'mousemove' &&
              ('mozMovementX' in event)) {
            Browser.mouseMovementX = Browser.mouseMovementY = 0;
          } else {
            Browser.mouseMovementX = Browser.getMovementX(event);
            Browser.mouseMovementY = Browser.getMovementY(event);
          }
          // check if SDL is available
          if (typeof SDL != "undefined") {
          	Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;
          	Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;
          } else {
          	// just add the mouse delta to the current absolut mouse position
          	// FIXME: ideally this should be clamped against the canvas size and zero
          	Browser.mouseX += Browser.mouseMovementX;
          	Browser.mouseY += Browser.mouseMovementY;
          }        
        } else {
          // Otherwise, calculate the movement based on the changes
          // in the coordinates.
          var rect = Module["canvas"].getBoundingClientRect();
          var x, y;
          if (event.type == 'touchstart' ||
              event.type == 'touchend' ||
              event.type == 'touchmove') {
            var t = event.touches.item(0);
            if (t) {
              x = t.pageX - (window.scrollX + rect.left);
              y = t.pageY - (window.scrollY + rect.top);
            } else {
              return;
            }
          } else {
            x = event.pageX - (window.scrollX + rect.left);
            y = event.pageY - (window.scrollY + rect.top);
          }
          // the canvas might be CSS-scaled compared to its backbuffer;
          // SDL-using content will want mouse coordinates in terms
          // of backbuffer units.
          var cw = Module["canvas"].width;
          var ch = Module["canvas"].height;
          x = x * (cw / rect.width);
          y = y * (ch / rect.height);
          Browser.mouseMovementX = x - Browser.mouseX;
          Browser.mouseMovementY = y - Browser.mouseY;
          Browser.mouseX = x;
          Browser.mouseY = y;
        }
      },xhrLoad:function (url, onload, onerror) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.responseType = 'arraybuffer';
        xhr.onload = function xhr_onload() {
          if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
            onload(xhr.response);
          } else {
            onerror();
          }
        };
        xhr.onerror = onerror;
        xhr.send(null);
      },asyncLoad:function (url, onload, onerror, noRunDep) {
        Browser.xhrLoad(url, function(arrayBuffer) {
          assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
          onload(new Uint8Array(arrayBuffer));
          if (!noRunDep) removeRunDependency('al ' + url);
        }, function(event) {
          if (onerror) {
            onerror();
          } else {
            throw 'Loading data file "' + url + '" failed.';
          }
        });
        if (!noRunDep) addRunDependency('al ' + url);
      },resizeListeners:[],updateResizeListeners:function () {
        var canvas = Module['canvas'];
        Browser.resizeListeners.forEach(function(listener) {
          listener(canvas.width, canvas.height);
        });
      },setCanvasSize:function (width, height, noUpdates) {
        var canvas = Module['canvas'];
        canvas.width = width;
        canvas.height = height;
        if (!noUpdates) Browser.updateResizeListeners();
      },windowedWidth:0,windowedHeight:0,setFullScreenCanvasSize:function () {
        var canvas = Module['canvas'];
        this.windowedWidth = canvas.width;
        this.windowedHeight = canvas.height;
        canvas.width = screen.width;
        canvas.height = screen.height;
        // check if SDL is available   
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags | 0x00800000; // set SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },setWindowedCanvasSize:function () {
        var canvas = Module['canvas'];
        canvas.width = this.windowedWidth;
        canvas.height = this.windowedHeight;
        // check if SDL is available       
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      }};function _glfwOpenWindow(width, height, redbits, greenbits, bluebits, alphabits, depthbits, stencilbits, mode) {
      if (width == 0 && height > 0) {
        width = 4 * height / 3;
      }
      if (width > 0 && height == 0) {
        height = 3 * width / 4;
      }
      GLFW.params[0x00020005] = redbits; //GLFW_RED_BITS
      GLFW.params[0x00020006] = greenbits; //GLFW_GREEN_BITS
      GLFW.params[0x00020007] = bluebits; //GLFW_BLUE_BITS
      GLFW.params[0x00020008] = alphabits; //GLFW_ALPHA_BITS
      GLFW.params[0x00020009] = depthbits; //GLFW_DEPTH_BITS
      GLFW.params[0x0002000A] = stencilbits; //GLFW_STENCIL_BITS
      if (mode == 0x00010001) {//GLFW_WINDOW
        Browser.setCanvasSize(GLFW.initWindowWidth = width,
                              GLFW.initWindowHeight = height);
        GLFW.params[0x00030003] = true; //GLFW_STICKY_MOUSE_BUTTONS
      }
      else if (mode == 0x00010002) {//GLFW_FULLSCREEN
        GLFW.requestFullScreen();
        GLFW.params[0x00030003] = false; //GLFW_STICKY_MOUSE_BUTTONS
      }
      else{
        throw "Invalid glfwOpenWindow mode.";
      }
      var contextAttributes = {
        antialias: (GLFW.params[0x00020013] > 1), //GLFW_FSAA_SAMPLES
        depth: (GLFW.params[0x00020009] > 0), //GLFW_DEPTH_BITS
        stencil: (GLFW.params[0x0002000A] > 0) //GLFW_STENCIL_BITS
      }
      Module.ctx = Browser.createContext(Module['canvas'], true, true, contextAttributes);
      return 1; //GL_TRUE
    }
  function _glfwGetWindowSize(width, height) {
      setValue(width, Module['canvas'].width, 'i32');
      setValue(height, Module['canvas'].height, 'i32');
    }
  function _glfwSwapBuffers() {}
  function _glfwSetKeyCallback(cbfun) {
      GLFW.keyFunc = cbfun;
    }
  function _glfwSetMousePosCallback(cbfun) {
      GLFW.mousePosFunc = cbfun;
    }
  function _glfwSetMouseButtonCallback(cbfun) {
      GLFW.mouseButtonFunc = cbfun;
    }
  function _glfwGetMousePos(xpos, ypos) {
      setValue(xpos, Browser.mouseX, 'i32');
      setValue(ypos, Browser.mouseY, 'i32');
    }
  function _sincos(x, sine, cosine) {
      var sineVal = Math.sin(x),
          cosineVal = Math.cos(x);
      HEAPF64[((sine)>>3)]=sineVal;
      HEAPF64[((cosine)>>3)]=cosineVal;
    }
  function _glCreateShader(shaderType) {
      var id = GL.getNewId(GL.shaders);
      GL.shaders[id] = Module.ctx.createShader(shaderType);
      return id;
    }
  function _glShaderSource(shader, count, string, length) {
      var source = GL.getSource(shader, count, string, length);
      Module.ctx.shaderSource(GL.shaders[shader], source);
    }
  function _glCompileShader(shader) {
      Module.ctx.compileShader(GL.shaders[shader]);
    }
  function _glGetShaderiv(shader, pname, p) {
      if (pname == 0x8B84) { // GL_INFO_LOG_LENGTH
        HEAP32[((p)>>2)]=Module.ctx.getShaderInfoLog(GL.shaders[shader]).length + 1;
      } else {
        HEAP32[((p)>>2)]=Module.ctx.getShaderParameter(GL.shaders[shader], pname);
      }
    }
  function _glDeleteShader(shader) {
      Module.ctx.deleteShader(GL.shaders[shader]);
      GL.shaders[shader] = null;
    }
  function _glGenBuffers(n, buffers) {
      for (var i = 0; i < n; i++) {
        var id = GL.getNewId(GL.buffers);
        var buffer = Module.ctx.createBuffer();
        buffer.name = id;
        GL.buffers[id] = buffer;
        HEAP32[(((buffers)+(i*4))>>2)]=id;
      }
    }
  function _glBindBuffer(target, buffer) {
      var bufferObj = buffer ? GL.buffers[buffer] : null;
      if (target == Module.ctx.ARRAY_BUFFER) {
        GL.currArrayBuffer = buffer;
      } else if (target == Module.ctx.ELEMENT_ARRAY_BUFFER) {
        GL.currElementArrayBuffer = buffer;
      }
      Module.ctx.bindBuffer(target, bufferObj);
    }
  function _glBufferData(target, size, data, usage) {
      switch (usage) { // fix usages, WebGL only has *_DRAW
        case 0x88E1: // GL_STREAM_READ
        case 0x88E2: // GL_STREAM_COPY
          usage = 0x88E0; // GL_STREAM_DRAW
          break;
        case 0x88E5: // GL_STATIC_READ
        case 0x88E6: // GL_STATIC_COPY
          usage = 0x88E4; // GL_STATIC_DRAW
          break;
        case 0x88E9: // GL_DYNAMIC_READ
        case 0x88EA: // GL_DYNAMIC_COPY
          usage = 0x88E8; // GL_DYNAMIC_DRAW
          break;
      }
      Module.ctx.bufferData(target, HEAPU8.subarray(data, data+size), usage);
    }
  function _glCreateProgram() {
      var id = GL.getNewId(GL.programs);
      var program = Module.ctx.createProgram();
      program.name = id;
      GL.programs[id] = program;
      return id;
    }
  function _glAttachShader(program, shader) {
      Module.ctx.attachShader(GL.programs[program],
                              GL.shaders[shader]);
    }
  function _glLinkProgram(program) {
      Module.ctx.linkProgram(GL.programs[program]);
      GL.programInfos[program] = null; // uniforms no longer keep the same names after linking
      GL.populateUniformTable(program);
    }
  function _glGetUniformLocation(program, name) {
      name = Pointer_stringify(name);
      var arrayOffset = 0;
      // If user passed an array accessor "[index]", parse the array index off the accessor.
      if (name.indexOf(']', name.length-1) !== -1) {
        var ls = name.lastIndexOf('[');
        var arrayIndex = name.slice(ls+1, -1);
        if (arrayIndex.length > 0) {
          arrayOffset = parseInt(arrayIndex);
          if (arrayOffset < 0) {
            return -1;
          }
        }
        name = name.slice(0, ls);
      }
      var ptable = GL.programInfos[program];
      if (!ptable) {
        return -1;
      }
      var utable = ptable.uniforms;
      var uniformInfo = utable[name]; // returns pair [ dimension_of_uniform_array, uniform_location ]
      if (uniformInfo && arrayOffset < uniformInfo[0]) { // Check if user asked for an out-of-bounds element, i.e. for 'vec4 colors[3];' user could ask for 'colors[10]' which should return -1.
        return uniformInfo[1]+arrayOffset;
      } else {
        return -1;
      }
    }
  function _glUseProgram(program) {
      Module.ctx.useProgram(program ? GL.programs[program] : null);
    }
  function _glUniformMatrix4fv(location, count, transpose, value) {
      location = GL.uniforms[location];
      var view;
      if (count == 1) {
        // avoid allocation for the common case of uploading one uniform matrix
        view = GL.miniTempBufferViews[15];
        for (var i = 0; i < 16; i++) {
          view[i] = HEAPF32[(((value)+(i*4))>>2)];
        }
      } else {
        view = HEAPF32.subarray((value)>>2,(value+count*64)>>2);
      }
      Module.ctx.uniformMatrix4fv(location, transpose, view);
    }
  function _glUniform4f(location, v0, v1, v2, v3) {
      location = GL.uniforms[location];
      Module.ctx.uniform4f(location, v0, v1, v2, v3);
    }
  function _glEnableVertexAttribArray(index) {
      Module.ctx.enableVertexAttribArray(index);
    }
  function _glVertexAttribPointer(index, size, type, normalized, stride, ptr) {
      Module.ctx.vertexAttribPointer(index, size, type, normalized, stride, ptr);
    }
  function _glDrawArrays(mode, first, count) {
      Module.ctx.drawArrays(mode, first, count);
    }
  function _glDisableVertexAttribArray(index) {
      Module.ctx.disableVertexAttribArray(index);
    }
  function _div(divt, numer, denom) {
      var quot = Math.floor(numer / denom);
      var rem = numer - quot * denom;
      HEAP32[((divt)>>2)]=quot;
      HEAP32[(((divt)+(4))>>2)]=rem;
      return divt;
    }
  var _llvm_memset_p0i8_i32=_memset;
  function _open(path, oflag, varargs) {
      // int open(const char *path, int oflag, ...);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/open.html
      var mode = HEAP32[((varargs)>>2)];
      path = Pointer_stringify(path);
      try {
        var stream = FS.open(path, oflag, mode);
        return stream.fd;
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fopen(filename, mode) {
      // FILE *fopen(const char *restrict filename, const char *restrict mode);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fopen.html
      var flags;
      mode = Pointer_stringify(mode);
      if (mode[0] == 'r') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 0;
        }
      } else if (mode[0] == 'w') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 1;
        }
        flags |= 64;
        flags |= 512;
      } else if (mode[0] == 'a') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 1;
        }
        flags |= 64;
        flags |= 1024;
      } else {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return 0;
      }
      var ret = _open(filename, flags, allocate([0x1FF, 0, 0, 0], 'i32', ALLOC_STACK));  // All creation permissions.
      return (ret == -1) ? 0 : ret;
    }
  function _close(fildes) {
      // int close(int fildes);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/close.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        FS.close(stream);
        return 0;
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }
  function _fsync(fildes) {
      // int fsync(int fildes);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fsync.html
      var stream = FS.getStream(fildes);
      if (stream) {
        // We write directly to the file system, so there's nothing to do here.
        return 0;
      } else {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
    }function _fclose(stream) {
      // int fclose(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fclose.html
      _fsync(stream);
      return _close(stream);
    }
  function _lseek(fildes, offset, whence) {
      // off_t lseek(int fildes, off_t offset, int whence);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/lseek.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        return FS.llseek(stream, offset, whence);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fseek(stream, offset, whence) {
      // int fseek(FILE *stream, long offset, int whence);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fseek.html
      var ret = _lseek(stream, offset, whence);
      if (ret == -1) {
        return -1;
      }
      stream = FS.getStream(stream);
      stream.eof = false;
      return 0;
    }
  function _strncmp(px, py, n) {
      var i = 0;
      while (i < n) {
        var x = HEAPU8[(((px)+(i))|0)];
        var y = HEAPU8[(((py)+(i))|0)];
        if (x == y && x == 0) return 0;
        if (x == 0) return -1;
        if (y == 0) return 1;
        if (x == y) {
          i ++;
          continue;
        } else {
          return x > y ? 1 : -1;
        }
      }
      return 0;
    }function _strcmp(px, py) {
      return _strncmp(px, py, TOTAL_MEMORY);
    }
  function _isspace(chr) {
      return (chr == 32) || (chr >= 9 && chr <= 13);
    }function __parseInt(str, endptr, base, min, max, bits, unsign) {
      // Skip space.
      while (_isspace(HEAP8[(str)])) str++;
      // Check for a plus/minus sign.
      var multiplier = 1;
      if (HEAP8[(str)] == 45) {
        multiplier = -1;
        str++;
      } else if (HEAP8[(str)] == 43) {
        str++;
      }
      // Find base.
      var finalBase = base;
      if (!finalBase) {
        if (HEAP8[(str)] == 48) {
          if (HEAP8[((str+1)|0)] == 120 ||
              HEAP8[((str+1)|0)] == 88) {
            finalBase = 16;
            str += 2;
          } else {
            finalBase = 8;
            str++;
          }
        }
      } else if (finalBase==16) {
        if (HEAP8[(str)] == 48) {
          if (HEAP8[((str+1)|0)] == 120 ||
              HEAP8[((str+1)|0)] == 88) {
            str += 2;
          }
        }
      }
      if (!finalBase) finalBase = 10;
      // Get digits.
      var chr;
      var ret = 0;
      while ((chr = HEAP8[(str)]) != 0) {
        var digit = parseInt(String.fromCharCode(chr), finalBase);
        if (isNaN(digit)) {
          break;
        } else {
          ret = ret * finalBase + digit;
          str++;
        }
      }
      // Apply sign.
      ret *= multiplier;
      // Set end pointer.
      if (endptr) {
        HEAP32[((endptr)>>2)]=str
      }
      // Unsign if needed.
      if (unsign) {
        if (Math.abs(ret) > max) {
          ret = max;
          ___setErrNo(ERRNO_CODES.ERANGE);
        } else {
          ret = unSign(ret, bits);
        }
      }
      // Validate range.
      if (ret > max || ret < min) {
        ret = ret > max ? max : min;
        ___setErrNo(ERRNO_CODES.ERANGE);
      }
      if (bits == 64) {
        return ((asm["setTempRet0"]((tempDouble=ret,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)),ret>>>0)|0);
      }
      return ret;
    }function _strtol(str, endptr, base) {
      return __parseInt(str, endptr, base, -2147483648, 2147483647, 32);  // LONG_MIN, LONG_MAX.
    }
  function ___assert_fail(condition, filename, line, func) {
      ABORT = true;
      throw 'Assertion failed: ' + Pointer_stringify(condition) + ', at: ' + [filename ? Pointer_stringify(filename) : 'unknown filename', line, func ? Pointer_stringify(func) : 'unknown function'] + ' at ' + stackTrace();
    }
  function _ldexp(x, exp_) {
      return x * Math.pow(2, exp_);
    }
  var _llvm_pow_f64=Math_pow;
  function _feof(stream) {
      // int feof(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/feof.html
      stream = FS.getStream(stream);
      return Number(stream && stream.eof);
    }
  var SOCKFS={mount:function (mount) {
        return FS.createNode(null, '/', 16384 | 0777, 0);
      },createSocket:function (family, type, protocol) {
        var streaming = type == 1;
        if (protocol) {
          assert(streaming == (protocol == 6)); // if SOCK_STREAM, must be tcp
        }
        // create our internal socket structure
        var sock = {
          family: family,
          type: type,
          protocol: protocol,
          server: null,
          peers: {},
          pending: [],
          recv_queue: [],
          sock_ops: SOCKFS.websocket_sock_ops
        };
        // create the filesystem node to store the socket structure
        var name = SOCKFS.nextname();
        var node = FS.createNode(SOCKFS.root, name, 49152, 0);
        node.sock = sock;
        // and the wrapping stream that enables library functions such
        // as read and write to indirectly interact with the socket
        var stream = FS.createStream({
          path: name,
          node: node,
          flags: FS.modeStringToFlags('r+'),
          seekable: false,
          stream_ops: SOCKFS.stream_ops
        });
        // map the new stream to the socket structure (sockets have a 1:1
        // relationship with a stream)
        sock.stream = stream;
        return sock;
      },getSocket:function (fd) {
        var stream = FS.getStream(fd);
        if (!stream || !FS.isSocket(stream.node.mode)) {
          return null;
        }
        return stream.node.sock;
      },stream_ops:{poll:function (stream) {
          var sock = stream.node.sock;
          return sock.sock_ops.poll(sock);
        },ioctl:function (stream, request, varargs) {
          var sock = stream.node.sock;
          return sock.sock_ops.ioctl(sock, request, varargs);
        },read:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          var msg = sock.sock_ops.recvmsg(sock, length);
          if (!msg) {
            // socket is closed
            return 0;
          }
          buffer.set(msg.buffer, offset);
          return msg.buffer.length;
        },write:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          return sock.sock_ops.sendmsg(sock, buffer, offset, length);
        },close:function (stream) {
          var sock = stream.node.sock;
          sock.sock_ops.close(sock);
        }},nextname:function () {
        if (!SOCKFS.nextname.current) {
          SOCKFS.nextname.current = 0;
        }
        return 'socket[' + (SOCKFS.nextname.current++) + ']';
      },websocket_sock_ops:{createPeer:function (sock, addr, port) {
          var ws;
          if (typeof addr === 'object') {
            ws = addr;
            addr = null;
            port = null;
          }
          if (ws) {
            // for sockets that've already connected (e.g. we're the server)
            // we can inspect the _socket property for the address
            if (ws._socket) {
              addr = ws._socket.remoteAddress;
              port = ws._socket.remotePort;
            }
            // if we're just now initializing a connection to the remote,
            // inspect the url property
            else {
              var result = /ws[s]?:\/\/([^:]+):(\d+)/.exec(ws.url);
              if (!result) {
                throw new Error('WebSocket URL must be in the format ws(s)://address:port');
              }
              addr = result[1];
              port = parseInt(result[2], 10);
            }
          } else {
            // create the actual websocket object and connect
            try {
              var url = 'ws://' + addr + ':' + port;
              // the node ws library API is slightly different than the browser's
              var opts = ENVIRONMENT_IS_NODE ? {headers: {'websocket-protocol': ['binary']}} : ['binary'];
              // If node we use the ws library.
              var WebSocket = ENVIRONMENT_IS_NODE ? require('ws') : window['WebSocket'];
              ws = new WebSocket(url, opts);
              ws.binaryType = 'arraybuffer';
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EHOSTUNREACH);
            }
          }
          var peer = {
            addr: addr,
            port: port,
            socket: ws,
            dgram_send_queue: []
          };
          SOCKFS.websocket_sock_ops.addPeer(sock, peer);
          SOCKFS.websocket_sock_ops.handlePeerEvents(sock, peer);
          // if this is a bound dgram socket, send the port number first to allow
          // us to override the ephemeral port reported to us by remotePort on the
          // remote end.
          if (sock.type === 2 && typeof sock.sport !== 'undefined') {
            peer.dgram_send_queue.push(new Uint8Array([
                255, 255, 255, 255,
                'p'.charCodeAt(0), 'o'.charCodeAt(0), 'r'.charCodeAt(0), 't'.charCodeAt(0),
                ((sock.sport & 0xff00) >> 8) , (sock.sport & 0xff)
            ]));
          }
          return peer;
        },getPeer:function (sock, addr, port) {
          return sock.peers[addr + ':' + port];
        },addPeer:function (sock, peer) {
          sock.peers[peer.addr + ':' + peer.port] = peer;
        },removePeer:function (sock, peer) {
          delete sock.peers[peer.addr + ':' + peer.port];
        },handlePeerEvents:function (sock, peer) {
          var first = true;
          var handleOpen = function () {
            try {
              var queued = peer.dgram_send_queue.shift();
              while (queued) {
                peer.socket.send(queued);
                queued = peer.dgram_send_queue.shift();
              }
            } catch (e) {
              // not much we can do here in the way of proper error handling as we've already
              // lied and said this data was sent. shut it down.
              peer.socket.close();
            }
          };
          function handleMessage(data) {
            assert(typeof data !== 'string' && data.byteLength !== undefined);  // must receive an ArrayBuffer
            data = new Uint8Array(data);  // make a typed array view on the array buffer
            // if this is the port message, override the peer's port with it
            var wasfirst = first;
            first = false;
            if (wasfirst &&
                data.length === 10 &&
                data[0] === 255 && data[1] === 255 && data[2] === 255 && data[3] === 255 &&
                data[4] === 'p'.charCodeAt(0) && data[5] === 'o'.charCodeAt(0) && data[6] === 'r'.charCodeAt(0) && data[7] === 't'.charCodeAt(0)) {
              // update the peer's port and it's key in the peer map
              var newport = ((data[8] << 8) | data[9]);
              SOCKFS.websocket_sock_ops.removePeer(sock, peer);
              peer.port = newport;
              SOCKFS.websocket_sock_ops.addPeer(sock, peer);
              return;
            }
            sock.recv_queue.push({ addr: peer.addr, port: peer.port, data: data });
          };
          if (ENVIRONMENT_IS_NODE) {
            peer.socket.on('open', handleOpen);
            peer.socket.on('message', function(data, flags) {
              if (!flags.binary) {
                return;
              }
              handleMessage((new Uint8Array(data)).buffer);  // copy from node Buffer -> ArrayBuffer
            });
            peer.socket.on('error', function() {
              // don't throw
            });
          } else {
            peer.socket.onopen = handleOpen;
            peer.socket.onmessage = function peer_socket_onmessage(event) {
              handleMessage(event.data);
            };
          }
        },poll:function (sock) {
          if (sock.type === 1 && sock.server) {
            // listen sockets should only say they're available for reading
            // if there are pending clients.
            return sock.pending.length ? (64 | 1) : 0;
          }
          var mask = 0;
          var dest = sock.type === 1 ?  // we only care about the socket state for connection-based sockets
            SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport) :
            null;
          if (sock.recv_queue.length ||
              !dest ||  // connection-less sockets are always ready to read
              (dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {  // let recv return 0 once closed
            mask |= (64 | 1);
          }
          if (!dest ||  // connection-less sockets are always ready to write
              (dest && dest.socket.readyState === dest.socket.OPEN)) {
            mask |= 4;
          }
          if ((dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {
            mask |= 16;
          }
          return mask;
        },ioctl:function (sock, request, arg) {
          switch (request) {
            case 21531:
              var bytes = 0;
              if (sock.recv_queue.length) {
                bytes = sock.recv_queue[0].data.length;
              }
              HEAP32[((arg)>>2)]=bytes;
              return 0;
            default:
              return ERRNO_CODES.EINVAL;
          }
        },close:function (sock) {
          // if we've spawned a listen server, close it
          if (sock.server) {
            try {
              sock.server.close();
            } catch (e) {
            }
            sock.server = null;
          }
          // close any peer connections
          var peers = Object.keys(sock.peers);
          for (var i = 0; i < peers.length; i++) {
            var peer = sock.peers[peers[i]];
            try {
              peer.socket.close();
            } catch (e) {
            }
            SOCKFS.websocket_sock_ops.removePeer(sock, peer);
          }
          return 0;
        },bind:function (sock, addr, port) {
          if (typeof sock.saddr !== 'undefined' || typeof sock.sport !== 'undefined') {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already bound
          }
          sock.saddr = addr;
          sock.sport = port || _mkport();
          // in order to emulate dgram sockets, we need to launch a listen server when
          // binding on a connection-less socket
          // note: this is only required on the server side
          if (sock.type === 2) {
            // close the existing server if it exists
            if (sock.server) {
              sock.server.close();
              sock.server = null;
            }
            // swallow error operation not supported error that occurs when binding in the
            // browser where this isn't supported
            try {
              sock.sock_ops.listen(sock, 0);
            } catch (e) {
              if (!(e instanceof FS.ErrnoError)) throw e;
              if (e.errno !== ERRNO_CODES.EOPNOTSUPP) throw e;
            }
          }
        },connect:function (sock, addr, port) {
          if (sock.server) {
            throw new FS.ErrnoError(ERRNO_CODS.EOPNOTSUPP);
          }
          // TODO autobind
          // if (!sock.addr && sock.type == 2) {
          // }
          // early out if we're already connected / in the middle of connecting
          if (typeof sock.daddr !== 'undefined' && typeof sock.dport !== 'undefined') {
            var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
            if (dest) {
              if (dest.socket.readyState === dest.socket.CONNECTING) {
                throw new FS.ErrnoError(ERRNO_CODES.EALREADY);
              } else {
                throw new FS.ErrnoError(ERRNO_CODES.EISCONN);
              }
            }
          }
          // add the socket to our peer list and set our
          // destination address / port to match
          var peer = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
          sock.daddr = peer.addr;
          sock.dport = peer.port;
          // always "fail" in non-blocking mode
          throw new FS.ErrnoError(ERRNO_CODES.EINPROGRESS);
        },listen:function (sock, backlog) {
          if (!ENVIRONMENT_IS_NODE) {
            throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
          }
          if (sock.server) {
             throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already listening
          }
          var WebSocketServer = require('ws').Server;
          var host = sock.saddr;
          sock.server = new WebSocketServer({
            host: host,
            port: sock.sport
            // TODO support backlog
          });
          sock.server.on('connection', function(ws) {
            if (sock.type === 1) {
              var newsock = SOCKFS.createSocket(sock.family, sock.type, sock.protocol);
              // create a peer on the new socket
              var peer = SOCKFS.websocket_sock_ops.createPeer(newsock, ws);
              newsock.daddr = peer.addr;
              newsock.dport = peer.port;
              // push to queue for accept to pick up
              sock.pending.push(newsock);
            } else {
              // create a peer on the listen socket so calling sendto
              // with the listen socket and an address will resolve
              // to the correct client
              SOCKFS.websocket_sock_ops.createPeer(sock, ws);
            }
          });
          sock.server.on('closed', function() {
            sock.server = null;
          });
          sock.server.on('error', function() {
            // don't throw
          });
        },accept:function (listensock) {
          if (!listensock.server) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          var newsock = listensock.pending.shift();
          newsock.stream.flags = listensock.stream.flags;
          return newsock;
        },getname:function (sock, peer) {
          var addr, port;
          if (peer) {
            if (sock.daddr === undefined || sock.dport === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            }
            addr = sock.daddr;
            port = sock.dport;
          } else {
            // TODO saddr and sport will be set for bind()'d UDP sockets, but what
            // should we be returning for TCP sockets that've been connect()'d?
            addr = sock.saddr || 0;
            port = sock.sport || 0;
          }
          return { addr: addr, port: port };
        },sendmsg:function (sock, buffer, offset, length, addr, port) {
          if (sock.type === 2) {
            // connection-less sockets will honor the message address,
            // and otherwise fall back to the bound destination address
            if (addr === undefined || port === undefined) {
              addr = sock.daddr;
              port = sock.dport;
            }
            // if there was no address to fall back to, error out
            if (addr === undefined || port === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.EDESTADDRREQ);
            }
          } else {
            // connection-based sockets will only use the bound
            addr = sock.daddr;
            port = sock.dport;
          }
          // find the peer for the destination address
          var dest = SOCKFS.websocket_sock_ops.getPeer(sock, addr, port);
          // early out if not connected with a connection-based socket
          if (sock.type === 1) {
            if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            } else if (dest.socket.readyState === dest.socket.CONNECTING) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }
          // create a copy of the incoming data to send, as the WebSocket API
          // doesn't work entirely with an ArrayBufferView, it'll just send
          // the entire underlying buffer
          var data;
          if (buffer instanceof Array || buffer instanceof ArrayBuffer) {
            data = buffer.slice(offset, offset + length);
          } else {  // ArrayBufferView
            data = buffer.buffer.slice(buffer.byteOffset + offset, buffer.byteOffset + offset + length);
          }
          // if we're emulating a connection-less dgram socket and don't have
          // a cached connection, queue the buffer to send upon connect and
          // lie, saying the data was sent now.
          if (sock.type === 2) {
            if (!dest || dest.socket.readyState !== dest.socket.OPEN) {
              // if we're not connected, open a new connection
              if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                dest = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
              }
              dest.dgram_send_queue.push(data);
              return length;
            }
          }
          try {
            // send the actual data
            dest.socket.send(data);
            return length;
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
        },recvmsg:function (sock, length) {
          // http://pubs.opengroup.org/onlinepubs/7908799/xns/recvmsg.html
          if (sock.type === 1 && sock.server) {
            // tcp servers should not be recv()'ing on the listen socket
            throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
          }
          var queued = sock.recv_queue.shift();
          if (!queued) {
            if (sock.type === 1) {
              var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
              if (!dest) {
                // if we have a destination address but are not connected, error out
                throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
              }
              else if (dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                // return null if the socket has closed
                return null;
              }
              else {
                // else, our socket is in a valid state but truly has nothing available
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
            } else {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }
          // queued.data will be an ArrayBuffer if it's unadulterated, but if it's
          // requeued TCP data it'll be an ArrayBufferView
          var queuedLength = queued.data.byteLength || queued.data.length;
          var queuedOffset = queued.data.byteOffset || 0;
          var queuedBuffer = queued.data.buffer || queued.data;
          var bytesRead = Math.min(length, queuedLength);
          var res = {
            buffer: new Uint8Array(queuedBuffer, queuedOffset, bytesRead),
            addr: queued.addr,
            port: queued.port
          };
          // push back any unread data for TCP connections
          if (sock.type === 1 && bytesRead < queuedLength) {
            var bytesRemaining = queuedLength - bytesRead;
            queued.data = new Uint8Array(queuedBuffer, queuedOffset + bytesRead, bytesRemaining);
            sock.recv_queue.unshift(queued);
          }
          return res;
        }}};function _recv(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _read(fd, buf, len);
    }
  function _pread(fildes, buf, nbyte, offset) {
      // ssize_t pread(int fildes, void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.read(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _read(fildes, buf, nbyte) {
      // ssize_t read(int fildes, void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.read(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fread(ptr, size, nitems, stream) {
      // size_t fread(void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fread.html
      var bytesToRead = nitems * size;
      if (bytesToRead == 0) {
        return 0;
      }
      var bytesRead = 0;
      var streamObj = FS.getStream(stream);
      while (streamObj.ungotten.length && bytesToRead > 0) {
        HEAP8[((ptr++)|0)]=streamObj.ungotten.pop()
        bytesToRead--;
        bytesRead++;
      }
      var err = _read(stream, ptr, bytesToRead);
      if (err == -1) {
        if (streamObj) streamObj.error = true;
        return 0;
      }
      bytesRead += err;
      if (bytesRead < bytesToRead) streamObj.eof = true;
      return Math.floor(bytesRead / size);
    }
  var _atan2=Math_atan2;
  function _pthread_mutex_lock() {}
  function _pthread_mutex_unlock() {}
  function __exit(status) {
      // void _exit(int status);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/exit.html
      Module['exit'](status);
    }function _exit(status) {
      __exit(status);
    }function __ZSt9terminatev() {
      _exit(-1234);
    }
  function ___cxa_guard_acquire(variable) {
      if (!HEAP8[(variable)]) { // ignore SAFE_HEAP stuff because llvm mixes i64 and i8 here
        HEAP8[(variable)]=1;
        return 1;
      }
      return 0;
    }
  function ___cxa_guard_release() {}
  function _pthread_cond_broadcast() {
      return 0;
    }
  function _pthread_cond_wait() {
      return 0;
    }
  function ___cxa_begin_catch(ptr) {
      __ZSt18uncaught_exceptionv.uncaught_exception--;
      return ptr;
    }
  function ___cxa_end_catch() {
      if (___cxa_end_catch.rethrown) {
        ___cxa_end_catch.rethrown = false;
        return;
      }
      // Clear state flag.
      asm['setThrew'](0);
      // Clear type.
      HEAP32[(((_llvm_eh_exception.buf)+(4))>>2)]=0
      // Call destructor if one is registered then clear it.
      var ptr = HEAP32[((_llvm_eh_exception.buf)>>2)];
      var destructor = HEAP32[(((_llvm_eh_exception.buf)+(8))>>2)];
      if (destructor) {
        Runtime.dynCall('vi', destructor, [ptr]);
        HEAP32[(((_llvm_eh_exception.buf)+(8))>>2)]=0
      }
      // Free ptr if it isn't null.
      if (ptr) {
        ___cxa_free_exception(ptr);
        HEAP32[((_llvm_eh_exception.buf)>>2)]=0
      }
    }
  function _send(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _write(fd, buf, len);
    }
  function _pwrite(fildes, buf, nbyte, offset) {
      // ssize_t pwrite(int fildes, const void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _write(fildes, buf, nbyte) {
      // ssize_t write(int fildes, const void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fwrite(ptr, size, nitems, stream) {
      // size_t fwrite(const void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fwrite.html
      var bytesToWrite = nitems * size;
      if (bytesToWrite == 0) return 0;
      var bytesWritten = _write(stream, ptr, bytesToWrite);
      if (bytesWritten == -1) {
        var streamObj = FS.getStream(stream);
        if (streamObj) streamObj.error = true;
        return 0;
      } else {
        return Math.floor(bytesWritten / size);
      }
    }
  function _ungetc(c, stream) {
      // int ungetc(int c, FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/ungetc.html
      stream = FS.getStream(stream);
      if (!stream) {
        return -1;
      }
      if (c === -1) {
        // do nothing for EOF character
        return c;
      }
      c = unSign(c & 0xFF);
      stream.ungotten.push(c);
      stream.eof = false;
      return c;
    }
  function _fgetc(stream) {
      // int fgetc(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fgetc.html
      var streamObj = FS.getStream(stream);
      if (!streamObj) return -1;
      if (streamObj.eof || streamObj.error) return -1;
      var ret = _fread(_fgetc.ret, 1, 1, stream);
      if (ret == 0) {
        return -1;
      } else if (ret == -1) {
        streamObj.error = true;
        return -1;
      } else {
        return HEAPU8[((_fgetc.ret)|0)];
      }
    }var _getc=_fgetc;
  function ___errno_location() {
      return ___errno_state;
    }
  Module["_strlen"] = _strlen;
  function _strerror_r(errnum, strerrbuf, buflen) {
      if (errnum in ERRNO_MESSAGES) {
        if (ERRNO_MESSAGES[errnum].length > buflen - 1) {
          return ___setErrNo(ERRNO_CODES.ERANGE);
        } else {
          var msg = ERRNO_MESSAGES[errnum];
          writeAsciiToMemory(msg, strerrbuf);
          return 0;
        }
      } else {
        return ___setErrNo(ERRNO_CODES.EINVAL);
      }
    }function _strerror(errnum) {
      if (!_strerror.buffer) _strerror.buffer = _malloc(256);
      _strerror_r(errnum, _strerror.buffer, 256);
      return _strerror.buffer;
    }
  function _abort() {
      Module['abort']();
    }
  Module["_memmove"] = _memmove;var _llvm_memmove_p0i8_p0i8_i32=_memmove;
  function ___cxa_rethrow() {
      ___cxa_end_catch.rethrown = true;
      throw HEAP32[((_llvm_eh_exception.buf)>>2)] + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";;
    }
  function __reallyNegative(x) {
      return x < 0 || (x === 0 && (1/x) === -Infinity);
    }function __formatString(format, varargs) {
      var textIndex = format;
      var argIndex = 0;
      function getNextArg(type) {
        // NOTE: Explicitly ignoring type safety. Otherwise this fails:
        //       int x = 4; printf("%c\n", (char)x);
        var ret;
        if (type === 'double') {
          ret = HEAPF64[(((varargs)+(argIndex))>>3)];
        } else if (type == 'i64') {
          ret = [HEAP32[(((varargs)+(argIndex))>>2)],
                 HEAP32[(((varargs)+(argIndex+8))>>2)]];
          argIndex += 8; // each 32-bit chunk is in a 64-bit block
        } else {
          type = 'i32'; // varargs are always i32, i64, or double
          ret = HEAP32[(((varargs)+(argIndex))>>2)];
        }
        argIndex += Math.max(Runtime.getNativeFieldSize(type), Runtime.getAlignSize(type, null, true));
        return ret;
      }
      var ret = [];
      var curr, next, currArg;
      while(1) {
        var startTextIndex = textIndex;
        curr = HEAP8[(textIndex)];
        if (curr === 0) break;
        next = HEAP8[((textIndex+1)|0)];
        if (curr == 37) {
          // Handle flags.
          var flagAlwaysSigned = false;
          var flagLeftAlign = false;
          var flagAlternative = false;
          var flagZeroPad = false;
          var flagPadSign = false;
          flagsLoop: while (1) {
            switch (next) {
              case 43:
                flagAlwaysSigned = true;
                break;
              case 45:
                flagLeftAlign = true;
                break;
              case 35:
                flagAlternative = true;
                break;
              case 48:
                if (flagZeroPad) {
                  break flagsLoop;
                } else {
                  flagZeroPad = true;
                  break;
                }
              case 32:
                flagPadSign = true;
                break;
              default:
                break flagsLoop;
            }
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
          }
          // Handle width.
          var width = 0;
          if (next == 42) {
            width = getNextArg('i32');
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
          } else {
            while (next >= 48 && next <= 57) {
              width = width * 10 + (next - 48);
              textIndex++;
              next = HEAP8[((textIndex+1)|0)];
            }
          }
          // Handle precision.
          var precisionSet = false;
          if (next == 46) {
            var precision = 0;
            precisionSet = true;
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
            if (next == 42) {
              precision = getNextArg('i32');
              textIndex++;
            } else {
              while(1) {
                var precisionChr = HEAP8[((textIndex+1)|0)];
                if (precisionChr < 48 ||
                    precisionChr > 57) break;
                precision = precision * 10 + (precisionChr - 48);
                textIndex++;
              }
            }
            next = HEAP8[((textIndex+1)|0)];
          } else {
            var precision = 6; // Standard default.
          }
          // Handle integer sizes. WARNING: These assume a 32-bit architecture!
          var argSize;
          switch (String.fromCharCode(next)) {
            case 'h':
              var nextNext = HEAP8[((textIndex+2)|0)];
              if (nextNext == 104) {
                textIndex++;
                argSize = 1; // char (actually i32 in varargs)
              } else {
                argSize = 2; // short (actually i32 in varargs)
              }
              break;
            case 'l':
              var nextNext = HEAP8[((textIndex+2)|0)];
              if (nextNext == 108) {
                textIndex++;
                argSize = 8; // long long
              } else {
                argSize = 4; // long
              }
              break;
            case 'L': // long long
            case 'q': // int64_t
            case 'j': // intmax_t
              argSize = 8;
              break;
            case 'z': // size_t
            case 't': // ptrdiff_t
            case 'I': // signed ptrdiff_t or unsigned size_t
              argSize = 4;
              break;
            default:
              argSize = null;
          }
          if (argSize) textIndex++;
          next = HEAP8[((textIndex+1)|0)];
          // Handle type specifier.
          switch (String.fromCharCode(next)) {
            case 'd': case 'i': case 'u': case 'o': case 'x': case 'X': case 'p': {
              // Integer.
              var signed = next == 100 || next == 105;
              argSize = argSize || 4;
              var currArg = getNextArg('i' + (argSize * 8));
              var origArg = currArg;
              var argText;
              // Flatten i64-1 [low, high] into a (slightly rounded) double
              if (argSize == 8) {
                currArg = Runtime.makeBigInt(currArg[0], currArg[1], next == 117);
              }
              // Truncate to requested size.
              if (argSize <= 4) {
                var limit = Math.pow(256, argSize) - 1;
                currArg = (signed ? reSign : unSign)(currArg & limit, argSize * 8);
              }
              // Format the number.
              var currAbsArg = Math.abs(currArg);
              var prefix = '';
              if (next == 100 || next == 105) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], null); else
                argText = reSign(currArg, 8 * argSize, 1).toString(10);
              } else if (next == 117) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], true); else
                argText = unSign(currArg, 8 * argSize, 1).toString(10);
                currArg = Math.abs(currArg);
              } else if (next == 111) {
                argText = (flagAlternative ? '0' : '') + currAbsArg.toString(8);
              } else if (next == 120 || next == 88) {
                prefix = (flagAlternative && currArg != 0) ? '0x' : '';
                if (argSize == 8 && i64Math) {
                  if (origArg[1]) {
                    argText = (origArg[1]>>>0).toString(16);
                    var lower = (origArg[0]>>>0).toString(16);
                    while (lower.length < 8) lower = '0' + lower;
                    argText += lower;
                  } else {
                    argText = (origArg[0]>>>0).toString(16);
                  }
                } else
                if (currArg < 0) {
                  // Represent negative numbers in hex as 2's complement.
                  currArg = -currArg;
                  argText = (currAbsArg - 1).toString(16);
                  var buffer = [];
                  for (var i = 0; i < argText.length; i++) {
                    buffer.push((0xF - parseInt(argText[i], 16)).toString(16));
                  }
                  argText = buffer.join('');
                  while (argText.length < argSize * 2) argText = 'f' + argText;
                } else {
                  argText = currAbsArg.toString(16);
                }
                if (next == 88) {
                  prefix = prefix.toUpperCase();
                  argText = argText.toUpperCase();
                }
              } else if (next == 112) {
                if (currAbsArg === 0) {
                  argText = '(nil)';
                } else {
                  prefix = '0x';
                  argText = currAbsArg.toString(16);
                }
              }
              if (precisionSet) {
                while (argText.length < precision) {
                  argText = '0' + argText;
                }
              }
              // Add sign if needed
              if (currArg >= 0) {
                if (flagAlwaysSigned) {
                  prefix = '+' + prefix;
                } else if (flagPadSign) {
                  prefix = ' ' + prefix;
                }
              }
              // Move sign to prefix so we zero-pad after the sign
              if (argText.charAt(0) == '-') {
                prefix = '-' + prefix;
                argText = argText.substr(1);
              }
              // Add padding.
              while (prefix.length + argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad) {
                    argText = '0' + argText;
                  } else {
                    prefix = ' ' + prefix;
                  }
                }
              }
              // Insert the result into the buffer.
              argText = prefix + argText;
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 'f': case 'F': case 'e': case 'E': case 'g': case 'G': {
              // Float.
              var currArg = getNextArg('double');
              var argText;
              if (isNaN(currArg)) {
                argText = 'nan';
                flagZeroPad = false;
              } else if (!isFinite(currArg)) {
                argText = (currArg < 0 ? '-' : '') + 'inf';
                flagZeroPad = false;
              } else {
                var isGeneral = false;
                var effectivePrecision = Math.min(precision, 20);
                // Convert g/G to f/F or e/E, as per:
                // http://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html
                if (next == 103 || next == 71) {
                  isGeneral = true;
                  precision = precision || 1;
                  var exponent = parseInt(currArg.toExponential(effectivePrecision).split('e')[1], 10);
                  if (precision > exponent && exponent >= -4) {
                    next = ((next == 103) ? 'f' : 'F').charCodeAt(0);
                    precision -= exponent + 1;
                  } else {
                    next = ((next == 103) ? 'e' : 'E').charCodeAt(0);
                    precision--;
                  }
                  effectivePrecision = Math.min(precision, 20);
                }
                if (next == 101 || next == 69) {
                  argText = currArg.toExponential(effectivePrecision);
                  // Make sure the exponent has at least 2 digits.
                  if (/[eE][-+]\d$/.test(argText)) {
                    argText = argText.slice(0, -1) + '0' + argText.slice(-1);
                  }
                } else if (next == 102 || next == 70) {
                  argText = currArg.toFixed(effectivePrecision);
                  if (currArg === 0 && __reallyNegative(currArg)) {
                    argText = '-' + argText;
                  }
                }
                var parts = argText.split('e');
                if (isGeneral && !flagAlternative) {
                  // Discard trailing zeros and periods.
                  while (parts[0].length > 1 && parts[0].indexOf('.') != -1 &&
                         (parts[0].slice(-1) == '0' || parts[0].slice(-1) == '.')) {
                    parts[0] = parts[0].slice(0, -1);
                  }
                } else {
                  // Make sure we have a period in alternative mode.
                  if (flagAlternative && argText.indexOf('.') == -1) parts[0] += '.';
                  // Zero pad until required precision.
                  while (precision > effectivePrecision++) parts[0] += '0';
                }
                argText = parts[0] + (parts.length > 1 ? 'e' + parts[1] : '');
                // Capitalize 'E' if needed.
                if (next == 69) argText = argText.toUpperCase();
                // Add sign.
                if (currArg >= 0) {
                  if (flagAlwaysSigned) {
                    argText = '+' + argText;
                  } else if (flagPadSign) {
                    argText = ' ' + argText;
                  }
                }
              }
              // Add padding.
              while (argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad && (argText[0] == '-' || argText[0] == '+')) {
                    argText = argText[0] + '0' + argText.slice(1);
                  } else {
                    argText = (flagZeroPad ? '0' : ' ') + argText;
                  }
                }
              }
              // Adjust case.
              if (next < 97) argText = argText.toUpperCase();
              // Insert the result into the buffer.
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 's': {
              // String.
              var arg = getNextArg('i8*');
              var argLength = arg ? _strlen(arg) : '(null)'.length;
              if (precisionSet) argLength = Math.min(argLength, precision);
              if (!flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              if (arg) {
                for (var i = 0; i < argLength; i++) {
                  ret.push(HEAPU8[((arg++)|0)]);
                }
              } else {
                ret = ret.concat(intArrayFromString('(null)'.substr(0, argLength), true));
              }
              if (flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              break;
            }
            case 'c': {
              // Character.
              if (flagLeftAlign) ret.push(getNextArg('i8'));
              while (--width > 0) {
                ret.push(32);
              }
              if (!flagLeftAlign) ret.push(getNextArg('i8'));
              break;
            }
            case 'n': {
              // Write the length written so far to the next parameter.
              var ptr = getNextArg('i32*');
              HEAP32[((ptr)>>2)]=ret.length
              break;
            }
            case '%': {
              // Literal percent sign.
              ret.push(curr);
              break;
            }
            default: {
              // Unknown specifiers remain untouched.
              for (var i = startTextIndex; i < textIndex + 2; i++) {
                ret.push(HEAP8[(i)]);
              }
            }
          }
          textIndex += 2;
          // TODO: Support a/A (hex float) and m (last error) specifiers.
          // TODO: Support %1${specifier} for arg selection.
        } else {
          ret.push(curr);
          textIndex += 1;
        }
      }
      return ret;
    }function _snprintf(s, n, format, varargs) {
      // int snprintf(char *restrict s, size_t n, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var limit = (n === undefined) ? result.length
                                    : Math.min(result.length, Math.max(n - 1, 0));
      if (s < 0) {
        s = -s;
        var buf = _malloc(limit+1);
        HEAP32[((s)>>2)]=buf;
        s = buf;
      }
      for (var i = 0; i < limit; i++) {
        HEAP8[(((s)+(i))|0)]=result[i];
      }
      if (limit < n || (n === undefined)) HEAP8[(((s)+(i))|0)]=0;
      return result.length;
    }
  function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 30: return PAGE_SIZE;
        case 132:
        case 133:
        case 12:
        case 137:
        case 138:
        case 15:
        case 235:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 149:
        case 13:
        case 10:
        case 236:
        case 153:
        case 9:
        case 21:
        case 22:
        case 159:
        case 154:
        case 14:
        case 77:
        case 78:
        case 139:
        case 80:
        case 81:
        case 79:
        case 82:
        case 68:
        case 67:
        case 164:
        case 11:
        case 29:
        case 47:
        case 48:
        case 95:
        case 52:
        case 51:
        case 46:
          return 200809;
        case 27:
        case 246:
        case 127:
        case 128:
        case 23:
        case 24:
        case 160:
        case 161:
        case 181:
        case 182:
        case 242:
        case 183:
        case 184:
        case 243:
        case 244:
        case 245:
        case 165:
        case 178:
        case 179:
        case 49:
        case 50:
        case 168:
        case 169:
        case 175:
        case 170:
        case 171:
        case 172:
        case 97:
        case 76:
        case 32:
        case 173:
        case 35:
          return -1;
        case 176:
        case 177:
        case 7:
        case 155:
        case 8:
        case 157:
        case 125:
        case 126:
        case 92:
        case 93:
        case 129:
        case 130:
        case 131:
        case 94:
        case 91:
          return 1;
        case 74:
        case 60:
        case 69:
        case 70:
        case 4:
          return 1024;
        case 31:
        case 42:
        case 72:
          return 32;
        case 87:
        case 26:
        case 33:
          return 2147483647;
        case 34:
        case 1:
          return 47839;
        case 38:
        case 36:
          return 99;
        case 43:
        case 37:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 28: return 32768;
        case 44: return 32767;
        case 75: return 16384;
        case 39: return 1000;
        case 89: return 700;
        case 71: return 256;
        case 40: return 255;
        case 2: return 100;
        case 180: return 64;
        case 25: return 20;
        case 5: return 16;
        case 6: return 6;
        case 73: return 4;
        case 84: return 1;
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }
  function ___cxa_guard_abort() {}
  function _isxdigit(chr) {
      return (chr >= 48 && chr <= 57) ||
             (chr >= 97 && chr <= 102) ||
             (chr >= 65 && chr <= 70);
    }var _isxdigit_l=_isxdigit;
  function _isdigit(chr) {
      return chr >= 48 && chr <= 57;
    }var _isdigit_l=_isdigit;
  function __getFloat(text) {
      return /^[+-]?[0-9]*\.?[0-9]+([eE][+-]?[0-9]+)?/.exec(text);
    }function __scanString(format, get, unget, varargs) {
      if (!__scanString.whiteSpace) {
        __scanString.whiteSpace = {};
        __scanString.whiteSpace[32] = 1;
        __scanString.whiteSpace[9] = 1;
        __scanString.whiteSpace[10] = 1;
        __scanString.whiteSpace[11] = 1;
        __scanString.whiteSpace[12] = 1;
        __scanString.whiteSpace[13] = 1;
      }
      // Supports %x, %4x, %d.%d, %lld, %s, %f, %lf.
      // TODO: Support all format specifiers.
      format = Pointer_stringify(format);
      var soFar = 0;
      if (format.indexOf('%n') >= 0) {
        // need to track soFar
        var _get = get;
        get = function get() {
          soFar++;
          return _get();
        }
        var _unget = unget;
        unget = function unget() {
          soFar--;
          return _unget();
        }
      }
      var formatIndex = 0;
      var argsi = 0;
      var fields = 0;
      var argIndex = 0;
      var next;
      mainLoop:
      for (var formatIndex = 0; formatIndex < format.length;) {
        if (format[formatIndex] === '%' && format[formatIndex+1] == 'n') {
          var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += Runtime.getAlignSize('void*', null, true);
          HEAP32[((argPtr)>>2)]=soFar;
          formatIndex += 2;
          continue;
        }
        if (format[formatIndex] === '%') {
          var nextC = format.indexOf('c', formatIndex+1);
          if (nextC > 0) {
            var maxx = 1;
            if (nextC > formatIndex+1) {
              var sub = format.substring(formatIndex+1, nextC);
              maxx = parseInt(sub);
              if (maxx != sub) maxx = 0;
            }
            if (maxx) {
              var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
              argIndex += Runtime.getAlignSize('void*', null, true);
              fields++;
              for (var i = 0; i < maxx; i++) {
                next = get();
                HEAP8[((argPtr++)|0)]=next;
              }
              formatIndex += nextC - formatIndex + 1;
              continue;
            }
          }
        }
        // handle %[...]
        if (format[formatIndex] === '%' && format.indexOf('[', formatIndex+1) > 0) {
          var match = /\%([0-9]*)\[(\^)?(\]?[^\]]*)\]/.exec(format.substring(formatIndex));
          if (match) {
            var maxNumCharacters = parseInt(match[1]) || Infinity;
            var negateScanList = (match[2] === '^');
            var scanList = match[3];
            // expand "middle" dashs into character sets
            var middleDashMatch;
            while ((middleDashMatch = /([^\-])\-([^\-])/.exec(scanList))) {
              var rangeStartCharCode = middleDashMatch[1].charCodeAt(0);
              var rangeEndCharCode = middleDashMatch[2].charCodeAt(0);
              for (var expanded = ''; rangeStartCharCode <= rangeEndCharCode; expanded += String.fromCharCode(rangeStartCharCode++));
              scanList = scanList.replace(middleDashMatch[1] + '-' + middleDashMatch[2], expanded);
            }
            var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
            argIndex += Runtime.getAlignSize('void*', null, true);
            fields++;
            for (var i = 0; i < maxNumCharacters; i++) {
              next = get();
              if (negateScanList) {
                if (scanList.indexOf(String.fromCharCode(next)) < 0) {
                  HEAP8[((argPtr++)|0)]=next;
                } else {
                  unget();
                  break;
                }
              } else {
                if (scanList.indexOf(String.fromCharCode(next)) >= 0) {
                  HEAP8[((argPtr++)|0)]=next;
                } else {
                  unget();
                  break;
                }
              }
            }
            // write out null-terminating character
            HEAP8[((argPtr++)|0)]=0;
            formatIndex += match[0].length;
            continue;
          }
        }      
        // remove whitespace
        while (1) {
          next = get();
          if (next == 0) return fields;
          if (!(next in __scanString.whiteSpace)) break;
        }
        unget();
        if (format[formatIndex] === '%') {
          formatIndex++;
          var suppressAssignment = false;
          if (format[formatIndex] == '*') {
            suppressAssignment = true;
            formatIndex++;
          }
          var maxSpecifierStart = formatIndex;
          while (format[formatIndex].charCodeAt(0) >= 48 &&
                 format[formatIndex].charCodeAt(0) <= 57) {
            formatIndex++;
          }
          var max_;
          if (formatIndex != maxSpecifierStart) {
            max_ = parseInt(format.slice(maxSpecifierStart, formatIndex), 10);
          }
          var long_ = false;
          var half = false;
          var longLong = false;
          if (format[formatIndex] == 'l') {
            long_ = true;
            formatIndex++;
            if (format[formatIndex] == 'l') {
              longLong = true;
              formatIndex++;
            }
          } else if (format[formatIndex] == 'h') {
            half = true;
            formatIndex++;
          }
          var type = format[formatIndex];
          formatIndex++;
          var curr = 0;
          var buffer = [];
          // Read characters according to the format. floats are trickier, they may be in an unfloat state in the middle, then be a valid float later
          if (type == 'f' || type == 'e' || type == 'g' ||
              type == 'F' || type == 'E' || type == 'G') {
            next = get();
            while (next > 0 && (!(next in __scanString.whiteSpace)))  {
              buffer.push(String.fromCharCode(next));
              next = get();
            }
            var m = __getFloat(buffer.join(''));
            var last = m ? m[0].length : 0;
            for (var i = 0; i < buffer.length - last + 1; i++) {
              unget();
            }
            buffer.length = last;
          } else {
            next = get();
            var first = true;
            // Strip the optional 0x prefix for %x.
            if ((type == 'x' || type == 'X') && (next == 48)) {
              var peek = get();
              if (peek == 120 || peek == 88) {
                next = get();
              } else {
                unget();
              }
            }
            while ((curr < max_ || isNaN(max_)) && next > 0) {
              if (!(next in __scanString.whiteSpace) && // stop on whitespace
                  (type == 's' ||
                   ((type === 'd' || type == 'u' || type == 'i') && ((next >= 48 && next <= 57) ||
                                                                     (first && next == 45))) ||
                   ((type === 'x' || type === 'X') && (next >= 48 && next <= 57 ||
                                     next >= 97 && next <= 102 ||
                                     next >= 65 && next <= 70))) &&
                  (formatIndex >= format.length || next !== format[formatIndex].charCodeAt(0))) { // Stop when we read something that is coming up
                buffer.push(String.fromCharCode(next));
                next = get();
                curr++;
                first = false;
              } else {
                break;
              }
            }
            unget();
          }
          if (buffer.length === 0) return 0;  // Failure.
          if (suppressAssignment) continue;
          var text = buffer.join('');
          var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += Runtime.getAlignSize('void*', null, true);
          switch (type) {
            case 'd': case 'u': case 'i':
              if (half) {
                HEAP16[((argPtr)>>1)]=parseInt(text, 10);
              } else if (longLong) {
                (tempI64 = [parseInt(text, 10)>>>0,(tempDouble=parseInt(text, 10),(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((argPtr)>>2)]=tempI64[0],HEAP32[(((argPtr)+(4))>>2)]=tempI64[1]);
              } else {
                HEAP32[((argPtr)>>2)]=parseInt(text, 10);
              }
              break;
            case 'X':
            case 'x':
              HEAP32[((argPtr)>>2)]=parseInt(text, 16)
              break;
            case 'F':
            case 'f':
            case 'E':
            case 'e':
            case 'G':
            case 'g':
            case 'E':
              // fallthrough intended
              if (long_) {
                HEAPF64[((argPtr)>>3)]=parseFloat(text)
              } else {
                HEAPF32[((argPtr)>>2)]=parseFloat(text)
              }
              break;
            case 's':
              var array = intArrayFromString(text);
              for (var j = 0; j < array.length; j++) {
                HEAP8[(((argPtr)+(j))|0)]=array[j]
              }
              break;
          }
          fields++;
        } else if (format[formatIndex].charCodeAt(0) in __scanString.whiteSpace) {
          next = get();
          while (next in __scanString.whiteSpace) {
            if (next <= 0) break mainLoop;  // End of input.
            next = get();
          }
          unget(next);
          formatIndex++;
        } else {
          // Not a specifier.
          next = get();
          if (format[formatIndex].charCodeAt(0) !== next) {
            unget(next);
            break mainLoop;
          }
          formatIndex++;
        }
      }
      return fields;
    }function _sscanf(s, format, varargs) {
      // int sscanf(const char *restrict s, const char *restrict format, ... );
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/scanf.html
      var index = 0;
      function get() { return HEAP8[(((s)+(index++))|0)]; };
      function unget() { index--; };
      return __scanString(format, get, unget, varargs);
    }
  function _catopen() { throw 'TODO: ' + aborter }
  function _catgets() { throw 'TODO: ' + aborter }
  function _catclose() { throw 'TODO: ' + aborter }
  function _newlocale(mask, locale, base) {
      return _malloc(4);
    }
  function _freelocale(locale) {
      _free(locale);
    }
  function _isascii(chr) {
      return chr >= 0 && (chr & 0x80) == 0;
    }
  function ___ctype_b_loc() {
      // http://refspecs.freestandards.org/LSB_3.0.0/LSB-Core-generic/LSB-Core-generic/baselib---ctype-b-loc.html
      var me = ___ctype_b_loc;
      if (!me.ret) {
        var values = [
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,8195,8194,8194,8194,8194,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,24577,49156,49156,49156,
          49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,55304,55304,55304,55304,55304,55304,55304,55304,
          55304,55304,49156,49156,49156,49156,49156,49156,49156,54536,54536,54536,54536,54536,54536,50440,50440,50440,50440,50440,
          50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,49156,49156,49156,49156,49156,
          49156,54792,54792,54792,54792,54792,54792,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,
          50696,50696,50696,50696,50696,50696,50696,49156,49156,49156,49156,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        ];
        var i16size = 2;
        var arr = _malloc(values.length * i16size);
        for (var i = 0; i < values.length; i++) {
          HEAP16[(((arr)+(i * i16size))>>1)]=values[i]
        }
        me.ret = allocate([arr + 128 * i16size], 'i16*', ALLOC_NORMAL);
      }
      return me.ret;
    }
  function ___ctype_tolower_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-tolower-loc.html
      var me = ___ctype_tolower_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,91,92,93,94,95,96,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,
          134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,
          164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,
          194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,
          224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,
          254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i]
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }
  function ___ctype_toupper_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-toupper-loc.html
      var me = ___ctype_toupper_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,
          73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,
          81,82,83,84,85,86,87,88,89,90,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,
          145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,
          175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,
          205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,
          235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i]
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }
  function __isLeapYear(year) {
        return year%4 === 0 && (year%100 !== 0 || year%400 === 0);
    }
  function __arraySum(array, index) {
      var sum = 0;
      for (var i = 0; i <= index; sum += array[i++]);
      return sum;
    }
  var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];
  var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date, days) {
      var newDate = new Date(date.getTime());
      while(days > 0) {
        var leap = __isLeapYear(newDate.getFullYear());
        var currentMonth = newDate.getMonth();
        var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
        if (days > daysInCurrentMonth-newDate.getDate()) {
          // we spill over to next month
          days -= (daysInCurrentMonth-newDate.getDate()+1);
          newDate.setDate(1);
          if (currentMonth < 11) {
            newDate.setMonth(currentMonth+1)
          } else {
            newDate.setMonth(0);
            newDate.setFullYear(newDate.getFullYear()+1);
          }
        } else {
          // we stay in current month 
          newDate.setDate(newDate.getDate()+days);
          return newDate;
        }
      }
      return newDate;
    }function _strftime(s, maxsize, format, tm) {
      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html
      var date = {
        tm_sec: HEAP32[((tm)>>2)],
        tm_min: HEAP32[(((tm)+(4))>>2)],
        tm_hour: HEAP32[(((tm)+(8))>>2)],
        tm_mday: HEAP32[(((tm)+(12))>>2)],
        tm_mon: HEAP32[(((tm)+(16))>>2)],
        tm_year: HEAP32[(((tm)+(20))>>2)],
        tm_wday: HEAP32[(((tm)+(24))>>2)],
        tm_yday: HEAP32[(((tm)+(28))>>2)],
        tm_isdst: HEAP32[(((tm)+(32))>>2)]
      };
      var pattern = Pointer_stringify(format);
      // expand format
      var EXPANSION_RULES_1 = {
        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013
        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y
        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d
        '%h': '%b',                       // Equivalent to %b
        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation
        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation
        '%T': '%H:%M:%S',                 // Replaced by the time
        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation
        '%X': '%H:%M:%S',                 // Replaced by the locale's appropriate date representation
      };
      for (var rule in EXPANSION_RULES_1) {
        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);
      }
      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
      function leadingSomething(value, digits, character) {
        var str = typeof value === 'number' ? value.toString() : (value || '');
        while (str.length < digits) {
          str = character[0]+str;
        }
        return str;
      };
      function leadingNulls(value, digits) {
        return leadingSomething(value, digits, '0');
      };
      function compareByDay(date1, date2) {
        function sgn(value) {
          return value < 0 ? -1 : (value > 0 ? 1 : 0);
        };
        var compare;
        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {
          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {
            compare = sgn(date1.getDate()-date2.getDate());
          }
        }
        return compare;
      };
      function getFirstWeekStartDate(janFourth) {
          switch (janFourth.getDay()) {
            case 0: // Sunday
              return new Date(janFourth.getFullYear()-1, 11, 29);
            case 1: // Monday
              return janFourth;
            case 2: // Tuesday
              return new Date(janFourth.getFullYear(), 0, 3);
            case 3: // Wednesday
              return new Date(janFourth.getFullYear(), 0, 2);
            case 4: // Thursday
              return new Date(janFourth.getFullYear(), 0, 1);
            case 5: // Friday
              return new Date(janFourth.getFullYear()-1, 11, 31);
            case 6: // Saturday
              return new Date(janFourth.getFullYear()-1, 11, 30);
          }
      };
      function getWeekBasedYear(date) {
          var thisDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
            // this date is after the start of the first week of this year
            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
              return thisDate.getFullYear()+1;
            } else {
              return thisDate.getFullYear();
            }
          } else { 
            return thisDate.getFullYear()-1;
          }
      };
      var EXPANSION_RULES_2 = {
        '%a': function(date) {
          return WEEKDAYS[date.tm_wday].substring(0,3);
        },
        '%A': function(date) {
          return WEEKDAYS[date.tm_wday];
        },
        '%b': function(date) {
          return MONTHS[date.tm_mon].substring(0,3);
        },
        '%B': function(date) {
          return MONTHS[date.tm_mon];
        },
        '%C': function(date) {
          var year = date.tm_year+1900;
          return leadingNulls(Math.floor(year/100),2);
        },
        '%d': function(date) {
          return leadingNulls(date.tm_mday, 2);
        },
        '%e': function(date) {
          return leadingSomething(date.tm_mday, 2, ' ');
        },
        '%g': function(date) {
          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year. 
          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes 
          // January 4th, which is also the week that includes the first Thursday of the year, and 
          // is also the first week that contains at least four days in the year. 
          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of 
          // the last week of the preceding year; thus, for Saturday 2nd January 1999, 
          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th, 
          // or 31st is a Monday, it and any following days are part of week 1 of the following year. 
          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.
          return getWeekBasedYear(date).toString().substring(2);
        },
        '%G': function(date) {
          return getWeekBasedYear(date);
        },
        '%H': function(date) {
          return leadingNulls(date.tm_hour, 2);
        },
        '%I': function(date) {
          return leadingNulls(date.tm_hour < 13 ? date.tm_hour : date.tm_hour-12, 2);
        },
        '%j': function(date) {
          // Day of the year (001-366)
          return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon-1), 3);
        },
        '%m': function(date) {
          return leadingNulls(date.tm_mon+1, 2);
        },
        '%M': function(date) {
          return leadingNulls(date.tm_min, 2);
        },
        '%n': function() {
          return '\n';
        },
        '%p': function(date) {
          if (date.tm_hour > 0 && date.tm_hour < 13) {
            return 'AM';
          } else {
            return 'PM';
          }
        },
        '%S': function(date) {
          return leadingNulls(date.tm_sec, 2);
        },
        '%t': function() {
          return '\t';
        },
        '%u': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay() || 7;
        },
        '%U': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Sunday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year+1900, 0, 1);
          var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7-janFirst.getDay());
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
          // is target date after the first Sunday?
          if (compareByDay(firstSunday, endDate) < 0) {
            // calculate difference in days between first Sunday and endDate
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstSundayUntilEndJanuary = 31-firstSunday.getDate();
            var days = firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
          return compareByDay(firstSunday, janFirst) === 0 ? '01': '00';
        },
        '%V': function(date) {
          // Replaced by the week number of the year (Monday as the first day of the week) 
          // as a decimal number [01,53]. If the week containing 1 January has four 
          // or more days in the new year, then it is considered week 1. 
          // Otherwise, it is the last week of the previous year, and the next week is week 1. 
          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]
          var janFourthThisYear = new Date(date.tm_year+1900, 0, 4);
          var janFourthNextYear = new Date(date.tm_year+1901, 0, 4);
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
          var endDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
          if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
            // if given date is before this years first week, then it belongs to the 53rd week of last year
            return '53';
          } 
          if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
            // if given date is after next years first week, then it belongs to the 01th week of next year
            return '01';
          }
          // given date is in between CW 01..53 of this calendar year
          var daysDifference;
          if (firstWeekStartThisYear.getFullYear() < date.tm_year+1900) {
            // first CW of this year starts last year
            daysDifference = date.tm_yday+32-firstWeekStartThisYear.getDate()
          } else {
            // first CW of this year starts this year
            daysDifference = date.tm_yday+1-firstWeekStartThisYear.getDate();
          }
          return leadingNulls(Math.ceil(daysDifference/7), 2);
        },
        '%w': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay();
        },
        '%W': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Monday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year, 0, 1);
          var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7-janFirst.getDay()+1);
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
          // is target date after the first Monday?
          if (compareByDay(firstMonday, endDate) < 0) {
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstMondayUntilEndJanuary = 31-firstMonday.getDate();
            var days = firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
          return compareByDay(firstMonday, janFirst) === 0 ? '01': '00';
        },
        '%y': function(date) {
          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]
          return (date.tm_year+1900).toString().substring(2);
        },
        '%Y': function(date) {
          // Replaced by the year as a decimal number (for example, 1997). [ tm_year]
          return date.tm_year+1900;
        },
        '%z': function(date) {
          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ),
          // or by no characters if no timezone is determinable. 
          // For example, "-0430" means 4 hours 30 minutes behind UTC (west of Greenwich). 
          // If tm_isdst is zero, the standard time offset is used. 
          // If tm_isdst is greater than zero, the daylight savings time offset is used. 
          // If tm_isdst is negative, no characters are returned. 
          // FIXME: we cannot determine time zone (or can we?)
          return '';
        },
        '%Z': function(date) {
          // Replaced by the timezone name or abbreviation, or by no bytes if no timezone information exists. [ tm_isdst]
          // FIXME: we cannot determine time zone (or can we?)
          return '';
        },
        '%%': function() {
          return '%';
        }
      };
      for (var rule in EXPANSION_RULES_2) {
        if (pattern.indexOf(rule) >= 0) {
          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));
        }
      }
      var bytes = intArrayFromString(pattern, false);
      if (bytes.length > maxsize) {
        return 0;
      } 
      writeArrayToMemory(bytes, s);
      return bytes.length-1;
    }var _strftime_l=_strftime;
  function __parseInt64(str, endptr, base, min, max, unsign) {
      var isNegative = false;
      // Skip space.
      while (_isspace(HEAP8[(str)])) str++;
      // Check for a plus/minus sign.
      if (HEAP8[(str)] == 45) {
        str++;
        isNegative = true;
      } else if (HEAP8[(str)] == 43) {
        str++;
      }
      // Find base.
      var ok = false;
      var finalBase = base;
      if (!finalBase) {
        if (HEAP8[(str)] == 48) {
          if (HEAP8[((str+1)|0)] == 120 ||
              HEAP8[((str+1)|0)] == 88) {
            finalBase = 16;
            str += 2;
          } else {
            finalBase = 8;
            ok = true; // we saw an initial zero, perhaps the entire thing is just "0"
          }
        }
      } else if (finalBase==16) {
        if (HEAP8[(str)] == 48) {
          if (HEAP8[((str+1)|0)] == 120 ||
              HEAP8[((str+1)|0)] == 88) {
            str += 2;
          }
        }
      }
      if (!finalBase) finalBase = 10;
      var start = str;
      // Get digits.
      var chr;
      while ((chr = HEAP8[(str)]) != 0) {
        var digit = parseInt(String.fromCharCode(chr), finalBase);
        if (isNaN(digit)) {
          break;
        } else {
          str++;
          ok = true;
        }
      }
      if (!ok) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return ((asm["setTempRet0"](0),0)|0);
      }
      // Set end pointer.
      if (endptr) {
        HEAP32[((endptr)>>2)]=str
      }
      try {
        var numberString = isNegative ? '-'+Pointer_stringify(start, str - start) : Pointer_stringify(start, str - start);
        i64Math.fromString(numberString, finalBase, min, max, unsign);
      } catch(e) {
        ___setErrNo(ERRNO_CODES.ERANGE); // not quite correct
      }
      return ((asm["setTempRet0"](((HEAP32[(((tempDoublePtr)+(4))>>2)])|0)),((HEAP32[((tempDoublePtr)>>2)])|0))|0);
    }function _strtoull(str, endptr, base) {
      return __parseInt64(str, endptr, base, 0, '18446744073709551615', true);  // ULONG_MAX.
    }var _strtoull_l=_strtoull;
  function _strtoll(str, endptr, base) {
      return __parseInt64(str, endptr, base, '-9223372036854775808', '9223372036854775807');  // LLONG_MIN, LLONG_MAX.
    }var _strtoll_l=_strtoll;
  function _uselocale(locale) {
      return 0;
    }
  var _llvm_va_start=undefined;
  function _sprintf(s, format, varargs) {
      // int sprintf(char *restrict s, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      return _snprintf(s, undefined, format, varargs);
    }function _asprintf(s, format, varargs) {
      return _sprintf(-s, format, varargs);
    }function _vasprintf(s, format, va_arg) {
      return _asprintf(s, format, HEAP32[((va_arg)>>2)]);
    }
  function _llvm_va_end() {}
  function _vsnprintf(s, n, format, va_arg) {
      return _snprintf(s, n, format, HEAP32[((va_arg)>>2)]);
    }
  function _vsscanf(s, format, va_arg) {
      return _sscanf(s, format, HEAP32[((va_arg)>>2)]);
    }
  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) self.alloc(bytes);
      return ret;  // Previous break location.
    }
  function _time(ptr) {
      var ret = Math.floor(Date.now()/1000);
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret
      }
      return ret;
    }
  function ___cxa_call_unexpected(exception) {
      Module.printErr('Unexpected exception thrown, this is not properly supported - aborting');
      ABORT = true;
      throw exception;
    }
_llvm_eh_exception.buf = allocate(12, "void*", ALLOC_STATIC);
GL.init()
Module["requestFullScreen"] = function Module_requestFullScreen(lockPointer, resizeCanvas) { Browser.requestFullScreen(lockPointer, resizeCanvas) };
  Module["requestAnimationFrame"] = function Module_requestAnimationFrame(func) { Browser.requestAnimationFrame(func) };
  Module["setCanvasSize"] = function Module_setCanvasSize(width, height, noUpdates) { Browser.setCanvasSize(width, height, noUpdates) };
  Module["pauseMainLoop"] = function Module_pauseMainLoop() { Browser.mainLoop.pause() };
  Module["resumeMainLoop"] = function Module_resumeMainLoop() { Browser.mainLoop.resume() };
  Module["getUserMedia"] = function Module_getUserMedia() { Browser.getUserMedia() }
FS.staticInit();__ATINIT__.unshift({ func: function() { if (!Module["noFSInit"] && !FS.init.initialized) FS.init() } });__ATMAIN__.push({ func: function() { FS.ignorePermissions = false } });__ATEXIT__.push({ func: function() { FS.quit() } });Module["FS_createFolder"] = FS.createFolder;Module["FS_createPath"] = FS.createPath;Module["FS_createDataFile"] = FS.createDataFile;Module["FS_createPreloadedFile"] = FS.createPreloadedFile;Module["FS_createLazyFile"] = FS.createLazyFile;Module["FS_createLink"] = FS.createLink;Module["FS_createDevice"] = FS.createDevice;
___errno_state = Runtime.staticAlloc(4); HEAP32[((___errno_state)>>2)]=0;
__ATINIT__.unshift({ func: function() { TTY.init() } });__ATEXIT__.push({ func: function() { TTY.shutdown() } });TTY.utf8 = new Runtime.UTF8Processor();
if (ENVIRONMENT_IS_NODE) { var fs = require("fs"); NODEFS.staticInit(); }
__ATINIT__.push({ func: function() { SOCKFS.root = FS.mount(SOCKFS, {}, null); } });
_fgetc.ret = allocate([0], "i8", ALLOC_STATIC);
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);
staticSealed = true; // seal the static portion of memory
STACK_MAX = STACK_BASE + 5242880;
DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);
assert(DYNAMIC_BASE < TOTAL_MEMORY); // Stack must fit in TOTAL_MEMORY; allocations from here on may enlarge TOTAL_MEMORY
 var ctlz_i8 = allocate([8,7,6,6,5,5,5,5,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_DYNAMIC);
 var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_DYNAMIC);
var Math_min = Math.min;
function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_fi(index,a1) {
  try {
    return Module["dynCall_fi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_vidd(index,a1,a2,a3) {
  try {
    Module["dynCall_vidd"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiiiid(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiid"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiiid(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiid"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    return Module["dynCall_iiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {
  try {
    Module["dynCall_viiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    Module["dynCall_viiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function asmPrintInt(x, y) {
  Module.print('int ' + x + ',' + y);// + ' ' + new Error().stack);
}
function asmPrintFloat(x, y) {
  Module.print('float ' + x + ',' + y);// + ' ' + new Error().stack);
}
// EMSCRIPTEN_START_ASM
var asm=(function(global,env,buffer){"use asm";var a=new global.Int8Array(buffer);var b=new global.Int16Array(buffer);var c=new global.Int32Array(buffer);var d=new global.Uint8Array(buffer);var e=new global.Uint16Array(buffer);var f=new global.Uint32Array(buffer);var g=new global.Float32Array(buffer);var h=new global.Float64Array(buffer);var i=env.STACKTOP|0;var j=env.STACK_MAX|0;var k=env.tempDoublePtr|0;var l=env.ABORT|0;var m=env.cttz_i8|0;var n=env.ctlz_i8|0;var o=env._stdin|0;var p=env.__ZTVN10__cxxabiv117__class_type_infoE|0;var q=env.__ZTVN10__cxxabiv120__si_class_type_infoE|0;var r=env._stderr|0;var s=env.___fsmu8|0;var t=env._stdout|0;var u=env.___dso_handle|0;var v=+env.NaN;var w=+env.Infinity;var x=0;var y=0;var z=0;var A=0;var B=0,C=0,D=0,E=0,F=0.0,G=0,H=0,I=0,J=0.0;var K=0;var L=0;var M=0;var N=0;var O=0;var P=0;var Q=0;var R=0;var S=0;var T=0;var U=global.Math.floor;var V=global.Math.abs;var W=global.Math.sqrt;var X=global.Math.pow;var Y=global.Math.cos;var Z=global.Math.sin;var _=global.Math.tan;var $=global.Math.acos;var aa=global.Math.asin;var ab=global.Math.atan;var ac=global.Math.atan2;var ad=global.Math.exp;var ae=global.Math.log;var af=global.Math.ceil;var ag=global.Math.imul;var ah=env.abort;var ai=env.assert;var aj=env.asmPrintInt;var ak=env.asmPrintFloat;var al=env.min;var am=env.invoke_viiiii;var an=env.invoke_fi;var ao=env.invoke_viiii;var ap=env.invoke_vi;var aq=env.invoke_vii;var ar=env.invoke_vidd;var as=env.invoke_iiiii;var at=env.invoke_viiiiiid;var au=env.invoke_ii;var av=env.invoke_iiii;var aw=env.invoke_viiiiiii;var ax=env.invoke_viiiiid;var ay=env.invoke_v;var az=env.invoke_iiiiiiiii;var aA=env.invoke_viiiiiiiii;var aB=env.invoke_viiiiiiii;var aC=env.invoke_viiiiii;var aD=env.invoke_iii;var aE=env.invoke_iiiiii;var aF=env.invoke_viii;var aG=env._llvm_lifetime_end;var aH=env._lseek;var aI=env.__scanString;var aJ=env._fclose;var aK=env._pthread_mutex_lock;var aL=env.___cxa_end_catch;var aM=env._glLinkProgram;var aN=env._strtoull;var aO=env._glBindTexture;var aP=env._fflush;var aQ=env._isxdigit;var aR=env._strtol;var aS=env.__isLeapYear;var aT=env._fwrite;var aU=env._llvm_eh_exception;var aV=env._llvm_umul_with_overflow_i32;var aW=env._glCompileShader;var aX=env._isspace;var aY=env._read;var aZ=env._glfwSetMousePosCallback;var a_=env._fsync;var a$=env._glGenTextures;var a0=env._newlocale;var a1=env.___gxx_personality_v0;var a2=env._glDeleteShader;var a3=env._pthread_cond_wait;var a4=env.___cxa_rethrow;var a5=env.___resumeException;var a6=env._div;var a7=env._glCreateShader;var a8=env._strcmp;var a9=env._strncmp;var ba=env._vsscanf;var bb=env._snprintf;var bc=env._fgetc;var bd=env._glVertexAttribPointer;var be=env.__getFloat;var bf=env._atexit;var bg=env.___cxa_free_exception;var bh=env._glGetUniformLocation;var bi=env._close;var bj=env.___setErrNo;var bk=env.___cxa_guard_abort;var bl=env._glDrawArrays;var bm=env._exit;var bn=env._sprintf;var bo=env._asprintf;var bp=env.___ctype_b_loc;var bq=env._freelocale;var br=env._glAttachShader;var bs=env._emscripten_set_main_loop;var bt=env._catgets;var bu=env.___cxa_is_number_type;var bv=env._llvm_uadd_with_overflow_i32;var bw=env.___cxa_does_inherit;var bx=env.___cxa_guard_acquire;var by=env.___cxa_begin_catch;var bz=env._recv;var bA=env._glfwGetMousePos;var bB=env.__parseInt64;var bC=env.__ZSt18uncaught_exceptionv;var bD=env._cos;var bE=env.___cxa_call_unexpected;var bF=env._glGetShaderiv;var bG=env.__exit;var bH=env._strftime;var bI=env._rand;var bJ=env._fabsf;var bK=env.___cxa_throw;var bL=env._glDisableVertexAttribArray;var bM=env._ldexp;var bN=env._send;var bO=env._glShaderSource;var bP=env._pread;var bQ=env._fopen;var bR=env._open;var bS=env._sqrtf;var bT=env.__arraySum;var bU=env._sysconf;var bV=env._glClear;var bW=env._glEnableVertexAttribArray;var bX=env._glBindBuffer;var bY=env.___cxa_find_matching_catch;var bZ=env._glUniform4f;var b_=env._glfwOpenWindow;var b$=env._glBufferData;var b0=env.__reallyNegative;var b1=env.__formatString;var b2=env._pthread_cond_broadcast;var b3=env.__ZSt9terminatev;var b4=env._isascii;var b5=env._pthread_mutex_unlock;var b6=env._llvm_pow_f64;var b7=env._sbrk;var b8=env.___errno_location;var b9=env._strerror;var ca=env._glfwInit;var cb=env._catclose;var cc=env._llvm_lifetime_start;var cd=env._glfwSwapBuffers;var ce=env.__parseInt;var cf=env.___cxa_guard_release;var cg=env._ungetc;var ch=env._uselocale;var ci=env._vsnprintf;var cj=env._glUseProgram;var ck=env._sscanf;var cl=env._glTexImage2D;var cm=env.___assert_fail;var cn=env._glfwGetWindowSize;var co=env._fread;var cp=env._abort;var cq=env._sincos;var cr=env._isdigit;var cs=env._strtoll;var ct=env._feof;var cu=env.__addDays;var cv=env._fseek;var cw=env._write;var cx=env._glGenBuffers;var cy=env.___cxa_allocate_exception;var cz=env._sin;var cA=env._glCreateProgram;var cB=env._vasprintf;var cC=env._glViewport;var cD=env._glfwPollEvents;var cE=env._catopen;var cF=env.___ctype_toupper_loc;var cG=env.___ctype_tolower_loc;var cH=env._llvm_va_end;var cI=env._glUniformMatrix4fv;var cJ=env._pwrite;var cK=env._strerror_r;var cL=env._glTexParameteri;var cM=env._glfwSetKeyCallback;var cN=env._glfwSetMouseButtonCallback;var cO=env._atan2;var cP=env._time;var cQ=0.0;
// EMSCRIPTEN_START_FUNCS
function e0(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aK=0,aL=0,aM=0,aN=0,aO=0,aP=0,aQ=0,aR=0,aS=0,aT=0,aU=0,aV=0,aW=0,aX=0,aY=0,aZ=0,a_=0,a$=0,a0=0,a1=0,a2=0,a3=0,a4=0,a5=0,a6=0,a7=0,a8=0,a9=0,ba=0,bb=0,bc=0,bd=0,be=0,bf=0,bg=0,bh=0,bi=0,bj=0,bk=0,bl=0,bm=0,bn=0,bo=0,bp=0,bq=0,br=0,bs=0,bt=0,bu=0,bv=0,bw=0,bx=0,by=0,bz=0,bA=0,bB=0,bC=0,bD=0,bE=0,bF=0,bG=0,bH=0,bI=0,bJ=0,bK=0,bL=0,bM=0,bN=0,bO=0,bP=0,bQ=0,bR=0,bS=0,bT=0,bU=0,bV=0,bW=0,bX=0,bY=0,bZ=0,b_=0,b$=0,b0=0,b1=0,b2=0,b3=0,b4=0,b5=0,b6=0,b7=0,b8=0,b9=0,ca=0,cb=0,cc=0,cd=0,ce=0,cf=0,cg=0,ch=0,ci=0,cj=0,ck=0,cl=0,cn=0,co=0,cp=0,cq=0,cr=0,cs=0,ct=0,cu=0,cv=0,cw=0,cx=0,cy=0,cz=0,cA=0,cB=0,cC=0,cD=0,cE=0,cF=0,cG=0,cH=0,cI=0,cJ=0,cK=0,cL=0,cM=0,cN=0,cO=0,cP=0,cQ=0,cR=0,cS=0,cT=0,cU=0,cW=0,cX=0,cY=0,cZ=0,c$=0,c0=0,c1=0,c2=0,c3=0,c4=0,c5=0,c6=0,c7=0,c8=0,c9=0,da=0,db=0,dc=0,dd=0,de=0,df=0,dg=0,dh=0,di=0,dj=0,dk=0,dl=0,dm=0,dn=0,dp=0,dq=0,dr=0,ds=0,dt=0,du=0,dv=0,dw=0,dx=0,dy=0,dz=0,dA=0,dB=0,dC=0,dD=0,dE=0,dF=0,dG=0,dH=0,dI=0,dJ=0,dK=0,dL=0,dM=0,dN=0,dO=0,dP=0,dQ=0,dR=0,dS=0,dT=0,dU=0,dV=0,dW=0,dX=0,dY=0,dZ=0,d_=0,d$=0,d0=0,d1=0,d2=0,d3=0,d4=0,d5=0,d6=0,d7=0,d8=0,d9=0,ea=0,eb=0,ec=0,ed=0,ee=0,ef=0,eg=0,eh=0,ei=0,ej=0,ek=0,el=0,em=0,en=0,eo=0,ep=0,eq=0,er=0,es=0,et=0,eu=0,ev=0,ew=0,ex=0,ey=0,ez=0,eA=0,eB=0,eC=0,eD=0,eE=0,eF=0,eG=0,eH=0,eI=0,eJ=0,eK=0,eL=0,eM=0,eN=0,eO=0,eP=0,eQ=0,eR=0,eS=0,eT=0,eU=0,eV=0,eW=0,eX=0,eY=0,e_=0,e$=0,e0=0,e1=0,e2=0,e3=0,e4=0,e5=0,e6=0,e7=0,e8=0,e9=0,fa=0,fb=0,fc=0,fd=0,fe=0,ff=0,fg=0,fh=0,fi=0,fj=0,fk=0,fl=0,fm=0,fn=0,fo=0,fp=0,fq=0,fr=0,fs=0,ft=0,fu=0,fv=0,fw=0,fx=0,fy=0,fz=0,fA=0,fB=0,fC=0,fD=0,fE=0,fF=0,fG=0,fH=0,fI=0,fJ=0,fK=0,fL=0,fM=0,fN=0,fO=0,fP=0,fQ=0,fR=0,fS=0,fT=0,fU=0,fV=0,fW=0,fX=0,fY=0,fZ=0,f_=0,f$=0,f0=0,f1=0,f2=0,f3=0,f4=0,f5=0,f6=0,f7=0,f8=0,f9=0,ga=0,gb=0,gc=0,gd=0,ge=0,gf=0,gg=0,gh=0,gi=0,gj=0,gk=0,gl=0,gm=0,gn=0,go=0,gp=0,gq=0,gr=0,gs=0,gt=0,gu=0,gv=0,gw=0,gx=0,gy=0,gz=0,gA=0,gB=0,gC=0,gD=0,gE=0,gF=0,gG=0,gH=0,gI=0,gJ=0,gK=0,gL=0,gM=0,gN=0,gO=0,gP=0,gQ=0,gR=0,gS=0,gT=0,gU=0,gV=0,gW=0,gX=0,gY=0,gZ=0,g_=0,g$=0,g0=0,g1=0,g2=0,g3=0,g4=0,g5=0,g6=0,g7=0,g8=0,g9=0,ha=0,hb=0,hc=0,hd=0,he=0,hf=0,hg=0,hh=0,hi=0,hj=0,hk=0,hl=0,hm=0,hn=0,ho=0,hp=0,hq=0,hr=0,hs=0,ht=0,hu=0,hv=0,hw=0,hx=0,hy=0,hz=0,hA=0,hB=0,hC=0,hD=0,hE=0,hF=0,hG=0,hH=0,hI=0,hJ=0,hK=0,hL=0,hM=0,hN=0,hO=0,hP=0,hQ=0,hR=0,hS=0,hT=0,hU=0,hV=0,hW=0,hX=0,hY=0,hZ=0,h_=0,h$=0,h0=0,h1=0,h2=0,h3=0,h4=0,h5=0,h6=0,h7=0,h8=0,h9=0,ia=0,ib=0,ic=0,id=0,ie=0,ig=0,ih=0,ii=0,ij=0,ik=0,il=0,im=0,io=0,ip=0,iq=0,ir=0,is=0,it=0,iu=0,iv=0,iw=0,ix=0,iy=0,iz=0,iA=0,iB=0,iC=0,iD=0,iE=0,iF=0,iG=0,iH=0,iI=0,iJ=0,iK=0,iL=0,iM=0,iN=0,iO=0,iP=0,iQ=0,iR=0,iS=0,iT=0,iU=0,iV=0,iW=0,iX=0,iY=0,iZ=0,i_=0,i$=0,i0=0,i1=0,i2=0,i3=0,i4=0,i5=0,i6=0,i7=0,i8=0,i9=0,ja=0,jb=0,jc=0,jd=0,je=0,jf=0,jg=0,jh=0,ji=0,jj=0,jk=0,jl=0,jm=0,jn=0,jo=0,jp=0,jq=0,jr=0,js=0,jt=0,ju=0,jv=0,jw=0,jx=0,jy=0,jz=0,jA=0,jB=0,jC=0,jD=0,jE=0,jF=0,jG=0,jH=0,jI=0,jJ=0;j=i;i=i+1024|0;k=j|0;l=b+168|0;m=c[l>>2]|0;n=b+172|0;do{if(m>>>0<(c[n>>2]|0)>>>0){o=m;p=1034}else{q=b+32|0;if((c[q>>2]|0)==0){break}r=b+40|0;s=c_[c[b+16>>2]&63](c[b+28>>2]|0,r,c[b+36>>2]|0)|0;if((s|0)==0){c[q>>2]=0;q=(c[n>>2]|0)-1|0;c[l>>2]=q;a[q]=0;o=c[l>>2]|0;p=1034;break}else{c[l>>2]=r;c[n>>2]=b+40+s;o=r;p=1034;break}}}while(0);L1392:do{if((p|0)==1034){m=o+1|0;c[l>>2]=m;if((a[o]|0)!=66){break}do{if(m>>>0<(c[n>>2]|0)>>>0){t=m}else{r=b+32|0;if((c[r>>2]|0)==0){break L1392}s=b+40|0;q=c_[c[b+16>>2]&63](c[b+28>>2]|0,s,c[b+36>>2]|0)|0;if((q|0)==0){c[r>>2]=0;r=(c[n>>2]|0)-1|0;c[l>>2]=r;a[r]=0;t=c[l>>2]|0;break}else{c[l>>2]=s;c[n>>2]=b+40+q;t=s;break}}}while(0);m=t+1|0;c[l>>2]=m;if((a[t]|0)!=77){break}s=c[n>>2]|0;do{if(m>>>0<s>>>0){q=t+2|0;c[l>>2]=q;u=q;v=s}else{q=b+32|0;if((c[q>>2]|0)==0){u=m;v=s;break}r=b+40|0;w=c_[c[b+16>>2]&63](c[b+28>>2]|0,r,c[b+36>>2]|0)|0;if((w|0)==0){c[q>>2]=0;q=(c[n>>2]|0)-1|0;c[l>>2]=q;a[q]=0;x=c[l>>2]|0;y=c[n>>2]|0}else{c[l>>2]=r;q=b+40+w|0;c[n>>2]=q;x=r;y=q}q=x+1|0;c[l>>2]=q;u=q;v=y}}while(0);do{if(u>>>0<v>>>0){s=u+1|0;c[l>>2]=s;z=s;A=v}else{s=b+32|0;if((c[s>>2]|0)==0){z=u;A=v;break}m=b+40|0;q=c_[c[b+16>>2]&63](c[b+28>>2]|0,m,c[b+36>>2]|0)|0;if((q|0)==0){c[s>>2]=0;s=(c[n>>2]|0)-1|0;c[l>>2]=s;a[s]=0;B=c[l>>2]|0;C=c[n>>2]|0}else{c[l>>2]=m;s=b+40+q|0;c[n>>2]=s;B=m;C=s}s=B+1|0;c[l>>2]=s;z=s;A=C}}while(0);do{if(z>>>0<A>>>0){s=z+1|0;c[l>>2]=s;D=s;E=A}else{s=b+32|0;if((c[s>>2]|0)==0){D=z;E=A;break}m=b+40|0;q=c_[c[b+16>>2]&63](c[b+28>>2]|0,m,c[b+36>>2]|0)|0;if((q|0)==0){c[s>>2]=0;s=(c[n>>2]|0)-1|0;c[l>>2]=s;a[s]=0;F=c[l>>2]|0;G=c[n>>2]|0}else{c[l>>2]=m;s=b+40+q|0;c[n>>2]=s;F=m;G=s}s=F+1|0;c[l>>2]=s;D=s;E=G}}while(0);do{if(D>>>0<E>>>0){s=D+1|0;c[l>>2]=s;H=s;I=E}else{s=b+32|0;if((c[s>>2]|0)==0){H=D;I=E;break}m=b+40|0;q=c_[c[b+16>>2]&63](c[b+28>>2]|0,m,c[b+36>>2]|0)|0;if((q|0)==0){c[s>>2]=0;s=(c[n>>2]|0)-1|0;c[l>>2]=s;a[s]=0;J=c[l>>2]|0;K=c[n>>2]|0}else{c[l>>2]=m;s=b+40+q|0;c[n>>2]=s;J=m;K=s}s=J+1|0;c[l>>2]=s;H=s;I=K}}while(0);do{if(H>>>0<I>>>0){s=H+1|0;c[l>>2]=s;L=s;M=I}else{s=b+32|0;if((c[s>>2]|0)==0){L=H;M=I;break}m=b+40|0;q=c_[c[b+16>>2]&63](c[b+28>>2]|0,m,c[b+36>>2]|0)|0;if((q|0)==0){c[s>>2]=0;s=(c[n>>2]|0)-1|0;c[l>>2]=s;a[s]=0;N=c[l>>2]|0;O=c[n>>2]|0}else{c[l>>2]=m;s=b+40+q|0;c[n>>2]=s;N=m;O=s}s=N+1|0;c[l>>2]=s;L=s;M=O}}while(0);do{if(L>>>0<M>>>0){s=L+1|0;c[l>>2]=s;P=s;Q=M}else{s=b+32|0;if((c[s>>2]|0)==0){P=L;Q=M;break}m=b+40|0;q=c_[c[b+16>>2]&63](c[b+28>>2]|0,m,c[b+36>>2]|0)|0;if((q|0)==0){c[s>>2]=0;s=(c[n>>2]|0)-1|0;c[l>>2]=s;a[s]=0;R=c[l>>2]|0;S=c[n>>2]|0}else{c[l>>2]=m;s=b+40+q|0;c[n>>2]=s;R=m;S=s}s=R+1|0;c[l>>2]=s;P=s;Q=S}}while(0);do{if(P>>>0<Q>>>0){s=P+1|0;c[l>>2]=s;T=s;U=Q}else{s=b+32|0;if((c[s>>2]|0)==0){T=P;U=Q;break}m=b+40|0;q=c_[c[b+16>>2]&63](c[b+28>>2]|0,m,c[b+36>>2]|0)|0;if((q|0)==0){c[s>>2]=0;s=(c[n>>2]|0)-1|0;c[l>>2]=s;a[s]=0;V=c[l>>2]|0;W=c[n>>2]|0}else{c[l>>2]=m;s=b+40+q|0;c[n>>2]=s;V=m;W=s}s=V+1|0;c[l>>2]=s;T=s;U=W}}while(0);do{if(T>>>0<U>>>0){s=T+1|0;c[l>>2]=s;X=s;Y=U}else{s=b+32|0;if((c[s>>2]|0)==0){X=T;Y=U;break}m=b+40|0;q=c_[c[b+16>>2]&63](c[b+28>>2]|0,m,c[b+36>>2]|0)|0;if((q|0)==0){c[s>>2]=0;s=(c[n>>2]|0)-1|0;c[l>>2]=s;a[s]=0;Z=c[l>>2]|0;_=c[n>>2]|0}else{c[l>>2]=m;s=b+40+q|0;c[n>>2]=s;Z=m;_=s}s=Z+1|0;c[l>>2]=s;X=s;Y=_}}while(0);do{if(X>>>0<Y>>>0){s=X+1|0;c[l>>2]=s;$=d[X]|0;aa=s;ab=Y}else{s=b+32|0;if((c[s>>2]|0)==0){$=0;aa=X;ab=Y;break}m=b+40|0;q=c_[c[b+16>>2]&63](c[b+28>>2]|0,m,c[b+36>>2]|0)|0;if((q|0)==0){c[s>>2]=0;s=(c[n>>2]|0)-1|0;c[l>>2]=s;a[s]=0;ac=c[l>>2]|0;ad=c[n>>2]|0}else{c[l>>2]=m;s=b+40+q|0;c[n>>2]=s;ac=m;ad=s}s=ac+1|0;c[l>>2]=s;$=d[ac]|0;aa=s;ab=ad}}while(0);do{if(aa>>>0<ab>>>0){s=aa+1|0;c[l>>2]=s;ae=d[aa]|0;af=s;ah=ab}else{s=b+32|0;if((c[s>>2]|0)==0){ae=0;af=aa;ah=ab;break}m=b+40|0;q=c_[c[b+16>>2]&63](c[b+28>>2]|0,m,c[b+36>>2]|0)|0;if((q|0)==0){c[s>>2]=0;s=(c[n>>2]|0)-1|0;c[l>>2]=s;a[s]=0;ai=c[l>>2]|0;aj=c[n>>2]|0}else{c[l>>2]=m;s=b+40+q|0;c[n>>2]=s;ai=m;aj=s}s=ai+1|0;c[l>>2]=s;ae=d[ai]|0;af=s;ah=aj}}while(0);s=ae<<8|$;do{if(af>>>0<ah>>>0){m=af+1|0;c[l>>2]=m;ak=d[af]|0;al=m;am=ah}else{m=b+32|0;if((c[m>>2]|0)==0){ak=0;al=af;am=ah;break}q=b+40|0;r=c_[c[b+16>>2]&63](c[b+28>>2]|0,q,c[b+36>>2]|0)|0;if((r|0)==0){c[m>>2]=0;m=(c[n>>2]|0)-1|0;c[l>>2]=m;a[m]=0;an=c[l>>2]|0;ao=c[n>>2]|0}else{c[l>>2]=q;m=b+40+r|0;c[n>>2]=m;an=q;ao=m}m=an+1|0;c[l>>2]=m;ak=d[an]|0;al=m;am=ao}}while(0);do{if(al>>>0<am>>>0){m=al+1|0;c[l>>2]=m;ap=d[al]|0;aq=m;ar=am}else{m=b+32|0;if((c[m>>2]|0)==0){ap=0;aq=al;ar=am;break}q=b+40|0;r=c_[c[b+16>>2]&63](c[b+28>>2]|0,q,c[b+36>>2]|0)|0;if((r|0)==0){c[m>>2]=0;m=(c[n>>2]|0)-1|0;c[l>>2]=m;a[m]=0;as=c[l>>2]|0;at=c[n>>2]|0}else{c[l>>2]=q;m=b+40+r|0;c[n>>2]=m;as=q;at=m}m=as+1|0;c[l>>2]=m;ap=d[as]|0;aq=m;ar=at}}while(0);m=s|(ap<<8|ak)<<16;do{if(aq>>>0<ar>>>0){q=aq+1|0;c[l>>2]=q;au=d[aq]|0;av=q;aw=ar}else{q=b+32|0;if((c[q>>2]|0)==0){au=0;av=aq;aw=ar;break}r=b+40|0;w=c_[c[b+16>>2]&63](c[b+28>>2]|0,r,c[b+36>>2]|0)|0;if((w|0)==0){c[q>>2]=0;q=(c[n>>2]|0)-1|0;c[l>>2]=q;a[q]=0;ax=c[l>>2]|0;ay=c[n>>2]|0}else{c[l>>2]=r;q=b+40+w|0;c[n>>2]=q;ax=r;ay=q}q=ax+1|0;c[l>>2]=q;au=d[ax]|0;av=q;aw=ay}}while(0);do{if(av>>>0<aw>>>0){s=av+1|0;c[l>>2]=s;az=d[av]|0;aA=s;aB=aw}else{s=b+32|0;if((c[s>>2]|0)==0){az=0;aA=av;aB=aw;break}q=b+40|0;r=c_[c[b+16>>2]&63](c[b+28>>2]|0,q,c[b+36>>2]|0)|0;if((r|0)==0){c[s>>2]=0;s=(c[n>>2]|0)-1|0;c[l>>2]=s;a[s]=0;aC=c[l>>2]|0;aD=c[n>>2]|0}else{c[l>>2]=q;s=b+40+r|0;c[n>>2]=s;aC=q;aD=s}s=aC+1|0;c[l>>2]=s;az=d[aC]|0;aA=s;aB=aD}}while(0);s=az<<8|au;do{if(aA>>>0<aB>>>0){q=aA+1|0;c[l>>2]=q;aE=d[aA]|0;aF=q;aG=aB}else{q=b+32|0;if((c[q>>2]|0)==0){aE=0;aF=aA;aG=aB;break}r=b+40|0;w=c_[c[b+16>>2]&63](c[b+28>>2]|0,r,c[b+36>>2]|0)|0;if((w|0)==0){c[q>>2]=0;q=(c[n>>2]|0)-1|0;c[l>>2]=q;a[q]=0;aH=c[l>>2]|0;aI=c[n>>2]|0}else{c[l>>2]=r;q=b+40+w|0;c[n>>2]=q;aH=r;aI=q}q=aH+1|0;c[l>>2]=q;aE=d[aH]|0;aF=q;aG=aI}}while(0);do{if(aF>>>0<aG>>>0){q=aF+1|0;c[l>>2]=q;aJ=d[aF]|0;aK=q}else{q=b+32|0;if((c[q>>2]|0)==0){aJ=0;aK=aF;break}r=b+40|0;w=c_[c[b+16>>2]&63](c[b+28>>2]|0,r,c[b+36>>2]|0)|0;if((w|0)==0){c[q>>2]=0;q=(c[n>>2]|0)-1|0;c[l>>2]=q;a[q]=0;aL=c[l>>2]|0}else{c[l>>2]=r;c[n>>2]=b+40+w;aL=r}r=aL+1|0;c[l>>2]=r;aJ=d[aL]|0;aK=r}}while(0);r=s|(aJ<<8|aE)<<16;w=(r|0)==12;if(!((r|0)==108|(r|0)==56|(r|0)==40|(r|0)==12)){c[4668]=240;aM=0;i=j;return aM|0}q=c[n>>2]|0;aN=aK>>>0<q>>>0;if(w){do{if(aN){aO=aK+1|0;c[l>>2]=aO;aP=d[aK]|0;aQ=aO;aR=q}else{aO=b+32|0;if((c[aO>>2]|0)==0){aP=0;aQ=aK;aR=q;break}aS=b+40|0;aT=c_[c[b+16>>2]&63](c[b+28>>2]|0,aS,c[b+36>>2]|0)|0;if((aT|0)==0){c[aO>>2]=0;aO=(c[n>>2]|0)-1|0;c[l>>2]=aO;a[aO]=0;aU=c[l>>2]|0;aV=c[n>>2]|0}else{c[l>>2]=aS;aO=b+40+aT|0;c[n>>2]=aO;aU=aS;aV=aO}aO=aU+1|0;c[l>>2]=aO;aP=d[aU]|0;aQ=aO;aR=aV}}while(0);do{if(aQ>>>0<aR>>>0){s=aQ+1|0;c[l>>2]=s;aW=d[aQ]|0;aX=s;aY=aR}else{s=b+32|0;if((c[s>>2]|0)==0){aW=0;aX=aQ;aY=aR;break}aO=b+40|0;aS=c_[c[b+16>>2]&63](c[b+28>>2]|0,aO,c[b+36>>2]|0)|0;if((aS|0)==0){c[s>>2]=0;s=(c[n>>2]|0)-1|0;c[l>>2]=s;a[s]=0;aZ=c[l>>2]|0;a_=c[n>>2]|0}else{c[l>>2]=aO;s=b+40+aS|0;c[n>>2]=s;aZ=aO;a_=s}s=aZ+1|0;c[l>>2]=s;aW=d[aZ]|0;aX=s;aY=a_}}while(0);c[b>>2]=aW<<8|aP;do{if(aX>>>0<aY>>>0){s=aX+1|0;c[l>>2]=s;a$=d[aX]|0;a0=s;a1=aY}else{s=b+32|0;if((c[s>>2]|0)==0){a$=0;a0=aX;a1=aY;break}aO=b+40|0;aS=c_[c[b+16>>2]&63](c[b+28>>2]|0,aO,c[b+36>>2]|0)|0;if((aS|0)==0){c[s>>2]=0;s=(c[n>>2]|0)-1|0;c[l>>2]=s;a[s]=0;a2=c[l>>2]|0;a3=c[n>>2]|0}else{c[l>>2]=aO;s=b+40+aS|0;c[n>>2]=s;a2=aO;a3=s}s=a2+1|0;c[l>>2]=s;a$=d[a2]|0;a0=s;a1=a3}}while(0);do{if(a0>>>0<a1>>>0){s=a0+1|0;c[l>>2]=s;a4=d[a0]|0;a5=s}else{s=b+32|0;if((c[s>>2]|0)==0){a4=0;a5=a0;break}aO=b+40|0;aS=c_[c[b+16>>2]&63](c[b+28>>2]|0,aO,c[b+36>>2]|0)|0;if((aS|0)==0){c[s>>2]=0;s=(c[n>>2]|0)-1|0;c[l>>2]=s;a[s]=0;a6=c[l>>2]|0}else{c[l>>2]=aO;c[n>>2]=b+40+aS;a6=aO}aO=a6+1|0;c[l>>2]=aO;a4=d[a6]|0;a5=aO}}while(0);c[b+4>>2]=a4<<8|a$;a7=a5}else{do{if(aN){aO=aK+1|0;c[l>>2]=aO;a8=d[aK]|0;a9=aO;ba=q}else{aO=b+32|0;if((c[aO>>2]|0)==0){a8=0;a9=aK;ba=q;break}aS=b+40|0;s=c_[c[b+16>>2]&63](c[b+28>>2]|0,aS,c[b+36>>2]|0)|0;if((s|0)==0){c[aO>>2]=0;aO=(c[n>>2]|0)-1|0;c[l>>2]=aO;a[aO]=0;bb=c[l>>2]|0;bc=c[n>>2]|0}else{c[l>>2]=aS;aO=b+40+s|0;c[n>>2]=aO;bb=aS;bc=aO}aO=bb+1|0;c[l>>2]=aO;a8=d[bb]|0;a9=aO;ba=bc}}while(0);do{if(a9>>>0<ba>>>0){q=a9+1|0;c[l>>2]=q;bd=d[a9]|0;be=q;bf=ba}else{q=b+32|0;if((c[q>>2]|0)==0){bd=0;be=a9;bf=ba;break}aN=b+40|0;aO=c_[c[b+16>>2]&63](c[b+28>>2]|0,aN,c[b+36>>2]|0)|0;if((aO|0)==0){c[q>>2]=0;q=(c[n>>2]|0)-1|0;c[l>>2]=q;a[q]=0;bg=c[l>>2]|0;bh=c[n>>2]|0}else{c[l>>2]=aN;q=b+40+aO|0;c[n>>2]=q;bg=aN;bh=q}q=bg+1|0;c[l>>2]=q;bd=d[bg]|0;be=q;bf=bh}}while(0);q=bd<<8|a8;do{if(be>>>0<bf>>>0){aN=be+1|0;c[l>>2]=aN;bi=d[be]|0;bj=aN;bk=bf}else{aN=b+32|0;if((c[aN>>2]|0)==0){bi=0;bj=be;bk=bf;break}aO=b+40|0;aS=c_[c[b+16>>2]&63](c[b+28>>2]|0,aO,c[b+36>>2]|0)|0;if((aS|0)==0){c[aN>>2]=0;aN=(c[n>>2]|0)-1|0;c[l>>2]=aN;a[aN]=0;bl=c[l>>2]|0;bm=c[n>>2]|0}else{c[l>>2]=aO;aN=b+40+aS|0;c[n>>2]=aN;bl=aO;bm=aN}aN=bl+1|0;c[l>>2]=aN;bi=d[bl]|0;bj=aN;bk=bm}}while(0);do{if(bj>>>0<bk>>>0){aN=bj+1|0;c[l>>2]=aN;bn=d[bj]|0;bo=aN;bp=bk}else{aN=b+32|0;if((c[aN>>2]|0)==0){bn=0;bo=bj;bp=bk;break}aO=b+40|0;aS=c_[c[b+16>>2]&63](c[b+28>>2]|0,aO,c[b+36>>2]|0)|0;if((aS|0)==0){c[aN>>2]=0;aN=(c[n>>2]|0)-1|0;c[l>>2]=aN;a[aN]=0;bq=c[l>>2]|0;br=c[n>>2]|0}else{c[l>>2]=aO;aN=b+40+aS|0;c[n>>2]=aN;bq=aO;br=aN}aN=bq+1|0;c[l>>2]=aN;bn=d[bq]|0;bo=aN;bp=br}}while(0);c[b>>2]=q|(bn<<8|bi)<<16;do{if(bo>>>0<bp>>>0){aN=bo+1|0;c[l>>2]=aN;bs=d[bo]|0;bt=aN;bu=bp}else{aN=b+32|0;if((c[aN>>2]|0)==0){bs=0;bt=bo;bu=bp;break}aO=b+40|0;aS=c_[c[b+16>>2]&63](c[b+28>>2]|0,aO,c[b+36>>2]|0)|0;if((aS|0)==0){c[aN>>2]=0;aN=(c[n>>2]|0)-1|0;c[l>>2]=aN;a[aN]=0;bv=c[l>>2]|0;bw=c[n>>2]|0}else{c[l>>2]=aO;aN=b+40+aS|0;c[n>>2]=aN;bv=aO;bw=aN}aN=bv+1|0;c[l>>2]=aN;bs=d[bv]|0;bt=aN;bu=bw}}while(0);do{if(bt>>>0<bu>>>0){q=bt+1|0;c[l>>2]=q;bx=d[bt]|0;by=q;bz=bu}else{q=b+32|0;if((c[q>>2]|0)==0){bx=0;by=bt;bz=bu;break}aN=b+40|0;aO=c_[c[b+16>>2]&63](c[b+28>>2]|0,aN,c[b+36>>2]|0)|0;if((aO|0)==0){c[q>>2]=0;q=(c[n>>2]|0)-1|0;c[l>>2]=q;a[q]=0;bA=c[l>>2]|0;bB=c[n>>2]|0}else{c[l>>2]=aN;q=b+40+aO|0;c[n>>2]=q;bA=aN;bB=q}q=bA+1|0;c[l>>2]=q;bx=d[bA]|0;by=q;bz=bB}}while(0);q=bx<<8|bs;do{if(by>>>0<bz>>>0){aN=by+1|0;c[l>>2]=aN;bC=d[by]|0;bD=aN;bE=bz}else{aN=b+32|0;if((c[aN>>2]|0)==0){bC=0;bD=by;bE=bz;break}aO=b+40|0;aS=c_[c[b+16>>2]&63](c[b+28>>2]|0,aO,c[b+36>>2]|0)|0;if((aS|0)==0){c[aN>>2]=0;aN=(c[n>>2]|0)-1|0;c[l>>2]=aN;a[aN]=0;bF=c[l>>2]|0;bG=c[n>>2]|0}else{c[l>>2]=aO;aN=b+40+aS|0;c[n>>2]=aN;bF=aO;bG=aN}aN=bF+1|0;c[l>>2]=aN;bC=d[bF]|0;bD=aN;bE=bG}}while(0);do{if(bD>>>0<bE>>>0){aN=bD+1|0;c[l>>2]=aN;bH=d[bD]|0;bI=aN}else{aN=b+32|0;if((c[aN>>2]|0)==0){bH=0;bI=bD;break}aO=b+40|0;aS=c_[c[b+16>>2]&63](c[b+28>>2]|0,aO,c[b+36>>2]|0)|0;if((aS|0)==0){c[aN>>2]=0;aN=(c[n>>2]|0)-1|0;c[l>>2]=aN;a[aN]=0;bJ=c[l>>2]|0}else{c[l>>2]=aO;c[n>>2]=b+40+aS;bJ=aO}aO=bJ+1|0;c[l>>2]=aO;bH=d[bJ]|0;bI=aO}}while(0);c[b+4>>2]=q|(bH<<8|bC)<<16;a7=bI}aO=c[n>>2]|0;do{if(a7>>>0<aO>>>0){aS=a7+1|0;c[l>>2]=aS;bK=d[a7]|0;bL=aS;bM=aO}else{aS=b+32|0;if((c[aS>>2]|0)==0){bK=0;bL=a7;bM=aO;break}aN=b+40|0;s=c_[c[b+16>>2]&63](c[b+28>>2]|0,aN,c[b+36>>2]|0)|0;if((s|0)==0){c[aS>>2]=0;aS=(c[n>>2]|0)-1|0;c[l>>2]=aS;a[aS]=0;bN=c[l>>2]|0;bO=c[n>>2]|0}else{c[l>>2]=aN;aS=b+40+s|0;c[n>>2]=aS;bN=aN;bO=aS}aS=bN+1|0;c[l>>2]=aS;bK=d[bN]|0;bL=aS;bM=bO}}while(0);do{if(bL>>>0<bM>>>0){aO=bL+1|0;c[l>>2]=aO;bP=d[bL]|0;bQ=aO}else{aO=b+32|0;if((c[aO>>2]|0)==0){bP=0;bQ=bL;break}q=b+40|0;aS=c_[c[b+16>>2]&63](c[b+28>>2]|0,q,c[b+36>>2]|0)|0;if((aS|0)==0){c[aO>>2]=0;aO=(c[n>>2]|0)-1|0;c[l>>2]=aO;a[aO]=0;bR=c[l>>2]|0}else{c[l>>2]=q;c[n>>2]=b+40+aS;bR=q}q=bR+1|0;c[l>>2]=q;bP=d[bR]|0;bQ=q}}while(0);if((bP<<8|bK|0)!=1){c[4668]=224;aM=0;i=j;return aM|0}q=c[n>>2]|0;do{if(bQ>>>0<q>>>0){aS=bQ+1|0;c[l>>2]=aS;bS=d[bQ]|0;bT=aS;bU=q}else{aS=b+32|0;if((c[aS>>2]|0)==0){bS=0;bT=bQ;bU=q;break}aO=b+40|0;aN=c_[c[b+16>>2]&63](c[b+28>>2]|0,aO,c[b+36>>2]|0)|0;if((aN|0)==0){c[aS>>2]=0;aS=(c[n>>2]|0)-1|0;c[l>>2]=aS;a[aS]=0;bV=c[l>>2]|0;bW=c[n>>2]|0}else{c[l>>2]=aO;aS=b+40+aN|0;c[n>>2]=aS;bV=aO;bW=aS}aS=bV+1|0;c[l>>2]=aS;bS=d[bV]|0;bT=aS;bU=bW}}while(0);do{if(bT>>>0<bU>>>0){q=bT+1|0;c[l>>2]=q;bX=d[bT]|0;bY=q}else{q=b+32|0;if((c[q>>2]|0)==0){bX=0;bY=bT;break}aS=b+40|0;aO=c_[c[b+16>>2]&63](c[b+28>>2]|0,aS,c[b+36>>2]|0)|0;if((aO|0)==0){c[q>>2]=0;q=(c[n>>2]|0)-1|0;c[l>>2]=q;a[q]=0;bZ=c[l>>2]|0}else{c[l>>2]=aS;c[n>>2]=b+40+aO;bZ=aS}aS=bZ+1|0;c[l>>2]=aS;bX=d[bZ]|0;bY=aS}}while(0);aS=bX<<8|bS;if((aS|0)==1){c[4668]=200;aM=0;i=j;return aM|0}aO=b+4|0;q=c[aO>>2]|0;aN=(q|0)>0;c[aO>>2]=(q|0)>-1?q:-q|0;do{if(w){if(aS>>>0>=24>>>0){b_=0;b$=0;b0=0;b1=0;b2=0;b3=bY;break}b_=0;b$=0;b0=0;b1=0;b2=(m-38|0)/3|0;b3=bY}else{q=c[n>>2]|0;do{if(bY>>>0<q>>>0){s=bY+1|0;c[l>>2]=s;b4=d[bY]|0;b5=s;b6=q}else{s=b+32|0;if((c[s>>2]|0)==0){b4=0;b5=bY;b6=q;break}aT=b+40|0;b7=c_[c[b+16>>2]&63](c[b+28>>2]|0,aT,c[b+36>>2]|0)|0;if((b7|0)==0){c[s>>2]=0;s=(c[n>>2]|0)-1|0;c[l>>2]=s;a[s]=0;b8=c[l>>2]|0;b9=c[n>>2]|0}else{c[l>>2]=aT;s=b+40+b7|0;c[n>>2]=s;b8=aT;b9=s}s=b8+1|0;c[l>>2]=s;b4=d[b8]|0;b5=s;b6=b9}}while(0);do{if(b5>>>0<b6>>>0){q=b5+1|0;c[l>>2]=q;ca=d[b5]|0;cb=q;cc=b6}else{q=b+32|0;if((c[q>>2]|0)==0){ca=0;cb=b5;cc=b6;break}s=b+40|0;aT=c_[c[b+16>>2]&63](c[b+28>>2]|0,s,c[b+36>>2]|0)|0;if((aT|0)==0){c[q>>2]=0;q=(c[n>>2]|0)-1|0;c[l>>2]=q;a[q]=0;cd=c[l>>2]|0;ce=c[n>>2]|0}else{c[l>>2]=s;q=b+40+aT|0;c[n>>2]=q;cd=s;ce=q}q=cd+1|0;c[l>>2]=q;ca=d[cd]|0;cb=q;cc=ce}}while(0);q=ca<<8|b4;do{if(cb>>>0<cc>>>0){s=cb+1|0;c[l>>2]=s;cf=d[cb]|0;cg=s;ch=cc}else{s=b+32|0;if((c[s>>2]|0)==0){cf=0;cg=cb;ch=cc;break}aT=b+40|0;b7=c_[c[b+16>>2]&63](c[b+28>>2]|0,aT,c[b+36>>2]|0)|0;if((b7|0)==0){c[s>>2]=0;s=(c[n>>2]|0)-1|0;c[l>>2]=s;a[s]=0;ci=c[l>>2]|0;cj=c[n>>2]|0}else{c[l>>2]=aT;s=b+40+b7|0;c[n>>2]=s;ci=aT;cj=s}s=ci+1|0;c[l>>2]=s;cf=d[ci]|0;cg=s;ch=cj}}while(0);do{if(cg>>>0<ch>>>0){s=cg+1|0;c[l>>2]=s;ck=d[cg]|0;cl=s}else{s=b+32|0;if((c[s>>2]|0)==0){ck=0;cl=cg;break}aT=b+40|0;b7=c_[c[b+16>>2]&63](c[b+28>>2]|0,aT,c[b+36>>2]|0)|0;if((b7|0)==0){c[s>>2]=0;s=(c[n>>2]|0)-1|0;c[l>>2]=s;a[s]=0;cn=c[l>>2]|0}else{c[l>>2]=aT;c[n>>2]=b+40+b7;cn=aT}aT=cn+1|0;c[l>>2]=aT;ck=d[cn]|0;cl=aT}}while(0);aT=q|(ck<<8|cf)<<16;if((aT-1|0)>>>0<2>>>0){c[4668]=184;aM=0;i=j;return aM|0}b7=c[n>>2]|0;do{if(cl>>>0<b7>>>0){s=cl+1|0;c[l>>2]=s;co=s;cp=b7}else{s=b+32|0;if((c[s>>2]|0)==0){co=cl;cp=b7;break}cq=b+40|0;cr=c_[c[b+16>>2]&63](c[b+28>>2]|0,cq,c[b+36>>2]|0)|0;if((cr|0)==0){c[s>>2]=0;s=(c[n>>2]|0)-1|0;c[l>>2]=s;a[s]=0;cs=c[l>>2]|0;ct=c[n>>2]|0}else{c[l>>2]=cq;s=b+40+cr|0;c[n>>2]=s;cs=cq;ct=s}s=cs+1|0;c[l>>2]=s;co=s;cp=ct}}while(0);do{if(co>>>0<cp>>>0){b7=co+1|0;c[l>>2]=b7;cu=b7;cv=cp}else{b7=b+32|0;if((c[b7>>2]|0)==0){cu=co;cv=cp;break}q=b+40|0;s=c_[c[b+16>>2]&63](c[b+28>>2]|0,q,c[b+36>>2]|0)|0;if((s|0)==0){c[b7>>2]=0;b7=(c[n>>2]|0)-1|0;c[l>>2]=b7;a[b7]=0;cw=c[l>>2]|0;cx=c[n>>2]|0}else{c[l>>2]=q;b7=b+40+s|0;c[n>>2]=b7;cw=q;cx=b7}b7=cw+1|0;c[l>>2]=b7;cu=b7;cv=cx}}while(0);do{if(cu>>>0<cv>>>0){b7=cu+1|0;c[l>>2]=b7;cy=b7;cz=cv}else{b7=b+32|0;if((c[b7>>2]|0)==0){cy=cu;cz=cv;break}q=b+40|0;s=c_[c[b+16>>2]&63](c[b+28>>2]|0,q,c[b+36>>2]|0)|0;if((s|0)==0){c[b7>>2]=0;b7=(c[n>>2]|0)-1|0;c[l>>2]=b7;a[b7]=0;cA=c[l>>2]|0;cB=c[n>>2]|0}else{c[l>>2]=q;b7=b+40+s|0;c[n>>2]=b7;cA=q;cB=b7}b7=cA+1|0;c[l>>2]=b7;cy=b7;cz=cB}}while(0);do{if(cy>>>0<cz>>>0){b7=cy+1|0;c[l>>2]=b7;cC=b7;cD=cz}else{b7=b+32|0;if((c[b7>>2]|0)==0){cC=cy;cD=cz;break}q=b+40|0;s=c_[c[b+16>>2]&63](c[b+28>>2]|0,q,c[b+36>>2]|0)|0;if((s|0)==0){c[b7>>2]=0;b7=(c[n>>2]|0)-1|0;c[l>>2]=b7;a[b7]=0;cE=c[l>>2]|0;cF=c[n>>2]|0}else{c[l>>2]=q;b7=b+40+s|0;c[n>>2]=b7;cE=q;cF=b7}b7=cE+1|0;c[l>>2]=b7;cC=b7;cD=cF}}while(0);do{if(cC>>>0<cD>>>0){b7=cC+1|0;c[l>>2]=b7;cG=b7;cH=cD}else{b7=b+32|0;if((c[b7>>2]|0)==0){cG=cC;cH=cD;break}q=b+40|0;s=c_[c[b+16>>2]&63](c[b+28>>2]|0,q,c[b+36>>2]|0)|0;if((s|0)==0){c[b7>>2]=0;b7=(c[n>>2]|0)-1|0;c[l>>2]=b7;a[b7]=0;cI=c[l>>2]|0;cJ=c[n>>2]|0}else{c[l>>2]=q;b7=b+40+s|0;c[n>>2]=b7;cI=q;cJ=b7}b7=cI+1|0;c[l>>2]=b7;cG=b7;cH=cJ}}while(0);do{if(cG>>>0<cH>>>0){b7=cG+1|0;c[l>>2]=b7;cK=b7;cL=cH}else{b7=b+32|0;if((c[b7>>2]|0)==0){cK=cG;cL=cH;break}q=b+40|0;s=c_[c[b+16>>2]&63](c[b+28>>2]|0,q,c[b+36>>2]|0)|0;if((s|0)==0){c[b7>>2]=0;b7=(c[n>>2]|0)-1|0;c[l>>2]=b7;a[b7]=0;cM=c[l>>2]|0;cN=c[n>>2]|0}else{c[l>>2]=q;b7=b+40+s|0;c[n>>2]=b7;cM=q;cN=b7}b7=cM+1|0;c[l>>2]=b7;cK=b7;cL=cN}}while(0);do{if(cK>>>0<cL>>>0){b7=cK+1|0;c[l>>2]=b7;cO=b7;cP=cL}else{b7=b+32|0;if((c[b7>>2]|0)==0){cO=cK;cP=cL;break}q=b+40|0;s=c_[c[b+16>>2]&63](c[b+28>>2]|0,q,c[b+36>>2]|0)|0;if((s|0)==0){c[b7>>2]=0;b7=(c[n>>2]|0)-1|0;c[l>>2]=b7;a[b7]=0;cQ=c[l>>2]|0;cR=c[n>>2]|0}else{c[l>>2]=q;b7=b+40+s|0;c[n>>2]=b7;cQ=q;cR=b7}b7=cQ+1|0;c[l>>2]=b7;cO=b7;cP=cR}}while(0);do{if(cO>>>0<cP>>>0){b7=cO+1|0;c[l>>2]=b7;cS=b7;cT=cP}else{b7=b+32|0;if((c[b7>>2]|0)==0){cS=cO;cT=cP;break}q=b+40|0;s=c_[c[b+16>>2]&63](c[b+28>>2]|0,q,c[b+36>>2]|0)|0;if((s|0)==0){c[b7>>2]=0;b7=(c[n>>2]|0)-1|0;c[l>>2]=b7;a[b7]=0;cU=c[l>>2]|0;cW=c[n>>2]|0}else{c[l>>2]=q;b7=b+40+s|0;c[n>>2]=b7;cU=q;cW=b7}b7=cU+1|0;c[l>>2]=b7;cS=b7;cT=cW}}while(0);do{if(cS>>>0<cT>>>0){b7=cS+1|0;c[l>>2]=b7;cX=b7;cY=cT}else{b7=b+32|0;if((c[b7>>2]|0)==0){cX=cS;cY=cT;break}q=b+40|0;s=c_[c[b+16>>2]&63](c[b+28>>2]|0,q,c[b+36>>2]|0)|0;if((s|0)==0){c[b7>>2]=0;b7=(c[n>>2]|0)-1|0;c[l>>2]=b7;a[b7]=0;cZ=c[l>>2]|0;c$=c[n>>2]|0}else{c[l>>2]=q;b7=b+40+s|0;c[n>>2]=b7;cZ=q;c$=b7}b7=cZ+1|0;c[l>>2]=b7;cX=b7;cY=c$}}while(0);do{if(cX>>>0<cY>>>0){b7=cX+1|0;c[l>>2]=b7;c0=b7;c1=cY}else{b7=b+32|0;if((c[b7>>2]|0)==0){c0=cX;c1=cY;break}q=b+40|0;s=c_[c[b+16>>2]&63](c[b+28>>2]|0,q,c[b+36>>2]|0)|0;if((s|0)==0){c[b7>>2]=0;b7=(c[n>>2]|0)-1|0;c[l>>2]=b7;a[b7]=0;c2=c[l>>2]|0;c3=c[n>>2]|0}else{c[l>>2]=q;b7=b+40+s|0;c[n>>2]=b7;c2=q;c3=b7}b7=c2+1|0;c[l>>2]=b7;c0=b7;c1=c3}}while(0);do{if(c0>>>0<c1>>>0){b7=c0+1|0;c[l>>2]=b7;c4=b7;c5=c1}else{b7=b+32|0;if((c[b7>>2]|0)==0){c4=c0;c5=c1;break}q=b+40|0;s=c_[c[b+16>>2]&63](c[b+28>>2]|0,q,c[b+36>>2]|0)|0;if((s|0)==0){c[b7>>2]=0;b7=(c[n>>2]|0)-1|0;c[l>>2]=b7;a[b7]=0;c6=c[l>>2]|0;c7=c[n>>2]|0}else{c[l>>2]=q;b7=b+40+s|0;c[n>>2]=b7;c6=q;c7=b7}b7=c6+1|0;c[l>>2]=b7;c4=b7;c5=c7}}while(0);do{if(c4>>>0<c5>>>0){b7=c4+1|0;c[l>>2]=b7;c8=b7;c9=c5}else{b7=b+32|0;if((c[b7>>2]|0)==0){c8=c4;c9=c5;break}q=b+40|0;s=c_[c[b+16>>2]&63](c[b+28>>2]|0,q,c[b+36>>2]|0)|0;if((s|0)==0){c[b7>>2]=0;b7=(c[n>>2]|0)-1|0;c[l>>2]=b7;a[b7]=0;da=c[l>>2]|0;db=c[n>>2]|0}else{c[l>>2]=q;b7=b+40+s|0;c[n>>2]=b7;da=q;db=b7}b7=da+1|0;c[l>>2]=b7;c8=b7;c9=db}}while(0);do{if(c8>>>0<c9>>>0){b7=c8+1|0;c[l>>2]=b7;dc=b7;dd=c9}else{b7=b+32|0;if((c[b7>>2]|0)==0){dc=c8;dd=c9;break}q=b+40|0;s=c_[c[b+16>>2]&63](c[b+28>>2]|0,q,c[b+36>>2]|0)|0;if((s|0)==0){c[b7>>2]=0;b7=(c[n>>2]|0)-1|0;c[l>>2]=b7;a[b7]=0;de=c[l>>2]|0;df=c[n>>2]|0}else{c[l>>2]=q;b7=b+40+s|0;c[n>>2]=b7;de=q;df=b7}b7=de+1|0;c[l>>2]=b7;dc=b7;dd=df}}while(0);do{if(dc>>>0<dd>>>0){b7=dc+1|0;c[l>>2]=b7;dg=b7;dh=dd}else{b7=b+32|0;if((c[b7>>2]|0)==0){dg=dc;dh=dd;break}q=b+40|0;s=c_[c[b+16>>2]&63](c[b+28>>2]|0,q,c[b+36>>2]|0)|0;if((s|0)==0){c[b7>>2]=0;b7=(c[n>>2]|0)-1|0;c[l>>2]=b7;a[b7]=0;di=c[l>>2]|0;dj=c[n>>2]|0}else{c[l>>2]=q;b7=b+40+s|0;c[n>>2]=b7;di=q;dj=b7}b7=di+1|0;c[l>>2]=b7;dg=b7;dh=dj}}while(0);do{if(dg>>>0<dh>>>0){b7=dg+1|0;c[l>>2]=b7;dk=b7;dl=dh}else{b7=b+32|0;if((c[b7>>2]|0)==0){dk=dg;dl=dh;break}q=b+40|0;s=c_[c[b+16>>2]&63](c[b+28>>2]|0,q,c[b+36>>2]|0)|0;if((s|0)==0){c[b7>>2]=0;b7=(c[n>>2]|0)-1|0;c[l>>2]=b7;a[b7]=0;dm=c[l>>2]|0;dn=c[n>>2]|0}else{c[l>>2]=q;b7=b+40+s|0;c[n>>2]=b7;dm=q;dn=b7}b7=dm+1|0;c[l>>2]=b7;dk=b7;dl=dn}}while(0);do{if(dk>>>0<dl>>>0){b7=dk+1|0;c[l>>2]=b7;dp=b7;dq=dl}else{b7=b+32|0;if((c[b7>>2]|0)==0){dp=dk;dq=dl;break}q=b+40|0;s=c_[c[b+16>>2]&63](c[b+28>>2]|0,q,c[b+36>>2]|0)|0;if((s|0)==0){c[b7>>2]=0;b7=(c[n>>2]|0)-1|0;c[l>>2]=b7;a[b7]=0;dr=c[l>>2]|0;ds=c[n>>2]|0}else{c[l>>2]=q;b7=b+40+s|0;c[n>>2]=b7;dr=q;ds=b7}b7=dr+1|0;c[l>>2]=b7;dp=b7;dq=ds}}while(0);do{if(dp>>>0<dq>>>0){b7=dp+1|0;c[l>>2]=b7;dt=b7;du=dq}else{b7=b+32|0;if((c[b7>>2]|0)==0){dt=dp;du=dq;break}q=b+40|0;s=c_[c[b+16>>2]&63](c[b+28>>2]|0,q,c[b+36>>2]|0)|0;if((s|0)==0){c[b7>>2]=0;b7=(c[n>>2]|0)-1|0;c[l>>2]=b7;a[b7]=0;dv=c[l>>2]|0;dw=c[n>>2]|0}else{c[l>>2]=q;b7=b+40+s|0;c[n>>2]=b7;dv=q;dw=b7}b7=dv+1|0;c[l>>2]=b7;dt=b7;du=dw}}while(0);do{if(dt>>>0<du>>>0){b7=dt+1|0;c[l>>2]=b7;dx=b7;dy=du}else{b7=b+32|0;if((c[b7>>2]|0)==0){dx=dt;dy=du;break}q=b+40|0;s=c_[c[b+16>>2]&63](c[b+28>>2]|0,q,c[b+36>>2]|0)|0;if((s|0)==0){c[b7>>2]=0;b7=(c[n>>2]|0)-1|0;c[l>>2]=b7;a[b7]=0;dz=c[l>>2]|0;dA=c[n>>2]|0}else{c[l>>2]=q;b7=b+40+s|0;c[n>>2]=b7;dz=q;dA=b7}b7=dz+1|0;c[l>>2]=b7;dx=b7;dy=dA}}while(0);do{if(dx>>>0<dy>>>0){b7=dx+1|0;c[l>>2]=b7;dB=b7;dC=dy}else{b7=b+32|0;if((c[b7>>2]|0)==0){dB=dx;dC=dy;break}q=b+40|0;s=c_[c[b+16>>2]&63](c[b+28>>2]|0,q,c[b+36>>2]|0)|0;if((s|0)==0){c[b7>>2]=0;b7=(c[n>>2]|0)-1|0;c[l>>2]=b7;a[b7]=0;dD=c[l>>2]|0;dE=c[n>>2]|0}else{c[l>>2]=q;b7=b+40+s|0;c[n>>2]=b7;dD=q;dE=b7}b7=dD+1|0;c[l>>2]=b7;dB=b7;dC=dE}}while(0);do{if(dB>>>0<dC>>>0){b7=dB+1|0;c[l>>2]=b7;dF=b7}else{b7=b+32|0;if((c[b7>>2]|0)==0){dF=dB;break}q=b+40|0;s=c_[c[b+16>>2]&63](c[b+28>>2]|0,q,c[b+36>>2]|0)|0;if((s|0)==0){c[b7>>2]=0;b7=(c[n>>2]|0)-1|0;c[l>>2]=b7;a[b7]=0;dG=c[l>>2]|0}else{c[l>>2]=q;c[n>>2]=b+40+s;dG=q}q=dG+1|0;c[l>>2]=q;dF=q}}while(0);L1929:do{if((r|0)==56){q=c[n>>2]|0;do{if(dF>>>0<q>>>0){c[l>>2]=dF+1;dH=q}else{s=b+32|0;if((c[s>>2]|0)==0){dH=q;break}b7=b+40|0;cq=c_[c[b+16>>2]&63](c[b+28>>2]|0,b7,c[b+36>>2]|0)|0;if((cq|0)==0){c[s>>2]=0;s=(c[n>>2]|0)-1|0;c[l>>2]=s;a[s]=0;dI=c[l>>2]|0;dJ=c[n>>2]|0}else{c[l>>2]=b7;s=b+40+cq|0;c[n>>2]=s;dI=b7;dJ=s}c[l>>2]=dI+1;dH=dJ}}while(0);q=c[l>>2]|0;do{if(q>>>0<dH>>>0){s=q+1|0;c[l>>2]=s;dK=s;dL=dH}else{s=b+32|0;if((c[s>>2]|0)==0){dK=q;dL=dH;break}b7=b+40|0;cq=c_[c[b+16>>2]&63](c[b+28>>2]|0,b7,c[b+36>>2]|0)|0;if((cq|0)==0){c[s>>2]=0;s=(c[n>>2]|0)-1|0;c[l>>2]=s;a[s]=0;dM=c[l>>2]|0;dN=c[n>>2]|0}else{c[l>>2]=b7;s=b+40+cq|0;c[n>>2]=s;dM=b7;dN=s}s=dM+1|0;c[l>>2]=s;dK=s;dL=dN}}while(0);do{if(dK>>>0<dL>>>0){q=dK+1|0;c[l>>2]=q;dO=q;dP=dL}else{q=b+32|0;if((c[q>>2]|0)==0){dO=dK;dP=dL;break}s=b+40|0;b7=c_[c[b+16>>2]&63](c[b+28>>2]|0,s,c[b+36>>2]|0)|0;if((b7|0)==0){c[q>>2]=0;q=(c[n>>2]|0)-1|0;c[l>>2]=q;a[q]=0;dQ=c[l>>2]|0;dR=c[n>>2]|0}else{c[l>>2]=s;q=b+40+b7|0;c[n>>2]=q;dQ=s;dR=q}q=dQ+1|0;c[l>>2]=q;dO=q;dP=dR}}while(0);do{if(dO>>>0<dP>>>0){q=dO+1|0;c[l>>2]=q;dS=q;dT=dP}else{q=b+32|0;if((c[q>>2]|0)==0){dS=dO;dT=dP;break}s=b+40|0;b7=c_[c[b+16>>2]&63](c[b+28>>2]|0,s,c[b+36>>2]|0)|0;if((b7|0)==0){c[q>>2]=0;q=(c[n>>2]|0)-1|0;c[l>>2]=q;a[q]=0;dU=c[l>>2]|0;dV=c[n>>2]|0}else{c[l>>2]=s;q=b+40+b7|0;c[n>>2]=q;dU=s;dV=q}q=dU+1|0;c[l>>2]=q;dS=q;dT=dV}}while(0);do{if(dS>>>0<dT>>>0){q=dS+1|0;c[l>>2]=q;dW=q;dX=dT}else{q=b+32|0;if((c[q>>2]|0)==0){dW=dS;dX=dT;break}s=b+40|0;b7=c_[c[b+16>>2]&63](c[b+28>>2]|0,s,c[b+36>>2]|0)|0;if((b7|0)==0){c[q>>2]=0;q=(c[n>>2]|0)-1|0;c[l>>2]=q;a[q]=0;dY=c[l>>2]|0;dZ=c[n>>2]|0}else{c[l>>2]=s;q=b+40+b7|0;c[n>>2]=q;dY=s;dZ=q}q=dY+1|0;c[l>>2]=q;dW=q;dX=dZ}}while(0);do{if(dW>>>0<dX>>>0){q=dW+1|0;c[l>>2]=q;d_=q;d$=dX}else{q=b+32|0;if((c[q>>2]|0)==0){d_=dW;d$=dX;break}s=b+40|0;b7=c_[c[b+16>>2]&63](c[b+28>>2]|0,s,c[b+36>>2]|0)|0;if((b7|0)==0){c[q>>2]=0;q=(c[n>>2]|0)-1|0;c[l>>2]=q;a[q]=0;d0=c[l>>2]|0;d1=c[n>>2]|0}else{c[l>>2]=s;q=b+40+b7|0;c[n>>2]=q;d0=s;d1=q}q=d0+1|0;c[l>>2]=q;d_=q;d$=d1}}while(0);do{if(d_>>>0<d$>>>0){q=d_+1|0;c[l>>2]=q;d2=q;d3=d$}else{q=b+32|0;if((c[q>>2]|0)==0){d2=d_;d3=d$;break}s=b+40|0;b7=c_[c[b+16>>2]&63](c[b+28>>2]|0,s,c[b+36>>2]|0)|0;if((b7|0)==0){c[q>>2]=0;q=(c[n>>2]|0)-1|0;c[l>>2]=q;a[q]=0;d4=c[l>>2]|0;d5=c[n>>2]|0}else{c[l>>2]=s;q=b+40+b7|0;c[n>>2]=q;d4=s;d5=q}q=d4+1|0;c[l>>2]=q;d2=q;d3=d5}}while(0);do{if(d2>>>0<d3>>>0){q=d2+1|0;c[l>>2]=q;d6=q;d7=d3}else{q=b+32|0;if((c[q>>2]|0)==0){d6=d2;d7=d3;break}s=b+40|0;b7=c_[c[b+16>>2]&63](c[b+28>>2]|0,s,c[b+36>>2]|0)|0;if((b7|0)==0){c[q>>2]=0;q=(c[n>>2]|0)-1|0;c[l>>2]=q;a[q]=0;d8=c[l>>2]|0;d9=c[n>>2]|0}else{c[l>>2]=s;q=b+40+b7|0;c[n>>2]=q;d8=s;d9=q}q=d8+1|0;c[l>>2]=q;d6=q;d7=d9}}while(0);do{if(d6>>>0<d7>>>0){q=d6+1|0;c[l>>2]=q;ea=q;eb=d7}else{q=b+32|0;if((c[q>>2]|0)==0){ea=d6;eb=d7;break}s=b+40|0;b7=c_[c[b+16>>2]&63](c[b+28>>2]|0,s,c[b+36>>2]|0)|0;if((b7|0)==0){c[q>>2]=0;q=(c[n>>2]|0)-1|0;c[l>>2]=q;a[q]=0;ec=c[l>>2]|0;ed=c[n>>2]|0}else{c[l>>2]=s;q=b+40+b7|0;c[n>>2]=q;ec=s;ed=q}q=ec+1|0;c[l>>2]=q;ea=q;eb=ed}}while(0);do{if(ea>>>0<eb>>>0){q=ea+1|0;c[l>>2]=q;ee=q;ef=eb}else{q=b+32|0;if((c[q>>2]|0)==0){ee=ea;ef=eb;break}s=b+40|0;b7=c_[c[b+16>>2]&63](c[b+28>>2]|0,s,c[b+36>>2]|0)|0;if((b7|0)==0){c[q>>2]=0;q=(c[n>>2]|0)-1|0;c[l>>2]=q;a[q]=0;eg=c[l>>2]|0;eh=c[n>>2]|0}else{c[l>>2]=s;q=b+40+b7|0;c[n>>2]=q;eg=s;eh=q}q=eg+1|0;c[l>>2]=q;ee=q;ef=eh}}while(0);do{if(ee>>>0<ef>>>0){q=ee+1|0;c[l>>2]=q;ei=q;ej=ef}else{q=b+32|0;if((c[q>>2]|0)==0){ei=ee;ej=ef;break}s=b+40|0;b7=c_[c[b+16>>2]&63](c[b+28>>2]|0,s,c[b+36>>2]|0)|0;if((b7|0)==0){c[q>>2]=0;q=(c[n>>2]|0)-1|0;c[l>>2]=q;a[q]=0;ek=c[l>>2]|0;el=c[n>>2]|0}else{c[l>>2]=s;q=b+40+b7|0;c[n>>2]=q;ek=s;el=q}q=ek+1|0;c[l>>2]=q;ei=q;ej=el}}while(0);do{if(ei>>>0<ej>>>0){q=ei+1|0;c[l>>2]=q;em=q;en=ej}else{q=b+32|0;if((c[q>>2]|0)==0){em=ei;en=ej;break}s=b+40|0;b7=c_[c[b+16>>2]&63](c[b+28>>2]|0,s,c[b+36>>2]|0)|0;if((b7|0)==0){c[q>>2]=0;q=(c[n>>2]|0)-1|0;c[l>>2]=q;a[q]=0;eo=c[l>>2]|0;ep=c[n>>2]|0}else{c[l>>2]=s;q=b+40+b7|0;c[n>>2]=q;eo=s;ep=q}q=eo+1|0;c[l>>2]=q;em=q;en=ep}}while(0);do{if(em>>>0<en>>>0){q=em+1|0;c[l>>2]=q;eq=q;er=en}else{q=b+32|0;if((c[q>>2]|0)==0){eq=em;er=en;break}s=b+40|0;b7=c_[c[b+16>>2]&63](c[b+28>>2]|0,s,c[b+36>>2]|0)|0;if((b7|0)==0){c[q>>2]=0;q=(c[n>>2]|0)-1|0;c[l>>2]=q;a[q]=0;es=c[l>>2]|0;et=c[n>>2]|0}else{c[l>>2]=s;q=b+40+b7|0;c[n>>2]=q;es=s;et=q}q=es+1|0;c[l>>2]=q;eq=q;er=et}}while(0);do{if(eq>>>0<er>>>0){q=eq+1|0;c[l>>2]=q;eu=q;ev=er}else{q=b+32|0;if((c[q>>2]|0)==0){eu=eq;ev=er;break}s=b+40|0;b7=c_[c[b+16>>2]&63](c[b+28>>2]|0,s,c[b+36>>2]|0)|0;if((b7|0)==0){c[q>>2]=0;q=(c[n>>2]|0)-1|0;c[l>>2]=q;a[q]=0;ew=c[l>>2]|0;ex=c[n>>2]|0}else{c[l>>2]=s;q=b+40+b7|0;c[n>>2]=q;ew=s;ex=q}q=ew+1|0;c[l>>2]=q;eu=q;ev=ex}}while(0);do{if(eu>>>0<ev>>>0){q=eu+1|0;c[l>>2]=q;ey=q;ez=ev}else{q=b+32|0;if((c[q>>2]|0)==0){ey=eu;ez=ev;break}s=b+40|0;b7=c_[c[b+16>>2]&63](c[b+28>>2]|0,s,c[b+36>>2]|0)|0;if((b7|0)==0){c[q>>2]=0;q=(c[n>>2]|0)-1|0;c[l>>2]=q;a[q]=0;eA=c[l>>2]|0;eB=c[n>>2]|0}else{c[l>>2]=s;q=b+40+b7|0;c[n>>2]=q;eA=s;eB=q}q=eA+1|0;c[l>>2]=q;ey=q;ez=eB}}while(0);if(ey>>>0<ez>>>0){q=ey+1|0;c[l>>2]=q;eC=q;p=1561;break}q=b+32|0;if((c[q>>2]|0)==0){eC=ey;p=1561;break}s=b+40|0;b7=c_[c[b+16>>2]&63](c[b+28>>2]|0,s,c[b+36>>2]|0)|0;if((b7|0)==0){c[q>>2]=0;q=(c[n>>2]|0)-1|0;c[l>>2]=q;a[q]=0;eD=c[l>>2]|0}else{c[l>>2]=s;c[n>>2]=b+40+b7;eD=s}s=eD+1|0;c[l>>2]=s;eC=s;p=1561}else if((r|0)==40){eC=dF;p=1561}else if((r|0)==108){s=c[n>>2]|0;do{if(dF>>>0<s>>>0){c[l>>2]=dF+1;eE=d[dF]|0;eF=s}else{b7=b+32|0;if((c[b7>>2]|0)==0){eE=0;eF=s;break}q=b+40|0;cq=c_[c[b+16>>2]&63](c[b+28>>2]|0,q,c[b+36>>2]|0)|0;if((cq|0)==0){c[b7>>2]=0;b7=(c[n>>2]|0)-1|0;c[l>>2]=b7;a[b7]=0;eG=c[l>>2]|0;eH=c[n>>2]|0}else{c[l>>2]=q;b7=b+40+cq|0;c[n>>2]=b7;eG=q;eH=b7}c[l>>2]=eG+1;eE=d[eG]|0;eF=eH}}while(0);s=c[l>>2]|0;do{if(s>>>0<eF>>>0){b7=s+1|0;c[l>>2]=b7;eI=d[s]|0;eJ=b7;eK=eF}else{b7=b+32|0;if((c[b7>>2]|0)==0){eI=0;eJ=s;eK=eF;break}q=b+40|0;cq=c_[c[b+16>>2]&63](c[b+28>>2]|0,q,c[b+36>>2]|0)|0;if((cq|0)==0){c[b7>>2]=0;b7=(c[n>>2]|0)-1|0;c[l>>2]=b7;a[b7]=0;eL=c[l>>2]|0;eM=c[n>>2]|0}else{c[l>>2]=q;b7=b+40+cq|0;c[n>>2]=b7;eL=q;eM=b7}b7=eL+1|0;c[l>>2]=b7;eI=d[eL]|0;eJ=b7;eK=eM}}while(0);s=eI<<8|eE;do{if(eJ>>>0<eK>>>0){b7=eJ+1|0;c[l>>2]=b7;eN=d[eJ]|0;eO=b7;eP=eK}else{b7=b+32|0;if((c[b7>>2]|0)==0){eN=0;eO=eJ;eP=eK;break}q=b+40|0;cq=c_[c[b+16>>2]&63](c[b+28>>2]|0,q,c[b+36>>2]|0)|0;if((cq|0)==0){c[b7>>2]=0;b7=(c[n>>2]|0)-1|0;c[l>>2]=b7;a[b7]=0;eQ=c[l>>2]|0;eR=c[n>>2]|0}else{c[l>>2]=q;b7=b+40+cq|0;c[n>>2]=b7;eQ=q;eR=b7}b7=eQ+1|0;c[l>>2]=b7;eN=d[eQ]|0;eO=b7;eP=eR}}while(0);do{if(eO>>>0<eP>>>0){b7=eO+1|0;c[l>>2]=b7;eS=d[eO]|0;eT=b7;eU=eP}else{b7=b+32|0;if((c[b7>>2]|0)==0){eS=0;eT=eO;eU=eP;break}q=b+40|0;cq=c_[c[b+16>>2]&63](c[b+28>>2]|0,q,c[b+36>>2]|0)|0;if((cq|0)==0){c[b7>>2]=0;b7=(c[n>>2]|0)-1|0;c[l>>2]=b7;a[b7]=0;eV=c[l>>2]|0;eW=c[n>>2]|0}else{c[l>>2]=q;b7=b+40+cq|0;c[n>>2]=b7;eV=q;eW=b7}b7=eV+1|0;c[l>>2]=b7;eS=d[eV]|0;eT=b7;eU=eW}}while(0);b7=s|(eS<<8|eN)<<16;do{if(eT>>>0<eU>>>0){q=eT+1|0;c[l>>2]=q;eX=d[eT]|0;eY=q;e_=eU}else{q=b+32|0;if((c[q>>2]|0)==0){eX=0;eY=eT;e_=eU;break}cq=b+40|0;cr=c_[c[b+16>>2]&63](c[b+28>>2]|0,cq,c[b+36>>2]|0)|0;if((cr|0)==0){c[q>>2]=0;q=(c[n>>2]|0)-1|0;c[l>>2]=q;a[q]=0;e$=c[l>>2]|0;e0=c[n>>2]|0}else{c[l>>2]=cq;q=b+40+cr|0;c[n>>2]=q;e$=cq;e0=q}q=e$+1|0;c[l>>2]=q;eX=d[e$]|0;eY=q;e_=e0}}while(0);do{if(eY>>>0<e_>>>0){s=eY+1|0;c[l>>2]=s;e1=d[eY]|0;e2=s;e3=e_}else{s=b+32|0;if((c[s>>2]|0)==0){e1=0;e2=eY;e3=e_;break}q=b+40|0;cq=c_[c[b+16>>2]&63](c[b+28>>2]|0,q,c[b+36>>2]|0)|0;if((cq|0)==0){c[s>>2]=0;s=(c[n>>2]|0)-1|0;c[l>>2]=s;a[s]=0;e4=c[l>>2]|0;e5=c[n>>2]|0}else{c[l>>2]=q;s=b+40+cq|0;c[n>>2]=s;e4=q;e5=s}s=e4+1|0;c[l>>2]=s;e1=d[e4]|0;e2=s;e3=e5}}while(0);s=e1<<8|eX;do{if(e2>>>0<e3>>>0){q=e2+1|0;c[l>>2]=q;e6=d[e2]|0;e7=q;e8=e3}else{q=b+32|0;if((c[q>>2]|0)==0){e6=0;e7=e2;e8=e3;break}cq=b+40|0;cr=c_[c[b+16>>2]&63](c[b+28>>2]|0,cq,c[b+36>>2]|0)|0;if((cr|0)==0){c[q>>2]=0;q=(c[n>>2]|0)-1|0;c[l>>2]=q;a[q]=0;e9=c[l>>2]|0;fa=c[n>>2]|0}else{c[l>>2]=cq;q=b+40+cr|0;c[n>>2]=q;e9=cq;fa=q}q=e9+1|0;c[l>>2]=q;e6=d[e9]|0;e7=q;e8=fa}}while(0);do{if(e7>>>0<e8>>>0){q=e7+1|0;c[l>>2]=q;fb=d[e7]|0;fc=q;fd=e8}else{q=b+32|0;if((c[q>>2]|0)==0){fb=0;fc=e7;fd=e8;break}cq=b+40|0;cr=c_[c[b+16>>2]&63](c[b+28>>2]|0,cq,c[b+36>>2]|0)|0;if((cr|0)==0){c[q>>2]=0;q=(c[n>>2]|0)-1|0;c[l>>2]=q;a[q]=0;fe=c[l>>2]|0;ff=c[n>>2]|0}else{c[l>>2]=cq;q=b+40+cr|0;c[n>>2]=q;fe=cq;ff=q}q=fe+1|0;c[l>>2]=q;fb=d[fe]|0;fc=q;fd=ff}}while(0);q=s|(fb<<8|e6)<<16;do{if(fc>>>0<fd>>>0){cq=fc+1|0;c[l>>2]=cq;fg=d[fc]|0;fh=cq;fi=fd}else{cq=b+32|0;if((c[cq>>2]|0)==0){fg=0;fh=fc;fi=fd;break}cr=b+40|0;fj=c_[c[b+16>>2]&63](c[b+28>>2]|0,cr,c[b+36>>2]|0)|0;if((fj|0)==0){c[cq>>2]=0;cq=(c[n>>2]|0)-1|0;c[l>>2]=cq;a[cq]=0;fk=c[l>>2]|0;fl=c[n>>2]|0}else{c[l>>2]=cr;cq=b+40+fj|0;c[n>>2]=cq;fk=cr;fl=cq}cq=fk+1|0;c[l>>2]=cq;fg=d[fk]|0;fh=cq;fi=fl}}while(0);do{if(fh>>>0<fi>>>0){s=fh+1|0;c[l>>2]=s;fm=d[fh]|0;fn=s;fo=fi}else{s=b+32|0;if((c[s>>2]|0)==0){fm=0;fn=fh;fo=fi;break}cq=b+40|0;cr=c_[c[b+16>>2]&63](c[b+28>>2]|0,cq,c[b+36>>2]|0)|0;if((cr|0)==0){c[s>>2]=0;s=(c[n>>2]|0)-1|0;c[l>>2]=s;a[s]=0;fp=c[l>>2]|0;fq=c[n>>2]|0}else{c[l>>2]=cq;s=b+40+cr|0;c[n>>2]=s;fp=cq;fq=s}s=fp+1|0;c[l>>2]=s;fm=d[fp]|0;fn=s;fo=fq}}while(0);s=fm<<8|fg;do{if(fn>>>0<fo>>>0){cq=fn+1|0;c[l>>2]=cq;fr=d[fn]|0;fs=cq;ft=fo}else{cq=b+32|0;if((c[cq>>2]|0)==0){fr=0;fs=fn;ft=fo;break}cr=b+40|0;fj=c_[c[b+16>>2]&63](c[b+28>>2]|0,cr,c[b+36>>2]|0)|0;if((fj|0)==0){c[cq>>2]=0;cq=(c[n>>2]|0)-1|0;c[l>>2]=cq;a[cq]=0;fu=c[l>>2]|0;fv=c[n>>2]|0}else{c[l>>2]=cr;cq=b+40+fj|0;c[n>>2]=cq;fu=cr;fv=cq}cq=fu+1|0;c[l>>2]=cq;fr=d[fu]|0;fs=cq;ft=fv}}while(0);do{if(fs>>>0<ft>>>0){cq=fs+1|0;c[l>>2]=cq;fw=d[fs]|0;fx=cq;fy=ft}else{cq=b+32|0;if((c[cq>>2]|0)==0){fw=0;fx=fs;fy=ft;break}cr=b+40|0;fj=c_[c[b+16>>2]&63](c[b+28>>2]|0,cr,c[b+36>>2]|0)|0;if((fj|0)==0){c[cq>>2]=0;cq=(c[n>>2]|0)-1|0;c[l>>2]=cq;a[cq]=0;fz=c[l>>2]|0;fA=c[n>>2]|0}else{c[l>>2]=cr;cq=b+40+fj|0;c[n>>2]=cq;fz=cr;fA=cq}cq=fz+1|0;c[l>>2]=cq;fw=d[fz]|0;fx=cq;fy=fA}}while(0);cq=s|(fw<<8|fr)<<16;do{if(fx>>>0<fy>>>0){cr=fx+1|0;c[l>>2]=cr;fB=d[fx]|0;fC=cr;fD=fy}else{cr=b+32|0;if((c[cr>>2]|0)==0){fB=0;fC=fx;fD=fy;break}fj=b+40|0;fE=c_[c[b+16>>2]&63](c[b+28>>2]|0,fj,c[b+36>>2]|0)|0;if((fE|0)==0){c[cr>>2]=0;cr=(c[n>>2]|0)-1|0;c[l>>2]=cr;a[cr]=0;fF=c[l>>2]|0;fG=c[n>>2]|0}else{c[l>>2]=fj;cr=b+40+fE|0;c[n>>2]=cr;fF=fj;fG=cr}cr=fF+1|0;c[l>>2]=cr;fB=d[fF]|0;fC=cr;fD=fG}}while(0);do{if(fC>>>0<fD>>>0){s=fC+1|0;c[l>>2]=s;fH=d[fC]|0;fI=s;fJ=fD}else{s=b+32|0;if((c[s>>2]|0)==0){fH=0;fI=fC;fJ=fD;break}cr=b+40|0;fj=c_[c[b+16>>2]&63](c[b+28>>2]|0,cr,c[b+36>>2]|0)|0;if((fj|0)==0){c[s>>2]=0;s=(c[n>>2]|0)-1|0;c[l>>2]=s;a[s]=0;fK=c[l>>2]|0;fL=c[n>>2]|0}else{c[l>>2]=cr;s=b+40+fj|0;c[n>>2]=s;fK=cr;fL=s}s=fK+1|0;c[l>>2]=s;fH=d[fK]|0;fI=s;fJ=fL}}while(0);s=fH<<8|fB;do{if(fI>>>0<fJ>>>0){cr=fI+1|0;c[l>>2]=cr;fM=d[fI]|0;fN=cr;fO=fJ}else{cr=b+32|0;if((c[cr>>2]|0)==0){fM=0;fN=fI;fO=fJ;break}fj=b+40|0;fE=c_[c[b+16>>2]&63](c[b+28>>2]|0,fj,c[b+36>>2]|0)|0;if((fE|0)==0){c[cr>>2]=0;cr=(c[n>>2]|0)-1|0;c[l>>2]=cr;a[cr]=0;fP=c[l>>2]|0;fQ=c[n>>2]|0}else{c[l>>2]=fj;cr=b+40+fE|0;c[n>>2]=cr;fP=fj;fQ=cr}cr=fP+1|0;c[l>>2]=cr;fM=d[fP]|0;fN=cr;fO=fQ}}while(0);do{if(fN>>>0<fO>>>0){cr=fN+1|0;c[l>>2]=cr;fR=d[fN]|0;fS=cr;fT=fO}else{cr=b+32|0;if((c[cr>>2]|0)==0){fR=0;fS=fN;fT=fO;break}fj=b+40|0;fE=c_[c[b+16>>2]&63](c[b+28>>2]|0,fj,c[b+36>>2]|0)|0;if((fE|0)==0){c[cr>>2]=0;cr=(c[n>>2]|0)-1|0;c[l>>2]=cr;a[cr]=0;fU=c[l>>2]|0;fV=c[n>>2]|0}else{c[l>>2]=fj;cr=b+40+fE|0;c[n>>2]=cr;fU=fj;fV=cr}cr=fU+1|0;c[l>>2]=cr;fR=d[fU]|0;fS=cr;fT=fV}}while(0);cr=s|(fR<<8|fM)<<16;do{if(fS>>>0<fT>>>0){fj=fS+1|0;c[l>>2]=fj;fW=fj;fX=fT}else{fj=b+32|0;if((c[fj>>2]|0)==0){fW=fS;fX=fT;break}fE=b+40|0;fY=c_[c[b+16>>2]&63](c[b+28>>2]|0,fE,c[b+36>>2]|0)|0;if((fY|0)==0){c[fj>>2]=0;fj=(c[n>>2]|0)-1|0;c[l>>2]=fj;a[fj]=0;fZ=c[l>>2]|0;f_=c[n>>2]|0}else{c[l>>2]=fE;fj=b+40+fY|0;c[n>>2]=fj;fZ=fE;f_=fj}fj=fZ+1|0;c[l>>2]=fj;fW=fj;fX=f_}}while(0);do{if(fW>>>0<fX>>>0){s=fW+1|0;c[l>>2]=s;f$=s;f0=fX}else{s=b+32|0;if((c[s>>2]|0)==0){f$=fW;f0=fX;break}fj=b+40|0;fE=c_[c[b+16>>2]&63](c[b+28>>2]|0,fj,c[b+36>>2]|0)|0;if((fE|0)==0){c[s>>2]=0;s=(c[n>>2]|0)-1|0;c[l>>2]=s;a[s]=0;f1=c[l>>2]|0;f2=c[n>>2]|0}else{c[l>>2]=fj;s=b+40+fE|0;c[n>>2]=s;f1=fj;f2=s}s=f1+1|0;c[l>>2]=s;f$=s;f0=f2}}while(0);do{if(f$>>>0<f0>>>0){s=f$+1|0;c[l>>2]=s;f3=s;f4=f0}else{s=b+32|0;if((c[s>>2]|0)==0){f3=f$;f4=f0;break}fj=b+40|0;fE=c_[c[b+16>>2]&63](c[b+28>>2]|0,fj,c[b+36>>2]|0)|0;if((fE|0)==0){c[s>>2]=0;s=(c[n>>2]|0)-1|0;c[l>>2]=s;a[s]=0;f5=c[l>>2]|0;f6=c[n>>2]|0}else{c[l>>2]=fj;s=b+40+fE|0;c[n>>2]=s;f5=fj;f6=s}s=f5+1|0;c[l>>2]=s;f3=s;f4=f6}}while(0);do{if(f3>>>0<f4>>>0){s=f3+1|0;c[l>>2]=s;f7=s;f8=b+32|0}else{s=b+32|0;if((c[s>>2]|0)==0){f7=f3;f8=s;break}fj=b+40|0;fE=c_[c[b+16>>2]&63](c[b+28>>2]|0,fj,c[b+36>>2]|0)|0;if((fE|0)==0){c[s>>2]=0;fY=(c[n>>2]|0)-1|0;c[l>>2]=fY;a[fY]=0;f9=c[l>>2]|0}else{c[l>>2]=fj;c[n>>2]=b+40+fE;f9=fj}fj=f9+1|0;c[l>>2]=fj;f7=fj;f8=s}}while(0);s=b+16|0;fj=b+28|0;fE=b+40|0;fY=b+36|0;ga=1;gb=f7;while(1){gc=c[n>>2]|0;do{if(gb>>>0<gc>>>0){gd=gb+1|0;c[l>>2]=gd;ge=gd;gf=gc}else{if((c[f8>>2]|0)==0){ge=gb;gf=gc;break}gd=c_[c[s>>2]&63](c[fj>>2]|0,fE,c[fY>>2]|0)|0;if((gd|0)==0){c[f8>>2]=0;gg=(c[n>>2]|0)-1|0;c[l>>2]=gg;a[gg]=0;gh=c[l>>2]|0;gi=c[n>>2]|0}else{c[l>>2]=fE;gg=b+40+gd|0;c[n>>2]=gg;gh=fE;gi=gg}gg=gh+1|0;c[l>>2]=gg;ge=gg;gf=gi}}while(0);do{if(ge>>>0<gf>>>0){gc=ge+1|0;c[l>>2]=gc;gj=gc;gk=gf}else{if((c[f8>>2]|0)==0){gj=ge;gk=gf;break}gc=c_[c[s>>2]&63](c[fj>>2]|0,fE,c[fY>>2]|0)|0;if((gc|0)==0){c[f8>>2]=0;gg=(c[n>>2]|0)-1|0;c[l>>2]=gg;a[gg]=0;gl=c[l>>2]|0;gm=c[n>>2]|0}else{c[l>>2]=fE;gg=b+40+gc|0;c[n>>2]=gg;gl=fE;gm=gg}gg=gl+1|0;c[l>>2]=gg;gj=gg;gk=gm}}while(0);do{if(gj>>>0<gk>>>0){gg=gj+1|0;c[l>>2]=gg;gn=gg;go=gk}else{if((c[f8>>2]|0)==0){gn=gj;go=gk;break}gg=c_[c[s>>2]&63](c[fj>>2]|0,fE,c[fY>>2]|0)|0;if((gg|0)==0){c[f8>>2]=0;gc=(c[n>>2]|0)-1|0;c[l>>2]=gc;a[gc]=0;gp=c[l>>2]|0;gq=c[n>>2]|0}else{c[l>>2]=fE;gc=b+40+gg|0;c[n>>2]=gc;gp=fE;gq=gc}gc=gp+1|0;c[l>>2]=gc;gn=gc;go=gq}}while(0);do{if(gn>>>0<go>>>0){gc=gn+1|0;c[l>>2]=gc;gr=gc}else{if((c[f8>>2]|0)==0){gr=gn;break}gc=c_[c[s>>2]&63](c[fj>>2]|0,fE,c[fY>>2]|0)|0;if((gc|0)==0){c[f8>>2]=0;gg=(c[n>>2]|0)-1|0;c[l>>2]=gg;a[gg]=0;gs=c[l>>2]|0}else{c[l>>2]=fE;c[n>>2]=b+40+gc;gs=fE}gc=gs+1|0;c[l>>2]=gc;gr=gc}}while(0);if((ga|0)>=12){gt=b7;gu=q;gv=cq;gw=cr;gx=gr;break L1929}ga=ga+1|0;gb=gr}}else{cm(160,2848,3052,4472);return 0}}while(0);do{if((p|0)==1561){gb=(aS|0)==32;if(!((aS|0)==32|(aS|0)==16)){gt=0;gu=0;gv=0;gw=0;gx=eC;break}if((aT|0)==0){gt=gb?16711680:31744;gu=gb?65280:992;gv=gb?255:31;gw=gb?-16777216:0;gx=eC;break}else if((aT|0)==3){gb=c[l>>2]|0;ga=c[n>>2]|0;do{if(gb>>>0<ga>>>0){cr=gb+1|0;c[l>>2]=cr;gy=d[gb]|0;gz=cr;gA=ga}else{cr=b+32|0;if((c[cr>>2]|0)==0){gy=0;gz=gb;gA=ga;break}cq=b+40|0;q=c_[c[b+16>>2]&63](c[b+28>>2]|0,cq,c[b+36>>2]|0)|0;if((q|0)==0){c[cr>>2]=0;cr=(c[n>>2]|0)-1|0;c[l>>2]=cr;a[cr]=0;gB=c[l>>2]|0;gC=c[n>>2]|0}else{c[l>>2]=cq;cr=b+40+q|0;c[n>>2]=cr;gB=cq;gC=cr}cr=gB+1|0;c[l>>2]=cr;gy=d[gB]|0;gz=cr;gA=gC}}while(0);do{if(gz>>>0<gA>>>0){ga=gz+1|0;c[l>>2]=ga;gD=d[gz]|0;gE=ga;gF=gA}else{ga=b+32|0;if((c[ga>>2]|0)==0){gD=0;gE=gz;gF=gA;break}gb=b+40|0;cr=c_[c[b+16>>2]&63](c[b+28>>2]|0,gb,c[b+36>>2]|0)|0;if((cr|0)==0){c[ga>>2]=0;ga=(c[n>>2]|0)-1|0;c[l>>2]=ga;a[ga]=0;gG=c[l>>2]|0;gH=c[n>>2]|0}else{c[l>>2]=gb;ga=b+40+cr|0;c[n>>2]=ga;gG=gb;gH=ga}ga=gG+1|0;c[l>>2]=ga;gD=d[gG]|0;gE=ga;gF=gH}}while(0);ga=gD<<8|gy;do{if(gE>>>0<gF>>>0){gb=gE+1|0;c[l>>2]=gb;gI=d[gE]|0;gJ=gb;gK=gF}else{gb=b+32|0;if((c[gb>>2]|0)==0){gI=0;gJ=gE;gK=gF;break}cr=b+40|0;cq=c_[c[b+16>>2]&63](c[b+28>>2]|0,cr,c[b+36>>2]|0)|0;if((cq|0)==0){c[gb>>2]=0;gb=(c[n>>2]|0)-1|0;c[l>>2]=gb;a[gb]=0;gL=c[l>>2]|0;gM=c[n>>2]|0}else{c[l>>2]=cr;gb=b+40+cq|0;c[n>>2]=gb;gL=cr;gM=gb}gb=gL+1|0;c[l>>2]=gb;gI=d[gL]|0;gJ=gb;gK=gM}}while(0);do{if(gJ>>>0<gK>>>0){gb=gJ+1|0;c[l>>2]=gb;gN=d[gJ]|0;gO=gb;gP=gK}else{gb=b+32|0;if((c[gb>>2]|0)==0){gN=0;gO=gJ;gP=gK;break}cr=b+40|0;cq=c_[c[b+16>>2]&63](c[b+28>>2]|0,cr,c[b+36>>2]|0)|0;if((cq|0)==0){c[gb>>2]=0;gb=(c[n>>2]|0)-1|0;c[l>>2]=gb;a[gb]=0;gQ=c[l>>2]|0;gR=c[n>>2]|0}else{c[l>>2]=cr;gb=b+40+cq|0;c[n>>2]=gb;gQ=cr;gR=gb}gb=gQ+1|0;c[l>>2]=gb;gN=d[gQ]|0;gO=gb;gP=gR}}while(0);gb=ga|(gN<<8|gI)<<16;do{if(gO>>>0<gP>>>0){cr=gO+1|0;c[l>>2]=cr;gS=d[gO]|0;gT=cr;gU=gP}else{cr=b+32|0;if((c[cr>>2]|0)==0){gS=0;gT=gO;gU=gP;break}cq=b+40|0;q=c_[c[b+16>>2]&63](c[b+28>>2]|0,cq,c[b+36>>2]|0)|0;if((q|0)==0){c[cr>>2]=0;cr=(c[n>>2]|0)-1|0;c[l>>2]=cr;a[cr]=0;gV=c[l>>2]|0;gW=c[n>>2]|0}else{c[l>>2]=cq;cr=b+40+q|0;c[n>>2]=cr;gV=cq;gW=cr}cr=gV+1|0;c[l>>2]=cr;gS=d[gV]|0;gT=cr;gU=gW}}while(0);do{if(gT>>>0<gU>>>0){ga=gT+1|0;c[l>>2]=ga;gX=d[gT]|0;gY=ga;gZ=gU}else{ga=b+32|0;if((c[ga>>2]|0)==0){gX=0;gY=gT;gZ=gU;break}cr=b+40|0;cq=c_[c[b+16>>2]&63](c[b+28>>2]|0,cr,c[b+36>>2]|0)|0;if((cq|0)==0){c[ga>>2]=0;ga=(c[n>>2]|0)-1|0;c[l>>2]=ga;a[ga]=0;g_=c[l>>2]|0;g$=c[n>>2]|0}else{c[l>>2]=cr;ga=b+40+cq|0;c[n>>2]=ga;g_=cr;g$=ga}ga=g_+1|0;c[l>>2]=ga;gX=d[g_]|0;gY=ga;gZ=g$}}while(0);ga=gX<<8|gS;do{if(gY>>>0<gZ>>>0){cr=gY+1|0;c[l>>2]=cr;g0=d[gY]|0;g1=cr;g2=gZ}else{cr=b+32|0;if((c[cr>>2]|0)==0){g0=0;g1=gY;g2=gZ;break}cq=b+40|0;q=c_[c[b+16>>2]&63](c[b+28>>2]|0,cq,c[b+36>>2]|0)|0;if((q|0)==0){c[cr>>2]=0;cr=(c[n>>2]|0)-1|0;c[l>>2]=cr;a[cr]=0;g3=c[l>>2]|0;g4=c[n>>2]|0}else{c[l>>2]=cq;cr=b+40+q|0;c[n>>2]=cr;g3=cq;g4=cr}cr=g3+1|0;c[l>>2]=cr;g0=d[g3]|0;g1=cr;g2=g4}}while(0);do{if(g1>>>0<g2>>>0){cr=g1+1|0;c[l>>2]=cr;g5=d[g1]|0;g6=cr;g7=g2}else{cr=b+32|0;if((c[cr>>2]|0)==0){g5=0;g6=g1;g7=g2;break}cq=b+40|0;q=c_[c[b+16>>2]&63](c[b+28>>2]|0,cq,c[b+36>>2]|0)|0;if((q|0)==0){c[cr>>2]=0;cr=(c[n>>2]|0)-1|0;c[l>>2]=cr;a[cr]=0;g8=c[l>>2]|0;g9=c[n>>2]|0}else{c[l>>2]=cq;cr=b+40+q|0;c[n>>2]=cr;g8=cq;g9=cr}cr=g8+1|0;c[l>>2]=cr;g5=d[g8]|0;g6=cr;g7=g9}}while(0);cr=ga|(g5<<8|g0)<<16;do{if(g6>>>0<g7>>>0){cq=g6+1|0;c[l>>2]=cq;ha=d[g6]|0;hb=cq;hc=g7}else{cq=b+32|0;if((c[cq>>2]|0)==0){ha=0;hb=g6;hc=g7;break}q=b+40|0;b7=c_[c[b+16>>2]&63](c[b+28>>2]|0,q,c[b+36>>2]|0)|0;if((b7|0)==0){c[cq>>2]=0;cq=(c[n>>2]|0)-1|0;c[l>>2]=cq;a[cq]=0;hd=c[l>>2]|0;he=c[n>>2]|0}else{c[l>>2]=q;cq=b+40+b7|0;c[n>>2]=cq;hd=q;he=cq}cq=hd+1|0;c[l>>2]=cq;ha=d[hd]|0;hb=cq;hc=he}}while(0);do{if(hb>>>0<hc>>>0){ga=hb+1|0;c[l>>2]=ga;hf=d[hb]|0;hg=ga;hh=hc}else{ga=b+32|0;if((c[ga>>2]|0)==0){hf=0;hg=hb;hh=hc;break}cq=b+40|0;q=c_[c[b+16>>2]&63](c[b+28>>2]|0,cq,c[b+36>>2]|0)|0;if((q|0)==0){c[ga>>2]=0;ga=(c[n>>2]|0)-1|0;c[l>>2]=ga;a[ga]=0;hi=c[l>>2]|0;hj=c[n>>2]|0}else{c[l>>2]=cq;ga=b+40+q|0;c[n>>2]=ga;hi=cq;hj=ga}ga=hi+1|0;c[l>>2]=ga;hf=d[hi]|0;hg=ga;hh=hj}}while(0);ga=hf<<8|ha;do{if(hg>>>0<hh>>>0){cq=hg+1|0;c[l>>2]=cq;hk=d[hg]|0;hl=cq;hm=hh}else{cq=b+32|0;if((c[cq>>2]|0)==0){hk=0;hl=hg;hm=hh;break}q=b+40|0;b7=c_[c[b+16>>2]&63](c[b+28>>2]|0,q,c[b+36>>2]|0)|0;if((b7|0)==0){c[cq>>2]=0;cq=(c[n>>2]|0)-1|0;c[l>>2]=cq;a[cq]=0;hn=c[l>>2]|0;ho=c[n>>2]|0}else{c[l>>2]=q;cq=b+40+b7|0;c[n>>2]=cq;hn=q;ho=cq}cq=hn+1|0;c[l>>2]=cq;hk=d[hn]|0;hl=cq;hm=ho}}while(0);do{if(hl>>>0<hm>>>0){cq=hl+1|0;c[l>>2]=cq;hp=d[hl]|0;hq=cq}else{cq=b+32|0;if((c[cq>>2]|0)==0){hp=0;hq=hl;break}q=b+40|0;b7=c_[c[b+16>>2]&63](c[b+28>>2]|0,q,c[b+36>>2]|0)|0;if((b7|0)==0){c[cq>>2]=0;cq=(c[n>>2]|0)-1|0;c[l>>2]=cq;a[cq]=0;hr=c[l>>2]|0}else{c[l>>2]=q;c[n>>2]=b+40+b7;hr=q}q=hr+1|0;c[l>>2]=q;hp=d[hr]|0;hq=q}}while(0);q=ga|(hp<<8|hk)<<16;if(!((gb|0)==(cr|0)&(cr|0)==(q|0))){gt=gb;gu=cr;gv=q;gw=0;gx=hq;break}c[4668]=224;aM=0;i=j;return aM|0}else{c[4668]=224;aM=0;i=j;return aM|0}}}while(0);if(aS>>>0>=16>>>0){b_=gt;b$=gu;b0=gv;b1=gw;b2=0;b3=gx;break}b_=gt;b$=gu;b0=gv;b1=gw;b2=m-14-r>>2;b3=gx}}while(0);aT=(b1|0)!=0;q=aT?4:3;b7=b+8|0;c[b7>>2]=q;cq=(h|0)==0;fE=(h|0)>2?h:q;q=b|0;fY=ag(c[q>>2]|0,fE)|0;fj=n$(ag(fY,c[aO>>2]|0)|0)|0;if((fj|0)==0){c[4668]=3032;aM=0;i=j;return aM|0}L2422:do{if(aS>>>0<16>>>0){if((b2|0)==0|(b2|0)>256){n0(fj);c[4668]=128;aM=0;i=j;return aM|0}if((b2|0)>0){fY=b+32|0;s=b+16|0;gc=b+28|0;gg=b+40|0;gd=b+36|0;hs=0;ht=b3;while(1){hu=c[n>>2]|0;do{if(ht>>>0<hu>>>0){hv=ht+1|0;c[l>>2]=hv;hw=a[ht]|0;hx=hv;hy=hu}else{if((c[fY>>2]|0)==0){hw=0;hx=ht;hy=hu;break}hv=c_[c[s>>2]&63](c[gc>>2]|0,gg,c[gd>>2]|0)|0;if((hv|0)==0){c[fY>>2]=0;hz=(c[n>>2]|0)-1|0;c[l>>2]=hz;a[hz]=0;hA=c[l>>2]|0;hB=c[n>>2]|0}else{c[l>>2]=gg;hz=b+40+hv|0;c[n>>2]=hz;hA=gg;hB=hz}hz=hA+1|0;c[l>>2]=hz;hw=a[hA]|0;hx=hz;hy=hB}}while(0);a[k+(hs<<2)+2|0]=hw;do{if(hx>>>0<hy>>>0){hu=hx+1|0;c[l>>2]=hu;hC=a[hx]|0;hD=hu;hE=hy}else{if((c[fY>>2]|0)==0){hC=0;hD=hx;hE=hy;break}hu=c_[c[s>>2]&63](c[gc>>2]|0,gg,c[gd>>2]|0)|0;if((hu|0)==0){c[fY>>2]=0;cr=(c[n>>2]|0)-1|0;c[l>>2]=cr;a[cr]=0;hF=c[l>>2]|0;hG=c[n>>2]|0}else{c[l>>2]=gg;cr=b+40+hu|0;c[n>>2]=cr;hF=gg;hG=cr}cr=hF+1|0;c[l>>2]=cr;hC=a[hF]|0;hD=cr;hE=hG}}while(0);a[k+(hs<<2)+1|0]=hC;do{if(hD>>>0<hE>>>0){cr=hD+1|0;c[l>>2]=cr;hH=a[hD]|0;hI=cr}else{if((c[fY>>2]|0)==0){hH=0;hI=hD;break}cr=c_[c[s>>2]&63](c[gc>>2]|0,gg,c[gd>>2]|0)|0;if((cr|0)==0){c[fY>>2]=0;hu=(c[n>>2]|0)-1|0;c[l>>2]=hu;a[hu]=0;hJ=c[l>>2]|0}else{c[l>>2]=gg;c[n>>2]=b+40+cr;hJ=gg}cr=hJ+1|0;c[l>>2]=cr;hH=a[hJ]|0;hI=cr}}while(0);a[k+(hs<<2)|0]=hH;do{if(w){hK=hI}else{if(hI>>>0<(c[n>>2]|0)>>>0){cr=hI+1|0;c[l>>2]=cr;hK=cr;break}if((c[fY>>2]|0)==0){hK=hI;break}cr=c_[c[s>>2]&63](c[gc>>2]|0,gg,c[gd>>2]|0)|0;if((cr|0)==0){c[fY>>2]=0;hu=(c[n>>2]|0)-1|0;c[l>>2]=hu;a[hu]=0;hL=c[l>>2]|0}else{c[l>>2]=gg;c[n>>2]=b+40+cr;hL=gg}cr=hL+1|0;c[l>>2]=cr;hK=cr}}while(0);a[k+(hs<<2)+3|0]=-1;cr=hs+1|0;if((cr|0)<(b2|0)){hs=cr;ht=hK}else{hM=hK;hN=s;break}}}else{hM=b3;hN=b+16|0}s=m-14-r-(ag(b2,w?3:4)|0)|0;do{if((c[hN>>2]|0)==0){p=1866}else{ht=c[n>>2]|0;hs=ht-hM|0;if((hs|0)>=(s|0)){p=1866;break}c[l>>2]=ht;cV[c[b+20>>2]&255](c[b+28>>2]|0,s-hs|0)}}while(0);if((p|0)==1866){c[l>>2]=hM+s}hs=(aS|0)==4;do{if(hs){ht=c[q>>2]|0;hO=(ht+1|0)>>>1;hP=ht}else{if((aS|0)==8){ht=c[q>>2]|0;hO=ht;hP=ht;break}n0(fj);c[4668]=4408;aM=0;i=j;return aM|0}}while(0);s=-hO&3;ht=c[aO>>2]|0;if((ht|0)<=0){hQ=ht;break}ht=b+20|0;gg=b+28|0;fY=(fE|0)==4;gd=(aS|0)==8;gc=b+32|0;cr=b+40|0;hu=b+36|0;gb=1;ga=0;hz=hP;while(1){L2489:do{if((hz|0)>0){hv=0;hR=ga;hS=c[l>>2]|0;while(1){do{if(hS>>>0<(c[n>>2]|0)>>>0){hT=hS+1|0;c[l>>2]=hT;hU=d[hS]|0;hV=hT}else{if((c[gc>>2]|0)==0){hU=0;hV=hS;break}hT=c_[c[hN>>2]&63](c[gg>>2]|0,cr,c[hu>>2]|0)|0;if((hT|0)==0){c[gc>>2]=0;hW=(c[n>>2]|0)-1|0;c[l>>2]=hW;a[hW]=0;hX=c[l>>2]|0}else{c[l>>2]=cr;c[n>>2]=b+40+hT;hX=cr}hT=hX+1|0;c[l>>2]=hT;hU=d[hX]|0;hV=hT}}while(0);if(hs){hY=hU&15;hZ=hU>>>4}else{hY=0;hZ=hU}a[fj+hR|0]=a[k+(hZ<<2)|0]|0;a[fj+(hR+1)|0]=a[k+(hZ<<2)+1|0]|0;hT=hR+3|0;a[fj+(hR+2)|0]=a[k+(hZ<<2)+2|0]|0;if(fY){a[fj+hT|0]=-1;h_=hR+4|0}else{h_=hT}if((hv|1|0)==(c[q>>2]|0)){h$=h_;break L2489}do{if(gd){if(hV>>>0<(c[n>>2]|0)>>>0){hT=hV+1|0;c[l>>2]=hT;h0=d[hV]|0;h1=hT;break}if((c[gc>>2]|0)==0){h0=0;h1=hV;break}hT=c_[c[hN>>2]&63](c[gg>>2]|0,cr,c[hu>>2]|0)|0;if((hT|0)==0){c[gc>>2]=0;hW=(c[n>>2]|0)-1|0;c[l>>2]=hW;a[hW]=0;h2=c[l>>2]|0}else{c[l>>2]=cr;c[n>>2]=b+40+hT;h2=cr}hT=h2+1|0;c[l>>2]=hT;h0=d[h2]|0;h1=hT}else{h0=hY;h1=hV}}while(0);a[fj+h_|0]=a[k+(h0<<2)|0]|0;a[fj+(h_+1)|0]=a[k+(h0<<2)+1|0]|0;hT=h_+3|0;a[fj+(h_+2)|0]=a[k+(h0<<2)+2|0]|0;if(fY){a[fj+hT|0]=-1;h3=h_+4|0}else{h3=hT}hT=hv+2|0;if((hT|0)<(c[q>>2]|0)){hv=hT;hR=h3;hS=h1}else{h$=h3;break}}}else{h$=ga}}while(0);do{if((c[hN>>2]|0)==0){h4=c[l>>2]|0;p=1903}else{hS=c[n>>2]|0;hR=c[l>>2]|0;hv=hS-hR|0;if((hv|0)>=(s|0)){h4=hR;p=1903;break}c[l>>2]=hS;cV[c[ht>>2]&255](c[gg>>2]|0,s-hv|0)}}while(0);if((p|0)==1903){p=0;c[l>>2]=h4+s}hv=c[aO>>2]|0;if((gb|0)>=(hv|0)){hQ=hv;break L2422}gb=gb+1|0;ga=h$;hz=c[q>>2]|0}}else{hz=m-14-r|0;ga=b+16|0;do{if((c[ga>>2]|0)==0){p=1909}else{gb=c[n>>2]|0;s=gb-b3|0;if((s|0)>=(hz|0)){p=1909;break}c[l>>2]=gb;cV[c[b+20>>2]&255](c[b+28>>2]|0,hz-s|0)}}while(0);if((p|0)==1909){c[l>>2]=b3+hz}if((aS|0)==16){h5=c[q>>2]<<1;p=1913}else if((aS|0)==24){h6=0;h7=0;h8=0;h9=0;ia=0;ib=((c[q>>2]|0)*-3|0)&3;ic=1;id=1}else{h5=0;p=1913}do{if((p|0)==1913){s=-h5&2;gb=(aS|0)==32&(b0|0)==255&(b$|0)==65280&(b_|0)==16711680&(b1|0)==-16777216;gg=gb?2:0;if(gb){h6=0;h7=0;h8=0;h9=0;ia=0;ib=s;ic=gg;id=1;break}if((b_|0)==0|(b$|0)==0|(b0|0)==0){n0(fj);c[4668]=4384;aM=0;i=j;return aM|0}gb=b_>>>0>65535>>>0;ht=gb?b_>>>16:b_;fY=gb?16:0;if(ht>>>0>255>>>0){ie=fY|8;ig=ht>>>8}else{ie=fY;ig=ht}if(ig>>>0>15>>>0){ih=ie+4|0;ii=ig>>>4}else{ih=ie;ii=ig}if(ii>>>0>3>>>0){ij=ih+2|0;ik=ii>>>2}else{ij=ih;ik=ii}ht=ij-7+(ik>>>0>1>>>0)|0;fY=(b_>>>1&1431655765)+(b_&1431655765)|0;gb=(fY>>>2&858993459)+(fY&858993459)|0;fY=(gb>>>4)+gb&252645135;gb=(fY>>>8)+fY|0;fY=(gb>>>16)+gb&255;gb=b$>>>0>65535>>>0;cr=gb?b$>>>16:b$;gc=gb?16:0;if(cr>>>0>255>>>0){il=gc|8;im=cr>>>8}else{il=gc;im=cr}if(im>>>0>15>>>0){io=il+4|0;ip=im>>>4}else{io=il;ip=im}if(ip>>>0>3>>>0){iq=io+2|0;ir=ip>>>2}else{iq=io;ir=ip}cr=iq-7+(ir>>>0>1>>>0)|0;gc=b0>>>0>65535>>>0;gb=gc?b0>>>16:b0;hu=gc?16:0;if(gb>>>0>255>>>0){is=hu|8;it=gb>>>8}else{is=hu;it=gb}if(it>>>0>15>>>0){iu=is+4|0;iv=it>>>4}else{iu=is;iv=it}if(iv>>>0>3>>>0){iw=iu+2|0;ix=iv>>>2}else{iw=iu;ix=iv}gb=iw-7+(ix>>>0>1>>>0)|0;if((b1|0)==0){h6=fY;h7=-8;h8=gb;h9=cr;ia=ht;ib=s;ic=gg;id=0;break}hu=b1>>>0>65535>>>0;gc=hu?b1>>>16:b1;gd=hu?16:0;if(gc>>>0>255>>>0){iy=gd|8;iz=gc>>>8}else{iy=gd;iz=gc}if(iz>>>0>15>>>0){iA=iy+4|0;iB=iz>>>4}else{iA=iy;iB=iz}if(iB>>>0>3>>>0){iC=iA+2|0;iD=iB>>>2}else{iC=iA;iD=iB}h6=fY;h7=iC-7+(iD>>>0>1>>>0)|0;h8=gb;h9=cr;ia=ht;ib=s;ic=gg;id=0}}while(0);hz=c[aO>>2]|0;if((hz|0)<=0){hQ=hz;break}hz=b+20|0;gg=b+28|0;s=(aS|0)==16;ht=b+32|0;cr=b+40|0;gb=b+36|0;fY=(ia|0)<0;gc=-ia|0;gd=h6>>>0<8>>>0;hu=(h9|0)<0;hs=-h9|0;hv=(h8|0)<0;hS=-h8|0;hR=(h7|0)<0;hT=-h7|0;hW=(fE|0)==4;iE=(ic|0)==2;iF=0;iG=0;while(1){iH=(c[q>>2]|0)>0;L2590:do{if(id){if(!iH){iI=iG;break}iJ=1;iK=iG;iL=c[l>>2]|0;while(1){iM=c[n>>2]|0;do{if(iL>>>0<iM>>>0){iN=iL+1|0;c[l>>2]=iN;iO=a[iL]|0;iP=iN;iQ=iM}else{if((c[ht>>2]|0)==0){iO=0;iP=iL;iQ=iM;break}iN=c_[c[ga>>2]&63](c[gg>>2]|0,cr,c[gb>>2]|0)|0;if((iN|0)==0){c[ht>>2]=0;iR=(c[n>>2]|0)-1|0;c[l>>2]=iR;a[iR]=0;iS=c[l>>2]|0;iT=c[n>>2]|0}else{c[l>>2]=cr;iR=b+40+iN|0;c[n>>2]=iR;iS=cr;iT=iR}iR=iS+1|0;c[l>>2]=iR;iO=a[iS]|0;iP=iR;iQ=iT}}while(0);a[fj+(iK+2)|0]=iO;do{if(iP>>>0<iQ>>>0){iM=iP+1|0;c[l>>2]=iM;iU=a[iP]|0;iV=iM;iW=iQ}else{if((c[ht>>2]|0)==0){iU=0;iV=iP;iW=iQ;break}iM=c_[c[ga>>2]&63](c[gg>>2]|0,cr,c[gb>>2]|0)|0;if((iM|0)==0){c[ht>>2]=0;iR=(c[n>>2]|0)-1|0;c[l>>2]=iR;a[iR]=0;iX=c[l>>2]|0;iY=c[n>>2]|0}else{c[l>>2]=cr;iR=b+40+iM|0;c[n>>2]=iR;iX=cr;iY=iR}iR=iX+1|0;c[l>>2]=iR;iU=a[iX]|0;iV=iR;iW=iY}}while(0);a[fj+(iK+1)|0]=iU;do{if(iV>>>0<iW>>>0){iR=iV+1|0;c[l>>2]=iR;iZ=a[iV]|0;i_=iR}else{if((c[ht>>2]|0)==0){iZ=0;i_=iV;break}iR=c_[c[ga>>2]&63](c[gg>>2]|0,cr,c[gb>>2]|0)|0;if((iR|0)==0){c[ht>>2]=0;iM=(c[n>>2]|0)-1|0;c[l>>2]=iM;a[iM]=0;i$=c[l>>2]|0}else{c[l>>2]=cr;c[n>>2]=b+40+iR;i$=cr}iR=i$+1|0;c[l>>2]=iR;iZ=a[i$]|0;i_=iR}}while(0);a[fj+iK|0]=iZ;iR=iK+3|0;do{if(iE){if(i_>>>0<(c[n>>2]|0)>>>0){iM=i_+1|0;c[l>>2]=iM;i0=a[i_]|0;i1=iM;break}if((c[ht>>2]|0)==0){i0=0;i1=i_;break}iM=c_[c[ga>>2]&63](c[gg>>2]|0,cr,c[gb>>2]|0)|0;if((iM|0)==0){c[ht>>2]=0;iN=(c[n>>2]|0)-1|0;c[l>>2]=iN;a[iN]=0;i2=c[l>>2]|0}else{c[l>>2]=cr;c[n>>2]=b+40+iM;i2=cr}iM=i2+1|0;c[l>>2]=iM;i0=a[i2]|0;i1=iM}else{i0=-1;i1=i_}}while(0);if(hW){a[fj+iR|0]=i0;i3=iK+4|0}else{i3=iR}if((iJ|0)>=(c[q>>2]|0)){iI=i3;break L2590}iJ=iJ+1|0;iK=i3;iL=i1}}else{if(!iH){iI=iG;break}iL=1;iK=iG;iJ=c[l>>2]|0;while(1){iM=c[n>>2]|0;iN=iJ>>>0<iM>>>0;if(s){do{if(iN){i4=iJ+1|0;c[l>>2]=i4;i5=d[iJ]|0;i6=i4;i7=iM}else{if((c[ht>>2]|0)==0){i5=0;i6=iJ;i7=iM;break}i4=c_[c[ga>>2]&63](c[gg>>2]|0,cr,c[gb>>2]|0)|0;if((i4|0)==0){c[ht>>2]=0;i8=(c[n>>2]|0)-1|0;c[l>>2]=i8;a[i8]=0;i9=c[l>>2]|0;ja=c[n>>2]|0}else{c[l>>2]=cr;i8=b+40+i4|0;c[n>>2]=i8;i9=cr;ja=i8}i8=i9+1|0;c[l>>2]=i8;i5=d[i9]|0;i6=i8;i7=ja}}while(0);do{if(i6>>>0<i7>>>0){iR=i6+1|0;c[l>>2]=iR;jb=d[i6]|0;jc=iR}else{if((c[ht>>2]|0)==0){jb=0;jc=i6;break}iR=c_[c[ga>>2]&63](c[gg>>2]|0,cr,c[gb>>2]|0)|0;if((iR|0)==0){c[ht>>2]=0;i8=(c[n>>2]|0)-1|0;c[l>>2]=i8;a[i8]=0;jd=c[l>>2]|0}else{c[l>>2]=cr;c[n>>2]=b+40+iR;jd=cr}iR=jd+1|0;c[l>>2]=iR;jb=d[jd]|0;jc=iR}}while(0);je=jb<<8|i5;jf=jc}else{do{if(iN){iR=iJ+1|0;c[l>>2]=iR;jg=d[iJ]|0;jh=iR;ji=iM}else{if((c[ht>>2]|0)==0){jg=0;jh=iJ;ji=iM;break}iR=c_[c[ga>>2]&63](c[gg>>2]|0,cr,c[gb>>2]|0)|0;if((iR|0)==0){c[ht>>2]=0;i8=(c[n>>2]|0)-1|0;c[l>>2]=i8;a[i8]=0;jj=c[l>>2]|0;jk=c[n>>2]|0}else{c[l>>2]=cr;i8=b+40+iR|0;c[n>>2]=i8;jj=cr;jk=i8}i8=jj+1|0;c[l>>2]=i8;jg=d[jj]|0;jh=i8;ji=jk}}while(0);do{if(jh>>>0<ji>>>0){iM=jh+1|0;c[l>>2]=iM;jl=d[jh]|0;jm=iM;jn=ji}else{if((c[ht>>2]|0)==0){jl=0;jm=jh;jn=ji;break}iM=c_[c[ga>>2]&63](c[gg>>2]|0,cr,c[gb>>2]|0)|0;if((iM|0)==0){c[ht>>2]=0;iN=(c[n>>2]|0)-1|0;c[l>>2]=iN;a[iN]=0;jo=c[l>>2]|0;jp=c[n>>2]|0}else{c[l>>2]=cr;iN=b+40+iM|0;c[n>>2]=iN;jo=cr;jp=iN}iN=jo+1|0;c[l>>2]=iN;jl=d[jo]|0;jm=iN;jn=jp}}while(0);iN=jl<<8|jg;do{if(jm>>>0<jn>>>0){iM=jm+1|0;c[l>>2]=iM;jq=d[jm]|0;jr=iM;js=jn}else{if((c[ht>>2]|0)==0){jq=0;jr=jm;js=jn;break}iM=c_[c[ga>>2]&63](c[gg>>2]|0,cr,c[gb>>2]|0)|0;if((iM|0)==0){c[ht>>2]=0;i8=(c[n>>2]|0)-1|0;c[l>>2]=i8;a[i8]=0;jt=c[l>>2]|0;ju=c[n>>2]|0}else{c[l>>2]=cr;i8=b+40+iM|0;c[n>>2]=i8;jt=cr;ju=i8}i8=jt+1|0;c[l>>2]=i8;jq=d[jt]|0;jr=i8;js=ju}}while(0);do{if(jr>>>0<js>>>0){i8=jr+1|0;c[l>>2]=i8;jv=d[jr]|0;jw=i8}else{if((c[ht>>2]|0)==0){jv=0;jw=jr;break}i8=c_[c[ga>>2]&63](c[gg>>2]|0,cr,c[gb>>2]|0)|0;if((i8|0)==0){c[ht>>2]=0;iM=(c[n>>2]|0)-1|0;c[l>>2]=iM;a[iM]=0;jx=c[l>>2]|0}else{c[l>>2]=cr;c[n>>2]=b+40+i8;jx=cr}i8=jx+1|0;c[l>>2]=i8;jv=d[jx]|0;jw=i8}}while(0);je=iN|(jv<<8|jq)<<16;jf=jw}i8=je&b_;iM=fY?i8<<gc:i8>>ia;i8=iM&255;if(gd){iR=iM;i4=h6;do{iR=(iM>>i4)+iR|0;i4=i4+h6|0;}while((i4|0)<8);jy=iR&255}else{jy=i8}i4=iK+1|0;a[fj+iK|0]=jy;iM=je&b$;iN=hu?iM<<hs:iM>>h9;iM=iN&255;if(gd){jz=iN;jA=h6;do{jz=(iN>>jA)+jz|0;jA=jA+h6|0;}while((jA|0)<8);jB=jz&255}else{jB=iM}jA=iK+2|0;a[fj+i4|0]=jB;iN=je&b0;i8=hv?iN<<hS:iN>>h8;iN=i8&255;if(gd){iR=i8;jC=h6;do{iR=(i8>>jC)+iR|0;jC=jC+h6|0;}while((jC|0)<8);jD=iR&255}else{jD=iN}jC=iK+3|0;a[fj+jA|0]=jD;do{if(aT){i8=je&b1;i4=hR?i8<<hT:i8>>h7;if(gd){jE=i4;jF=h6}else{jG=i4&255;break}do{jE=(i4>>jF)+jE|0;jF=jF+h6|0;}while((jF|0)<8);jG=jE&255}else{jG=-1}}while(0);if(hW){a[fj+jC|0]=jG;jH=iK+4|0}else{jH=jC}if((iL|0)>=(c[q>>2]|0)){iI=jH;break L2590}iL=iL+1|0;iK=jH;iJ=jf}}}while(0);do{if((c[ga>>2]|0)==0){jI=c[l>>2]|0;p=2048}else{iH=c[n>>2]|0;iJ=c[l>>2]|0;iK=iH-iJ|0;if((iK|0)>=(ib|0)){jI=iJ;p=2048;break}c[l>>2]=iH;cV[c[hz>>2]&255](c[gg>>2]|0,ib-iK|0)}}while(0);if((p|0)==2048){p=0;c[l>>2]=jI+ib}iK=iF+1|0;iH=c[aO>>2]|0;if((iK|0)<(iH|0)){iF=iK;iG=iI}else{hQ=iH;break}}}}while(0);do{if(aN){aT=hQ>>1;if((aT|0)<=0){break}aS=c[q>>2]|0;r=ag(aS,fE)|0;m=(r|0)>0;w=0;do{iG=ag(ag(w,fE)|0,aS)|0;iF=ag(ag(hQ+~w|0,fE)|0,aS)|0;if(m){gg=0;do{hz=fj+(gg+iG)|0;ga=a[hz]|0;hW=fj+(gg+iF)|0;a[hz]=a[hW]|0;a[hW]=ga;gg=gg+1|0;}while((gg|0)<(r|0))}w=w+1|0;}while((w|0)<(aT|0))}}while(0);do{if(cq|(fE|0)==(h|0)){jJ=fj}else{aN=eZ(fj,fE,h,c[q>>2]|0,hQ)|0;if((aN|0)==0){aM=0}else{jJ=aN;break}i=j;return aM|0}}while(0);c[e>>2]=c[q>>2];c[f>>2]=c[aO>>2];if((g|0)==0){aM=jJ;i=j;return aM|0}c[g>>2]=c[b7>>2];aM=jJ;i=j;return aM|0}}while(0);c[4668]=272;aM=0;i=j;return aM|0}function e1(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return b|0}function e2(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0;if((f|0)>0){h=0}else{return b|0}do{a[b+h|0]=((d[e+h|0]|0)+2+((d[c+h|0]|0)*3|0)|0)>>>2&255;h=h+1|0;}while((h|0)<(f|0));return b|0}function e3(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;g=a[c]|0;if((f|0)==1){a[b+1|0]=g;a[b]=g;return b|0}a[b]=g;a[b+1|0]=((d[c+1|0]|0)+2+((d[c]|0)*3|0)|0)>>>2&255;g=f-1|0;if((g|0)>1){e=1;do{h=((d[c+e|0]|0)*3|0)+2|0;i=e<<1;a[b+i|0]=(h+(d[c+(e-1)|0]|0)|0)>>>2&255;e=e+1|0;a[b+(i|1)|0]=(h+(d[c+e|0]|0)|0)>>>2&255;}while((e|0)<(g|0));j=g<<1}else{j=2}e=c+g|0;a[b+j|0]=((d[e]|0)+2+((d[c+(f-2)|0]|0)*3|0)|0)>>>2&255;a[b+(j|1)|0]=a[e]|0;return b|0}function e4(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;g=((d[c]|0)*3|0)+(d[e]|0)|0;h=(g+2|0)>>>2&255;if((f|0)==1){a[b+1|0]=h;a[b]=h;return b|0}a[b]=h;if((f|0)>1){h=1;i=g;while(1){j=((d[c+h|0]|0)*3|0)+(d[e+h|0]|0)|0;k=h<<1;a[b+(k-1)|0]=((i*3|0)+8+j|0)>>>4&255;a[b+k|0]=(i+8+(j*3|0)|0)>>>4&255;k=h+1|0;if((k|0)<(f|0)){h=k;i=j}else{l=j;break}}}else{l=g}a[b+((f<<1)-1)|0]=(l+2|0)>>>2&255;return b|0}function e5(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;if((e|0)<=0){return b|0}d=(f|0)>0;g=0;do{if(d){h=c+g|0;i=ag(g,f)|0;j=0;do{a[b+(j+i)|0]=a[h]|0;j=j+1|0;}while((j|0)<(f|0))}g=g+1|0;}while((g|0)<(e|0));return b|0}function e6(e,f,g,h,i){e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0;j=e8(e,g)|0;if((j|0)<0){c[4668]=1568;k=0;return k|0}oe(f|0,0,128);do{if((j|0)==0){l=0;m=e+13952|0}else{g=1<<j-1;n=e+13952|0;o=c[n>>2]|0;L2801:do{if((o|0)<(j|0)){p=e+13960|0;q=e|0;r=e+13948|0;L2803:while(1){L2805:do{if((c[p>>2]|0)==0){s=c[q>>2]|0;t=s+168|0;u=c[t>>2]|0;v=s+172|0;do{if(u>>>0<(c[v>>2]|0)>>>0){w=u}else{x=s+32|0;if((c[x>>2]|0)==0){y=0;break L2805}z=s+40|0;A=c_[c[s+16>>2]&63](c[s+28>>2]|0,z,c[s+36>>2]|0)|0;if((A|0)==0){c[x>>2]=0;x=(c[v>>2]|0)-1|0;c[t>>2]=x;a[x]=0;w=c[t>>2]|0;break}else{c[t>>2]=z;c[v>>2]=s+40+A;w=z;break}}}while(0);c[t>>2]=w+1;s=a[w]|0;if(s<<24>>24!=-1){y=s&255;break}s=c[q>>2]|0;v=s+168|0;u=c[v>>2]|0;z=s+172|0;do{if(u>>>0<(c[z>>2]|0)>>>0){B=u}else{A=s+32|0;if((c[A>>2]|0)==0){y=255;break L2805}x=s+40|0;C=c_[c[s+16>>2]&63](c[s+28>>2]|0,x,c[s+36>>2]|0)|0;if((C|0)==0){c[A>>2]=0;A=(c[z>>2]|0)-1|0;c[v>>2]=A;a[A]=0;B=c[v>>2]|0;break}else{c[v>>2]=x;c[z>>2]=s+40+C;B=x;break}}}while(0);c[v>>2]=B+1;D=a[B]|0;if(D<<24>>24==0){y=255}else{break L2803}}else{y=0}}while(0);s=c[n>>2]|0;c[r>>2]=y<<24-s|c[r>>2];z=s+8|0;c[n>>2]=z;if((z|0)>=25){E=z;F=r;break L2801}}a[e+13956|0]=D;c[p>>2]=1;E=c[n>>2]|0;F=r}else{E=o;F=e+13948|0}}while(0);o=c[F>>2]|0;q=o<<j|o>>>((32-j|0)>>>0);o=c[13896+(j<<2)>>2]|0;c[F>>2]=q&~o;z=q&o;c[n>>2]=E-j;if(z>>>0>=g>>>0){l=z;m=n;break}l=(-1<<j)+1+z|0;m=n}}while(0);j=e+13724+(i*56|0)+24|0;i=(c[j>>2]|0)+l|0;c[j>>2]=i;b[f>>1]=i&65535;i=e+13960|0;j=e|0;l=e+13948|0;E=e+13956|0;F=1;while(1){D=e8(e,h)|0;if((D|0)<0){G=2134;break}y=D&15;if((y|0)==0){if((D|0)!=240){k=1;G=2163;break}H=F+16|0}else{B=(D>>4)+F|0;D=1<<y-1;w=c[m>>2]|0;L2837:do{if((w|0)<(y|0)){L2838:while(1){L2840:do{if((c[i>>2]|0)==0){z=c[j>>2]|0;o=z+168|0;q=c[o>>2]|0;s=z+172|0;do{if(q>>>0<(c[s>>2]|0)>>>0){I=q}else{u=z+32|0;if((c[u>>2]|0)==0){J=0;break L2840}t=z+40|0;x=c_[c[z+16>>2]&63](c[z+28>>2]|0,t,c[z+36>>2]|0)|0;if((x|0)==0){c[u>>2]=0;u=(c[s>>2]|0)-1|0;c[o>>2]=u;a[u]=0;I=c[o>>2]|0;break}else{c[o>>2]=t;c[s>>2]=z+40+x;I=t;break}}}while(0);c[o>>2]=I+1;z=a[I]|0;if(z<<24>>24!=-1){J=z&255;break}z=c[j>>2]|0;s=z+168|0;q=c[s>>2]|0;v=z+172|0;do{if(q>>>0<(c[v>>2]|0)>>>0){K=q}else{t=z+32|0;if((c[t>>2]|0)==0){J=255;break L2840}x=z+40|0;u=c_[c[z+16>>2]&63](c[z+28>>2]|0,x,c[z+36>>2]|0)|0;if((u|0)==0){c[t>>2]=0;t=(c[v>>2]|0)-1|0;c[s>>2]=t;a[t]=0;K=c[s>>2]|0;break}else{c[s>>2]=x;c[v>>2]=z+40+u;K=x;break}}}while(0);c[s>>2]=K+1;L=a[K]|0;if(L<<24>>24==0){J=255}else{break L2838}}else{J=0}}while(0);z=c[m>>2]|0;c[l>>2]=J<<24-z|c[l>>2];v=z+8|0;c[m>>2]=v;if((v|0)>=25){M=v;break L2837}}a[E]=L;c[i>>2]=1;M=c[m>>2]|0}else{M=w}}while(0);w=c[l>>2]|0;n=w<<y|w>>>((32-y|0)>>>0);w=c[13896+(y<<2)>>2]|0;c[l>>2]=n&~w;g=n&w;c[m>>2]=M-y;if(g>>>0<D>>>0){N=(-1<<y)+1+g&65535}else{N=g&65535}b[f+((d[13816+B|0]|0)<<1)>>1]=N;H=B+1|0}if((H|0)<64){F=H}else{k=1;G=2161;break}}if((G|0)==2134){c[4668]=1568;k=0;return k|0}else if((G|0)==2163){return k|0}else if((G|0)==2161){return k|0}return 0}function e7(e,f,g,h){e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0;j=i;i=i+256|0;k=j|0;l=g;g=h;h=k;m=0;while(1){n=b[l+16>>1]|0;o=b[l+32>>1]|0;do{if((n|o)<<16>>16==0){if((b[l+48>>1]|0)!=0){p=0;q=2172;break}if((b[l+64>>1]|0)!=0){p=0;q=2172;break}if((b[l+80>>1]|0)!=0){p=0;q=2172;break}if((b[l+96>>1]|0)!=0){p=0;q=2172;break}if((b[l+112>>1]|0)!=0){p=0;q=2172;break}r=ag(b[l>>1]<<2,d[g]|0)|0;c[h+224>>2]=r;c[h+192>>2]=r;c[h+160>>2]=r;c[h+128>>2]=r;c[h+96>>2]=r;c[h+64>>2]=r;c[h+32>>2]=r;c[h>>2]=r}else{p=o;q=2172}}while(0);if((q|0)==2172){q=0;o=ag(d[g+16|0]|0,p<<16>>16)|0;r=ag(d[g+48|0]|0,b[l+96>>1]|0)|0;s=(r+o|0)*2217|0;t=s+(r*-7567|0)|0;r=s+(o*3135|0)|0;o=ag(d[g]|0,b[l>>1]|0)|0;s=ag(d[g+32|0]|0,b[l+64>>1]|0)|0;u=s+o<<12;v=o-s<<12;s=ag(d[g+56|0]|0,b[l+112>>1]|0)|0;o=ag(d[g+40|0]|0,b[l+80>>1]|0)|0;w=ag(d[g+24|0]|0,b[l+48>>1]|0)|0;x=ag(d[g+8|0]|0,n<<16>>16)|0;y=w+s|0;z=x+o|0;A=(z+y|0)*4816|0;B=A+((x+s|0)*-3685|0)|0;C=A+((w+o|0)*-10497|0)|0;A=y*-8034|0;y=z*-1597|0;z=y+(x*6149|0)+B|0;x=A+(w*12586|0)+C|0;w=y+(o*8410|0)+C|0;C=A+(s*1223|0)+B|0;B=r+512+u|0;s=t+512+v|0;A=v-t+512|0;t=u-r+512|0;c[h>>2]=z+B>>10;c[h+224>>2]=B-z>>10;c[h+32>>2]=x+s>>10;c[h+192>>2]=s-x>>10;c[h+64>>2]=w+A>>10;c[h+160>>2]=A-w>>10;c[h+96>>2]=C+t>>10;c[h+128>>2]=t-C>>10}C=m+1|0;if((C|0)<8){l=l+2|0;g=g+1|0;h=h+4|0;m=C}else{D=e;E=k;F=0;break}}while(1){k=c[E+8>>2]|0;e=c[E+24>>2]|0;m=(e+k|0)*2217|0;h=m+(e*-7567|0)|0;e=m+(k*3135|0)|0;k=c[E>>2]|0;m=c[E+16>>2]|0;g=m+k<<12;l=k-m<<12;m=c[E+28>>2]|0;k=c[E+20>>2]|0;p=c[E+12>>2]|0;q=c[E+4>>2]|0;C=p+m|0;t=q+k|0;w=(t+C|0)*4816|0;A=w+((q+m|0)*-3685|0)|0;x=w+((p+k|0)*-10497|0)|0;w=C*-8034|0;C=t*-1597|0;t=C+(q*6149|0)+A|0;q=w+(p*12586|0)+x|0;p=C+(k*8410|0)+x|0;x=w+(m*1223|0)+A|0;A=e+16842752+g|0;m=h+16842752+l|0;w=l-h+16842752|0;h=g-e+16842752|0;e=t+A|0;g=e>>17;if(g>>>0>255>>>0){G=~(e>>31&255)}else{G=g&255}a[D]=G;g=A-t|0;t=g>>17;if(t>>>0>255>>>0){H=~(g>>31&255)}else{H=t&255}a[D+7|0]=H;t=q+m|0;g=t>>17;if(g>>>0>255>>>0){I=~(t>>31&255)}else{I=g&255}a[D+1|0]=I;g=m-q|0;q=g>>17;if(q>>>0>255>>>0){J=~(g>>31&255)}else{J=q&255}a[D+6|0]=J;q=p+w|0;g=q>>17;if(g>>>0>255>>>0){K=~(q>>31&255)}else{K=g&255}a[D+2|0]=K;g=w-p|0;p=g>>17;if(p>>>0>255>>>0){L=~(g>>31&255)}else{L=p&255}a[D+5|0]=L;p=x+h|0;g=p>>17;if(g>>>0>255>>>0){M=~(p>>31&255)}else{M=g&255}a[D+3|0]=M;g=h-x|0;x=g>>17;if(x>>>0>255>>>0){N=~(g>>31&255)}else{N=x&255}a[D+4|0]=N;x=F+1|0;if((x|0)<8){D=D+f|0;E=E+32|0;F=x}else{break}}i=j;return}function e8(b,f){b=b|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;g=b+13952|0;L2920:do{if((c[g>>2]|0)<16){h=b+13960|0;i=b|0;j=b+13948|0;L2923:while(1){L2925:do{if((c[h>>2]|0)==0){k=c[i>>2]|0;l=k+168|0;m=c[l>>2]|0;n=k+172|0;do{if(m>>>0<(c[n>>2]|0)>>>0){o=m}else{p=k+32|0;if((c[p>>2]|0)==0){q=0;break L2925}r=k+40|0;s=c_[c[k+16>>2]&63](c[k+28>>2]|0,r,c[k+36>>2]|0)|0;if((s|0)==0){c[p>>2]=0;p=(c[n>>2]|0)-1|0;c[l>>2]=p;a[p]=0;o=c[l>>2]|0;break}else{c[l>>2]=r;c[n>>2]=k+40+s;o=r;break}}}while(0);c[l>>2]=o+1;k=a[o]|0;if(k<<24>>24!=-1){q=k&255;break}k=c[i>>2]|0;n=k+168|0;m=c[n>>2]|0;r=k+172|0;do{if(m>>>0<(c[r>>2]|0)>>>0){t=m}else{s=k+32|0;if((c[s>>2]|0)==0){q=255;break L2925}p=k+40|0;u=c_[c[k+16>>2]&63](c[k+28>>2]|0,p,c[k+36>>2]|0)|0;if((u|0)==0){c[s>>2]=0;s=(c[r>>2]|0)-1|0;c[n>>2]=s;a[s]=0;t=c[n>>2]|0;break}else{c[n>>2]=p;c[r>>2]=k+40+u;t=p;break}}}while(0);c[n>>2]=t+1;v=a[t]|0;if(v<<24>>24==0){q=255}else{break L2923}}else{q=0}}while(0);k=c[g>>2]|0;c[j>>2]=q<<24-k|c[j>>2];r=k+8|0;c[g>>2]=r;if((r|0)>=25){w=j;break L2920}}a[b+13956|0]=v;c[h>>2]=1;w=j}else{w=b+13948|0}}while(0);b=c[w>>2]|0;v=a[f+(b>>>23)|0]|0;q=v&255;if(v<<24>>24!=-1){v=d[f+1280+q|0]|0;t=c[g>>2]|0;if((v|0)>(t|0)){x=-1;return x|0}c[w>>2]=b<<v;c[g>>2]=t-v;x=d[f+1024+q|0]|0;return x|0}q=b>>>16;v=10;while(1){if(q>>>0<(c[f+1540+(v<<2)>>2]|0)>>>0){break}else{v=v+1|0}}q=c[g>>2]|0;if((v|0)==17){c[g>>2]=q-16;x=-1;return x|0}if((v|0)>(q|0)){x=-1;return x|0}t=(b>>>((32-v|0)>>>0)&c[13896+(v<<2)>>2])+(c[f+1612+(v<<2)>>2]|0)|0;o=d[f+1280+t|0]|0;if((b>>>((32-o|0)>>>0)&c[13896+(o<<2)>>2]|0)!=(e[f+512+(t<<1)>>1]|0|0)){cm(4272,2848,1104,4488);return 0}c[g>>2]=q-v;c[w>>2]=b<<v;x=d[f+1024+t|0]|0;return x|0}function e9(a,b,c){a=a|0;b=b|0;c=c|0;return co(b|0,1,c|0,a|0)|0}function fa(a,b){a=a|0;b=b|0;cv(a|0,b|0,1)|0;return}function fb(a){a=a|0;return ct(a|0)|0}function fc(a,b){a=a|0;b=b|0;fK(a|0,0,b);c[a>>2]=8384;c[a+36>>2]=0;c[a+40>>2]=0;return}function fd(a,b){a=a|0;b=b|0;var d=0,e=0,f=0.0,h=0.0,i=0;d=a+36|0;e=c[d>>2]|0;c[d>>2]=e+1;do{if(((e|0)%50|0|0)==0){f=+g[c[a+8>>2]>>2];h=+g[c[(c[b+52>>2]|0)+8>>2]>>2]-f;if(+V(+h)<=30.0){break}fe(a,b,f+h*+(bI()|0)*4.656612873077393e-10*.4000000059604645,90.0)}}while(0);b=a+28|0;e=c[b>>2]|0;if((e|0)>0){c[b>>2]=e-1}do{if((c[a+24>>2]|0)<1){e=a+32|0;b=c[e>>2]|0;c[e>>2]=b+1;if((b|0)>300){i=1}else{break}return i|0}}while(0);i=0;return i|0}function fe(a,b,d,e){a=a|0;b=b|0;d=+d;e=+e;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0.0,p=0.0,q=0,r=0,s=0,t=0;f=i;i=i+8|0;h=f|0;j=h;k=i;i=i+52|0;i=i+7&-8;l=i;i=i+8|0;m=l;n=a+8|0;a=c[n>>2]|0;g[h>>2]=d;g[j+4>>2]=e;ds(j,a)|0;a=c[h+4>>2]|0;c[l>>2]=c[h>>2];c[l+4>>2]=a;du(m);a=c[b>>2]|0;h=c[n>>2]|0;e=+g[h>>2];d=+g[h+4>>2];h=m+4|0;j=l;o=+ac(+(+g[h>>2]),+(+g[j>>2]))*180.0/3.141590118408203;l=k+4|0;oe(l|0,0,16);g[k+36>>2]=0.0;g[k+44>>2]=.9999979734420776;g[k+40>>2]=.9999979734420776;g[k+48>>2]=.10000000149011612;c[k>>2]=0;g[l>>2]=e;g[k+8>>2]=d;g[k+28>>2]=1.0;g[k+32>>2]=1.0;g[k+24>>2]=1.0;g[k+20>>2]=o;l=dv(a,k)|0;k=n4(28)|0;fG(k,0,l);a=c[n>>2]|0;o=+g[j>>2]*+g[a+8>>2]+ +g[h>>2]*+g[a+12>>2];if(o<0.0){p=40.0;q=dt(m,p)|0;r=l+8|0;s=dr(r,m)|0;t=k;dS(b,t);i=f;return}p=o+40.0;q=dt(m,p)|0;r=l+8|0;s=dr(r,m)|0;t=k;dS(b,t);i=f;return}function ff(a){a=a|0;fr(a|0);return}function fg(a){a=a|0;fr(a|0);n6(a);return}function fh(a,b){a=a|0;b=b|0;var d=0;c[a+28>>2]=50;d=a+24|0;c[d>>2]=(c[d>>2]|0)-b;return}function fi(a,b){a=a|0;b=b|0;fK(a|0,0,b);c[a>>2]=8344;c[a+36>>2]=0;c[a+40>>2]=0;return}function fj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0.0,h=0.0,i=0.0,j=0;d=a+36|0;e=c[d>>2]|0;c[d>>2]=e+1;if(((e|0)%50|0|0)==0){e=(c[b+52>>2]|0)+8|0;d=c[a+8>>2]|0;f=+g[c[e>>2]>>2]- +g[d>>2];h=+g[d+4>>2];i=+(bI()|0)*4.656612873077393e-10;d=~~f;fk(a,b,+g[c[e>>2]>>2],h+i*+(((d|0)>-1?d:-d|0)|0)*2.0)}d=a+28|0;e=c[d>>2]|0;if((e|0)>0){c[d>>2]=e-1}do{if((c[a+24>>2]|0)<1){e=a+32|0;d=c[e>>2]|0;c[e>>2]=d+1;if((d|0)>300){j=1}else{break}return j|0}}while(0);j=0;return j|0}function fk(a,b,d,e){a=a|0;b=b|0;d=+d;e=+e;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0.0,p=0.0,q=0,r=0,s=0,t=0;f=i;i=i+8|0;h=f|0;j=h;k=i;i=i+52|0;i=i+7&-8;l=i;i=i+8|0;m=l;n=a+8|0;a=c[n>>2]|0;g[h>>2]=d;g[j+4>>2]=e;ds(j,a)|0;a=c[h+4>>2]|0;c[l>>2]=c[h>>2];c[l+4>>2]=a;du(m);a=c[b>>2]|0;h=c[n>>2]|0;e=+g[h>>2];d=+g[h+4>>2];h=m+4|0;j=l;o=+ac(+(+g[h>>2]),+(+g[j>>2]))*180.0/3.141590118408203;l=k+4|0;oe(l|0,0,16);g[k+36>>2]=0.0;g[k+44>>2]=.9999979734420776;g[k+40>>2]=.9999979734420776;g[k+48>>2]=.10000000149011612;c[k>>2]=0;g[l>>2]=e;g[k+8>>2]=d;g[k+28>>2]=1.0;g[k+32>>2]=1.0;g[k+24>>2]=1.0;g[k+20>>2]=o;l=dv(a,k)|0;k=n4(28)|0;fG(k,0,l);a=c[n>>2]|0;o=+g[j>>2]*+g[a+8>>2]+ +g[h>>2]*+g[a+12>>2];if(o<0.0){p=40.0;q=dt(m,p)|0;r=l+8|0;s=dr(r,m)|0;t=k;dS(b,t);i=f;return}p=o+40.0;q=dt(m,p)|0;r=l+8|0;s=dr(r,m)|0;t=k;dS(b,t);i=f;return}function fl(a){a=a|0;fr(a|0);return}function fm(a){a=a|0;fr(a|0);n6(a);return}function fn(a){a=a|0;var b=0;b=a+12|0;a=c[b>>2]|0;c[b>>2]=a+1;return(a|0)>20|0}function fo(a,b){a=a|0;b=b|0;var d=0,e=0,f=0.0,h=0,i=0;d=dF(b)|0;c[d+12>>2]=2;g[d>>2]=+g[a+4>>2];g[d+4>>2]=+g[a+8>>2];e=a+12|0;g[d+32>>2]=+(c[e>>2]|0)/20.0+.20000000298023224;g[d+16>>2]=1.0;f=.6000000238418579- +(c[e>>2]|0)/20.0*.4000000059604645;g[d+28>>2]=f;g[d+24>>2]=f;g[d+20>>2]=f;e=b+16|0;a=n4(12)|0;h=a;i=a+8|0;if((i|0)!=0){c[i>>2]=d}d=e|0;c[(c[d>>2]|0)+4>>2]=h;c[a>>2]=c[d>>2];c[d>>2]=h;c[a+4>>2]=e;e=b+24|0;c[e>>2]=(c[e>>2]|0)+1;return}function fp(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;c[b+4>>2]=1;c[b+8>>2]=d;c[b>>2]=8496;g=n4(12)|0;c[g+4>>2]=b;a[g+8|0]=1;c[b+12>>2]=g;c[g>>2]=1;c[d+132>>2]=b;if(e){e=d+128|0;c[e>>2]=c[e>>2]|15728640}if(!f){h=b+16|0;c[h>>2]=0;return}f=d+128|0;c[f>>2]=c[f>>2]|251658240;h=b+16|0;c[h>>2]=0;return}function fq(b){b=b|0;var d=0,e=0,f=0,g=0;c[b>>2]=8496;d=b+12|0;a[(c[d>>2]|0)+8|0]=0;e=c[d>>2]|0;d=e|0;f=(c[d>>2]|0)-1|0;c[d>>2]=f;if((f|0)!=0|(e|0)==0){g=b;n6(g);return}n6(e);g=b;n6(g);return}function fr(b){b=b|0;var d=0,e=0;c[b>>2]=8496;d=b+12|0;a[(c[d>>2]|0)+8|0]=0;b=c[d>>2]|0;d=b|0;e=(c[d>>2]|0)-1|0;c[d>>2]=e;if((e|0)!=0|(b|0)==0){return}n6(b);return}function fs(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=c[b+132>>2]|0;f=c[d>>2]|0;if((f|0)==(b|0)){g=c[d+4>>2]|0}else{g=f}if((c[g+128>>2]&15728640|0)==0){h=0;return h|0}g=c[(c[e+20>>2]|0)+8>>2]|0;if((g|0)==(f|0)){h=0;return h|0}if((g|0)==(c[d+4>>2]|0)){h=0;return h|0}if((c[e+32>>2]|0)==(b|0)){h=(c[e+28>>2]|0)==0;return h|0}if((c[e+24>>2]|0)==0){return(a[e+56|0]&1)==0|0}else{h=0;return h|0}return 0}function ft(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;d=i;i=i+8|0;e=d|0;f=e;h=i;i=i+8|0;j=h;k=c[a+132>>2]|0;l=k+32|0;if((c[l>>2]|0)!=(a|0)){m=k+24|0;if((c[m>>2]|0)!=0){i=d;return}n=c[b>>2]|0;if((n|0)==(a|0)){o=c[b+4>>2]|0}else{o=n}n=c[(c[o+132>>2]|0)+12>>2]|0;c[m>>2]=n;m=c[n+4>>2]|0;o=n|0;c[o>>2]=(c[o>>2]|0)+1;o=k+36|0;n=k+8|0;p=c[n>>2]|0;q=c[p+4>>2]|0;r=c[m+8>>2]|0;c[h>>2]=c[p>>2];c[h+4>>2]=q;ds(j,r)|0;r=c[h+4>>2]|0;j=o;c[j>>2]=c[h>>2];c[j+4>>2]=r;g[(c[n>>2]|0)+12>>2]=0.0;g[(c[n>>2]|0)+8>>2]=0.0;i=d;return}n=k+28|0;if((c[n>>2]|0)!=0){i=d;return}r=c[b>>2]|0;if((r|0)==(a|0)){s=c[b+4>>2]|0}else{s=r}r=c[(c[s+132>>2]|0)+12>>2]|0;c[n>>2]=r;if((r|0)==(c[k+24>>2]|0)){c[n>>2]=0;i=d;return}else{n=c[r+4>>2]|0;s=r|0;c[s>>2]=(c[s>>2]|0)+1;s=k+44|0;k=c[l>>2]|0;l=c[k+4>>2]|0;r=c[n+8>>2]|0;c[e>>2]=c[k>>2];c[e+4>>2]=l;ds(f,r)|0;r=c[e+4>>2]|0;f=s;c[f>>2]=c[e>>2];c[f+4>>2]=r;i=d;return}}function fu(b,d,e){b=b|0;d=d|0;e=e|0;fp(b|0,e,0,0);c[b>>2]=8184;c[b+28>>2]=0;c[b+24>>2]=0;a[b+56|0]=0;a[b+57|0]=0;oe(b+36|0,0,16);c[b+60>>2]=150;g[b+68>>2]=25.0e4;c[b+64>>2]=600;c[b+32>>2]=0;c[e+132>>2]=b;c[e+136>>2]=30;c[e+140>>2]=54;return}function fv(a,b){a=a|0;b=b|0;c[a+32>>2]=b;c[b+132>>2]=a;c[b+136>>2]=30;c[b+140>>2]=54;return}function fw(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0.0,y=0.0,z=0.0,A=0,B=0,C=0,D=0;e=i;i=i+8|0;f=e|0;h=f;j=i;i=i+8|0;l=i;i=i+8|0;m=i;i=i+8|0;n=m;o=i;i=i+8|0;p=o;q=i;i=i+8|0;r=q;s=b+20|0;t=c[(c[s>>2]|0)+8>>2]|0;u=c[t+4>>2]|0;v=b+8|0;w=c[v>>2]|0;c[l>>2]=c[t>>2];c[l+4>>2]=u;ds(l,w)|0;w=c[l>>2]|0;u=c[l+4>>2]|0;c[q>>2]=w;c[q+4>>2]=u;x=(c[k>>2]=w,+g[k>>2]);y=(c[k>>2]=u,+g[k>>2]);z=x*x+y*y;u=b+56|0;do{if(z>+g[b+68>>2]){a[u]=1}else{w=b+56|0;if((a[u]&1)!=0){break}l=b+24|0;if((c[l>>2]|0)!=0){g[(c[v>>2]|0)+52>>2]=1.5;t=c[v>>2]|0;A=c[(c[(c[l>>2]|0)+4>>2]|0)+8>>2]|0;B=c[A+4>>2]|0;C=b+36|0;c[f>>2]=c[A>>2];c[f+4>>2]=B;dr(h,C)|0;C=c[f+4>>2]|0;B=t;c[B>>2]=c[f>>2];c[B+4>>2]=C;du(r);y=+g[b+52>>2];dt(r,y)|0;C=c[(c[s>>2]|0)+8>>2]|0;B=c[q+4>>2]|0;t=j;c[j>>2]=c[q>>2];c[j+4>>2]=B;dt(t,-1.0)|0;t=c[j+4>>2]|0;c[m>>2]=c[j>>2];c[m+4>>2]=t;t=C+16|0;dr(t,n)|0;t=c[(c[(c[l>>2]|0)+4>>2]|0)+8>>2]|0;C=c[q+4>>2]|0;c[o>>2]=c[q>>2];c[o+4>>2]=C;C=t+16|0;dr(C,p)|0;C=b+64|0;t=c[C>>2]|0;c[C>>2]=t-1;if((t|0)>=0){D=0;i=e;return D|0}a[w]=1;D=0;i=e;return D|0}t=b+60|0;C=c[t>>2]|0;c[t>>2]=C-1;if((C|0)<0){a[w]=1}if((a[b+57|0]&1)==0){D=0;i=e;return D|0}w=c[s>>2]|0;do{if((w|0)!=0){C=w+36|0;if((c[C>>2]|0)!=(b|0)){break}c[C>>2]=0;C=c[l>>2]|0;if((C|0)==0){break}t=C|0;B=(c[t>>2]|0)-1|0;c[t>>2]=B;if((B|0)!=0){break}n6(C)}}while(0);l=c[b+28>>2]|0;do{if((l|0)!=0){w=l|0;C=(c[w>>2]|0)-1|0;c[w>>2]=C;if((C|0)!=0){break}n6(l)}}while(0);l=c[b+32>>2]|0;if((l|0)==0){D=1;i=e;return D|0}dx(c[d>>2]|0,l);D=1;i=e;return D|0}}while(0);du(r);p=c[(c[s>>2]|0)+8>>2]|0;y=+g[p+8>>2];x=+g[p+12>>2];dt(r,+g[b+72>>2]+ +W(y*y+x*x))|0;r=(c[v>>2]|0)+8|0;v=c[q+4>>2]|0;c[r>>2]=c[q>>2];c[r+4>>2]=v;if(!((a[b+57|0]&1)!=0|z<2.0)){D=0;i=e;return D|0}v=c[s>>2]|0;do{if((v|0)!=0){s=v+36|0;if((c[s>>2]|0)!=(b|0)){break}c[s>>2]=0}}while(0);v=c[b+24>>2]|0;do{if((v|0)!=0){s=v|0;r=(c[s>>2]|0)-1|0;c[s>>2]=r;if((r|0)!=0){break}n6(v)}}while(0);v=c[b+28>>2]|0;do{if((v|0)!=0){r=v|0;s=(c[r>>2]|0)-1|0;c[r>>2]=s;if((s|0)!=0){break}n6(v)}}while(0);v=c[b+32>>2]|0;if((v|0)==0){D=1;i=e;return D|0}dx(c[d>>2]|0,v);D=1;i=e;return D|0}function fx(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0.0,A=0.0;d=i;i=i+8|0;e=d|0;f=e;h=i;i=i+8|0;j=i;i=i+8|0;l=i;i=i+8|0;m=i;i=i+8|0;n=m;o=i;i=i+8|0;p=o;q=i;i=i+8|0;r=q;s=a+24|0;if((c[s>>2]|0)!=0){t=j;u=a+8|0;g[(c[u>>2]|0)+52>>2]=1.5;v=c[u>>2]|0;u=c[(c[(c[s>>2]|0)+4>>2]|0)+8>>2]|0;w=c[u+4>>2]|0;x=a+36|0;c[j>>2]=c[u>>2];c[j+4>>2]=w;dr(t,x)|0;x=c[j+4>>2]|0;t=v;c[t>>2]=c[j>>2];c[t+4>>2]=x}x=a+28|0;if((c[x>>2]|0)!=0){t=a+32|0;g[(c[t>>2]|0)+52>>2]=1.5;j=c[t>>2]|0;t=c[(c[(c[x>>2]|0)+4>>2]|0)+8>>2]|0;v=c[t+4>>2]|0;w=a+44|0;c[h>>2]=c[t>>2];c[h+4>>2]=v;dr(h,w)|0;w=c[h+4>>2]|0;v=j;c[v>>2]=c[h>>2];c[v+4>>2]=w}w=a+64|0;v=c[w>>2]|0;c[w>>2]=v-1;if((v|0)<0){c[a+20>>2]=0;v=c[s>>2]|0;do{if((v|0)!=0){w=v|0;h=(c[w>>2]|0)-1|0;c[w>>2]=h;if((h|0)!=0){break}n6(v)}}while(0);v=c[x>>2]|0;do{if((v|0)!=0){h=v|0;w=(c[h>>2]|0)-1|0;c[h>>2]=w;if((w|0)!=0){break}n6(v)}}while(0);v=c[a+32>>2]|0;if((v|0)==0){y=1;i=d;return y|0}dx(c[b>>2]|0,v);y=1;i=d;return y|0}if((c[s>>2]|0)==0){y=0;i=d;return y|0}if((c[x>>2]|0)==0){y=0;i=d;return y|0}v=c[a+8>>2]|0;w=c[v+4>>2]|0;h=a+32|0;j=c[h>>2]|0;c[e>>2]=c[v>>2];c[e+4>>2]=w;ds(f,j)|0;j=c[e>>2]|0;f=c[e+4>>2]|0;c[q>>2]=j;c[q+4>>2]=f;z=(c[k>>2]=j,+g[k>>2]);A=(c[k>>2]=f,+g[k>>2]);if(z*z+A*A<=+g[a+68>>2]){du(r);A=+g[a+52>>2];dt(r,A)|0;r=c[(c[(c[s>>2]|0)+4>>2]|0)+8>>2]|0;f=c[q+4>>2]|0;j=l;c[l>>2]=c[q>>2];c[l+4>>2]=f;dt(j,-1.0)|0;j=c[l+4>>2]|0;c[m>>2]=c[l>>2];c[m+4>>2]=j;j=r+16|0;dr(j,n)|0;n=c[(c[(c[x>>2]|0)+4>>2]|0)+8>>2]|0;j=c[q+4>>2]|0;c[o>>2]=c[q>>2];c[o+4>>2]=j;j=n+16|0;dr(j,p)|0;y=0;i=d;return y|0}c[a+20>>2]=0;a=c[s>>2]|0;do{if((a|0)!=0){s=a|0;p=(c[s>>2]|0)-1|0;c[s>>2]=p;if((p|0)!=0){break}n6(a)}}while(0);a=c[x>>2]|0;do{if((a|0)!=0){x=a|0;p=(c[x>>2]|0)-1|0;c[x>>2]=p;if((p|0)!=0){break}n6(a)}}while(0);a=c[h>>2]|0;if((a|0)==0){y=1;i=d;return y|0}dx(c[b>>2]|0,a);y=1;i=d;return y|0}function fy(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=b+24|0;f=c[e>>2]|0;do{if((f|0)!=0){if((a[f+8|0]&1)!=0){break}a[b+57|0]=1}}while(0);g=b+28|0;h=c[g>>2]|0;do{if((h|0)!=0){if((a[h+8|0]&1)!=0){break}a[b+57|0]=1}}while(0);if((a[b+57|0]&1)==0){if((c[b+32>>2]|0)==0){i=fw(b,d)|0;return i|0}else{i=fx(b,d)|0;return i|0}}h=c[b+20>>2]|0;do{if((h|0)==0){j=f}else{k=h+36|0;if((c[k>>2]|0)!=(b|0)){j=f;break}c[k>>2]=0;j=c[e>>2]|0}}while(0);do{if((j|0)!=0){e=j|0;f=(c[e>>2]|0)-1|0;c[e>>2]=f;if((f|0)!=0){break}n6(j)}}while(0);j=c[g>>2]|0;do{if((j|0)!=0){g=j|0;f=(c[g>>2]|0)-1|0;c[g>>2]=f;if((f|0)!=0){break}n6(j)}}while(0);j=c[b+32>>2]|0;if((j|0)==0){i=1;return i|0}dx(c[d>>2]|0,j);i=1;return i|0}function fz(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,i=0,j=0;d=dF(b)|0;e=a+8|0;g[d>>2]=+g[c[e>>2]>>2];g[d+4>>2]=+g[(c[e>>2]|0)+4>>2];f=c[e>>2]|0;if((c[(c[f+32>>2]|0)+4>>2]|0)==2){c[d+12>>2]=0;g[d+28>>2]=1.0;g[d+24>>2]=1.0;g[d+20>>2]=1.0;g[d+16>>2]=1.0;g[d+40>>2]=2.0;g[d+32>>2]=+g[(c[(c[e>>2]|0)+32>>2]|0)+40>>2]*2.0;g[d+36>>2]=+g[(c[(c[e>>2]|0)+32>>2]|0)+44>>2]*2.0;h=c[e>>2]|0}else{h=f}g[d+8>>2]=+g[h+48>>2];h=b+16|0;f=n4(12)|0;e=f;i=f+8|0;if((i|0)!=0){c[i>>2]=d}d=h;i=h|0;c[(c[i>>2]|0)+4>>2]=e;c[f>>2]=c[i>>2];c[i>>2]=e;c[f+4>>2]=d;f=b+24|0;c[f>>2]=(c[f>>2]|0)+1;e=a+32|0;if((c[e>>2]|0)==0){return}a=dF(b)|0;g[a>>2]=+g[c[e>>2]>>2];g[a+4>>2]=+g[(c[e>>2]|0)+4>>2];b=c[e>>2]|0;if((c[(c[b+32>>2]|0)+4>>2]|0)==2){c[a+12>>2]=0;g[a+28>>2]=1.0;g[a+24>>2]=1.0;g[a+20>>2]=1.0;g[a+16>>2]=1.0;g[a+40>>2]=2.0;g[a+32>>2]=+g[(c[(c[e>>2]|0)+32>>2]|0)+40>>2]*2.0;g[a+36>>2]=+g[(c[(c[e>>2]|0)+32>>2]|0)+44>>2]*2.0;j=c[e>>2]|0}else{j=b}g[a+8>>2]=+g[j+48>>2];j=n4(12)|0;b=j;e=j+8|0;if((e|0)!=0){c[e>>2]=a}c[(c[i>>2]|0)+4>>2]=b;c[j>>2]=c[i>>2];c[i>>2]=b;c[j+4>>2]=d;c[f>>2]=(c[f>>2]|0)+1;return}function fA(a){a=a|0;fr(a|0);return}function fB(a){a=a|0;fr(a|0);n6(a);return}function fC(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0.0,B=0.0,C=0.0,D=0,E=0,F=0.0,G=0.0,H=0,I=0;d=i;i=i+56|0;e=d|0;f=a+20|0;h=c[f>>2]|0;if((h|0)==-1){j=~~(+(bI()|0)*4.656612873077393e-10*4.0)+2|0;if((j|0)<=0){k=1;i=d;return k|0}l=b|0;m=a+8|0;n=e+4|0;o=e+24|0;p=n;q=e+32|0;r=e+28|0;s=e+36|0;t=e+44|0;u=e+40|0;v=e+48|0;w=e|0;x=e+8|0;y=e+20|0;z=0;while(1){A=+(bI()|0)*4.656612873077393e-10;B=+(bI()|0)*4.656612873077393e-10;C=+(bI()|0)*4.656612873077393e-10*.30000001192092896+.30000001192092896;D=c[l>>2]|0;E=c[m>>2]|0;F=+g[E>>2];G=+g[E+4>>2];oe(p|0,0,16);g[s>>2]=0.0;g[t>>2]=.9999979734420776;g[u>>2]=.9999979734420776;g[v>>2]=.10000000149011612;c[w>>2]=0;g[n>>2]=F;g[x>>2]=G;g[r>>2]=C;g[q>>2]=C;g[o>>2]=C/50.0;g[y>>2]=0.0;E=dv(D,e)|0;g[E+8>>2]=A*+(bI()|0)*4.656612873077393e-10*10.0;g[E+12>>2]=B*+(bI()|0)*4.656612873077393e-10*10.0;D=n4(32)|0;f$(D,1,E);bI()|0;g[D+20>>2]=1.0- +(bI()|0)*4.656612873077393e-10*.20000000298023224;g[D+24>>2]=+(bI()|0)*4.656612873077393e-10*.6000000238418579;g[D+28>>2]=.009999999776482582;E=~~(+(bI()|0)*4.656612873077393e-10*100.0);H=D+12|0;c[H>>2]=E+(c[H>>2]|0);dS(b,D);D=z+1|0;if((D|0)<(j|0)){z=D}else{k=1;break}}i=d;return k|0}else{if(((h|0)%3|0|0)==0){z=n4(16)|0;j=c[a+8>>2]|0;B=+g[j>>2];A=+g[j+4>>2];c[z>>2]=8472;c[z+12>>2]=0;g[z+4>>2]=B;g[z+8>>2]=A;j=b+12|0;a=n4(12)|0;e=a;y=a+8|0;if((y|0)!=0){c[y>>2]=z}z=j|0;c[(c[z>>2]|0)+4>>2]=e;c[a>>2]=c[z>>2];c[z>>2]=e;c[a+4>>2]=j;j=b+20|0;c[j>>2]=(c[j>>2]|0)+1;I=c[f>>2]|0}else{I=h}c[f>>2]=I+1;k=0;i=d;return k|0}return 0}function fD(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,i=0;d=dF(b)|0;e=c[a+8>>2]|0;g[d>>2]=+g[e>>2];g[d+4>>2]=+g[e+4>>2];a=e+32|0;if((c[(c[a>>2]|0)+4>>2]|0)==2){c[d+12>>2]=0;f=d+28|0;g[f>>2]=1.0;h=d+24|0;g[h>>2]=1.0;i=d+20|0;g[i>>2]=1.0;g[d+16>>2]=1.0;g[d+40>>2]=1.0;g[d+32>>2]=+g[(c[a>>2]|0)+40>>2]*2.0;g[d+36>>2]=+g[(c[a>>2]|0)+44>>2]*2.0;g[i>>2]=.30000001192092896;g[h>>2]=.30000001192092896;g[f>>2]=.30000001192092896}g[d+8>>2]=+g[e+48>>2];e=b+16|0;f=n4(12)|0;h=f;i=f+8|0;if((i|0)!=0){c[i>>2]=d}d=e|0;c[(c[d>>2]|0)+4>>2]=h;c[f>>2]=c[d>>2];c[d>>2]=h;c[f+4>>2]=e;e=b+24|0;c[e>>2]=(c[e>>2]|0)+1;return}function fE(a,b){a=a|0;b=b|0;return(c[(c[a+132>>2]|0)+20>>2]|0)>6|0}function fF(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=c[a+132>>2]|0;e=c[b>>2]|0;if((e|0)==(a|0)){f=c[b+4>>2]|0}else{f=e}e=c[f+128>>2]|0;if((e&251658240|0)==0){return}if(e>>>0>268435455>>>0){e=c[f+132>>2]|0;cV[c[(c[e>>2]|0)+16>>2]&255](e,c[d+24>>2]|0)}c[d+20>>2]=-1;return}function fG(a,b,d){a=a|0;b=b|0;d=d|0;fp(a|0,d,1,1);c[a>>2]=8152;c[d+132>>2]=a;c[d+136>>2]=46;c[d+140>>2]=96;c[a+24>>2]=1;c[a+20>>2]=0;return}function fH(a){a=a|0;fr(a|0);return}function fI(a){a=a|0;fr(a|0);n6(a);return}function fJ(a,b){a=a|0;b=b|0;var d=0,e=0.0;d=c[a+132>>2]|0;e=+g[b+36>>2];if(e<=20.0){return}cV[c[(c[d>>2]|0)+16>>2]&255](d,~~((e+-20.0)/5.0));return}function fK(a,b,d){a=a|0;b=b|0;d=d|0;fp(a|0,d,1,1);c[a>>2]=8304;c[a+24>>2]=100;c[a+32>>2]=0;c[d+132>>2]=a;a=d+128|0;c[a>>2]=c[a>>2]|-268435456;c[d+140>>2]=62;return}function fL(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0.0,i=0,j=0.0,k=0,l=0.0,m=0.0,n=0.0,o=0,p=0,q=0,r=0;d=dF(b)|0;e=c[a+8>>2]|0;f=e|0;h=+g[f>>2];g[d>>2]=h;i=e+4|0;j=+g[i>>2];g[d+4>>2]=j;c[d+12>>2]=5;k=e+32|0;l=+g[(c[k>>2]|0)+40>>2]*2.0;g[d+16>>2]=l;m=+g[(c[k>>2]|0)+44>>2]*2.0;g[d+20>>2]=m;n=j*.4000000059604645;g[d+24>>2]=n;j=h*.4000000059604645;g[d+28>>2]=j;if(m>l){h=m*2.0;g[d+32>>2]=n-h;g[d+36>>2]=j-h}else{h=l*2.0;g[d+32>>2]=n-h;g[d+36>>2]=j-h}c[d+40>>2]=c[a+20>>2];o=e+48|0;g[d+8>>2]=+g[o>>2];e=b+16|0;p=n4(12)|0;q=p;r=p+8|0;if((r|0)!=0){c[r>>2]=d}d=e;r=e|0;c[(c[r>>2]|0)+4>>2]=q;c[p>>2]=c[r>>2];c[r>>2]=q;c[p+4>>2]=d;p=b+24|0;c[p>>2]=(c[p>>2]|0)+1;q=c[a+28>>2]|0;if(!((q|0)>0&((q|0)%8|0|0)>4)){return}q=dF(b)|0;g[q>>2]=+g[f>>2];g[q+4>>2]=+g[i>>2];c[q+12>>2]=0;g[q+8>>2]=+g[o>>2];g[q+40>>2]=1.0;g[q+32>>2]=+g[(c[k>>2]|0)+40>>2]*2.0;g[q+36>>2]=+g[(c[k>>2]|0)+44>>2]*2.0;g[q+16>>2]=1.0;g[q+20>>2]=1.0;g[q+28>>2]=0.0;g[q+24>>2]=0.0;k=n4(12)|0;o=k;i=k+8|0;if((i|0)!=0){c[i>>2]=q}c[(c[r>>2]|0)+4>>2]=o;c[k>>2]=c[r>>2];c[r>>2]=o;c[k+4>>2]=d;c[p>>2]=(c[p>>2]|0)+1;return}function fM(a){a=a|0;fr(a|0);return}function fN(a){a=a|0;fr(a|0);n6(a);return}function fO(a,b){a=a|0;b=b|0;var d=0,e=0;b=a+28|0;d=c[b>>2]|0;if((d|0)>0){c[b>>2]=d-1}do{if((c[a+24>>2]|0)<1){d=a+32|0;b=c[d>>2]|0;c[d>>2]=b+1;if((b|0)>300){e=1}else{break}return e|0}}while(0);e=0;return e|0}function fP(a,b){a=a|0;b=b|0;var d=0,e=0;d=(c[a+132>>2]|0)+44|0;e=c[d>>2]|0;if((e|0)>100){return}if(+g[b+12>>2]*0.0+ +g[b+16>>2]<.5){return}if(+V(+(+g[a+8>>2]*0.0+ +g[a+12>>2]))>=1.0){return}c[d>>2]=e+1;return}function fQ(a,b,d){a=a|0;b=b|0;d=d|0;fK(a|0,b,d);c[a>>2]=8216;c[a+36>>2]=0;c[d+140>>2]=28;c[a+28>>2]=0;return}function fR(b,d){b=b|0;d=d|0;var e=0,f=0;e=b+28|0;f=c[e>>2]|0;if((f|0)>0){c[e>>2]=f-1}if((c[b+24>>2]|0)>=1){return 0}f=b+32|0;b=c[f>>2]|0;c[f>>2]=b+1;if((b|0)<=500){return 0}a[d+44|0]=1;return 0}function fS(a,b){a=a|0;b=b|0;var d=0,e=0;d=a+28|0;if((c[d>>2]|0)>=1){return}e=a+24|0;c[e>>2]=(c[e>>2]|0)-b;c[d>>2]=300;return}function fT(a,b,d,e){a=a|0;b=b|0;d=+d;e=+e;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0.0,p=0.0,q=0,r=0,s=0,t=0;f=i;i=i+8|0;h=f|0;j=h;k=i;i=i+52|0;i=i+7&-8;l=i;i=i+8|0;m=l;n=a+8|0;a=c[n>>2]|0;g[h>>2]=d;g[j+4>>2]=e;ds(j,a)|0;a=c[h+4>>2]|0;c[l>>2]=c[h>>2];c[l+4>>2]=a;du(m);a=c[b>>2]|0;h=c[n>>2]|0;e=+g[h>>2];d=+g[h+4>>2];h=m+4|0;j=l;o=+ac(+(+g[h>>2]),+(+g[j>>2]))*180.0/3.141590118408203;l=k+4|0;oe(l|0,0,16);g[k+36>>2]=0.0;g[k+44>>2]=.9999979734420776;g[k+40>>2]=.9999979734420776;g[k+48>>2]=.10000000149011612;c[k>>2]=0;g[l>>2]=e;g[k+8>>2]=d;g[k+28>>2]=1.0;g[k+32>>2]=1.0;g[k+24>>2]=1.0;g[k+20>>2]=o;l=dv(a,k)|0;k=n4(28)|0;fG(k,0,l);a=c[n>>2]|0;o=+g[j>>2]*+g[a+8>>2]+ +g[h>>2]*+g[a+12>>2];if(o<0.0){p=45.0;q=dt(m,p)|0;r=l+8|0;s=dr(r,m)|0;t=k;dS(b,t);i=f;return}p=o+45.0;q=dt(m,p)|0;r=l+8|0;s=dr(r,m)|0;t=k;dS(b,t);i=f;return}function fU(a,b){a=a|0;b=b|0;fL(a|0,b);return}function fV(a,b,d){a=a|0;b=+b;d=+d;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;i=i+8|0;f=e|0;h=f;j=i;i=i+52|0;i=i+7&-8;k=i;i=i+8|0;l=k;m=a+36|0;if((c[m>>2]|0)!=0){i=e;return}n=a+8|0;o=c[n>>2]|0;g[f>>2]=b;g[h+4>>2]=d;ds(h,o)|0;o=c[f+4>>2]|0;c[k>>2]=c[f>>2];c[k+4>>2]=o;du(l);o=a+40|0;f=c[c[o>>2]>>2]|0;h=c[n>>2]|0;d=+g[h>>2];b=+g[h+4>>2];h=j+4|0;oe(h|0,0,16);g[j+36>>2]=0.0;g[j+44>>2]=.9999979734420776;g[j+40>>2]=.9999979734420776;g[j+48>>2]=.10000000149011612;c[j>>2]=0;g[h>>2]=d;g[j+8>>2]=b;g[j+28>>2]=1.2999999523162842;g[j+32>>2]=1.2999999523162842;g[j+24>>2]=.10000000149011612;g[j+20>>2]=0.0;h=dv(f,j)|0;j=n4(76)|0;f=j;fu(f,0,h);c[m>>2]=f;c[j+20>>2]=a;g[j+52>>2]=2.0;g[j+72>>2]=44.0;j=c[n>>2]|0;b=+g[k>>2]*+g[j+8>>2]+ +g[l+4>>2]*+g[j+12>>2];dt(l,(b<0.0?0.0:b)+44.0)|0;dr(h+8|0,l)|0;c[h+132>>2]=c[m>>2];dS(c[o>>2]|0,c[m>>2]|0);i=e;return}function fW(a,b,d){a=a|0;b=+b;d=+d;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;i=i+8|0;f=e|0;h=f;j=i;i=i+52|0;i=i+7&-8;k=i;i=i+8|0;l=k;m=a+36|0;n=c[m>>2]|0;if((n|0)==0){i=e;return}if((c[n+32>>2]|0)!=0){i=e;return}n=a+8|0;o=c[n>>2]|0;g[f>>2]=b;g[h+4>>2]=d;ds(h,o)|0;o=c[f+4>>2]|0;c[k>>2]=c[f>>2];c[k+4>>2]=o;du(l);o=c[c[a+40>>2]>>2]|0;a=c[n>>2]|0;d=+g[a>>2];b=+g[a+4>>2];a=j+4|0;oe(a|0,0,16);g[j+36>>2]=0.0;g[j+44>>2]=.9999979734420776;g[j+40>>2]=.9999979734420776;g[j+48>>2]=.10000000149011612;c[j>>2]=0;g[a>>2]=d;g[j+8>>2]=b;g[j+28>>2]=1.2999999523162842;g[j+32>>2]=1.2999999523162842;g[j+24>>2]=.10000000149011612;g[j+20>>2]=0.0;a=dv(o,j)|0;c[(c[m>>2]|0)+32>>2]=a;j=c[n>>2]|0;b=+g[k>>2]*+g[j+8>>2]+ +g[l+4>>2]*+g[j+12>>2];dt(l,+g[(c[m>>2]|0)+72>>2]+(b<0.0?0.0:b))|0;dr(a+8|0,l)|0;fv(c[m>>2]|0,a);c[m>>2]=0;i=e;return}function fX(b){b=b|0;var d=0;d=c[b+36>>2]|0;if((d|0)==0){return}a[d+56|0]=1;return}function fY(a){a=a|0;fr(a|0);return}function fZ(a){a=a|0;fr(a|0);n6(a);return}function f_(a,b){a=a|0;b=b|0;b=a+12|0;a=c[b>>2]|0;c[b>>2]=a-1;return(a|0)<0|0}function f$(a,b,d){a=a|0;b=b|0;d=d|0;c[a+4>>2]=b;c[a+8>>2]=d;c[a>>2]=8088;c[d+132>>2]=a;c[a+12>>2]=100;return}function f0(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;d=dF(b)|0;e=c[a+8>>2]|0;g[d>>2]=+g[e>>2];g[d+4>>2]=+g[e+4>>2];f=e+32|0;if((c[(c[f>>2]|0)+4>>2]|0)==2){c[d+12>>2]=0;h=d+28|0;g[h>>2]=1.0;i=d+24|0;g[i>>2]=1.0;j=d+20|0;g[j>>2]=1.0;g[d+16>>2]=1.0;g[d+40>>2]=1.0;g[d+32>>2]=+g[(c[f>>2]|0)+40>>2]*2.0;g[d+36>>2]=+g[(c[f>>2]|0)+44>>2]*2.0;g[j>>2]=+g[a+20>>2];g[i>>2]=+g[a+24>>2];g[h>>2]=+g[a+28>>2]}g[d+8>>2]=+g[e+48>>2];e=b+16|0;a=n4(12)|0;h=a;i=a+8|0;if((i|0)==0){k=e;l=e|0;m=c[l>>2]|0;n=m+4|0;c[n>>2]=h;o=c[l>>2]|0;p=a;c[p>>2]=o;c[l>>2]=h;q=a+4|0;r=q;c[r>>2]=k;s=b+24|0;t=c[s>>2]|0;u=t+1|0;c[s>>2]=u;return}c[i>>2]=d;k=e;l=e|0;m=c[l>>2]|0;n=m+4|0;c[n>>2]=h;o=c[l>>2]|0;p=a;c[p>>2]=o;c[l>>2]=h;q=a+4|0;r=q;c[r>>2]=k;s=b+24|0;t=c[s>>2]|0;u=t+1|0;c[s>>2]=u;return}function f1(a){a=a|0;return}function f2(a){a=a|0;n6(a);return}function f3(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;b=i;i=i+32|0;d=b|0;e=b+8|0;f=b+16|0;g=b+24|0;h=c[o>>2]|0;gp(17504,h,17632);c[4624]=7396;c[4626]=7416;c[4625]=0;hj(18504,17504);c[4644]=0;c[4645]=-1;j=c[t>>2]|0;c[4352]=7176;lG(17412);oe(17416,0,24);c[4352]=7544;c[4360]=j;lH(g,17412);k=lJ(g,17832)|0;l=k;lI(g);c[4361]=l;c[4362]=17640;a[17452]=(cZ[c[(c[k>>2]|0)+28>>2]&255](l)|0)&1;c[4558]=7300;c[4559]=7320;hj(18236,17408);c[4577]=0;c[4578]=-1;l=c[r>>2]|0;c[4364]=7176;lG(17460);oe(17464,0,24);c[4364]=7544;c[4372]=l;lH(f,17460);k=lJ(f,17832)|0;g=k;lI(f);c[4373]=g;c[4374]=17648;a[17500]=(cZ[c[(c[k>>2]|0)+28>>2]&255](g)|0)&1;c[4602]=7300;c[4603]=7320;hj(18412,17456);c[4621]=0;c[4622]=-1;g=c[(c[(c[4602]|0)-12>>2]|0)+18432>>2]|0;c[4580]=7300;c[4581]=7320;hj(18324,g);c[4599]=0;c[4600]=-1;c[(c[(c[4624]|0)-12>>2]|0)+18568>>2]=18232;g=(c[(c[4602]|0)-12>>2]|0)+18412|0;c[g>>2]=c[g>>2]|8192;c[(c[(c[4602]|0)-12>>2]|0)+18480>>2]=18232;gb(17352,h,17656);c[4536]=7348;c[4538]=7368;c[4537]=0;hj(18152,17352);c[4556]=0;c[4557]=-1;c[4314]=7104;lG(17260);oe(17264,0,24);c[4314]=7472;c[4322]=j;lH(e,17260);j=lJ(e,17824)|0;h=j;lI(e);c[4323]=h;c[4324]=17664;a[17300]=(cZ[c[(c[j>>2]|0)+28>>2]&255](h)|0)&1;c[4466]=7252;c[4467]=7272;hj(17868,17256);c[4485]=0;c[4486]=-1;c[4326]=7104;lG(17308);oe(17312,0,24);c[4326]=7472;c[4334]=l;lH(d,17308);l=lJ(d,17824)|0;h=l;lI(d);c[4335]=h;c[4336]=17672;a[17348]=(cZ[c[(c[l>>2]|0)+28>>2]&255](h)|0)&1;c[4510]=7252;c[4511]=7272;hj(18044,17304);c[4529]=0;c[4530]=-1;h=c[(c[(c[4510]|0)-12>>2]|0)+18064>>2]|0;c[4488]=7252;c[4489]=7272;hj(17956,h);c[4507]=0;c[4508]=-1;c[(c[(c[4536]|0)-12>>2]|0)+18216>>2]=17864;h=(c[(c[4510]|0)-12>>2]|0)+18044|0;c[h>>2]=c[h>>2]|8192;c[(c[(c[4510]|0)-12>>2]|0)+18112>>2]=17864;i=b;return}function f4(a){a=a|0;hQ(18232)|0;hQ(18320)|0;hV(17864)|0;hV(17952)|0;return}function f5(a){a=a|0;c[a>>2]=7104;lI(a+4|0);return}function f6(a){a=a|0;c[a>>2]=7104;lI(a+4|0);n6(a);return}function f7(b,d){b=b|0;d=d|0;var e=0;cZ[c[(c[b>>2]|0)+24>>2]&255](b)|0;e=lJ(d,17824)|0;d=e;c[b+36>>2]=d;a[b+44|0]=(cZ[c[(c[e>>2]|0)+28>>2]&255](d)|0)&1;return}function f8(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;b=i;i=i+16|0;d=b|0;e=b+8|0;f=a+36|0;g=a+40|0;h=d|0;j=d+8|0;k=d;d=a+32|0;while(1){a=c[f>>2]|0;l=c7[c[(c[a>>2]|0)+20>>2]&63](a,c[g>>2]|0,h,j,e)|0;a=(c[e>>2]|0)-k|0;if((aT(h|0,1,a|0,c[d>>2]|0)|0)!=(a|0)){m=-1;n=2626;break}if((l|0)==2){m=-1;n=2627;break}else if((l|0)!=1){n=2624;break}}if((n|0)==2626){i=b;return m|0}else if((n|0)==2627){i=b;return m|0}else if((n|0)==2624){m=((aP(c[d>>2]|0)|0)!=0)<<31>>31;i=b;return m|0}return 0}function f9(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;if((a[b+44|0]&1)!=0){f=aT(d|0,4,e|0,c[b+32>>2]|0)|0;return f|0}g=b;if((e|0)>0){h=d;i=0}else{f=0;return f|0}while(1){if((c6[c[(c[g>>2]|0)+52>>2]&63](b,c[h>>2]|0)|0)==-1){f=i;j=2636;break}d=i+1|0;if((d|0)<(e|0)){h=h+4|0;i=d}else{f=d;j=2635;break}}if((j|0)==2636){return f|0}else if((j|0)==2635){return f|0}return 0}function ga(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=(d|0)==-1;L3420:do{if(!k){c[g>>2]=d;if((a[b+44|0]&1)!=0){if((aT(g|0,4,1,c[b+32>>2]|0)|0)==1){break}else{l=-1}i=e;return l|0}m=f|0;c[h>>2]=m;n=g+4|0;o=b+36|0;p=b+40|0;q=f+8|0;r=f;s=b+32|0;t=g;while(1){u=c[o>>2]|0;v=c2[c[(c[u>>2]|0)+12>>2]&31](u,c[p>>2]|0,t,n,j,m,q,h)|0;if((c[j>>2]|0)==(t|0)){l=-1;w=2651;break}if((v|0)==3){w=2645;break}u=(v|0)==1;if(v>>>0>=2>>>0){l=-1;w=2652;break}v=(c[h>>2]|0)-r|0;if((aT(m|0,1,v|0,c[s>>2]|0)|0)!=(v|0)){l=-1;w=2656;break}if(u){t=u?c[j>>2]|0:t}else{break L3420}}if((w|0)==2652){i=e;return l|0}else if((w|0)==2651){i=e;return l|0}else if((w|0)==2645){if((aT(t|0,1,1,c[s>>2]|0)|0)==1){break}else{l=-1}i=e;return l|0}else if((w|0)==2656){i=e;return l|0}}}while(0);l=k?0:d;i=e;return l|0}function gb(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+8|0;g=f|0;h=b|0;c[h>>2]=7104;j=b+4|0;lG(j);oe(b+8|0,0,24);c[h>>2]=7872;c[b+32>>2]=d;c[b+40>>2]=e;c[b+48>>2]=-1;a[b+52|0]=0;lH(g,j);j=lJ(g,17824)|0;e=j;d=b+36|0;c[d>>2]=e;h=b+44|0;c[h>>2]=cZ[c[(c[j>>2]|0)+24>>2]&255](e)|0;e=c[d>>2]|0;a[b+53|0]=(cZ[c[(c[e>>2]|0)+28>>2]&255](e)|0)&1;if((c[h>>2]|0)<=8){lI(g);i=f;return}k$(320);lI(g);i=f;return}function gc(a){a=a|0;c[a>>2]=7104;lI(a+4|0);return}function gd(a){a=a|0;c[a>>2]=7104;lI(a+4|0);n6(a);return}function ge(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=lJ(d,17824)|0;d=e;f=b+36|0;c[f>>2]=d;g=b+44|0;c[g>>2]=cZ[c[(c[e>>2]|0)+24>>2]&255](d)|0;d=c[f>>2]|0;a[b+53|0]=(cZ[c[(c[d>>2]|0)+28>>2]&255](d)|0)&1;if((c[g>>2]|0)<=8){return}k$(320);return}function gf(a){a=a|0;return gi(a,0)|0}function gg(a){a=a|0;return gi(a,1)|0}function gh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=b+52|0;l=(a[k]&1)!=0;if((d|0)==-1){if(l){m=-1;i=e;return m|0}n=c[b+48>>2]|0;a[k]=(n|0)!=-1|0;m=n;i=e;return m|0}n=b+48|0;L3463:do{if(l){c[h>>2]=c[n>>2];o=c[b+36>>2]|0;p=f|0;q=c2[c[(c[o>>2]|0)+12>>2]&31](o,c[b+40>>2]|0,h,h+4|0,j,p,f+8|0,g)|0;if((q|0)==3){a[p]=c[n>>2]&255;c[g>>2]=f+1}else if((q|0)==2|(q|0)==1){m=-1;i=e;return m|0}q=b+32|0;while(1){o=c[g>>2]|0;if(o>>>0<=p>>>0){break L3463}r=o-1|0;c[g>>2]=r;if((cg(a[r]|0,c[q>>2]|0)|0)==-1){m=-1;break}}i=e;return m|0}}while(0);c[n>>2]=d;a[k]=1;m=d;i=e;return m|0}function gi(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=b+52|0;if((a[k]&1)!=0){l=b+48|0;m=c[l>>2]|0;if(!d){n=m;i=e;return n|0}c[l>>2]=-1;a[k]=0;n=m;i=e;return n|0}m=c[b+44>>2]|0;k=(m|0)>1?m:1;L3483:do{if((k|0)>0){m=b+32|0;l=0;while(1){o=bc(c[m>>2]|0)|0;if((o|0)==-1){n=-1;break}a[f+l|0]=o&255;l=l+1|0;if((l|0)>=(k|0)){break L3483}}i=e;return n|0}}while(0);L3490:do{if((a[b+53|0]&1)==0){l=b+40|0;m=b+36|0;o=f|0;p=g+4|0;q=b+32|0;r=k;while(1){s=c[l>>2]|0;t=s;u=c[t>>2]|0;v=c[t+4>>2]|0;t=c[m>>2]|0;w=f+r|0;x=c2[c[(c[t>>2]|0)+16>>2]&31](t,s,o,w,h,g,p,j)|0;if((x|0)==2){n=-1;y=2718;break}else if((x|0)==3){y=2702;break}else if((x|0)!=1){z=r;break L3490}x=c[l>>2]|0;c[x>>2]=u;c[x+4>>2]=v;if((r|0)==8){n=-1;y=2713;break}v=bc(c[q>>2]|0)|0;if((v|0)==-1){n=-1;y=2711;break}a[w]=v&255;r=r+1|0}if((y|0)==2718){i=e;return n|0}else if((y|0)==2702){c[g>>2]=a[o]|0;z=r;break}else if((y|0)==2711){i=e;return n|0}else if((y|0)==2713){i=e;return n|0}}else{c[g>>2]=a[f|0]|0;z=k}}while(0);if(d){d=c[g>>2]|0;c[b+48>>2]=d;n=d;i=e;return n|0}d=b+32|0;b=z;while(1){if((b|0)<=0){break}z=b-1|0;if((cg(a[f+z|0]|0,c[d>>2]|0)|0)==-1){n=-1;y=2714;break}else{b=z}}if((y|0)==2714){i=e;return n|0}n=c[g>>2]|0;i=e;return n|0}function gj(a){a=a|0;c[a>>2]=7176;lI(a+4|0);return}function gk(a){a=a|0;c[a>>2]=7176;lI(a+4|0);n6(a);return}function gl(b,d){b=b|0;d=d|0;var e=0;cZ[c[(c[b>>2]|0)+24>>2]&255](b)|0;e=lJ(d,17832)|0;d=e;c[b+36>>2]=d;a[b+44|0]=(cZ[c[(c[e>>2]|0)+28>>2]&255](d)|0)&1;return}function gm(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;b=i;i=i+16|0;d=b|0;e=b+8|0;f=a+36|0;g=a+40|0;h=d|0;j=d+8|0;k=d;d=a+32|0;while(1){a=c[f>>2]|0;l=c7[c[(c[a>>2]|0)+20>>2]&63](a,c[g>>2]|0,h,j,e)|0;a=(c[e>>2]|0)-k|0;if((aT(h|0,1,a|0,c[d>>2]|0)|0)!=(a|0)){m=-1;n=2729;break}if((l|0)==2){m=-1;n=2730;break}else if((l|0)!=1){n=2726;break}}if((n|0)==2726){m=((aP(c[d>>2]|0)|0)!=0)<<31>>31;i=b;return m|0}else if((n|0)==2730){i=b;return m|0}else if((n|0)==2729){i=b;return m|0}return 0}function gn(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;if((a[b+44|0]&1)!=0){g=aT(e|0,1,f|0,c[b+32>>2]|0)|0;return g|0}h=b;if((f|0)>0){i=e;j=0}else{g=0;return g|0}while(1){if((c6[c[(c[h>>2]|0)+52>>2]&63](b,d[i]|0)|0)==-1){g=j;k=2737;break}e=j+1|0;if((e|0)<(f|0)){i=i+1|0;j=e}else{g=e;k=2738;break}}if((k|0)==2738){return g|0}else if((k|0)==2737){return g|0}return 0}function go(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=(d|0)==-1;L3541:do{if(!k){a[g]=d&255;if((a[b+44|0]&1)!=0){if((aT(g|0,1,1,c[b+32>>2]|0)|0)==1){break}else{l=-1}i=e;return l|0}m=f|0;c[h>>2]=m;n=g+1|0;o=b+36|0;p=b+40|0;q=f+8|0;r=f;s=b+32|0;t=g;while(1){u=c[o>>2]|0;v=c2[c[(c[u>>2]|0)+12>>2]&31](u,c[p>>2]|0,t,n,j,m,q,h)|0;if((c[j>>2]|0)==(t|0)){l=-1;w=2753;break}if((v|0)==3){w=2747;break}u=(v|0)==1;if(v>>>0>=2>>>0){l=-1;w=2756;break}v=(c[h>>2]|0)-r|0;if((aT(m|0,1,v|0,c[s>>2]|0)|0)!=(v|0)){l=-1;w=2757;break}if(u){t=u?c[j>>2]|0:t}else{break L3541}}if((w|0)==2757){i=e;return l|0}else if((w|0)==2753){i=e;return l|0}else if((w|0)==2747){if((aT(t|0,1,1,c[s>>2]|0)|0)==1){break}else{l=-1}i=e;return l|0}else if((w|0)==2756){i=e;return l|0}}}while(0);l=k?0:d;i=e;return l|0}function gp(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+8|0;g=f|0;h=b|0;c[h>>2]=7176;j=b+4|0;lG(j);oe(b+8|0,0,24);c[h>>2]=7944;c[b+32>>2]=d;c[b+40>>2]=e;c[b+48>>2]=-1;a[b+52|0]=0;lH(g,j);j=lJ(g,17832)|0;e=j;d=b+36|0;c[d>>2]=e;h=b+44|0;c[h>>2]=cZ[c[(c[j>>2]|0)+24>>2]&255](e)|0;e=c[d>>2]|0;a[b+53|0]=(cZ[c[(c[e>>2]|0)+28>>2]&255](e)|0)&1;if((c[h>>2]|0)<=8){lI(g);i=f;return}k$(320);lI(g);i=f;return}function gq(a){a=a|0;c[a>>2]=7176;lI(a+4|0);return}function gr(a){a=a|0;c[a>>2]=7176;lI(a+4|0);n6(a);return}function gs(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=lJ(d,17832)|0;d=e;f=b+36|0;c[f>>2]=d;g=b+44|0;c[g>>2]=cZ[c[(c[e>>2]|0)+24>>2]&255](d)|0;d=c[f>>2]|0;a[b+53|0]=(cZ[c[(c[d>>2]|0)+28>>2]&255](d)|0)&1;if((c[g>>2]|0)<=8){return}k$(320);return}function gt(a){a=a|0;return gw(a,0)|0}function gu(a){a=a|0;return gw(a,1)|0}function gv(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=b+52|0;l=(a[k]&1)!=0;if((d|0)==-1){if(l){m=-1;i=e;return m|0}n=c[b+48>>2]|0;a[k]=(n|0)!=-1|0;m=n;i=e;return m|0}n=b+48|0;L3584:do{if(l){a[h]=c[n>>2]&255;o=c[b+36>>2]|0;p=f|0;q=c2[c[(c[o>>2]|0)+12>>2]&31](o,c[b+40>>2]|0,h,h+1|0,j,p,f+8|0,g)|0;if((q|0)==3){a[p]=c[n>>2]&255;c[g>>2]=f+1}else if((q|0)==2|(q|0)==1){m=-1;i=e;return m|0}q=b+32|0;while(1){o=c[g>>2]|0;if(o>>>0<=p>>>0){break L3584}r=o-1|0;c[g>>2]=r;if((cg(a[r]|0,c[q>>2]|0)|0)==-1){m=-1;break}}i=e;return m|0}}while(0);c[n>>2]=d;a[k]=1;m=d;i=e;return m|0}function gw(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;f=i;i=i+32|0;g=f|0;h=f+8|0;j=f+16|0;k=f+24|0;l=b+52|0;if((a[l]&1)!=0){m=b+48|0;n=c[m>>2]|0;if(!e){o=n;i=f;return o|0}c[m>>2]=-1;a[l]=0;o=n;i=f;return o|0}n=c[b+44>>2]|0;l=(n|0)>1?n:1;L3604:do{if((l|0)>0){n=b+32|0;m=0;while(1){p=bc(c[n>>2]|0)|0;if((p|0)==-1){o=-1;break}a[g+m|0]=p&255;m=m+1|0;if((m|0)>=(l|0)){break L3604}}i=f;return o|0}}while(0);L3611:do{if((a[b+53|0]&1)==0){m=b+40|0;n=b+36|0;p=g|0;q=h+1|0;r=b+32|0;s=l;while(1){t=c[m>>2]|0;u=t;v=c[u>>2]|0;w=c[u+4>>2]|0;u=c[n>>2]|0;x=g+s|0;y=c2[c[(c[u>>2]|0)+16>>2]&31](u,t,p,x,j,h,q,k)|0;if((y|0)==3){z=2804;break}else if((y|0)==2){o=-1;z=2814;break}else if((y|0)!=1){A=s;break L3611}y=c[m>>2]|0;c[y>>2]=v;c[y+4>>2]=w;if((s|0)==8){o=-1;z=2819;break}w=bc(c[r>>2]|0)|0;if((w|0)==-1){o=-1;z=2820;break}a[x]=w&255;s=s+1|0}if((z|0)==2804){a[h]=a[p]|0;A=s;break}else if((z|0)==2819){i=f;return o|0}else if((z|0)==2820){i=f;return o|0}else if((z|0)==2814){i=f;return o|0}}else{a[h]=a[g|0]|0;A=l}}while(0);do{if(e){l=a[h]|0;c[b+48>>2]=l&255;B=l}else{l=b+32|0;k=A;while(1){if((k|0)<=0){z=2811;break}j=k-1|0;if((cg(d[g+j|0]|0|0,c[l>>2]|0)|0)==-1){o=-1;z=2815;break}else{k=j}}if((z|0)==2815){i=f;return o|0}else if((z|0)==2811){B=a[h]|0;break}}}while(0);o=B&255;i=f;return o|0}function gx(){f3(0);bf(170,18584,u|0)|0;return}function gy(a){a=a|0;return}function gz(a){a=a|0;var b=0;b=a+4|0;I=c[b>>2]|0,c[b>>2]=I+1,I;return}function gA(a){a=a|0;var b=0,d=0;b=a+4|0;if(((I=c[b>>2]|0,c[b>>2]=I+ -1,I)|0)!=0){d=0;return d|0}cU[c[(c[a>>2]|0)+8>>2]&511](a);d=1;return d|0}function gB(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;c[a>>2]=5480;d=a+4|0;if((d|0)==0){return}a=og(b|0)|0;e=a+1|0;f=n5(a+13|0)|0;c[f+4>>2]=a;c[f>>2]=a;a=f+12|0;c[d>>2]=a;c[f+8>>2]=0;of(a|0,b|0,e)|0;return}function gC(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=5480;b=a+4|0;d=(c[b>>2]|0)-4|0;if(((I=c[d>>2]|0,c[d>>2]=I+ -1,I)-1|0)>=0){e=a;n6(e);return}d=(c[b>>2]|0)-12|0;if((d|0)==0){e=a;n6(e);return}n7(d);e=a;n6(e);return}function gD(a){a=a|0;var b=0;c[a>>2]=5480;b=a+4|0;a=(c[b>>2]|0)-4|0;if(((I=c[a>>2]|0,c[a>>2]=I+ -1,I)-1|0)>=0){return}a=(c[b>>2]|0)-12|0;if((a|0)==0){return}n7(a);return}function gE(a){a=a|0;return c[a+4>>2]|0}function gF(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;c[b>>2]=5384;e=b+4|0;if((e|0)==0){return}if((a[d]&1)==0){f=d+1|0}else{f=c[d+8>>2]|0}d=og(f|0)|0;b=d+1|0;g=n5(d+13|0)|0;c[g+4>>2]=d;c[g>>2]=d;d=g+12|0;c[e>>2]=d;c[g+8>>2]=0;of(d|0,f|0,b)|0;return}function gG(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;c[a>>2]=5384;d=a+4|0;if((d|0)==0){return}a=og(b|0)|0;e=a+1|0;f=n5(a+13|0)|0;c[f+4>>2]=a;c[f>>2]=a;a=f+12|0;c[d>>2]=a;c[f+8>>2]=0;of(a|0,b|0,e)|0;return}function gH(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=5384;b=a+4|0;d=(c[b>>2]|0)-4|0;if(((I=c[d>>2]|0,c[d>>2]=I+ -1,I)-1|0)>=0){e=a;n6(e);return}d=(c[b>>2]|0)-12|0;if((d|0)==0){e=a;n6(e);return}n7(d);e=a;n6(e);return}function gI(a){a=a|0;var b=0;c[a>>2]=5384;b=a+4|0;a=(c[b>>2]|0)-4|0;if(((I=c[a>>2]|0,c[a>>2]=I+ -1,I)-1|0)>=0){return}a=(c[b>>2]|0)-12|0;if((a|0)==0){return}n7(a);return}function gJ(a){a=a|0;return c[a+4>>2]|0}function gK(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=5480;b=a+4|0;d=(c[b>>2]|0)-4|0;if(((I=c[d>>2]|0,c[d>>2]=I+ -1,I)-1|0)>=0){e=a;n6(e);return}d=(c[b>>2]|0)-12|0;if((d|0)==0){e=a;n6(e);return}n7(d);e=a;n6(e);return}function gL(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=5480;b=a+4|0;d=(c[b>>2]|0)-4|0;if(((I=c[d>>2]|0,c[d>>2]=I+ -1,I)-1|0)>=0){e=a;n6(e);return}d=(c[b>>2]|0)-12|0;if((d|0)==0){e=a;n6(e);return}n7(d);e=a;n6(e);return}function gM(a){a=a|0;return}function gN(a,b,d){a=a|0;b=b|0;d=d|0;c[a>>2]=d;c[a+4>>2]=b;return}function gO(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+8|0;f=e|0;c8[c[(c[a>>2]|0)+12>>2]&31](f,a,b);if((c[f+4>>2]|0)!=(c[d+4>>2]|0)){g=0;i=e;return g|0}g=(c[f>>2]|0)==(c[d>>2]|0);i=e;return g|0}function gP(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;if((c[b+4>>2]|0)!=(a|0)){e=0;return e|0}e=(c[b>>2]|0)==(d|0);return e|0}function gQ(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;d=b9(e|0)|0;e=og(d|0)|0;if(e>>>0>4294967279>>>0){gW(0)}if(e>>>0<11>>>0){a[b]=e<<1&255;f=b+1|0;of(f|0,d|0,e)|0;g=f+e|0;a[g]=0;return}else{h=e+16&-16;i=n4(h)|0;c[b+8>>2]=i;c[b>>2]=h|1;c[b+4>>2]=e;f=i;of(f|0,d|0,e)|0;g=f+e|0;a[g]=0;return}}function gR(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;g=i;h=f;j=i;i=i+12|0;i=i+7&-8;k=e|0;l=c[k>>2]|0;do{if((l|0)!=0){m=d[h]|0;if((m&1|0)==0){n=m>>>1}else{n=c[f+4>>2]|0}if((n|0)==0){o=l}else{g4(f,3056,2)|0;o=c[k>>2]|0}m=c[e+4>>2]|0;c8[c[(c[m>>2]|0)+24>>2]&31](j,m,o);m=j;p=a[m]|0;if((p&1)==0){q=j+1|0}else{q=c[j+8>>2]|0}r=p&255;if((r&1|0)==0){s=r>>>1}else{s=c[j+4>>2]|0}g4(f,q,s)|0;if((a[m]&1)==0){break}n6(c[j+8>>2]|0)}}while(0);j=b;c[j>>2]=c[h>>2];c[j+4>>2]=c[h+4>>2];c[j+8>>2]=c[h+8>>2];oe(h|0,0,12);i=g;return}function gS(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+32|0;g=d;d=i;i=i+8|0;c[d>>2]=c[g>>2];c[d+4>>2]=c[g+4>>2];g=f|0;h=f+16|0;j=og(e|0)|0;if(j>>>0>4294967279>>>0){gW(0)}if(j>>>0<11>>>0){a[h]=j<<1&255;k=h+1|0}else{l=j+16&-16;m=n4(l)|0;c[h+8>>2]=m;c[h>>2]=l|1;c[h+4>>2]=j;k=m}of(k|0,e|0,j)|0;a[k+j|0]=0;gR(g,d,h);gF(b|0,g);if((a[g]&1)!=0){n6(c[g+8>>2]|0)}if((a[h]&1)!=0){n6(c[h+8>>2]|0)}c[b>>2]=7440;h=d;d=b+8|0;b=c[h+4>>2]|0;c[d>>2]=c[h>>2];c[d+4>>2]=b;i=f;return}function gT(a){a=a|0;gI(a|0);n6(a);return}function gU(a){a=a|0;gI(a|0);return}function gV(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e;if((c[a>>2]|0)==1){do{a3(17584,17560)|0;}while((c[a>>2]|0)==1)}if((c[a>>2]|0)!=0){f;return}c[a>>2]=1;g;cU[d&511](b);h;c[a>>2]=-1;i;b2(17584)|0;return}function gW(a){a=a|0;a=cy(8)|0;gB(a,672);c[a>>2]=5448;bK(a|0,11880,42)}function gX(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=d;if((a[e]&1)==0){f=b;c[f>>2]=c[e>>2];c[f+4>>2]=c[e+4>>2];c[f+8>>2]=c[e+8>>2];return}e=c[d+8>>2]|0;f=c[d+4>>2]|0;if(f>>>0>4294967279>>>0){gW(0)}if(f>>>0<11>>>0){a[b]=f<<1&255;g=b+1|0}else{d=f+16&-16;h=n4(d)|0;c[b+8>>2]=h;c[b>>2]=d|1;c[b+4>>2]=f;g=h}of(g|0,e|0,f)|0;a[g+f|0]=0;return}function gY(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;if(e>>>0>4294967279>>>0){gW(0)}if(e>>>0<11>>>0){a[b]=e<<1&255;f=b+1|0;of(f|0,d|0,e)|0;g=f+e|0;a[g]=0;return}else{h=e+16&-16;i=n4(h)|0;c[b+8>>2]=i;c[b>>2]=h|1;c[b+4>>2]=e;f=i;of(f|0,d|0,e)|0;g=f+e|0;a[g]=0;return}}function gZ(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;if(d>>>0>4294967279>>>0){gW(0)}if(d>>>0<11>>>0){a[b]=d<<1&255;f=b+1|0}else{g=d+16&-16;h=n4(g)|0;c[b+8>>2]=h;c[b>>2]=g|1;c[b+4>>2]=d;f=h}oe(f|0,e|0,d|0);a[f+d|0]=0;return}function g_(b){b=b|0;if((a[b]&1)==0){return}n6(c[b+8>>2]|0);return}function g$(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=og(d|0)|0;f=b;g=b;h=a[g]|0;if((h&1)==0){i=10;j=h}else{h=c[b>>2]|0;i=(h&-2)-1|0;j=h&255}if(i>>>0<e>>>0){h=j&255;if((h&1|0)==0){k=h>>>1}else{k=c[b+4>>2]|0}g5(b,i,e-i|0,k,0,k,e,d);return b|0}if((j&1)==0){l=f+1|0}else{l=c[b+8>>2]|0}oh(l|0,d|0,e|0);a[l+e|0]=0;if((a[g]&1)==0){a[g]=e<<1&255;return b|0}else{c[b+4>>2]=e;return b|0}return 0}function g0(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=b;g=a[f]|0;h=g&255;if((h&1|0)==0){i=h>>>1}else{i=c[b+4>>2]|0}if(i>>>0<d>>>0){h=d-i|0;g1(b,h,e)|0;return}if((g&1)==0){a[b+1+d|0]=0;a[f]=d<<1&255;return}else{a[(c[b+8>>2]|0)+d|0]=0;c[b+4>>2]=d;return}}function g1(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0;if((d|0)==0){return b|0}f=b;g=a[f]|0;if((g&1)==0){h=10;i=g}else{g=c[b>>2]|0;h=(g&-2)-1|0;i=g&255}g=i&255;if((g&1|0)==0){j=g>>>1}else{j=c[b+4>>2]|0}if((h-j|0)>>>0<d>>>0){g6(b,h,d-h+j|0,j,j,0,0);k=a[f]|0}else{k=i}if((k&1)==0){l=b+1|0}else{l=c[b+8>>2]|0}oe(l+j|0,e|0,d|0);e=j+d|0;if((a[f]&1)==0){a[f]=e<<1&255}else{c[b+4>>2]=e}a[l+e|0]=0;return b|0}function g2(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;if(d>>>0>4294967279>>>0){gW(0)}e=b;f=b;g=a[f]|0;if((g&1)==0){h=10;i=g}else{g=c[b>>2]|0;h=(g&-2)-1|0;i=g&255}g=i&255;if((g&1|0)==0){j=g>>>1}else{j=c[b+4>>2]|0}g=j>>>0>d>>>0?j:d;if(g>>>0<11>>>0){k=11}else{k=g+16&-16}g=k-1|0;if((g|0)==(h|0)){return}if((g|0)==10){l=e+1|0;m=c[b+8>>2]|0;n=1;o=0}else{if(g>>>0>h>>>0){p=n4(k)|0}else{p=n4(k)|0}h=i&1;if(h<<24>>24==0){q=e+1|0}else{q=c[b+8>>2]|0}l=p;m=q;n=h<<24>>24!=0;o=1}h=i&255;if((h&1|0)==0){r=h>>>1}else{r=c[b+4>>2]|0}h=r+1|0;of(l|0,m|0,h)|0;if(n){n6(m)}if(o){c[b>>2]=k|1;c[b+4>>2]=j;c[b+8>>2]=l;return}else{a[f]=j<<1&255;return}}function g3(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;e=b;f=a[e]|0;if((f&1)==0){g=(f&255)>>>1;h=10}else{g=c[b+4>>2]|0;h=(c[b>>2]&-2)-1|0}if((g|0)==(h|0)){g6(b,h,1,h,h,0,0);i=a[e]|0}else{i=f}if((i&1)==0){a[e]=(g<<1)+2&255;j=b+1|0;k=g+1|0;l=j+g|0;a[l]=d;m=j+k|0;a[m]=0;return}else{e=c[b+8>>2]|0;i=g+1|0;c[b+4>>2]=i;j=e;k=i;l=j+g|0;a[l]=d;m=j+k|0;a[m]=0;return}}function g4(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=b;g=a[f]|0;if((g&1)==0){h=10;i=g}else{g=c[b>>2]|0;h=(g&-2)-1|0;i=g&255}g=i&255;if((g&1|0)==0){j=g>>>1}else{j=c[b+4>>2]|0}if((h-j|0)>>>0<e>>>0){g5(b,h,e-h+j|0,j,j,0,e,d);return b|0}if((e|0)==0){return b|0}if((i&1)==0){k=b+1|0}else{k=c[b+8>>2]|0}i=k+j|0;of(i|0,d|0,e)|0;d=j+e|0;if((a[f]&1)==0){a[f]=d<<1&255}else{c[b+4>>2]=d}a[k+d|0]=0;return b|0}function g5(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;if((-18-d|0)>>>0<e>>>0){gW(0)}if((a[b]&1)==0){k=b+1|0}else{k=c[b+8>>2]|0}do{if(d>>>0<2147483623>>>0){l=e+d|0;m=d<<1;n=l>>>0<m>>>0?m:l;if(n>>>0<11>>>0){o=11;break}o=n+16&-16}else{o=-17}}while(0);e=n4(o)|0;if((g|0)!=0){of(e|0,k|0,g)|0}if((i|0)!=0){n=e+g|0;of(n|0,j|0,i)|0}j=f-h|0;if((j|0)!=(g|0)){f=j-g|0;n=e+(i+g)|0;l=k+(h+g)|0;of(n|0,l|0,f)|0}if((d|0)==10){p=b+8|0;c[p>>2]=e;q=o|1;r=b|0;c[r>>2]=q;s=j+i|0;t=b+4|0;c[t>>2]=s;u=e+s|0;a[u]=0;return}n6(k);p=b+8|0;c[p>>2]=e;q=o|1;r=b|0;c[r>>2]=q;s=j+i|0;t=b+4|0;c[t>>2]=s;u=e+s|0;a[u]=0;return}function g6(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;if((-17-d|0)>>>0<e>>>0){gW(0)}if((a[b]&1)==0){j=b+1|0}else{j=c[b+8>>2]|0}do{if(d>>>0<2147483623>>>0){k=e+d|0;l=d<<1;m=k>>>0<l>>>0?l:k;if(m>>>0<11>>>0){n=11;break}n=m+16&-16}else{n=-17}}while(0);e=n4(n)|0;if((g|0)!=0){of(e|0,j|0,g)|0}m=f-h|0;if((m|0)!=(g|0)){f=m-g|0;m=e+(i+g)|0;i=j+(h+g)|0;of(m|0,i|0,f)|0}if((d|0)==10){o=b+8|0;c[o>>2]=e;p=n|1;q=b|0;c[q>>2]=p;return}n6(j);o=b+8|0;c[o>>2]=e;p=n|1;q=b|0;c[q>>2]=p;return}function g7(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;if(e>>>0>1073741807>>>0){gW(0)}if(e>>>0<2>>>0){a[b]=e<<1&255;f=b+4|0;g=nC(f,d,e)|0;h=f+(e<<2)|0;c[h>>2]=0;return}else{i=e+4&-4;j=n4(i<<2)|0;c[b+8>>2]=j;c[b>>2]=i|1;c[b+4>>2]=e;f=j;g=nC(f,d,e)|0;h=f+(e<<2)|0;c[h>>2]=0;return}}function g8(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;if(d>>>0>1073741807>>>0){gW(0)}if(d>>>0<2>>>0){a[b]=d<<1&255;f=b+4|0;g=nE(f,e,d)|0;h=f+(d<<2)|0;c[h>>2]=0;return}else{i=d+4&-4;j=n4(i<<2)|0;c[b+8>>2]=j;c[b>>2]=i|1;c[b+4>>2]=d;f=j;g=nE(f,e,d)|0;h=f+(d<<2)|0;c[h>>2]=0;return}}function g9(b){b=b|0;if((a[b]&1)==0){return}n6(c[b+8>>2]|0);return}function ha(a,b){a=a|0;b=b|0;return hb(a,b,nB(b)|0)|0}function hb(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=b;g=a[f]|0;if((g&1)==0){h=1;i=g}else{g=c[b>>2]|0;h=(g&-2)-1|0;i=g&255}if(h>>>0<e>>>0){g=i&255;if((g&1|0)==0){j=g>>>1}else{j=c[b+4>>2]|0}he(b,h,e-h|0,j,0,j,e,d);return b|0}if((i&1)==0){k=b+4|0}else{k=c[b+8>>2]|0}nD(k,d,e)|0;c[k+(e<<2)>>2]=0;if((a[f]&1)==0){a[f]=e<<1&255;return b|0}else{c[b+4>>2]=e;return b|0}return 0}function hc(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;if(d>>>0>1073741807>>>0){gW(0)}e=b;f=a[e]|0;if((f&1)==0){g=1;h=f}else{f=c[b>>2]|0;g=(f&-2)-1|0;h=f&255}f=h&255;if((f&1|0)==0){i=f>>>1}else{i=c[b+4>>2]|0}f=i>>>0>d>>>0?i:d;if(f>>>0<2>>>0){j=2}else{j=f+4&-4}f=j-1|0;if((f|0)==(g|0)){return}if((f|0)==1){k=b+4|0;l=c[b+8>>2]|0;m=1;n=0}else{d=j<<2;if(f>>>0>g>>>0){o=n4(d)|0}else{o=n4(d)|0}d=h&1;if(d<<24>>24==0){p=b+4|0}else{p=c[b+8>>2]|0}k=o;l=p;m=d<<24>>24!=0;n=1}d=k;k=h&255;if((k&1|0)==0){q=k>>>1}else{q=c[b+4>>2]|0}nC(d,l,q+1|0)|0;if(m){n6(l)}if(n){c[b>>2]=j|1;c[b+4>>2]=i;c[b+8>>2]=d;return}else{a[e]=i<<1&255;return}}function hd(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;e=b;f=a[e]|0;if((f&1)==0){g=(f&255)>>>1;h=1}else{g=c[b+4>>2]|0;h=(c[b>>2]&-2)-1|0}if((g|0)==(h|0)){hf(b,h,1,h,h,0,0);i=a[e]|0}else{i=f}if((i&1)==0){a[e]=(g<<1)+2&255;j=b+4|0;k=g+1|0;l=j+(g<<2)|0;c[l>>2]=d;m=j+(k<<2)|0;c[m>>2]=0;return}else{e=c[b+8>>2]|0;i=g+1|0;c[b+4>>2]=i;j=e;k=i;l=j+(g<<2)|0;c[l>>2]=d;m=j+(k<<2)|0;c[m>>2]=0;return}}function he(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;if((1073741806-d|0)>>>0<e>>>0){gW(0)}if((a[b]&1)==0){k=b+4|0}else{k=c[b+8>>2]|0}do{if(d>>>0<536870887>>>0){l=e+d|0;m=d<<1;n=l>>>0<m>>>0?m:l;if(n>>>0<2>>>0){o=2;break}o=n+4&-4}else{o=1073741807}}while(0);e=n4(o<<2)|0;if((g|0)!=0){nC(e,k,g)|0}if((i|0)!=0){n=e+(g<<2)|0;nC(n,j,i)|0}j=f-h|0;if((j|0)!=(g|0)){f=j-g|0;n=e+(i+g<<2)|0;l=k+(h+g<<2)|0;nC(n,l,f)|0}if((d|0)==1){p=b+8|0;c[p>>2]=e;q=o|1;r=b|0;c[r>>2]=q;s=j+i|0;t=b+4|0;c[t>>2]=s;u=e+(s<<2)|0;c[u>>2]=0;return}n6(k);p=b+8|0;c[p>>2]=e;q=o|1;r=b|0;c[r>>2]=q;s=j+i|0;t=b+4|0;c[t>>2]=s;u=e+(s<<2)|0;c[u>>2]=0;return}function hf(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;if((1073741807-d|0)>>>0<e>>>0){gW(0)}if((a[b]&1)==0){j=b+4|0}else{j=c[b+8>>2]|0}do{if(d>>>0<536870887>>>0){k=e+d|0;l=d<<1;m=k>>>0<l>>>0?l:k;if(m>>>0<2>>>0){n=2;break}n=m+4&-4}else{n=1073741807}}while(0);e=n4(n<<2)|0;if((g|0)!=0){nC(e,j,g)|0}m=f-h|0;if((m|0)!=(g|0)){f=m-g|0;m=e+(i+g<<2)|0;i=j+(h+g<<2)|0;nC(m,i,f)|0}if((d|0)==1){o=b+8|0;c[o>>2]=e;p=n|1;q=b|0;c[q>>2]=p;return}n6(j);o=b+8|0;c[o>>2]=e;p=n|1;q=b|0;c[q>>2]=p;return}function hg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+8|0;f=e|0;g=(c[b+24>>2]|0)==0;if(g){c[b+16>>2]=d|1}else{c[b+16>>2]=d}if(((g&1|d)&c[b+20>>2]|0)==0){i=e;return}e=cy(16)|0;do{if((a[19048]|0)==0){if((bx(19048)|0)==0){break}c[4178]=6944;bf(78,16712,u|0)|0}}while(0);b=ok(16712,0,32)|0;c[f>>2]=b&0|1;c[f+4>>2]=K|0;gS(e,f,3104);c[e>>2]=6128;bK(e|0,12424,36)}function hh(a){a=a|0;var b=0,d=0,e=0,f=0;c[a>>2]=6104;b=c[a+40>>2]|0;d=a+32|0;e=a+36|0;if((b|0)!=0){f=b;do{f=f-1|0;c8[c[(c[d>>2]|0)+(f<<2)>>2]&31](0,a,c[(c[e>>2]|0)+(f<<2)>>2]|0);}while((f|0)!=0)}lI(a+28|0);n0(c[d>>2]|0);n0(c[e>>2]|0);n0(c[a+48>>2]|0);n0(c[a+60>>2]|0);return}function hi(a,b){a=a|0;b=b|0;lH(a,b+28|0);return}function hj(a,b){a=a|0;b=b|0;c[a+24>>2]=b;c[a+16>>2]=(b|0)==0;c[a+20>>2]=0;c[a+4>>2]=4098;c[a+12>>2]=0;c[a+8>>2]=6;b=a+28|0;oe(a+32|0,0,40);if((b|0)==0){return}lG(b);return}function hk(a){a=a|0;c[a>>2]=7176;lI(a+4|0);n6(a);return}function hl(a){a=a|0;c[a>>2]=7176;lI(a+4|0);return}function hm(a,b){a=a|0;b=b|0;return}function hn(a,b,c){a=a|0;b=b|0;c=c|0;return a|0}function ho(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;g=a;c[g>>2]=0;c[g+4>>2]=0;g=a+8|0;c[g>>2]=-1;c[g+4>>2]=-1;return}function hp(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;e=i;b=d;d=i;i=i+16|0;c[d>>2]=c[b>>2];c[d+4>>2]=c[b+4>>2];c[d+8>>2]=c[b+8>>2];c[d+12>>2]=c[b+12>>2];b=a;c[b>>2]=0;c[b+4>>2]=0;b=a+8|0;c[b>>2]=-1;c[b+4>>2]=-1;i=e;return}function hq(a){a=a|0;return 0}function hr(a){a=a|0;return 0}function hs(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;f=b;if((e|0)<=0){g=0;return g|0}h=b+12|0;i=b+16|0;j=d;d=0;while(1){k=c[h>>2]|0;if(k>>>0<(c[i>>2]|0)>>>0){c[h>>2]=k+1;l=a[k]|0}else{k=cZ[c[(c[f>>2]|0)+40>>2]&255](b)|0;if((k|0)==-1){g=d;m=193;break}l=k&255}a[j]=l;k=d+1|0;if((k|0)<(e|0)){j=j+1|0;d=k}else{g=k;m=195;break}}if((m|0)==195){return g|0}else if((m|0)==193){return g|0}return 0}function ht(a){a=a|0;return-1|0}function hu(a){a=a|0;var b=0,e=0;if((cZ[c[(c[a>>2]|0)+36>>2]&255](a)|0)==-1){b=-1;return b|0}e=a+12|0;a=c[e>>2]|0;c[e>>2]=a+1;b=d[a]|0;return b|0}function hv(a,b){a=a|0;b=b|0;return-1|0}function hw(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;g=b;if((f|0)<=0){h=0;return h|0}i=b+24|0;j=b+28|0;k=0;l=e;while(1){e=c[i>>2]|0;if(e>>>0<(c[j>>2]|0)>>>0){m=a[l]|0;c[i>>2]=e+1;a[e]=m}else{if((c6[c[(c[g>>2]|0)+52>>2]&63](b,d[l]|0)|0)==-1){h=k;n=211;break}}m=k+1|0;if((m|0)<(f|0)){k=m;l=l+1|0}else{h=m;n=212;break}}if((n|0)==212){return h|0}else if((n|0)==211){return h|0}return 0}function hx(a,b){a=a|0;b=b|0;return-1|0}function hy(a){a=a|0;c[a>>2]=7104;lI(a+4|0);n6(a);return}function hz(a){a=a|0;c[a>>2]=7104;lI(a+4|0);return}function hA(a,b){a=a|0;b=b|0;return}function hB(a,b,c){a=a|0;b=b|0;c=c|0;return a|0}function hC(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;g=a;c[g>>2]=0;c[g+4>>2]=0;g=a+8|0;c[g>>2]=-1;c[g+4>>2]=-1;return}function hD(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;e=i;b=d;d=i;i=i+16|0;c[d>>2]=c[b>>2];c[d+4>>2]=c[b+4>>2];c[d+8>>2]=c[b+8>>2];c[d+12>>2]=c[b+12>>2];b=a;c[b>>2]=0;c[b+4>>2]=0;b=a+8|0;c[b>>2]=-1;c[b+4>>2]=-1;i=e;return}function hE(a){a=a|0;return 0}function hF(a){a=a|0;return 0}function hG(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=a;if((d|0)<=0){f=0;return f|0}g=a+12|0;h=a+16|0;i=b;b=0;while(1){j=c[g>>2]|0;if(j>>>0<(c[h>>2]|0)>>>0){c[g>>2]=j+4;k=c[j>>2]|0}else{j=cZ[c[(c[e>>2]|0)+40>>2]&255](a)|0;if((j|0)==-1){f=b;l=230;break}else{k=j}}c[i>>2]=k;j=b+1|0;if((j|0)<(d|0)){i=i+4|0;b=j}else{f=j;l=231;break}}if((l|0)==230){return f|0}else if((l|0)==231){return f|0}return 0}function hH(a){a=a|0;return-1|0}function hI(a){a=a|0;var b=0,d=0;if((cZ[c[(c[a>>2]|0)+36>>2]&255](a)|0)==-1){b=-1;return b|0}d=a+12|0;a=c[d>>2]|0;c[d>>2]=a+4;b=c[a>>2]|0;return b|0}function hJ(a,b){a=a|0;b=b|0;return-1|0}function hK(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=a;if((d|0)<=0){f=0;return f|0}g=a+24|0;h=a+28|0;i=0;j=b;while(1){b=c[g>>2]|0;if(b>>>0<(c[h>>2]|0)>>>0){k=c[j>>2]|0;c[g>>2]=b+4;c[b>>2]=k}else{if((c6[c[(c[e>>2]|0)+52>>2]&63](a,c[j>>2]|0)|0)==-1){f=i;l=248;break}}k=i+1|0;if((k|0)<(d|0)){i=k;j=j+4|0}else{f=k;l=246;break}}if((l|0)==248){return f|0}else if((l|0)==246){return f|0}return 0}function hL(a,b){a=a|0;b=b|0;return-1|0}function hM(a){a=a|0;hh(a+8|0);n6(a);return}function hN(a){a=a|0;hh(a+8|0);return}function hO(a){a=a|0;var b=0,d=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;hh(b+(d+8)|0);n6(b+d|0);return}function hP(a){a=a|0;hh(a+((c[(c[a>>2]|0)-12>>2]|0)+8)|0);return}function hQ(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+8|0;e=d|0;f=b;g=c[(c[f>>2]|0)-12>>2]|0;h=b;if((c[h+(g+24)>>2]|0)==0){i=d;return b|0}j=e|0;a[j]=0;c[e+4>>2]=b;do{if((c[h+(g+16)>>2]|0)==0){k=c[h+(g+72)>>2]|0;if((k|0)!=0){hQ(k)|0}a[j]=1;k=c[h+((c[(c[f>>2]|0)-12>>2]|0)+24)>>2]|0;if((cZ[c[(c[k>>2]|0)+24>>2]&255](k)|0)!=-1){break}k=c[(c[f>>2]|0)-12>>2]|0;hg(h+k|0,c[h+(k+16)>>2]|1)}}while(0);h_(e);i=d;return b|0}function hR(a){a=a|0;hh(a+8|0);n6(a);return}function hS(a){a=a|0;hh(a+8|0);return}function hT(a){a=a|0;var b=0,d=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;hh(b+(d+8)|0);n6(b+d|0);return}function hU(a){a=a|0;hh(a+((c[(c[a>>2]|0)-12>>2]|0)+8)|0);return}function hV(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+8|0;e=d|0;f=b;g=c[(c[f>>2]|0)-12>>2]|0;h=b;if((c[h+(g+24)>>2]|0)==0){i=d;return b|0}j=e|0;a[j]=0;c[e+4>>2]=b;do{if((c[h+(g+16)>>2]|0)==0){k=c[h+(g+72)>>2]|0;if((k|0)!=0){hV(k)|0}a[j]=1;k=c[h+((c[(c[f>>2]|0)-12>>2]|0)+24)>>2]|0;if((cZ[c[(c[k>>2]|0)+24>>2]&255](k)|0)!=-1){break}k=c[(c[f>>2]|0)-12>>2]|0;hg(h+k|0,c[h+(k+16)>>2]|1)}}while(0);h3(e);i=d;return b|0}function hW(a){a=a|0;hh(a+4|0);n6(a);return}function hX(a){a=a|0;hh(a+4|0);return}function hY(a){a=a|0;var b=0,d=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;hh(b+(d+4)|0);n6(b+d|0);return}function hZ(a){a=a|0;hh(a+((c[(c[a>>2]|0)-12>>2]|0)+4)|0);return}function h_(a){a=a|0;var b=0,d=0,e=0;b=a+4|0;a=c[b>>2]|0;d=c[(c[a>>2]|0)-12>>2]|0;e=a;if((c[e+(d+24)>>2]|0)==0){return}if((c[e+(d+16)>>2]|0)!=0){return}if((c[e+(d+4)>>2]&8192|0)==0){return}if(bC()|0){return}d=c[b>>2]|0;e=c[d+((c[(c[d>>2]|0)-12>>2]|0)+24)>>2]|0;if((cZ[c[(c[e>>2]|0)+24>>2]&255](e)|0)!=-1){return}e=c[b>>2]|0;b=c[(c[e>>2]|0)-12>>2]|0;d=e;hg(d+b|0,c[d+(b+16)>>2]|1);return}function h$(a){a=a|0;hh(a+4|0);n6(a);return}function h0(a){a=a|0;hh(a+4|0);return}function h1(a){a=a|0;var b=0,d=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;hh(b+(d+4)|0);n6(b+d|0);return}function h2(a){a=a|0;hh(a+((c[(c[a>>2]|0)-12>>2]|0)+4)|0);return}function h3(a){a=a|0;var b=0,d=0,e=0;b=a+4|0;a=c[b>>2]|0;d=c[(c[a>>2]|0)-12>>2]|0;e=a;if((c[e+(d+24)>>2]|0)==0){return}if((c[e+(d+16)>>2]|0)!=0){return}if((c[e+(d+4)>>2]&8192|0)==0){return}if(bC()|0){return}d=c[b>>2]|0;e=c[d+((c[(c[d>>2]|0)-12>>2]|0)+24)>>2]|0;if((cZ[c[(c[e>>2]|0)+24>>2]&255](e)|0)!=-1){return}e=c[b>>2]|0;b=c[(c[e>>2]|0)-12>>2]|0;d=e;hg(d+b|0,c[d+(b+16)>>2]|1);return}function h4(a){a=a|0;return 3584}function h5(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)==1){gY(a,3856,35);return}else{gQ(a,b|0,c);return}}function h6(a){a=a|0;gM(a|0);return}function h7(a){a=a|0;gU(a|0);n6(a);return}function h8(a){a=a|0;gU(a|0);return}function h9(a){a=a|0;hh(a);n6(a);return}function ia(a){a=a|0;gM(a|0);n6(a);return}function ib(a){a=a|0;gy(a|0);n6(a);return}function ic(a){a=a|0;gy(a|0);return}function id(a){a=a|0;gy(a|0);return}function ie(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0;L397:do{if((e|0)==(f|0)){g=c}else{b=c;h=e;while(1){if((b|0)==(d|0)){i=-1;j=363;break}k=a[b]|0;l=a[h]|0;if(k<<24>>24<l<<24>>24){i=-1;j=360;break}if(l<<24>>24<k<<24>>24){i=1;j=362;break}k=b+1|0;l=h+1|0;if((l|0)==(f|0)){g=k;break L397}else{b=k;h=l}}if((j|0)==363){return i|0}else if((j|0)==362){return i|0}else if((j|0)==360){return i|0}}}while(0);i=(g|0)!=(d|0)|0;return i|0}function ig(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;d=e;g=f-d|0;if(g>>>0>4294967279>>>0){gW(b)}if(g>>>0<11>>>0){a[b]=g<<1&255;h=b+1|0}else{i=g+16&-16;j=n4(i)|0;c[b+8>>2]=j;c[b>>2]=i|1;c[b+4>>2]=g;h=j}if((e|0)==(f|0)){k=h;a[k]=0;return}j=f+(-d|0)|0;d=h;g=e;while(1){a[d]=a[g]|0;e=g+1|0;if((e|0)==(f|0)){break}else{d=d+1|0;g=e}}k=h+j|0;a[k]=0;return}function ih(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;if((c|0)==(d|0)){e=0;return e|0}else{f=c;g=0}while(1){c=(a[f]|0)+(g<<4)|0;b=c&-268435456;h=(b>>>24|b)^c;c=f+1|0;if((c|0)==(d|0)){e=h;break}else{f=c;g=h}}return e|0}function ii(a){a=a|0;gy(a|0);n6(a);return}function ij(a){a=a|0;gy(a|0);return}function ik(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0;L433:do{if((e|0)==(f|0)){g=b}else{a=b;h=e;while(1){if((a|0)==(d|0)){i=-1;j=390;break}k=c[a>>2]|0;l=c[h>>2]|0;if((k|0)<(l|0)){i=-1;j=391;break}if((l|0)<(k|0)){i=1;j=393;break}k=a+4|0;l=h+4|0;if((l|0)==(f|0)){g=k;break L433}else{a=k;h=l}}if((j|0)==390){return i|0}else if((j|0)==391){return i|0}else if((j|0)==393){return i|0}}}while(0);i=(g|0)!=(d|0)|0;return i|0}function il(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;d=e;g=f-d|0;h=g>>2;if(h>>>0>1073741807>>>0){gW(b)}if(h>>>0<2>>>0){a[b]=g>>>1&255;i=b+4|0}else{g=h+4&-4;j=n4(g<<2)|0;c[b+8>>2]=j;c[b>>2]=g|1;c[b+4>>2]=h;i=j}if((e|0)==(f|0)){k=i;c[k>>2]=0;return}j=(f-4+(-d|0)|0)>>>2;d=i;h=e;while(1){c[d>>2]=c[h>>2];e=h+4|0;if((e|0)==(f|0)){break}else{d=d+4|0;h=e}}k=i+(j+1<<2)|0;c[k>>2]=0;return}function im(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;if((b|0)==(d|0)){e=0;return e|0}else{f=b;g=0}while(1){b=(c[f>>2]|0)+(g<<4)|0;a=b&-268435456;h=(a>>>24|a)^b;b=f+4|0;if((b|0)==(d|0)){e=h;break}else{f=b;g=h}}return e|0}function io(a){a=a|0;gy(a|0);n6(a);return}function ip(a){a=a|0;gy(a|0);return}function iq(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;k=i;i=i+112|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=k|0;m=k+16|0;n=k+32|0;o=k+40|0;p=k+48|0;q=k+56|0;r=k+64|0;s=k+72|0;t=k+80|0;u=k+104|0;if((c[g+4>>2]&1|0)==0){c[n>>2]=-1;v=c[(c[d>>2]|0)+16>>2]|0;w=e|0;c[p>>2]=c[w>>2];c[q>>2]=c[f>>2];c$[v&127](o,d,p,q,g,h,n);q=c[o>>2]|0;c[w>>2]=q;w=c[n>>2]|0;if((w|0)==1){a[j]=1}else if((w|0)==0){a[j]=0}else{a[j]=1;c[h>>2]=4}c[b>>2]=q;i=k;return}hi(r,g);q=r|0;r=c[q>>2]|0;if((c[4534]|0)!=-1){c[m>>2]=18136;c[m+4>>2]=16;c[m+8>>2]=0;gV(18136,m,108)}m=(c[4535]|0)-1|0;w=c[r+8>>2]|0;do{if((c[r+12>>2]|0)-w>>2>>>0>m>>>0){n=c[w+(m<<2)>>2]|0;if((n|0)==0){break}o=n;n=c[q>>2]|0;gA(n)|0;hi(s,g);n=s|0;p=c[n>>2]|0;if((c[4438]|0)!=-1){c[l>>2]=17752;c[l+4>>2]=16;c[l+8>>2]=0;gV(17752,l,108)}d=(c[4439]|0)-1|0;v=c[p+8>>2]|0;do{if((c[p+12>>2]|0)-v>>2>>>0>d>>>0){x=c[v+(d<<2)>>2]|0;if((x|0)==0){break}y=x;z=c[n>>2]|0;gA(z)|0;z=t|0;A=x;cV[c[(c[A>>2]|0)+24>>2]&255](z,y);cV[c[(c[A>>2]|0)+28>>2]&255](t+12|0,y);c[u>>2]=c[f>>2];a[j]=(ir(e,u,z,t+24|0,o,h,1)|0)==(z|0)|0;c[b>>2]=c[e>>2];g_(t+12|0);g_(t|0);i=k;return}}while(0);o=cy(4)|0;nG(o);bK(o|0,11832,162)}}while(0);k=cy(4)|0;nG(k);bK(k|0,11832,162)}function ir(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0;l=i;i=i+104|0;m=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[m>>2];m=(g-f|0)/12|0;n=l|0;do{if(m>>>0>100>>>0){o=n$(m)|0;if((o|0)!=0){p=o;q=o;break}ob();p=0;q=0}else{p=n;q=0}}while(0);n=(f|0)==(g|0);if(n){r=m;s=0}else{o=m;m=0;t=p;u=f;while(1){v=d[u]|0;if((v&1|0)==0){w=v>>>1}else{w=c[u+4>>2]|0}if((w|0)==0){a[t]=2;x=m+1|0;y=o-1|0}else{a[t]=1;x=m;y=o}v=u+12|0;if((v|0)==(g|0)){r=y;s=x;break}else{o=y;m=x;t=t+1|0;u=v}}}u=b|0;b=e|0;e=h;t=0;x=s;s=r;while(1){r=c[u>>2]|0;do{if((r|0)==0){z=0}else{if((c[r+12>>2]|0)!=(c[r+16>>2]|0)){z=r;break}if((cZ[c[(c[r>>2]|0)+36>>2]&255](r)|0)==-1){c[u>>2]=0;z=0;break}else{z=c[u>>2]|0;break}}}while(0);r=(z|0)==0;m=c[b>>2]|0;if((m|0)==0){A=z;B=0}else{do{if((c[m+12>>2]|0)==(c[m+16>>2]|0)){if((cZ[c[(c[m>>2]|0)+36>>2]&255](m)|0)!=-1){C=m;break}c[b>>2]=0;C=0}else{C=m}}while(0);A=c[u>>2]|0;B=C}D=(B|0)==0;if(!((r^D)&(s|0)!=0)){break}m=c[A+12>>2]|0;if((m|0)==(c[A+16>>2]|0)){E=(cZ[c[(c[A>>2]|0)+36>>2]&255](A)|0)&255}else{E=a[m]|0}if(k){F=E}else{F=c6[c[(c[e>>2]|0)+12>>2]&63](h,E)|0}do{if(n){G=x;H=s}else{m=t+1|0;L544:do{if(k){y=s;o=x;w=p;v=0;I=f;while(1){do{if((a[w]|0)==1){J=I;if((a[J]&1)==0){K=I+1|0}else{K=c[I+8>>2]|0}if(F<<24>>24!=(a[K+t|0]|0)){a[w]=0;L=v;M=o;N=y-1|0;break}O=d[J]|0;if((O&1|0)==0){P=O>>>1}else{P=c[I+4>>2]|0}if((P|0)!=(m|0)){L=1;M=o;N=y;break}a[w]=2;L=1;M=o+1|0;N=y-1|0}else{L=v;M=o;N=y}}while(0);O=I+12|0;if((O|0)==(g|0)){Q=N;R=M;S=L;break L544}y=N;o=M;w=w+1|0;v=L;I=O}}else{I=s;v=x;w=p;o=0;y=f;while(1){do{if((a[w]|0)==1){O=y;if((a[O]&1)==0){T=y+1|0}else{T=c[y+8>>2]|0}if(F<<24>>24!=(c6[c[(c[e>>2]|0)+12>>2]&63](h,a[T+t|0]|0)|0)<<24>>24){a[w]=0;U=o;V=v;W=I-1|0;break}J=d[O]|0;if((J&1|0)==0){X=J>>>1}else{X=c[y+4>>2]|0}if((X|0)!=(m|0)){U=1;V=v;W=I;break}a[w]=2;U=1;V=v+1|0;W=I-1|0}else{U=o;V=v;W=I}}while(0);J=y+12|0;if((J|0)==(g|0)){Q=W;R=V;S=U;break L544}I=W;v=V;w=w+1|0;o=U;y=J}}}while(0);if(!S){G=R;H=Q;break}m=c[u>>2]|0;y=m+12|0;o=c[y>>2]|0;if((o|0)==(c[m+16>>2]|0)){w=c[(c[m>>2]|0)+40>>2]|0;cZ[w&255](m)|0}else{c[y>>2]=o+1}if((R+Q|0)>>>0<2>>>0|n){G=R;H=Q;break}o=t+1|0;y=R;m=p;w=f;while(1){do{if((a[m]|0)==2){v=d[w]|0;if((v&1|0)==0){Y=v>>>1}else{Y=c[w+4>>2]|0}if((Y|0)==(o|0)){Z=y;break}a[m]=0;Z=y-1|0}else{Z=y}}while(0);v=w+12|0;if((v|0)==(g|0)){G=Z;H=Q;break}else{y=Z;m=m+1|0;w=v}}}}while(0);t=t+1|0;x=G;s=H}do{if((A|0)==0){_=0}else{if((c[A+12>>2]|0)!=(c[A+16>>2]|0)){_=A;break}if((cZ[c[(c[A>>2]|0)+36>>2]&255](A)|0)==-1){c[u>>2]=0;_=0;break}else{_=c[u>>2]|0;break}}}while(0);u=(_|0)==0;do{if(D){$=536}else{if((c[B+12>>2]|0)!=(c[B+16>>2]|0)){if(u){break}else{$=538;break}}if((cZ[c[(c[B>>2]|0)+36>>2]&255](B)|0)==-1){c[b>>2]=0;$=536;break}else{if(u^(B|0)==0){break}else{$=538;break}}}}while(0);if(($|0)==536){if(u){$=538}}if(($|0)==538){c[j>>2]=c[j>>2]|2}L623:do{if(n){$=543}else{u=f;B=p;while(1){if((a[B]|0)==2){aa=u;break L623}b=u+12|0;if((b|0)==(g|0)){$=543;break L623}u=b;B=B+1|0}}}while(0);if(($|0)==543){c[j>>2]=c[j>>2]|4;aa=g}if((q|0)==0){i=l;return aa|0}n0(q);i=l;return aa|0}function is(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];it(a,0,j,k,f,g,h);i=b;return}function it(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;e=i;i=i+72|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+32|0;n=e+40|0;o=e+56|0;p=o;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+160|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=c[h+4>>2]&74;if((u|0)==64){v=8}else if((u|0)==8){v=16}else if((u|0)==0){v=0}else{v=10}u=l|0;i9(n,h,u,m);oe(p|0,0,12);h=o;g0(o,10,0);if((a[p]&1)==0){l=h+1|0;w=l;x=l;y=o+8|0}else{l=o+8|0;w=c[l>>2]|0;x=h+1|0;y=l}c[q>>2]=w;l=r|0;c[s>>2]=l;c[t>>2]=0;h=f|0;f=g|0;g=o|0;z=o+4|0;A=a[m]|0;m=w;w=c[h>>2]|0;L647:while(1){do{if((w|0)==0){B=0}else{if((c[w+12>>2]|0)!=(c[w+16>>2]|0)){B=w;break}if((cZ[c[(c[w>>2]|0)+36>>2]&255](w)|0)!=-1){B=w;break}c[h>>2]=0;B=0}}while(0);C=(B|0)==0;D=c[f>>2]|0;do{if((D|0)==0){E=571}else{if((c[D+12>>2]|0)!=(c[D+16>>2]|0)){if(C){F=D;G=0;break}else{H=m;I=D;J=0;break L647}}if((cZ[c[(c[D>>2]|0)+36>>2]&255](D)|0)==-1){c[f>>2]=0;E=571;break}else{K=(D|0)==0;if(C^K){F=D;G=K;break}else{H=m;I=D;J=K;break L647}}}}while(0);if((E|0)==571){E=0;if(C){H=m;I=0;J=1;break}else{F=0;G=1}}D=d[p]|0;K=(D&1|0)==0;if(((c[q>>2]|0)-m|0)==((K?D>>>1:c[z>>2]|0)|0)){if(K){L=D>>>1;M=D>>>1}else{D=c[z>>2]|0;L=D;M=D}g0(o,L<<1,0);if((a[p]&1)==0){N=10}else{N=(c[g>>2]&-2)-1|0}g0(o,N,0);if((a[p]&1)==0){O=x}else{O=c[y>>2]|0}c[q>>2]=O+M;P=O}else{P=m}D=B+12|0;K=c[D>>2]|0;Q=B+16|0;if((K|0)==(c[Q>>2]|0)){R=(cZ[c[(c[B>>2]|0)+36>>2]&255](B)|0)&255}else{R=a[K]|0}if((iL(R,v,P,q,t,A,n,l,s,u)|0)!=0){H=P;I=F;J=G;break}K=c[D>>2]|0;if((K|0)==(c[Q>>2]|0)){Q=c[(c[B>>2]|0)+40>>2]|0;cZ[Q&255](B)|0;m=P;w=B;continue}else{c[D>>2]=K+1;m=P;w=B;continue}}w=d[n]|0;if((w&1|0)==0){S=w>>>1}else{S=c[n+4>>2]|0}do{if((S|0)!=0){w=c[s>>2]|0;if((w-r|0)>=160){break}P=c[t>>2]|0;c[s>>2]=w+4;c[w>>2]=P}}while(0);c[k>>2]=nk(H,c[q>>2]|0,j,v)|0;k3(n,l,c[s>>2]|0,j);do{if(C){T=0}else{if((c[B+12>>2]|0)!=(c[B+16>>2]|0)){T=B;break}if((cZ[c[(c[B>>2]|0)+36>>2]&255](B)|0)!=-1){T=B;break}c[h>>2]=0;T=0}}while(0);h=(T|0)==0;L707:do{if(J){E=612}else{do{if((c[I+12>>2]|0)==(c[I+16>>2]|0)){if((cZ[c[(c[I>>2]|0)+36>>2]&255](I)|0)!=-1){break}c[f>>2]=0;E=612;break L707}}while(0);if(!(h^(I|0)==0)){break}U=b|0;c[U>>2]=T;g_(o);g_(n);i=e;return}}while(0);do{if((E|0)==612){if(h){break}U=b|0;c[U>>2]=T;g_(o);g_(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;U=b|0;c[U>>2]=T;g_(o);g_(n);i=e;return}function iu(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];iv(a,0,j,k,f,g,h);i=b;return}function iv(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;e=i;i=i+72|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+32|0;n=e+40|0;o=e+56|0;p=o;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+160|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=c[h+4>>2]&74;if((u|0)==8){v=16}else if((u|0)==0){v=0}else if((u|0)==64){v=8}else{v=10}u=l|0;i9(n,h,u,m);oe(p|0,0,12);h=o;g0(o,10,0);if((a[p]&1)==0){l=h+1|0;w=l;x=l;y=o+8|0}else{l=o+8|0;w=c[l>>2]|0;x=h+1|0;y=l}c[q>>2]=w;l=r|0;c[s>>2]=l;c[t>>2]=0;h=f|0;f=g|0;g=o|0;z=o+4|0;A=a[m]|0;m=w;w=c[h>>2]|0;L732:while(1){do{if((w|0)==0){B=0}else{if((c[w+12>>2]|0)!=(c[w+16>>2]|0)){B=w;break}if((cZ[c[(c[w>>2]|0)+36>>2]&255](w)|0)!=-1){B=w;break}c[h>>2]=0;B=0}}while(0);C=(B|0)==0;D=c[f>>2]|0;do{if((D|0)==0){E=640}else{if((c[D+12>>2]|0)!=(c[D+16>>2]|0)){if(C){F=D;G=0;break}else{H=m;I=D;J=0;break L732}}if((cZ[c[(c[D>>2]|0)+36>>2]&255](D)|0)==-1){c[f>>2]=0;E=640;break}else{L=(D|0)==0;if(C^L){F=D;G=L;break}else{H=m;I=D;J=L;break L732}}}}while(0);if((E|0)==640){E=0;if(C){H=m;I=0;J=1;break}else{F=0;G=1}}D=d[p]|0;L=(D&1|0)==0;if(((c[q>>2]|0)-m|0)==((L?D>>>1:c[z>>2]|0)|0)){if(L){M=D>>>1;N=D>>>1}else{D=c[z>>2]|0;M=D;N=D}g0(o,M<<1,0);if((a[p]&1)==0){O=10}else{O=(c[g>>2]&-2)-1|0}g0(o,O,0);if((a[p]&1)==0){P=x}else{P=c[y>>2]|0}c[q>>2]=P+N;Q=P}else{Q=m}D=B+12|0;L=c[D>>2]|0;R=B+16|0;if((L|0)==(c[R>>2]|0)){S=(cZ[c[(c[B>>2]|0)+36>>2]&255](B)|0)&255}else{S=a[L]|0}if((iL(S,v,Q,q,t,A,n,l,s,u)|0)!=0){H=Q;I=F;J=G;break}L=c[D>>2]|0;if((L|0)==(c[R>>2]|0)){R=c[(c[B>>2]|0)+40>>2]|0;cZ[R&255](B)|0;m=Q;w=B;continue}else{c[D>>2]=L+1;m=Q;w=B;continue}}w=d[n]|0;if((w&1|0)==0){T=w>>>1}else{T=c[n+4>>2]|0}do{if((T|0)!=0){w=c[s>>2]|0;if((w-r|0)>=160){break}Q=c[t>>2]|0;c[s>>2]=w+4;c[w>>2]=Q}}while(0);t=nj(H,c[q>>2]|0,j,v)|0;c[k>>2]=t;c[k+4>>2]=K;k3(n,l,c[s>>2]|0,j);do{if(C){U=0}else{if((c[B+12>>2]|0)!=(c[B+16>>2]|0)){U=B;break}if((cZ[c[(c[B>>2]|0)+36>>2]&255](B)|0)!=-1){U=B;break}c[h>>2]=0;U=0}}while(0);h=(U|0)==0;L792:do{if(J){E=681}else{do{if((c[I+12>>2]|0)==(c[I+16>>2]|0)){if((cZ[c[(c[I>>2]|0)+36>>2]&255](I)|0)!=-1){break}c[f>>2]=0;E=681;break L792}}while(0);if(!(h^(I|0)==0)){break}V=b|0;c[V>>2]=U;g_(o);g_(n);i=e;return}}while(0);do{if((E|0)==681){if(h){break}V=b|0;c[V>>2]=U;g_(o);g_(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;V=b|0;c[V>>2]=U;g_(o);g_(n);i=e;return}function iw(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];ix(a,0,j,k,f,g,h);i=b;return}function ix(e,f,g,h,j,k,l){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;f=i;i=i+72|0;m=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[m>>2];m=h;h=i;i=i+4|0;i=i+7&-8;c[h>>2]=c[m>>2];m=f|0;n=f+32|0;o=f+40|0;p=f+56|0;q=p;r=i;i=i+4|0;i=i+7&-8;s=i;i=i+160|0;t=i;i=i+4|0;i=i+7&-8;u=i;i=i+4|0;i=i+7&-8;v=c[j+4>>2]&74;if((v|0)==64){w=8}else if((v|0)==8){w=16}else if((v|0)==0){w=0}else{w=10}v=m|0;i9(o,j,v,n);oe(q|0,0,12);j=p;g0(p,10,0);if((a[q]&1)==0){m=j+1|0;x=m;y=m;z=p+8|0}else{m=p+8|0;x=c[m>>2]|0;y=j+1|0;z=m}c[r>>2]=x;m=s|0;c[t>>2]=m;c[u>>2]=0;j=g|0;g=h|0;h=p|0;A=p+4|0;B=a[n]|0;n=x;x=c[j>>2]|0;L817:while(1){do{if((x|0)==0){C=0}else{if((c[x+12>>2]|0)!=(c[x+16>>2]|0)){C=x;break}if((cZ[c[(c[x>>2]|0)+36>>2]&255](x)|0)!=-1){C=x;break}c[j>>2]=0;C=0}}while(0);D=(C|0)==0;E=c[g>>2]|0;do{if((E|0)==0){F=709}else{if((c[E+12>>2]|0)!=(c[E+16>>2]|0)){if(D){G=E;H=0;break}else{I=n;J=E;K=0;break L817}}if((cZ[c[(c[E>>2]|0)+36>>2]&255](E)|0)==-1){c[g>>2]=0;F=709;break}else{L=(E|0)==0;if(D^L){G=E;H=L;break}else{I=n;J=E;K=L;break L817}}}}while(0);if((F|0)==709){F=0;if(D){I=n;J=0;K=1;break}else{G=0;H=1}}E=d[q]|0;L=(E&1|0)==0;if(((c[r>>2]|0)-n|0)==((L?E>>>1:c[A>>2]|0)|0)){if(L){M=E>>>1;N=E>>>1}else{E=c[A>>2]|0;M=E;N=E}g0(p,M<<1,0);if((a[q]&1)==0){O=10}else{O=(c[h>>2]&-2)-1|0}g0(p,O,0);if((a[q]&1)==0){P=y}else{P=c[z>>2]|0}c[r>>2]=P+N;Q=P}else{Q=n}E=C+12|0;L=c[E>>2]|0;R=C+16|0;if((L|0)==(c[R>>2]|0)){S=(cZ[c[(c[C>>2]|0)+36>>2]&255](C)|0)&255}else{S=a[L]|0}if((iL(S,w,Q,r,u,B,o,m,t,v)|0)!=0){I=Q;J=G;K=H;break}L=c[E>>2]|0;if((L|0)==(c[R>>2]|0)){R=c[(c[C>>2]|0)+40>>2]|0;cZ[R&255](C)|0;n=Q;x=C;continue}else{c[E>>2]=L+1;n=Q;x=C;continue}}x=d[o]|0;if((x&1|0)==0){T=x>>>1}else{T=c[o+4>>2]|0}do{if((T|0)!=0){x=c[t>>2]|0;if((x-s|0)>=160){break}Q=c[u>>2]|0;c[t>>2]=x+4;c[x>>2]=Q}}while(0);b[l>>1]=ni(I,c[r>>2]|0,k,w)|0;k3(o,m,c[t>>2]|0,k);do{if(D){U=0}else{if((c[C+12>>2]|0)!=(c[C+16>>2]|0)){U=C;break}if((cZ[c[(c[C>>2]|0)+36>>2]&255](C)|0)!=-1){U=C;break}c[j>>2]=0;U=0}}while(0);j=(U|0)==0;L877:do{if(K){F=750}else{do{if((c[J+12>>2]|0)==(c[J+16>>2]|0)){if((cZ[c[(c[J>>2]|0)+36>>2]&255](J)|0)!=-1){break}c[g>>2]=0;F=750;break L877}}while(0);if(!(j^(J|0)==0)){break}V=e|0;c[V>>2]=U;g_(p);g_(o);i=f;return}}while(0);do{if((F|0)==750){if(j){break}V=e|0;c[V>>2]=U;g_(p);g_(o);i=f;return}}while(0);c[k>>2]=c[k>>2]|2;V=e|0;c[V>>2]=U;g_(p);g_(o);i=f;return}function iy(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];iz(a,0,j,k,f,g,h);i=b;return}function iz(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;e=i;i=i+72|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+32|0;n=e+40|0;o=e+56|0;p=o;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+160|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=c[h+4>>2]&74;if((u|0)==8){v=16}else if((u|0)==0){v=0}else if((u|0)==64){v=8}else{v=10}u=l|0;i9(n,h,u,m);oe(p|0,0,12);h=o;g0(o,10,0);if((a[p]&1)==0){l=h+1|0;w=l;x=l;y=o+8|0}else{l=o+8|0;w=c[l>>2]|0;x=h+1|0;y=l}c[q>>2]=w;l=r|0;c[s>>2]=l;c[t>>2]=0;h=f|0;f=g|0;g=o|0;z=o+4|0;A=a[m]|0;m=w;w=c[h>>2]|0;L902:while(1){do{if((w|0)==0){B=0}else{if((c[w+12>>2]|0)!=(c[w+16>>2]|0)){B=w;break}if((cZ[c[(c[w>>2]|0)+36>>2]&255](w)|0)!=-1){B=w;break}c[h>>2]=0;B=0}}while(0);C=(B|0)==0;D=c[f>>2]|0;do{if((D|0)==0){E=778}else{if((c[D+12>>2]|0)!=(c[D+16>>2]|0)){if(C){F=D;G=0;break}else{H=m;I=D;J=0;break L902}}if((cZ[c[(c[D>>2]|0)+36>>2]&255](D)|0)==-1){c[f>>2]=0;E=778;break}else{K=(D|0)==0;if(C^K){F=D;G=K;break}else{H=m;I=D;J=K;break L902}}}}while(0);if((E|0)==778){E=0;if(C){H=m;I=0;J=1;break}else{F=0;G=1}}D=d[p]|0;K=(D&1|0)==0;if(((c[q>>2]|0)-m|0)==((K?D>>>1:c[z>>2]|0)|0)){if(K){L=D>>>1;M=D>>>1}else{D=c[z>>2]|0;L=D;M=D}g0(o,L<<1,0);if((a[p]&1)==0){N=10}else{N=(c[g>>2]&-2)-1|0}g0(o,N,0);if((a[p]&1)==0){O=x}else{O=c[y>>2]|0}c[q>>2]=O+M;P=O}else{P=m}D=B+12|0;K=c[D>>2]|0;Q=B+16|0;if((K|0)==(c[Q>>2]|0)){R=(cZ[c[(c[B>>2]|0)+36>>2]&255](B)|0)&255}else{R=a[K]|0}if((iL(R,v,P,q,t,A,n,l,s,u)|0)!=0){H=P;I=F;J=G;break}K=c[D>>2]|0;if((K|0)==(c[Q>>2]|0)){Q=c[(c[B>>2]|0)+40>>2]|0;cZ[Q&255](B)|0;m=P;w=B;continue}else{c[D>>2]=K+1;m=P;w=B;continue}}w=d[n]|0;if((w&1|0)==0){S=w>>>1}else{S=c[n+4>>2]|0}do{if((S|0)!=0){w=c[s>>2]|0;if((w-r|0)>=160){break}P=c[t>>2]|0;c[s>>2]=w+4;c[w>>2]=P}}while(0);c[k>>2]=nh(H,c[q>>2]|0,j,v)|0;k3(n,l,c[s>>2]|0,j);do{if(C){T=0}else{if((c[B+12>>2]|0)!=(c[B+16>>2]|0)){T=B;break}if((cZ[c[(c[B>>2]|0)+36>>2]&255](B)|0)!=-1){T=B;break}c[h>>2]=0;T=0}}while(0);h=(T|0)==0;L962:do{if(J){E=819}else{do{if((c[I+12>>2]|0)==(c[I+16>>2]|0)){if((cZ[c[(c[I>>2]|0)+36>>2]&255](I)|0)!=-1){break}c[f>>2]=0;E=819;break L962}}while(0);if(!(h^(I|0)==0)){break}U=b|0;c[U>>2]=T;g_(o);g_(n);i=e;return}}while(0);do{if((E|0)==819){if(h){break}U=b|0;c[U>>2]=T;g_(o);g_(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;U=b|0;c[U>>2]=T;g_(o);g_(n);i=e;return}function iA(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];iB(a,0,j,k,f,g,h);i=b;return}function iB(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;e=i;i=i+72|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+32|0;n=e+40|0;o=e+56|0;p=o;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+160|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=c[h+4>>2]&74;if((u|0)==64){v=8}else if((u|0)==8){v=16}else if((u|0)==0){v=0}else{v=10}u=l|0;i9(n,h,u,m);oe(p|0,0,12);h=o;g0(o,10,0);if((a[p]&1)==0){l=h+1|0;w=l;x=l;y=o+8|0}else{l=o+8|0;w=c[l>>2]|0;x=h+1|0;y=l}c[q>>2]=w;l=r|0;c[s>>2]=l;c[t>>2]=0;h=f|0;f=g|0;g=o|0;z=o+4|0;A=a[m]|0;m=w;w=c[h>>2]|0;L987:while(1){do{if((w|0)==0){B=0}else{if((c[w+12>>2]|0)!=(c[w+16>>2]|0)){B=w;break}if((cZ[c[(c[w>>2]|0)+36>>2]&255](w)|0)!=-1){B=w;break}c[h>>2]=0;B=0}}while(0);C=(B|0)==0;D=c[f>>2]|0;do{if((D|0)==0){E=847}else{if((c[D+12>>2]|0)!=(c[D+16>>2]|0)){if(C){F=D;G=0;break}else{H=m;I=D;J=0;break L987}}if((cZ[c[(c[D>>2]|0)+36>>2]&255](D)|0)==-1){c[f>>2]=0;E=847;break}else{K=(D|0)==0;if(C^K){F=D;G=K;break}else{H=m;I=D;J=K;break L987}}}}while(0);if((E|0)==847){E=0;if(C){H=m;I=0;J=1;break}else{F=0;G=1}}D=d[p]|0;K=(D&1|0)==0;if(((c[q>>2]|0)-m|0)==((K?D>>>1:c[z>>2]|0)|0)){if(K){L=D>>>1;M=D>>>1}else{D=c[z>>2]|0;L=D;M=D}g0(o,L<<1,0);if((a[p]&1)==0){N=10}else{N=(c[g>>2]&-2)-1|0}g0(o,N,0);if((a[p]&1)==0){O=x}else{O=c[y>>2]|0}c[q>>2]=O+M;P=O}else{P=m}D=B+12|0;K=c[D>>2]|0;Q=B+16|0;if((K|0)==(c[Q>>2]|0)){R=(cZ[c[(c[B>>2]|0)+36>>2]&255](B)|0)&255}else{R=a[K]|0}if((iL(R,v,P,q,t,A,n,l,s,u)|0)!=0){H=P;I=F;J=G;break}K=c[D>>2]|0;if((K|0)==(c[Q>>2]|0)){Q=c[(c[B>>2]|0)+40>>2]|0;cZ[Q&255](B)|0;m=P;w=B;continue}else{c[D>>2]=K+1;m=P;w=B;continue}}w=d[n]|0;if((w&1|0)==0){S=w>>>1}else{S=c[n+4>>2]|0}do{if((S|0)!=0){w=c[s>>2]|0;if((w-r|0)>=160){break}P=c[t>>2]|0;c[s>>2]=w+4;c[w>>2]=P}}while(0);c[k>>2]=ng(H,c[q>>2]|0,j,v)|0;k3(n,l,c[s>>2]|0,j);do{if(C){T=0}else{if((c[B+12>>2]|0)!=(c[B+16>>2]|0)){T=B;break}if((cZ[c[(c[B>>2]|0)+36>>2]&255](B)|0)!=-1){T=B;break}c[h>>2]=0;T=0}}while(0);h=(T|0)==0;L1047:do{if(J){E=888}else{do{if((c[I+12>>2]|0)==(c[I+16>>2]|0)){if((cZ[c[(c[I>>2]|0)+36>>2]&255](I)|0)!=-1){break}c[f>>2]=0;E=888;break L1047}}while(0);if(!(h^(I|0)==0)){break}U=b|0;c[U>>2]=T;g_(o);g_(n);i=e;return}}while(0);do{if((E|0)==888){if(h){break}U=b|0;c[U>>2]=T;g_(o);g_(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;U=b|0;c[U>>2]=T;g_(o);g_(n);i=e;return}function iC(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];iD(a,0,j,k,f,g,h);i=b;return}function iD(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;e=i;i=i+72|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+32|0;n=e+40|0;o=e+56|0;p=o;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+160|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=c[h+4>>2]&74;if((u|0)==8){v=16}else if((u|0)==0){v=0}else if((u|0)==64){v=8}else{v=10}u=l|0;i9(n,h,u,m);oe(p|0,0,12);h=o;g0(o,10,0);if((a[p]&1)==0){l=h+1|0;w=l;x=l;y=o+8|0}else{l=o+8|0;w=c[l>>2]|0;x=h+1|0;y=l}c[q>>2]=w;l=r|0;c[s>>2]=l;c[t>>2]=0;h=f|0;f=g|0;g=o|0;z=o+4|0;A=a[m]|0;m=w;w=c[h>>2]|0;L1072:while(1){do{if((w|0)==0){B=0}else{if((c[w+12>>2]|0)!=(c[w+16>>2]|0)){B=w;break}if((cZ[c[(c[w>>2]|0)+36>>2]&255](w)|0)!=-1){B=w;break}c[h>>2]=0;B=0}}while(0);C=(B|0)==0;D=c[f>>2]|0;do{if((D|0)==0){E=916}else{if((c[D+12>>2]|0)!=(c[D+16>>2]|0)){if(C){F=D;G=0;break}else{H=m;I=D;J=0;break L1072}}if((cZ[c[(c[D>>2]|0)+36>>2]&255](D)|0)==-1){c[f>>2]=0;E=916;break}else{L=(D|0)==0;if(C^L){F=D;G=L;break}else{H=m;I=D;J=L;break L1072}}}}while(0);if((E|0)==916){E=0;if(C){H=m;I=0;J=1;break}else{F=0;G=1}}D=d[p]|0;L=(D&1|0)==0;if(((c[q>>2]|0)-m|0)==((L?D>>>1:c[z>>2]|0)|0)){if(L){M=D>>>1;N=D>>>1}else{D=c[z>>2]|0;M=D;N=D}g0(o,M<<1,0);if((a[p]&1)==0){O=10}else{O=(c[g>>2]&-2)-1|0}g0(o,O,0);if((a[p]&1)==0){P=x}else{P=c[y>>2]|0}c[q>>2]=P+N;Q=P}else{Q=m}D=B+12|0;L=c[D>>2]|0;R=B+16|0;if((L|0)==(c[R>>2]|0)){S=(cZ[c[(c[B>>2]|0)+36>>2]&255](B)|0)&255}else{S=a[L]|0}if((iL(S,v,Q,q,t,A,n,l,s,u)|0)!=0){H=Q;I=F;J=G;break}L=c[D>>2]|0;if((L|0)==(c[R>>2]|0)){R=c[(c[B>>2]|0)+40>>2]|0;cZ[R&255](B)|0;m=Q;w=B;continue}else{c[D>>2]=L+1;m=Q;w=B;continue}}w=d[n]|0;if((w&1|0)==0){T=w>>>1}else{T=c[n+4>>2]|0}do{if((T|0)!=0){w=c[s>>2]|0;if((w-r|0)>=160){break}Q=c[t>>2]|0;c[s>>2]=w+4;c[w>>2]=Q}}while(0);t=nf(H,c[q>>2]|0,j,v)|0;c[k>>2]=t;c[k+4>>2]=K;k3(n,l,c[s>>2]|0,j);do{if(C){U=0}else{if((c[B+12>>2]|0)!=(c[B+16>>2]|0)){U=B;break}if((cZ[c[(c[B>>2]|0)+36>>2]&255](B)|0)!=-1){U=B;break}c[h>>2]=0;U=0}}while(0);h=(U|0)==0;L1132:do{if(J){E=957}else{do{if((c[I+12>>2]|0)==(c[I+16>>2]|0)){if((cZ[c[(c[I>>2]|0)+36>>2]&255](I)|0)!=-1){break}c[f>>2]=0;E=957;break L1132}}while(0);if(!(h^(I|0)==0)){break}V=b|0;c[V>>2]=U;g_(o);g_(n);i=e;return}}while(0);do{if((E|0)==957){if(h){break}V=b|0;c[V>>2]=U;g_(o);g_(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;V=b|0;c[V>>2]=U;g_(o);g_(n);i=e;return}function iE(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];iF(a,0,j,k,f,g,h);i=b;return}function iF(b,e,f,h,j,k,l){b=b|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;e=i;i=i+80|0;m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=h;h=i;i=i+4|0;i=i+7&-8;c[h>>2]=c[m>>2];m=e+32|0;n=e+40|0;o=e+48|0;p=e+64|0;q=p;r=i;i=i+4|0;i=i+7&-8;s=i;i=i+160|0;t=i;i=i+4|0;i=i+7&-8;u=i;i=i+4|0;i=i+7&-8;v=i;i=i+1|0;i=i+7&-8;w=i;i=i+1|0;i=i+7&-8;x=e|0;ja(o,j,x,m,n);oe(q|0,0,12);j=p;g0(p,10,0);if((a[q]&1)==0){y=j+1|0;z=y;A=y;B=p+8|0}else{y=p+8|0;z=c[y>>2]|0;A=j+1|0;B=y}c[r>>2]=z;y=s|0;c[t>>2]=y;c[u>>2]=0;a[v]=1;a[w]=69;j=f|0;f=h|0;h=p|0;C=p+4|0;D=a[m]|0;m=a[n]|0;n=z;z=c[j>>2]|0;L1152:while(1){do{if((z|0)==0){E=0}else{if((c[z+12>>2]|0)!=(c[z+16>>2]|0)){E=z;break}if((cZ[c[(c[z>>2]|0)+36>>2]&255](z)|0)!=-1){E=z;break}c[j>>2]=0;E=0}}while(0);F=(E|0)==0;G=c[f>>2]|0;do{if((G|0)==0){H=981}else{if((c[G+12>>2]|0)!=(c[G+16>>2]|0)){if(F){I=G;J=0;break}else{K=n;L=G;M=0;break L1152}}if((cZ[c[(c[G>>2]|0)+36>>2]&255](G)|0)==-1){c[f>>2]=0;H=981;break}else{N=(G|0)==0;if(F^N){I=G;J=N;break}else{K=n;L=G;M=N;break L1152}}}}while(0);if((H|0)==981){H=0;if(F){K=n;L=0;M=1;break}else{I=0;J=1}}G=d[q]|0;N=(G&1|0)==0;if(((c[r>>2]|0)-n|0)==((N?G>>>1:c[C>>2]|0)|0)){if(N){O=G>>>1;P=G>>>1}else{G=c[C>>2]|0;O=G;P=G}g0(p,O<<1,0);if((a[q]&1)==0){Q=10}else{Q=(c[h>>2]&-2)-1|0}g0(p,Q,0);if((a[q]&1)==0){R=A}else{R=c[B>>2]|0}c[r>>2]=R+P;S=R}else{S=n}G=E+12|0;N=c[G>>2]|0;T=E+16|0;if((N|0)==(c[T>>2]|0)){U=(cZ[c[(c[E>>2]|0)+36>>2]&255](E)|0)&255}else{U=a[N]|0}if((jb(U,v,w,S,r,D,m,o,y,t,u,x)|0)!=0){K=S;L=I;M=J;break}N=c[G>>2]|0;if((N|0)==(c[T>>2]|0)){T=c[(c[E>>2]|0)+40>>2]|0;cZ[T&255](E)|0;n=S;z=E;continue}else{c[G>>2]=N+1;n=S;z=E;continue}}z=d[o]|0;if((z&1|0)==0){V=z>>>1}else{V=c[o+4>>2]|0}do{if((V|0)!=0){if((a[v]&1)==0){break}z=c[t>>2]|0;if((z-s|0)>=160){break}S=c[u>>2]|0;c[t>>2]=z+4;c[z>>2]=S}}while(0);g[l>>2]=+ne(K,c[r>>2]|0,k);k3(o,y,c[t>>2]|0,k);do{if(F){W=0}else{if((c[E+12>>2]|0)!=(c[E+16>>2]|0)){W=E;break}if((cZ[c[(c[E>>2]|0)+36>>2]&255](E)|0)!=-1){W=E;break}c[j>>2]=0;W=0}}while(0);j=(W|0)==0;L1213:do{if(M){H=1023}else{do{if((c[L+12>>2]|0)==(c[L+16>>2]|0)){if((cZ[c[(c[L>>2]|0)+36>>2]&255](L)|0)!=-1){break}c[f>>2]=0;H=1023;break L1213}}while(0);if(!(j^(L|0)==0)){break}X=b|0;c[X>>2]=W;g_(p);g_(o);i=e;return}}while(0);do{if((H|0)==1023){if(j){break}X=b|0;c[X>>2]=W;g_(p);g_(o);i=e;return}}while(0);c[k>>2]=c[k>>2]|2;X=b|0;c[X>>2]=W;g_(p);g_(o);i=e;return}function iG(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];iH(a,0,j,k,f,g,h);i=b;return}function iH(b,e,f,g,j,k,l){b=b|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;e=i;i=i+80|0;m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[m>>2];m=e+32|0;n=e+40|0;o=e+48|0;p=e+64|0;q=p;r=i;i=i+4|0;i=i+7&-8;s=i;i=i+160|0;t=i;i=i+4|0;i=i+7&-8;u=i;i=i+4|0;i=i+7&-8;v=i;i=i+1|0;i=i+7&-8;w=i;i=i+1|0;i=i+7&-8;x=e|0;ja(o,j,x,m,n);oe(q|0,0,12);j=p;g0(p,10,0);if((a[q]&1)==0){y=j+1|0;z=y;A=y;B=p+8|0}else{y=p+8|0;z=c[y>>2]|0;A=j+1|0;B=y}c[r>>2]=z;y=s|0;c[t>>2]=y;c[u>>2]=0;a[v]=1;a[w]=69;j=f|0;f=g|0;g=p|0;C=p+4|0;D=a[m]|0;m=a[n]|0;n=z;z=c[j>>2]|0;L1233:while(1){do{if((z|0)==0){E=0}else{if((c[z+12>>2]|0)!=(c[z+16>>2]|0)){E=z;break}if((cZ[c[(c[z>>2]|0)+36>>2]&255](z)|0)!=-1){E=z;break}c[j>>2]=0;E=0}}while(0);F=(E|0)==0;G=c[f>>2]|0;do{if((G|0)==0){H=1047}else{if((c[G+12>>2]|0)!=(c[G+16>>2]|0)){if(F){I=G;J=0;break}else{K=n;L=G;M=0;break L1233}}if((cZ[c[(c[G>>2]|0)+36>>2]&255](G)|0)==-1){c[f>>2]=0;H=1047;break}else{N=(G|0)==0;if(F^N){I=G;J=N;break}else{K=n;L=G;M=N;break L1233}}}}while(0);if((H|0)==1047){H=0;if(F){K=n;L=0;M=1;break}else{I=0;J=1}}G=d[q]|0;N=(G&1|0)==0;if(((c[r>>2]|0)-n|0)==((N?G>>>1:c[C>>2]|0)|0)){if(N){O=G>>>1;P=G>>>1}else{G=c[C>>2]|0;O=G;P=G}g0(p,O<<1,0);if((a[q]&1)==0){Q=10}else{Q=(c[g>>2]&-2)-1|0}g0(p,Q,0);if((a[q]&1)==0){R=A}else{R=c[B>>2]|0}c[r>>2]=R+P;S=R}else{S=n}G=E+12|0;N=c[G>>2]|0;T=E+16|0;if((N|0)==(c[T>>2]|0)){U=(cZ[c[(c[E>>2]|0)+36>>2]&255](E)|0)&255}else{U=a[N]|0}if((jb(U,v,w,S,r,D,m,o,y,t,u,x)|0)!=0){K=S;L=I;M=J;break}N=c[G>>2]|0;if((N|0)==(c[T>>2]|0)){T=c[(c[E>>2]|0)+40>>2]|0;cZ[T&255](E)|0;n=S;z=E;continue}else{c[G>>2]=N+1;n=S;z=E;continue}}z=d[o]|0;if((z&1|0)==0){V=z>>>1}else{V=c[o+4>>2]|0}do{if((V|0)!=0){if((a[v]&1)==0){break}z=c[t>>2]|0;if((z-s|0)>=160){break}S=c[u>>2]|0;c[t>>2]=z+4;c[z>>2]=S}}while(0);h[l>>3]=+nd(K,c[r>>2]|0,k);k3(o,y,c[t>>2]|0,k);do{if(F){W=0}else{if((c[E+12>>2]|0)!=(c[E+16>>2]|0)){W=E;break}if((cZ[c[(c[E>>2]|0)+36>>2]&255](E)|0)!=-1){W=E;break}c[j>>2]=0;W=0}}while(0);j=(W|0)==0;L1294:do{if(M){H=1089}else{do{if((c[L+12>>2]|0)==(c[L+16>>2]|0)){if((cZ[c[(c[L>>2]|0)+36>>2]&255](L)|0)!=-1){break}c[f>>2]=0;H=1089;break L1294}}while(0);if(!(j^(L|0)==0)){break}X=b|0;c[X>>2]=W;g_(p);g_(o);i=e;return}}while(0);do{if((H|0)==1089){if(j){break}X=b|0;c[X>>2]=W;g_(p);g_(o);i=e;return}}while(0);c[k>>2]=c[k>>2]|2;X=b|0;c[X>>2]=W;g_(p);g_(o);i=e;return}function iI(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];iJ(a,0,j,k,f,g,h);i=b;return}function iJ(b,e,f,g,j,k,l){b=b|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;e=i;i=i+80|0;m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[m>>2];m=e+32|0;n=e+40|0;o=e+48|0;p=e+64|0;q=p;r=i;i=i+4|0;i=i+7&-8;s=i;i=i+160|0;t=i;i=i+4|0;i=i+7&-8;u=i;i=i+4|0;i=i+7&-8;v=i;i=i+1|0;i=i+7&-8;w=i;i=i+1|0;i=i+7&-8;x=e|0;ja(o,j,x,m,n);oe(q|0,0,12);j=p;g0(p,10,0);if((a[q]&1)==0){y=j+1|0;z=y;A=y;B=p+8|0}else{y=p+8|0;z=c[y>>2]|0;A=j+1|0;B=y}c[r>>2]=z;y=s|0;c[t>>2]=y;c[u>>2]=0;a[v]=1;a[w]=69;j=f|0;f=g|0;g=p|0;C=p+4|0;D=a[m]|0;m=a[n]|0;n=z;z=c[j>>2]|0;L1314:while(1){do{if((z|0)==0){E=0}else{if((c[z+12>>2]|0)!=(c[z+16>>2]|0)){E=z;break}if((cZ[c[(c[z>>2]|0)+36>>2]&255](z)|0)!=-1){E=z;break}c[j>>2]=0;E=0}}while(0);F=(E|0)==0;G=c[f>>2]|0;do{if((G|0)==0){H=1113}else{if((c[G+12>>2]|0)!=(c[G+16>>2]|0)){if(F){I=G;J=0;break}else{K=n;L=G;M=0;break L1314}}if((cZ[c[(c[G>>2]|0)+36>>2]&255](G)|0)==-1){c[f>>2]=0;H=1113;break}else{N=(G|0)==0;if(F^N){I=G;J=N;break}else{K=n;L=G;M=N;break L1314}}}}while(0);if((H|0)==1113){H=0;if(F){K=n;L=0;M=1;break}else{I=0;J=1}}G=d[q]|0;N=(G&1|0)==0;if(((c[r>>2]|0)-n|0)==((N?G>>>1:c[C>>2]|0)|0)){if(N){O=G>>>1;P=G>>>1}else{G=c[C>>2]|0;O=G;P=G}g0(p,O<<1,0);if((a[q]&1)==0){Q=10}else{Q=(c[g>>2]&-2)-1|0}g0(p,Q,0);if((a[q]&1)==0){R=A}else{R=c[B>>2]|0}c[r>>2]=R+P;S=R}else{S=n}G=E+12|0;N=c[G>>2]|0;T=E+16|0;if((N|0)==(c[T>>2]|0)){U=(cZ[c[(c[E>>2]|0)+36>>2]&255](E)|0)&255}else{U=a[N]|0}if((jb(U,v,w,S,r,D,m,o,y,t,u,x)|0)!=0){K=S;L=I;M=J;break}N=c[G>>2]|0;if((N|0)==(c[T>>2]|0)){T=c[(c[E>>2]|0)+40>>2]|0;cZ[T&255](E)|0;n=S;z=E;continue}else{c[G>>2]=N+1;n=S;z=E;continue}}z=d[o]|0;if((z&1|0)==0){V=z>>>1}else{V=c[o+4>>2]|0}do{if((V|0)!=0){if((a[v]&1)==0){break}z=c[t>>2]|0;if((z-s|0)>=160){break}S=c[u>>2]|0;c[t>>2]=z+4;c[z>>2]=S}}while(0);h[l>>3]=+nc(K,c[r>>2]|0,k);k3(o,y,c[t>>2]|0,k);do{if(F){W=0}else{if((c[E+12>>2]|0)!=(c[E+16>>2]|0)){W=E;break}if((cZ[c[(c[E>>2]|0)+36>>2]&255](E)|0)!=-1){W=E;break}c[j>>2]=0;W=0}}while(0);j=(W|0)==0;L1375:do{if(M){H=1155}else{do{if((c[L+12>>2]|0)==(c[L+16>>2]|0)){if((cZ[c[(c[L>>2]|0)+36>>2]&255](L)|0)!=-1){break}c[f>>2]=0;H=1155;break L1375}}while(0);if(!(j^(L|0)==0)){break}X=b|0;c[X>>2]=W;g_(p);g_(o);i=e;return}}while(0);do{if((H|0)==1155){if(j){break}X=b|0;c[X>>2]=W;g_(p);g_(o);i=e;return}}while(0);c[k>>2]=c[k>>2]|2;X=b|0;c[X>>2]=W;g_(p);g_(o);i=e;return}function iK(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;e=i;i=i+64|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+16|0;n=e+48|0;o=i;i=i+4|0;i=i+7&-8;p=i;i=i+12|0;i=i+7&-8;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+160|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;oe(n|0,0,12);u=p;hi(o,h);h=o|0;o=c[h>>2]|0;if((c[4534]|0)!=-1){c[l>>2]=18136;c[l+4>>2]=16;c[l+8>>2]=0;gV(18136,l,108)}l=(c[4535]|0)-1|0;v=c[o+8>>2]|0;do{if((c[o+12>>2]|0)-v>>2>>>0>l>>>0){w=c[v+(l<<2)>>2]|0;if((w|0)==0){break}x=w;y=m|0;z=c[(c[w>>2]|0)+32>>2]|0;cX[z&15](x,13648,13674,y)|0;x=c[h>>2]|0;gA(x)|0;oe(u|0,0,12);x=p;g0(p,10,0);if((a[u]&1)==0){z=x+1|0;A=z;B=z;C=p+8|0}else{z=p+8|0;A=c[z>>2]|0;B=x+1|0;C=z}c[q>>2]=A;z=r|0;c[s>>2]=z;c[t>>2]=0;x=f|0;w=g|0;D=p|0;E=p+4|0;F=A;G=c[x>>2]|0;L1402:while(1){do{if((G|0)==0){H=0}else{if((c[G+12>>2]|0)!=(c[G+16>>2]|0)){H=G;break}if((cZ[c[(c[G>>2]|0)+36>>2]&255](G)|0)!=-1){H=G;break}c[x>>2]=0;H=0}}while(0);I=(H|0)==0;J=c[w>>2]|0;do{if((J|0)==0){K=1186}else{if((c[J+12>>2]|0)!=(c[J+16>>2]|0)){if(I){break}else{L=F;break L1402}}if((cZ[c[(c[J>>2]|0)+36>>2]&255](J)|0)==-1){c[w>>2]=0;K=1186;break}else{if(I^(J|0)==0){break}else{L=F;break L1402}}}}while(0);if((K|0)==1186){K=0;if(I){L=F;break}}J=d[u]|0;M=(J&1|0)==0;if(((c[q>>2]|0)-F|0)==((M?J>>>1:c[E>>2]|0)|0)){if(M){N=J>>>1;O=J>>>1}else{J=c[E>>2]|0;N=J;O=J}g0(p,N<<1,0);if((a[u]&1)==0){P=10}else{P=(c[D>>2]&-2)-1|0}g0(p,P,0);if((a[u]&1)==0){Q=B}else{Q=c[C>>2]|0}c[q>>2]=Q+O;R=Q}else{R=F}J=H+12|0;M=c[J>>2]|0;S=H+16|0;if((M|0)==(c[S>>2]|0)){T=(cZ[c[(c[H>>2]|0)+36>>2]&255](H)|0)&255}else{T=a[M]|0}if((iL(T,16,R,q,t,0,n,z,s,y)|0)!=0){L=R;break}M=c[J>>2]|0;if((M|0)==(c[S>>2]|0)){S=c[(c[H>>2]|0)+40>>2]|0;cZ[S&255](H)|0;F=R;G=H;continue}else{c[J>>2]=M+1;F=R;G=H;continue}}a[L+3|0]=0;do{if((a[19040]|0)==0){if((bx(19040)|0)==0){break}c[4176]=a0(2147483647,3232,0)|0}}while(0);G=iM(L,c[4176]|0,2960,(F=i,i=i+8|0,c[F>>2]=k,F)|0)|0;i=F;if((G|0)!=1){c[j>>2]=4}G=c[x>>2]|0;do{if((G|0)==0){U=0}else{if((c[G+12>>2]|0)!=(c[G+16>>2]|0)){U=G;break}if((cZ[c[(c[G>>2]|0)+36>>2]&255](G)|0)!=-1){U=G;break}c[x>>2]=0;U=0}}while(0);x=(U|0)==0;G=c[w>>2]|0;do{if((G|0)==0){K=1231}else{if((c[G+12>>2]|0)!=(c[G+16>>2]|0)){if(!x){break}V=b|0;c[V>>2]=U;g_(p);g_(n);i=e;return}if((cZ[c[(c[G>>2]|0)+36>>2]&255](G)|0)==-1){c[w>>2]=0;K=1231;break}if(!(x^(G|0)==0)){break}V=b|0;c[V>>2]=U;g_(p);g_(n);i=e;return}}while(0);do{if((K|0)==1231){if(x){break}V=b|0;c[V>>2]=U;g_(p);g_(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;V=b|0;c[V>>2]=U;g_(p);g_(n);i=e;return}}while(0);e=cy(4)|0;nG(e);bK(e|0,11832,162)}function iL(b,e,f,g,h,i,j,k,l,m){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0;n=c[g>>2]|0;o=(n|0)==(f|0);do{if(o){p=(a[m+24|0]|0)==b<<24>>24;if(!p){if((a[m+25|0]|0)!=b<<24>>24){break}}c[g>>2]=f+1;a[f]=p?43:45;c[h>>2]=0;q=0;return q|0}}while(0);p=d[j]|0;if((p&1|0)==0){r=p>>>1}else{r=c[j+4>>2]|0}if((r|0)!=0&b<<24>>24==i<<24>>24){i=c[l>>2]|0;if((i-k|0)>=160){q=0;return q|0}k=c[h>>2]|0;c[l>>2]=i+4;c[i>>2]=k;c[h>>2]=0;q=0;return q|0}k=m+26|0;i=m;while(1){if((i|0)==(k|0)){s=k;break}if((a[i]|0)==b<<24>>24){s=i;break}else{i=i+1|0}}i=s-m|0;if((i|0)>23){q=-1;return q|0}do{if((e|0)==8|(e|0)==10){if((i|0)<(e|0)){break}else{q=-1}return q|0}else if((e|0)==16){if((i|0)<22){break}if(o){q=-1;return q|0}if((n-f|0)>=3){q=-1;return q|0}if((a[n-1|0]|0)!=48){q=-1;return q|0}c[h>>2]=0;m=a[13648+i|0]|0;s=c[g>>2]|0;c[g>>2]=s+1;a[s]=m;q=0;return q|0}}while(0);f=a[13648+i|0]|0;c[g>>2]=n+1;a[n]=f;c[h>>2]=(c[h>>2]|0)+1;q=0;return q|0}function iM(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+16|0;g=f|0;h=g;c[h>>2]=e;c[h+4>>2]=0;h=ch(b|0)|0;b=ba(a|0,d|0,g|0)|0;if((h|0)==0){i=f;return b|0}ch(h|0)|0;i=f;return b|0}function iN(a){a=a|0;gy(a|0);n6(a);return}function iO(a){a=a|0;gy(a|0);return}function iP(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;k=i;i=i+112|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=k|0;m=k+16|0;n=k+32|0;o=k+40|0;p=k+48|0;q=k+56|0;r=k+64|0;s=k+72|0;t=k+80|0;u=k+104|0;if((c[g+4>>2]&1|0)==0){c[n>>2]=-1;v=c[(c[d>>2]|0)+16>>2]|0;w=e|0;c[p>>2]=c[w>>2];c[q>>2]=c[f>>2];c$[v&127](o,d,p,q,g,h,n);q=c[o>>2]|0;c[w>>2]=q;w=c[n>>2]|0;if((w|0)==1){a[j]=1}else if((w|0)==0){a[j]=0}else{a[j]=1;c[h>>2]=4}c[b>>2]=q;i=k;return}hi(r,g);q=r|0;r=c[q>>2]|0;if((c[4532]|0)!=-1){c[m>>2]=18128;c[m+4>>2]=16;c[m+8>>2]=0;gV(18128,m,108)}m=(c[4533]|0)-1|0;w=c[r+8>>2]|0;do{if((c[r+12>>2]|0)-w>>2>>>0>m>>>0){n=c[w+(m<<2)>>2]|0;if((n|0)==0){break}o=n;n=c[q>>2]|0;gA(n)|0;hi(s,g);n=s|0;p=c[n>>2]|0;if((c[4436]|0)!=-1){c[l>>2]=17744;c[l+4>>2]=16;c[l+8>>2]=0;gV(17744,l,108)}d=(c[4437]|0)-1|0;v=c[p+8>>2]|0;do{if((c[p+12>>2]|0)-v>>2>>>0>d>>>0){x=c[v+(d<<2)>>2]|0;if((x|0)==0){break}y=x;z=c[n>>2]|0;gA(z)|0;z=t|0;A=x;cV[c[(c[A>>2]|0)+24>>2]&255](z,y);cV[c[(c[A>>2]|0)+28>>2]&255](t+12|0,y);c[u>>2]=c[f>>2];a[j]=(iQ(e,u,z,t+24|0,o,h,1)|0)==(z|0)|0;c[b>>2]=c[e>>2];g9(t+12|0);g9(t|0);i=k;return}}while(0);o=cy(4)|0;nG(o);bK(o|0,11832,162)}}while(0);k=cy(4)|0;nG(k);bK(k|0,11832,162)}function iQ(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0;l=i;i=i+104|0;m=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[m>>2];m=(g-f|0)/12|0;n=l|0;do{if(m>>>0>100>>>0){o=n$(m)|0;if((o|0)!=0){p=o;q=o;break}ob();p=0;q=0}else{p=n;q=0}}while(0);n=(f|0)==(g|0);if(n){r=m;s=0}else{o=m;m=0;t=p;u=f;while(1){v=d[u]|0;if((v&1|0)==0){w=v>>>1}else{w=c[u+4>>2]|0}if((w|0)==0){a[t]=2;x=m+1|0;y=o-1|0}else{a[t]=1;x=m;y=o}v=u+12|0;if((v|0)==(g|0)){r=y;s=x;break}else{o=y;m=x;t=t+1|0;u=v}}}u=b|0;b=e|0;e=h;t=0;x=s;s=r;while(1){r=c[u>>2]|0;do{if((r|0)==0){z=0}else{m=c[r+12>>2]|0;if((m|0)==(c[r+16>>2]|0)){A=cZ[c[(c[r>>2]|0)+36>>2]&255](r)|0}else{A=c[m>>2]|0}if((A|0)==-1){c[u>>2]=0;z=0;break}else{z=c[u>>2]|0;break}}}while(0);r=(z|0)==0;m=c[b>>2]|0;if((m|0)==0){B=z;C=0}else{y=c[m+12>>2]|0;if((y|0)==(c[m+16>>2]|0)){D=cZ[c[(c[m>>2]|0)+36>>2]&255](m)|0}else{D=c[y>>2]|0}if((D|0)==-1){c[b>>2]=0;E=0}else{E=m}B=c[u>>2]|0;C=E}F=(C|0)==0;if(!((r^F)&(s|0)!=0)){break}r=c[B+12>>2]|0;if((r|0)==(c[B+16>>2]|0)){G=cZ[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{G=c[r>>2]|0}if(k){H=G}else{H=c6[c[(c[e>>2]|0)+28>>2]&63](h,G)|0}do{if(n){I=x;J=s}else{r=t+1|0;L1609:do{if(k){m=s;y=x;o=p;w=0;v=f;while(1){do{if((a[o]|0)==1){K=v;if((a[K]&1)==0){L=v+4|0}else{L=c[v+8>>2]|0}if((H|0)!=(c[L+(t<<2)>>2]|0)){a[o]=0;M=w;N=y;O=m-1|0;break}P=d[K]|0;if((P&1|0)==0){Q=P>>>1}else{Q=c[v+4>>2]|0}if((Q|0)!=(r|0)){M=1;N=y;O=m;break}a[o]=2;M=1;N=y+1|0;O=m-1|0}else{M=w;N=y;O=m}}while(0);P=v+12|0;if((P|0)==(g|0)){R=O;S=N;T=M;break L1609}m=O;y=N;o=o+1|0;w=M;v=P}}else{v=s;w=x;o=p;y=0;m=f;while(1){do{if((a[o]|0)==1){P=m;if((a[P]&1)==0){U=m+4|0}else{U=c[m+8>>2]|0}if((H|0)!=(c6[c[(c[e>>2]|0)+28>>2]&63](h,c[U+(t<<2)>>2]|0)|0)){a[o]=0;V=y;W=w;X=v-1|0;break}K=d[P]|0;if((K&1|0)==0){Y=K>>>1}else{Y=c[m+4>>2]|0}if((Y|0)!=(r|0)){V=1;W=w;X=v;break}a[o]=2;V=1;W=w+1|0;X=v-1|0}else{V=y;W=w;X=v}}while(0);K=m+12|0;if((K|0)==(g|0)){R=X;S=W;T=V;break L1609}v=X;w=W;o=o+1|0;y=V;m=K}}}while(0);if(!T){I=S;J=R;break}r=c[u>>2]|0;m=r+12|0;y=c[m>>2]|0;if((y|0)==(c[r+16>>2]|0)){o=c[(c[r>>2]|0)+40>>2]|0;cZ[o&255](r)|0}else{c[m>>2]=y+4}if((S+R|0)>>>0<2>>>0|n){I=S;J=R;break}y=t+1|0;m=S;r=p;o=f;while(1){do{if((a[r]|0)==2){w=d[o]|0;if((w&1|0)==0){Z=w>>>1}else{Z=c[o+4>>2]|0}if((Z|0)==(y|0)){_=m;break}a[r]=0;_=m-1|0}else{_=m}}while(0);w=o+12|0;if((w|0)==(g|0)){I=_;J=R;break}else{m=_;r=r+1|0;o=w}}}}while(0);t=t+1|0;x=I;s=J}do{if((B|0)==0){$=1}else{J=c[B+12>>2]|0;if((J|0)==(c[B+16>>2]|0)){aa=cZ[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{aa=c[J>>2]|0}if((aa|0)==-1){c[u>>2]=0;$=1;break}else{$=(c[u>>2]|0)==0;break}}}while(0);do{if(F){ab=1406}else{u=c[C+12>>2]|0;if((u|0)==(c[C+16>>2]|0)){ac=cZ[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{ac=c[u>>2]|0}if((ac|0)==-1){c[b>>2]=0;ab=1406;break}else{if($^(C|0)==0){break}else{ab=1408;break}}}}while(0);if((ab|0)==1406){if($){ab=1408}}if((ab|0)==1408){c[j>>2]=c[j>>2]|2}L1690:do{if(n){ab=1413}else{$=f;C=p;while(1){if((a[C]|0)==2){ad=$;break L1690}b=$+12|0;if((b|0)==(g|0)){ab=1413;break L1690}$=b;C=C+1|0}}}while(0);if((ab|0)==1413){c[j>>2]=c[j>>2]|4;ad=g}if((q|0)==0){i=l;return ad|0}n0(q);i=l;return ad|0}function iR(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];iS(a,0,j,k,f,g,h);i=b;return}function iS(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;e=i;i=i+144|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+104|0;n=e+112|0;o=e+128|0;p=o;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+160|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=c[h+4>>2]&74;if((u|0)==8){v=16}else if((u|0)==0){v=0}else if((u|0)==64){v=8}else{v=10}u=l|0;jc(n,h,u,m);oe(p|0,0,12);h=o;g0(o,10,0);if((a[p]&1)==0){l=h+1|0;w=l;x=l;y=o+8|0}else{l=o+8|0;w=c[l>>2]|0;x=h+1|0;y=l}c[q>>2]=w;l=r|0;c[s>>2]=l;c[t>>2]=0;h=f|0;f=g|0;g=o|0;z=o+4|0;A=c[m>>2]|0;m=w;w=c[h>>2]|0;L1714:while(1){do{if((w|0)==0){B=0}else{C=c[w+12>>2]|0;if((C|0)==(c[w+16>>2]|0)){D=cZ[c[(c[w>>2]|0)+36>>2]&255](w)|0}else{D=c[C>>2]|0}if((D|0)!=-1){B=w;break}c[h>>2]=0;B=0}}while(0);E=(B|0)==0;C=c[f>>2]|0;do{if((C|0)==0){F=1442}else{G=c[C+12>>2]|0;if((G|0)==(c[C+16>>2]|0)){H=cZ[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{H=c[G>>2]|0}if((H|0)==-1){c[f>>2]=0;F=1442;break}else{G=(C|0)==0;if(E^G){I=C;J=G;break}else{K=m;L=C;M=G;break L1714}}}}while(0);if((F|0)==1442){F=0;if(E){K=m;L=0;M=1;break}else{I=0;J=1}}C=d[p]|0;G=(C&1|0)==0;if(((c[q>>2]|0)-m|0)==((G?C>>>1:c[z>>2]|0)|0)){if(G){N=C>>>1;O=C>>>1}else{C=c[z>>2]|0;N=C;O=C}g0(o,N<<1,0);if((a[p]&1)==0){P=10}else{P=(c[g>>2]&-2)-1|0}g0(o,P,0);if((a[p]&1)==0){Q=x}else{Q=c[y>>2]|0}c[q>>2]=Q+O;R=Q}else{R=m}C=B+12|0;G=c[C>>2]|0;S=B+16|0;if((G|0)==(c[S>>2]|0)){T=cZ[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{T=c[G>>2]|0}if((i8(T,v,R,q,t,A,n,l,s,u)|0)!=0){K=R;L=I;M=J;break}G=c[C>>2]|0;if((G|0)==(c[S>>2]|0)){S=c[(c[B>>2]|0)+40>>2]|0;cZ[S&255](B)|0;m=R;w=B;continue}else{c[C>>2]=G+4;m=R;w=B;continue}}w=d[n]|0;if((w&1|0)==0){U=w>>>1}else{U=c[n+4>>2]|0}do{if((U|0)!=0){w=c[s>>2]|0;if((w-r|0)>=160){break}R=c[t>>2]|0;c[s>>2]=w+4;c[w>>2]=R}}while(0);c[k>>2]=nk(K,c[q>>2]|0,j,v)|0;k3(n,l,c[s>>2]|0,j);do{if(E){V=0}else{s=c[B+12>>2]|0;if((s|0)==(c[B+16>>2]|0)){W=cZ[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{W=c[s>>2]|0}if((W|0)!=-1){V=B;break}c[h>>2]=0;V=0}}while(0);h=(V|0)==0;do{if(M){F=1484}else{B=c[L+12>>2]|0;if((B|0)==(c[L+16>>2]|0)){X=cZ[c[(c[L>>2]|0)+36>>2]&255](L)|0}else{X=c[B>>2]|0}if((X|0)==-1){c[f>>2]=0;F=1484;break}if(!(h^(L|0)==0)){break}Y=b|0;c[Y>>2]=V;g_(o);g_(n);i=e;return}}while(0);do{if((F|0)==1484){if(h){break}Y=b|0;c[Y>>2]=V;g_(o);g_(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;Y=b|0;c[Y>>2]=V;g_(o);g_(n);i=e;return}function iT(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];iU(a,0,j,k,f,g,h);i=b;return}function iU(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0;e=i;i=i+144|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+104|0;n=e+112|0;o=e+128|0;p=o;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+160|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=c[h+4>>2]&74;if((u|0)==64){v=8}else if((u|0)==8){v=16}else if((u|0)==0){v=0}else{v=10}u=l|0;jc(n,h,u,m);oe(p|0,0,12);h=o;g0(o,10,0);if((a[p]&1)==0){l=h+1|0;w=l;x=l;y=o+8|0}else{l=o+8|0;w=c[l>>2]|0;x=h+1|0;y=l}c[q>>2]=w;l=r|0;c[s>>2]=l;c[t>>2]=0;h=f|0;f=g|0;g=o|0;z=o+4|0;A=c[m>>2]|0;m=w;w=c[h>>2]|0;L1804:while(1){do{if((w|0)==0){B=0}else{C=c[w+12>>2]|0;if((C|0)==(c[w+16>>2]|0)){D=cZ[c[(c[w>>2]|0)+36>>2]&255](w)|0}else{D=c[C>>2]|0}if((D|0)!=-1){B=w;break}c[h>>2]=0;B=0}}while(0);E=(B|0)==0;C=c[f>>2]|0;do{if((C|0)==0){F=1513}else{G=c[C+12>>2]|0;if((G|0)==(c[C+16>>2]|0)){H=cZ[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{H=c[G>>2]|0}if((H|0)==-1){c[f>>2]=0;F=1513;break}else{G=(C|0)==0;if(E^G){I=C;J=G;break}else{L=m;M=C;N=G;break L1804}}}}while(0);if((F|0)==1513){F=0;if(E){L=m;M=0;N=1;break}else{I=0;J=1}}C=d[p]|0;G=(C&1|0)==0;if(((c[q>>2]|0)-m|0)==((G?C>>>1:c[z>>2]|0)|0)){if(G){O=C>>>1;P=C>>>1}else{C=c[z>>2]|0;O=C;P=C}g0(o,O<<1,0);if((a[p]&1)==0){Q=10}else{Q=(c[g>>2]&-2)-1|0}g0(o,Q,0);if((a[p]&1)==0){R=x}else{R=c[y>>2]|0}c[q>>2]=R+P;S=R}else{S=m}C=B+12|0;G=c[C>>2]|0;T=B+16|0;if((G|0)==(c[T>>2]|0)){U=cZ[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{U=c[G>>2]|0}if((i8(U,v,S,q,t,A,n,l,s,u)|0)!=0){L=S;M=I;N=J;break}G=c[C>>2]|0;if((G|0)==(c[T>>2]|0)){T=c[(c[B>>2]|0)+40>>2]|0;cZ[T&255](B)|0;m=S;w=B;continue}else{c[C>>2]=G+4;m=S;w=B;continue}}w=d[n]|0;if((w&1|0)==0){V=w>>>1}else{V=c[n+4>>2]|0}do{if((V|0)!=0){w=c[s>>2]|0;if((w-r|0)>=160){break}S=c[t>>2]|0;c[s>>2]=w+4;c[w>>2]=S}}while(0);t=nj(L,c[q>>2]|0,j,v)|0;c[k>>2]=t;c[k+4>>2]=K;k3(n,l,c[s>>2]|0,j);do{if(E){W=0}else{s=c[B+12>>2]|0;if((s|0)==(c[B+16>>2]|0)){X=cZ[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{X=c[s>>2]|0}if((X|0)!=-1){W=B;break}c[h>>2]=0;W=0}}while(0);h=(W|0)==0;do{if(N){F=1555}else{B=c[M+12>>2]|0;if((B|0)==(c[M+16>>2]|0)){Y=cZ[c[(c[M>>2]|0)+36>>2]&255](M)|0}else{Y=c[B>>2]|0}if((Y|0)==-1){c[f>>2]=0;F=1555;break}if(!(h^(M|0)==0)){break}Z=b|0;c[Z>>2]=W;g_(o);g_(n);i=e;return}}while(0);do{if((F|0)==1555){if(h){break}Z=b|0;c[Z>>2]=W;g_(o);g_(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;Z=b|0;c[Z>>2]=W;g_(o);g_(n);i=e;return}function iV(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];iW(a,0,j,k,f,g,h);i=b;return}function iW(e,f,g,h,j,k,l){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0;f=i;i=i+144|0;m=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[m>>2];m=h;h=i;i=i+4|0;i=i+7&-8;c[h>>2]=c[m>>2];m=f|0;n=f+104|0;o=f+112|0;p=f+128|0;q=p;r=i;i=i+4|0;i=i+7&-8;s=i;i=i+160|0;t=i;i=i+4|0;i=i+7&-8;u=i;i=i+4|0;i=i+7&-8;v=c[j+4>>2]&74;if((v|0)==8){w=16}else if((v|0)==0){w=0}else if((v|0)==64){w=8}else{w=10}v=m|0;jc(o,j,v,n);oe(q|0,0,12);j=p;g0(p,10,0);if((a[q]&1)==0){m=j+1|0;x=m;y=m;z=p+8|0}else{m=p+8|0;x=c[m>>2]|0;y=j+1|0;z=m}c[r>>2]=x;m=s|0;c[t>>2]=m;c[u>>2]=0;j=g|0;g=h|0;h=p|0;A=p+4|0;B=c[n>>2]|0;n=x;x=c[j>>2]|0;L1894:while(1){do{if((x|0)==0){C=0}else{D=c[x+12>>2]|0;if((D|0)==(c[x+16>>2]|0)){E=cZ[c[(c[x>>2]|0)+36>>2]&255](x)|0}else{E=c[D>>2]|0}if((E|0)!=-1){C=x;break}c[j>>2]=0;C=0}}while(0);F=(C|0)==0;D=c[g>>2]|0;do{if((D|0)==0){G=1584}else{H=c[D+12>>2]|0;if((H|0)==(c[D+16>>2]|0)){I=cZ[c[(c[D>>2]|0)+36>>2]&255](D)|0}else{I=c[H>>2]|0}if((I|0)==-1){c[g>>2]=0;G=1584;break}else{H=(D|0)==0;if(F^H){J=D;K=H;break}else{L=n;M=D;N=H;break L1894}}}}while(0);if((G|0)==1584){G=0;if(F){L=n;M=0;N=1;break}else{J=0;K=1}}D=d[q]|0;H=(D&1|0)==0;if(((c[r>>2]|0)-n|0)==((H?D>>>1:c[A>>2]|0)|0)){if(H){O=D>>>1;P=D>>>1}else{D=c[A>>2]|0;O=D;P=D}g0(p,O<<1,0);if((a[q]&1)==0){Q=10}else{Q=(c[h>>2]&-2)-1|0}g0(p,Q,0);if((a[q]&1)==0){R=y}else{R=c[z>>2]|0}c[r>>2]=R+P;S=R}else{S=n}D=C+12|0;H=c[D>>2]|0;T=C+16|0;if((H|0)==(c[T>>2]|0)){U=cZ[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{U=c[H>>2]|0}if((i8(U,w,S,r,u,B,o,m,t,v)|0)!=0){L=S;M=J;N=K;break}H=c[D>>2]|0;if((H|0)==(c[T>>2]|0)){T=c[(c[C>>2]|0)+40>>2]|0;cZ[T&255](C)|0;n=S;x=C;continue}else{c[D>>2]=H+4;n=S;x=C;continue}}x=d[o]|0;if((x&1|0)==0){V=x>>>1}else{V=c[o+4>>2]|0}do{if((V|0)!=0){x=c[t>>2]|0;if((x-s|0)>=160){break}S=c[u>>2]|0;c[t>>2]=x+4;c[x>>2]=S}}while(0);b[l>>1]=ni(L,c[r>>2]|0,k,w)|0;k3(o,m,c[t>>2]|0,k);do{if(F){W=0}else{t=c[C+12>>2]|0;if((t|0)==(c[C+16>>2]|0)){X=cZ[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{X=c[t>>2]|0}if((X|0)!=-1){W=C;break}c[j>>2]=0;W=0}}while(0);j=(W|0)==0;do{if(N){G=1626}else{C=c[M+12>>2]|0;if((C|0)==(c[M+16>>2]|0)){Y=cZ[c[(c[M>>2]|0)+36>>2]&255](M)|0}else{Y=c[C>>2]|0}if((Y|0)==-1){c[g>>2]=0;G=1626;break}if(!(j^(M|0)==0)){break}Z=e|0;c[Z>>2]=W;g_(p);g_(o);i=f;return}}while(0);do{if((G|0)==1626){if(j){break}Z=e|0;c[Z>>2]=W;g_(p);g_(o);i=f;return}}while(0);c[k>>2]=c[k>>2]|2;Z=e|0;c[Z>>2]=W;g_(p);g_(o);i=f;return}function iX(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];iY(a,0,j,k,f,g,h);i=b;return}function iY(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;e=i;i=i+144|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+104|0;n=e+112|0;o=e+128|0;p=o;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+160|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=c[h+4>>2]&74;if((u|0)==64){v=8}else if((u|0)==8){v=16}else if((u|0)==0){v=0}else{v=10}u=l|0;jc(n,h,u,m);oe(p|0,0,12);h=o;g0(o,10,0);if((a[p]&1)==0){l=h+1|0;w=l;x=l;y=o+8|0}else{l=o+8|0;w=c[l>>2]|0;x=h+1|0;y=l}c[q>>2]=w;l=r|0;c[s>>2]=l;c[t>>2]=0;h=f|0;f=g|0;g=o|0;z=o+4|0;A=c[m>>2]|0;m=w;w=c[h>>2]|0;L1984:while(1){do{if((w|0)==0){B=0}else{C=c[w+12>>2]|0;if((C|0)==(c[w+16>>2]|0)){D=cZ[c[(c[w>>2]|0)+36>>2]&255](w)|0}else{D=c[C>>2]|0}if((D|0)!=-1){B=w;break}c[h>>2]=0;B=0}}while(0);E=(B|0)==0;C=c[f>>2]|0;do{if((C|0)==0){F=1655}else{G=c[C+12>>2]|0;if((G|0)==(c[C+16>>2]|0)){H=cZ[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{H=c[G>>2]|0}if((H|0)==-1){c[f>>2]=0;F=1655;break}else{G=(C|0)==0;if(E^G){I=C;J=G;break}else{K=m;L=C;M=G;break L1984}}}}while(0);if((F|0)==1655){F=0;if(E){K=m;L=0;M=1;break}else{I=0;J=1}}C=d[p]|0;G=(C&1|0)==0;if(((c[q>>2]|0)-m|0)==((G?C>>>1:c[z>>2]|0)|0)){if(G){N=C>>>1;O=C>>>1}else{C=c[z>>2]|0;N=C;O=C}g0(o,N<<1,0);if((a[p]&1)==0){P=10}else{P=(c[g>>2]&-2)-1|0}g0(o,P,0);if((a[p]&1)==0){Q=x}else{Q=c[y>>2]|0}c[q>>2]=Q+O;R=Q}else{R=m}C=B+12|0;G=c[C>>2]|0;S=B+16|0;if((G|0)==(c[S>>2]|0)){T=cZ[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{T=c[G>>2]|0}if((i8(T,v,R,q,t,A,n,l,s,u)|0)!=0){K=R;L=I;M=J;break}G=c[C>>2]|0;if((G|0)==(c[S>>2]|0)){S=c[(c[B>>2]|0)+40>>2]|0;cZ[S&255](B)|0;m=R;w=B;continue}else{c[C>>2]=G+4;m=R;w=B;continue}}w=d[n]|0;if((w&1|0)==0){U=w>>>1}else{U=c[n+4>>2]|0}do{if((U|0)!=0){w=c[s>>2]|0;if((w-r|0)>=160){break}R=c[t>>2]|0;c[s>>2]=w+4;c[w>>2]=R}}while(0);c[k>>2]=nh(K,c[q>>2]|0,j,v)|0;k3(n,l,c[s>>2]|0,j);do{if(E){V=0}else{s=c[B+12>>2]|0;if((s|0)==(c[B+16>>2]|0)){W=cZ[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{W=c[s>>2]|0}if((W|0)!=-1){V=B;break}c[h>>2]=0;V=0}}while(0);h=(V|0)==0;do{if(M){F=1697}else{B=c[L+12>>2]|0;if((B|0)==(c[L+16>>2]|0)){X=cZ[c[(c[L>>2]|0)+36>>2]&255](L)|0}else{X=c[B>>2]|0}if((X|0)==-1){c[f>>2]=0;F=1697;break}if(!(h^(L|0)==0)){break}Y=b|0;c[Y>>2]=V;g_(o);g_(n);i=e;return}}while(0);do{if((F|0)==1697){if(h){break}Y=b|0;c[Y>>2]=V;g_(o);g_(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;Y=b|0;c[Y>>2]=V;g_(o);g_(n);i=e;return}function iZ(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];i_(a,0,j,k,f,g,h);i=b;return}function i_(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;e=i;i=i+144|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+104|0;n=e+112|0;o=e+128|0;p=o;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+160|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=c[h+4>>2]&74;if((u|0)==8){v=16}else if((u|0)==0){v=0}else if((u|0)==64){v=8}else{v=10}u=l|0;jc(n,h,u,m);oe(p|0,0,12);h=o;g0(o,10,0);if((a[p]&1)==0){l=h+1|0;w=l;x=l;y=o+8|0}else{l=o+8|0;w=c[l>>2]|0;x=h+1|0;y=l}c[q>>2]=w;l=r|0;c[s>>2]=l;c[t>>2]=0;h=f|0;f=g|0;g=o|0;z=o+4|0;A=c[m>>2]|0;m=w;w=c[h>>2]|0;L2074:while(1){do{if((w|0)==0){B=0}else{C=c[w+12>>2]|0;if((C|0)==(c[w+16>>2]|0)){D=cZ[c[(c[w>>2]|0)+36>>2]&255](w)|0}else{D=c[C>>2]|0}if((D|0)!=-1){B=w;break}c[h>>2]=0;B=0}}while(0);E=(B|0)==0;C=c[f>>2]|0;do{if((C|0)==0){F=1726}else{G=c[C+12>>2]|0;if((G|0)==(c[C+16>>2]|0)){H=cZ[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{H=c[G>>2]|0}if((H|0)==-1){c[f>>2]=0;F=1726;break}else{G=(C|0)==0;if(E^G){I=C;J=G;break}else{K=m;L=C;M=G;break L2074}}}}while(0);if((F|0)==1726){F=0;if(E){K=m;L=0;M=1;break}else{I=0;J=1}}C=d[p]|0;G=(C&1|0)==0;if(((c[q>>2]|0)-m|0)==((G?C>>>1:c[z>>2]|0)|0)){if(G){N=C>>>1;O=C>>>1}else{C=c[z>>2]|0;N=C;O=C}g0(o,N<<1,0);if((a[p]&1)==0){P=10}else{P=(c[g>>2]&-2)-1|0}g0(o,P,0);if((a[p]&1)==0){Q=x}else{Q=c[y>>2]|0}c[q>>2]=Q+O;R=Q}else{R=m}C=B+12|0;G=c[C>>2]|0;S=B+16|0;if((G|0)==(c[S>>2]|0)){T=cZ[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{T=c[G>>2]|0}if((i8(T,v,R,q,t,A,n,l,s,u)|0)!=0){K=R;L=I;M=J;break}G=c[C>>2]|0;if((G|0)==(c[S>>2]|0)){S=c[(c[B>>2]|0)+40>>2]|0;cZ[S&255](B)|0;m=R;w=B;continue}else{c[C>>2]=G+4;m=R;w=B;continue}}w=d[n]|0;if((w&1|0)==0){U=w>>>1}else{U=c[n+4>>2]|0}do{if((U|0)!=0){w=c[s>>2]|0;if((w-r|0)>=160){break}R=c[t>>2]|0;c[s>>2]=w+4;c[w>>2]=R}}while(0);c[k>>2]=ng(K,c[q>>2]|0,j,v)|0;k3(n,l,c[s>>2]|0,j);do{if(E){V=0}else{s=c[B+12>>2]|0;if((s|0)==(c[B+16>>2]|0)){W=cZ[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{W=c[s>>2]|0}if((W|0)!=-1){V=B;break}c[h>>2]=0;V=0}}while(0);h=(V|0)==0;do{if(M){F=1768}else{B=c[L+12>>2]|0;if((B|0)==(c[L+16>>2]|0)){X=cZ[c[(c[L>>2]|0)+36>>2]&255](L)|0}else{X=c[B>>2]|0}if((X|0)==-1){c[f>>2]=0;F=1768;break}if(!(h^(L|0)==0)){break}Y=b|0;c[Y>>2]=V;g_(o);g_(n);i=e;return}}while(0);do{if((F|0)==1768){if(h){break}Y=b|0;c[Y>>2]=V;g_(o);g_(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;Y=b|0;c[Y>>2]=V;g_(o);g_(n);i=e;return}function i$(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];i0(a,0,j,k,f,g,h);i=b;return}function i0(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0;e=i;i=i+144|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+104|0;n=e+112|0;o=e+128|0;p=o;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+160|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=c[h+4>>2]&74;if((u|0)==64){v=8}else if((u|0)==8){v=16}else if((u|0)==0){v=0}else{v=10}u=l|0;jc(n,h,u,m);oe(p|0,0,12);h=o;g0(o,10,0);if((a[p]&1)==0){l=h+1|0;w=l;x=l;y=o+8|0}else{l=o+8|0;w=c[l>>2]|0;x=h+1|0;y=l}c[q>>2]=w;l=r|0;c[s>>2]=l;c[t>>2]=0;h=f|0;f=g|0;g=o|0;z=o+4|0;A=c[m>>2]|0;m=w;w=c[h>>2]|0;L2164:while(1){do{if((w|0)==0){B=0}else{C=c[w+12>>2]|0;if((C|0)==(c[w+16>>2]|0)){D=cZ[c[(c[w>>2]|0)+36>>2]&255](w)|0}else{D=c[C>>2]|0}if((D|0)!=-1){B=w;break}c[h>>2]=0;B=0}}while(0);E=(B|0)==0;C=c[f>>2]|0;do{if((C|0)==0){F=1797}else{G=c[C+12>>2]|0;if((G|0)==(c[C+16>>2]|0)){H=cZ[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{H=c[G>>2]|0}if((H|0)==-1){c[f>>2]=0;F=1797;break}else{G=(C|0)==0;if(E^G){I=C;J=G;break}else{L=m;M=C;N=G;break L2164}}}}while(0);if((F|0)==1797){F=0;if(E){L=m;M=0;N=1;break}else{I=0;J=1}}C=d[p]|0;G=(C&1|0)==0;if(((c[q>>2]|0)-m|0)==((G?C>>>1:c[z>>2]|0)|0)){if(G){O=C>>>1;P=C>>>1}else{C=c[z>>2]|0;O=C;P=C}g0(o,O<<1,0);if((a[p]&1)==0){Q=10}else{Q=(c[g>>2]&-2)-1|0}g0(o,Q,0);if((a[p]&1)==0){R=x}else{R=c[y>>2]|0}c[q>>2]=R+P;S=R}else{S=m}C=B+12|0;G=c[C>>2]|0;T=B+16|0;if((G|0)==(c[T>>2]|0)){U=cZ[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{U=c[G>>2]|0}if((i8(U,v,S,q,t,A,n,l,s,u)|0)!=0){L=S;M=I;N=J;break}G=c[C>>2]|0;if((G|0)==(c[T>>2]|0)){T=c[(c[B>>2]|0)+40>>2]|0;cZ[T&255](B)|0;m=S;w=B;continue}else{c[C>>2]=G+4;m=S;w=B;continue}}w=d[n]|0;if((w&1|0)==0){V=w>>>1}else{V=c[n+4>>2]|0}do{if((V|0)!=0){w=c[s>>2]|0;if((w-r|0)>=160){break}S=c[t>>2]|0;c[s>>2]=w+4;c[w>>2]=S}}while(0);t=nf(L,c[q>>2]|0,j,v)|0;c[k>>2]=t;c[k+4>>2]=K;k3(n,l,c[s>>2]|0,j);do{if(E){W=0}else{s=c[B+12>>2]|0;if((s|0)==(c[B+16>>2]|0)){X=cZ[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{X=c[s>>2]|0}if((X|0)!=-1){W=B;break}c[h>>2]=0;W=0}}while(0);h=(W|0)==0;do{if(N){F=1839}else{B=c[M+12>>2]|0;if((B|0)==(c[M+16>>2]|0)){Y=cZ[c[(c[M>>2]|0)+36>>2]&255](M)|0}else{Y=c[B>>2]|0}if((Y|0)==-1){c[f>>2]=0;F=1839;break}if(!(h^(M|0)==0)){break}Z=b|0;c[Z>>2]=W;g_(o);g_(n);i=e;return}}while(0);do{if((F|0)==1839){if(h){break}Z=b|0;c[Z>>2]=W;g_(o);g_(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;Z=b|0;c[Z>>2]=W;g_(o);g_(n);i=e;return}function i1(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];i2(a,0,j,k,f,g,h);i=b;return}function i2(b,e,f,h,j,k,l){b=b|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0;e=i;i=i+176|0;m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=h;h=i;i=i+4|0;i=i+7&-8;c[h>>2]=c[m>>2];m=e+128|0;n=e+136|0;o=e+144|0;p=e+160|0;q=p;r=i;i=i+4|0;i=i+7&-8;s=i;i=i+160|0;t=i;i=i+4|0;i=i+7&-8;u=i;i=i+4|0;i=i+7&-8;v=i;i=i+1|0;i=i+7&-8;w=i;i=i+1|0;i=i+7&-8;x=e|0;jd(o,j,x,m,n);oe(q|0,0,12);j=p;g0(p,10,0);if((a[q]&1)==0){y=j+1|0;z=y;A=y;B=p+8|0}else{y=p+8|0;z=c[y>>2]|0;A=j+1|0;B=y}c[r>>2]=z;y=s|0;c[t>>2]=y;c[u>>2]=0;a[v]=1;a[w]=69;j=f|0;f=h|0;h=p|0;C=p+4|0;D=c[m>>2]|0;m=c[n>>2]|0;n=z;z=c[j>>2]|0;L2249:while(1){do{if((z|0)==0){E=0}else{F=c[z+12>>2]|0;if((F|0)==(c[z+16>>2]|0)){G=cZ[c[(c[z>>2]|0)+36>>2]&255](z)|0}else{G=c[F>>2]|0}if((G|0)!=-1){E=z;break}c[j>>2]=0;E=0}}while(0);H=(E|0)==0;F=c[f>>2]|0;do{if((F|0)==0){I=1864}else{J=c[F+12>>2]|0;if((J|0)==(c[F+16>>2]|0)){K=cZ[c[(c[F>>2]|0)+36>>2]&255](F)|0}else{K=c[J>>2]|0}if((K|0)==-1){c[f>>2]=0;I=1864;break}else{J=(F|0)==0;if(H^J){L=F;M=J;break}else{N=n;O=F;P=J;break L2249}}}}while(0);if((I|0)==1864){I=0;if(H){N=n;O=0;P=1;break}else{L=0;M=1}}F=d[q]|0;J=(F&1|0)==0;if(((c[r>>2]|0)-n|0)==((J?F>>>1:c[C>>2]|0)|0)){if(J){Q=F>>>1;R=F>>>1}else{F=c[C>>2]|0;Q=F;R=F}g0(p,Q<<1,0);if((a[q]&1)==0){S=10}else{S=(c[h>>2]&-2)-1|0}g0(p,S,0);if((a[q]&1)==0){T=A}else{T=c[B>>2]|0}c[r>>2]=T+R;U=T}else{U=n}F=E+12|0;J=c[F>>2]|0;V=E+16|0;if((J|0)==(c[V>>2]|0)){W=cZ[c[(c[E>>2]|0)+36>>2]&255](E)|0}else{W=c[J>>2]|0}if((je(W,v,w,U,r,D,m,o,y,t,u,x)|0)!=0){N=U;O=L;P=M;break}J=c[F>>2]|0;if((J|0)==(c[V>>2]|0)){V=c[(c[E>>2]|0)+40>>2]|0;cZ[V&255](E)|0;n=U;z=E;continue}else{c[F>>2]=J+4;n=U;z=E;continue}}z=d[o]|0;if((z&1|0)==0){X=z>>>1}else{X=c[o+4>>2]|0}do{if((X|0)!=0){if((a[v]&1)==0){break}z=c[t>>2]|0;if((z-s|0)>=160){break}U=c[u>>2]|0;c[t>>2]=z+4;c[z>>2]=U}}while(0);g[l>>2]=+ne(N,c[r>>2]|0,k);k3(o,y,c[t>>2]|0,k);do{if(H){Y=0}else{t=c[E+12>>2]|0;if((t|0)==(c[E+16>>2]|0)){Z=cZ[c[(c[E>>2]|0)+36>>2]&255](E)|0}else{Z=c[t>>2]|0}if((Z|0)!=-1){Y=E;break}c[j>>2]=0;Y=0}}while(0);j=(Y|0)==0;do{if(P){I=1907}else{E=c[O+12>>2]|0;if((E|0)==(c[O+16>>2]|0)){_=cZ[c[(c[O>>2]|0)+36>>2]&255](O)|0}else{_=c[E>>2]|0}if((_|0)==-1){c[f>>2]=0;I=1907;break}if(!(j^(O|0)==0)){break}$=b|0;c[$>>2]=Y;g_(p);g_(o);i=e;return}}while(0);do{if((I|0)==1907){if(j){break}$=b|0;c[$>>2]=Y;g_(p);g_(o);i=e;return}}while(0);c[k>>2]=c[k>>2]|2;$=b|0;c[$>>2]=Y;g_(p);g_(o);i=e;return}function i3(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];i4(a,0,j,k,f,g,h);i=b;return}function i4(b,e,f,g,j,k,l){b=b|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0;e=i;i=i+176|0;m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[m>>2];m=e+128|0;n=e+136|0;o=e+144|0;p=e+160|0;q=p;r=i;i=i+4|0;i=i+7&-8;s=i;i=i+160|0;t=i;i=i+4|0;i=i+7&-8;u=i;i=i+4|0;i=i+7&-8;v=i;i=i+1|0;i=i+7&-8;w=i;i=i+1|0;i=i+7&-8;x=e|0;jd(o,j,x,m,n);oe(q|0,0,12);j=p;g0(p,10,0);if((a[q]&1)==0){y=j+1|0;z=y;A=y;B=p+8|0}else{y=p+8|0;z=c[y>>2]|0;A=j+1|0;B=y}c[r>>2]=z;y=s|0;c[t>>2]=y;c[u>>2]=0;a[v]=1;a[w]=69;j=f|0;f=g|0;g=p|0;C=p+4|0;D=c[m>>2]|0;m=c[n>>2]|0;n=z;z=c[j>>2]|0;L2335:while(1){do{if((z|0)==0){E=0}else{F=c[z+12>>2]|0;if((F|0)==(c[z+16>>2]|0)){G=cZ[c[(c[z>>2]|0)+36>>2]&255](z)|0}else{G=c[F>>2]|0}if((G|0)!=-1){E=z;break}c[j>>2]=0;E=0}}while(0);H=(E|0)==0;F=c[f>>2]|0;do{if((F|0)==0){I=1932}else{J=c[F+12>>2]|0;if((J|0)==(c[F+16>>2]|0)){K=cZ[c[(c[F>>2]|0)+36>>2]&255](F)|0}else{K=c[J>>2]|0}if((K|0)==-1){c[f>>2]=0;I=1932;break}else{J=(F|0)==0;if(H^J){L=F;M=J;break}else{N=n;O=F;P=J;break L2335}}}}while(0);if((I|0)==1932){I=0;if(H){N=n;O=0;P=1;break}else{L=0;M=1}}F=d[q]|0;J=(F&1|0)==0;if(((c[r>>2]|0)-n|0)==((J?F>>>1:c[C>>2]|0)|0)){if(J){Q=F>>>1;R=F>>>1}else{F=c[C>>2]|0;Q=F;R=F}g0(p,Q<<1,0);if((a[q]&1)==0){S=10}else{S=(c[g>>2]&-2)-1|0}g0(p,S,0);if((a[q]&1)==0){T=A}else{T=c[B>>2]|0}c[r>>2]=T+R;U=T}else{U=n}F=E+12|0;J=c[F>>2]|0;V=E+16|0;if((J|0)==(c[V>>2]|0)){W=cZ[c[(c[E>>2]|0)+36>>2]&255](E)|0}else{W=c[J>>2]|0}if((je(W,v,w,U,r,D,m,o,y,t,u,x)|0)!=0){N=U;O=L;P=M;break}J=c[F>>2]|0;if((J|0)==(c[V>>2]|0)){V=c[(c[E>>2]|0)+40>>2]|0;cZ[V&255](E)|0;n=U;z=E;continue}else{c[F>>2]=J+4;n=U;z=E;continue}}z=d[o]|0;if((z&1|0)==0){X=z>>>1}else{X=c[o+4>>2]|0}do{if((X|0)!=0){if((a[v]&1)==0){break}z=c[t>>2]|0;if((z-s|0)>=160){break}U=c[u>>2]|0;c[t>>2]=z+4;c[z>>2]=U}}while(0);h[l>>3]=+nd(N,c[r>>2]|0,k);k3(o,y,c[t>>2]|0,k);do{if(H){Y=0}else{t=c[E+12>>2]|0;if((t|0)==(c[E+16>>2]|0)){Z=cZ[c[(c[E>>2]|0)+36>>2]&255](E)|0}else{Z=c[t>>2]|0}if((Z|0)!=-1){Y=E;break}c[j>>2]=0;Y=0}}while(0);j=(Y|0)==0;do{if(P){I=1975}else{E=c[O+12>>2]|0;if((E|0)==(c[O+16>>2]|0)){_=cZ[c[(c[O>>2]|0)+36>>2]&255](O)|0}else{_=c[E>>2]|0}if((_|0)==-1){c[f>>2]=0;I=1975;break}if(!(j^(O|0)==0)){break}$=b|0;c[$>>2]=Y;g_(p);g_(o);i=e;return}}while(0);do{if((I|0)==1975){if(j){break}$=b|0;c[$>>2]=Y;g_(p);g_(o);i=e;return}}while(0);c[k>>2]=c[k>>2]|2;$=b|0;c[$>>2]=Y;g_(p);g_(o);i=e;return}function i5(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];i6(a,0,j,k,f,g,h);i=b;return}function i6(b,e,f,g,j,k,l){b=b|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0;e=i;i=i+176|0;m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[m>>2];m=e+128|0;n=e+136|0;o=e+144|0;p=e+160|0;q=p;r=i;i=i+4|0;i=i+7&-8;s=i;i=i+160|0;t=i;i=i+4|0;i=i+7&-8;u=i;i=i+4|0;i=i+7&-8;v=i;i=i+1|0;i=i+7&-8;w=i;i=i+1|0;i=i+7&-8;x=e|0;jd(o,j,x,m,n);oe(q|0,0,12);j=p;g0(p,10,0);if((a[q]&1)==0){y=j+1|0;z=y;A=y;B=p+8|0}else{y=p+8|0;z=c[y>>2]|0;A=j+1|0;B=y}c[r>>2]=z;y=s|0;c[t>>2]=y;c[u>>2]=0;a[v]=1;a[w]=69;j=f|0;f=g|0;g=p|0;C=p+4|0;D=c[m>>2]|0;m=c[n>>2]|0;n=z;z=c[j>>2]|0;L2421:while(1){do{if((z|0)==0){E=0}else{F=c[z+12>>2]|0;if((F|0)==(c[z+16>>2]|0)){G=cZ[c[(c[z>>2]|0)+36>>2]&255](z)|0}else{G=c[F>>2]|0}if((G|0)!=-1){E=z;break}c[j>>2]=0;E=0}}while(0);H=(E|0)==0;F=c[f>>2]|0;do{if((F|0)==0){I=2e3}else{J=c[F+12>>2]|0;if((J|0)==(c[F+16>>2]|0)){K=cZ[c[(c[F>>2]|0)+36>>2]&255](F)|0}else{K=c[J>>2]|0}if((K|0)==-1){c[f>>2]=0;I=2e3;break}else{J=(F|0)==0;if(H^J){L=F;M=J;break}else{N=n;O=F;P=J;break L2421}}}}while(0);if((I|0)==2e3){I=0;if(H){N=n;O=0;P=1;break}else{L=0;M=1}}F=d[q]|0;J=(F&1|0)==0;if(((c[r>>2]|0)-n|0)==((J?F>>>1:c[C>>2]|0)|0)){if(J){Q=F>>>1;R=F>>>1}else{F=c[C>>2]|0;Q=F;R=F}g0(p,Q<<1,0);if((a[q]&1)==0){S=10}else{S=(c[g>>2]&-2)-1|0}g0(p,S,0);if((a[q]&1)==0){T=A}else{T=c[B>>2]|0}c[r>>2]=T+R;U=T}else{U=n}F=E+12|0;J=c[F>>2]|0;V=E+16|0;if((J|0)==(c[V>>2]|0)){W=cZ[c[(c[E>>2]|0)+36>>2]&255](E)|0}else{W=c[J>>2]|0}if((je(W,v,w,U,r,D,m,o,y,t,u,x)|0)!=0){N=U;O=L;P=M;break}J=c[F>>2]|0;if((J|0)==(c[V>>2]|0)){V=c[(c[E>>2]|0)+40>>2]|0;cZ[V&255](E)|0;n=U;z=E;continue}else{c[F>>2]=J+4;n=U;z=E;continue}}z=d[o]|0;if((z&1|0)==0){X=z>>>1}else{X=c[o+4>>2]|0}do{if((X|0)!=0){if((a[v]&1)==0){break}z=c[t>>2]|0;if((z-s|0)>=160){break}U=c[u>>2]|0;c[t>>2]=z+4;c[z>>2]=U}}while(0);h[l>>3]=+nc(N,c[r>>2]|0,k);k3(o,y,c[t>>2]|0,k);do{if(H){Y=0}else{t=c[E+12>>2]|0;if((t|0)==(c[E+16>>2]|0)){Z=cZ[c[(c[E>>2]|0)+36>>2]&255](E)|0}else{Z=c[t>>2]|0}if((Z|0)!=-1){Y=E;break}c[j>>2]=0;Y=0}}while(0);j=(Y|0)==0;do{if(P){I=2043}else{E=c[O+12>>2]|0;if((E|0)==(c[O+16>>2]|0)){_=cZ[c[(c[O>>2]|0)+36>>2]&255](O)|0}else{_=c[E>>2]|0}if((_|0)==-1){c[f>>2]=0;I=2043;break}if(!(j^(O|0)==0)){break}$=b|0;c[$>>2]=Y;g_(p);g_(o);i=e;return}}while(0);do{if((I|0)==2043){if(j){break}$=b|0;c[$>>2]=Y;g_(p);g_(o);i=e;return}}while(0);c[k>>2]=c[k>>2]|2;$=b|0;c[$>>2]=Y;g_(p);g_(o);i=e;return}function i7(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0;e=i;i=i+136|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+16|0;n=e+120|0;o=i;i=i+4|0;i=i+7&-8;p=i;i=i+12|0;i=i+7&-8;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+160|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;oe(n|0,0,12);u=p;hi(o,h);h=o|0;o=c[h>>2]|0;if((c[4532]|0)!=-1){c[l>>2]=18128;c[l+4>>2]=16;c[l+8>>2]=0;gV(18128,l,108)}l=(c[4533]|0)-1|0;v=c[o+8>>2]|0;do{if((c[o+12>>2]|0)-v>>2>>>0>l>>>0){w=c[v+(l<<2)>>2]|0;if((w|0)==0){break}x=w;y=m|0;z=c[(c[w>>2]|0)+48>>2]|0;cX[z&15](x,13648,13674,y)|0;x=c[h>>2]|0;gA(x)|0;oe(u|0,0,12);x=p;g0(p,10,0);if((a[u]&1)==0){z=x+1|0;A=z;B=z;C=p+8|0}else{z=p+8|0;A=c[z>>2]|0;B=x+1|0;C=z}c[q>>2]=A;z=r|0;c[s>>2]=z;c[t>>2]=0;x=f|0;w=g|0;D=p|0;E=p+4|0;F=A;G=c[x>>2]|0;L2514:while(1){do{if((G|0)==0){H=0}else{I=c[G+12>>2]|0;if((I|0)==(c[G+16>>2]|0)){J=cZ[c[(c[G>>2]|0)+36>>2]&255](G)|0}else{J=c[I>>2]|0}if((J|0)!=-1){H=G;break}c[x>>2]=0;H=0}}while(0);I=(H|0)==0;K=c[w>>2]|0;do{if((K|0)==0){L=2075}else{M=c[K+12>>2]|0;if((M|0)==(c[K+16>>2]|0)){N=cZ[c[(c[K>>2]|0)+36>>2]&255](K)|0}else{N=c[M>>2]|0}if((N|0)==-1){c[w>>2]=0;L=2075;break}else{if(I^(K|0)==0){break}else{O=F;break L2514}}}}while(0);if((L|0)==2075){L=0;if(I){O=F;break}}K=d[u]|0;M=(K&1|0)==0;if(((c[q>>2]|0)-F|0)==((M?K>>>1:c[E>>2]|0)|0)){if(M){P=K>>>1;Q=K>>>1}else{K=c[E>>2]|0;P=K;Q=K}g0(p,P<<1,0);if((a[u]&1)==0){R=10}else{R=(c[D>>2]&-2)-1|0}g0(p,R,0);if((a[u]&1)==0){S=B}else{S=c[C>>2]|0}c[q>>2]=S+Q;T=S}else{T=F}K=H+12|0;M=c[K>>2]|0;U=H+16|0;if((M|0)==(c[U>>2]|0)){V=cZ[c[(c[H>>2]|0)+36>>2]&255](H)|0}else{V=c[M>>2]|0}if((i8(V,16,T,q,t,0,n,z,s,y)|0)!=0){O=T;break}M=c[K>>2]|0;if((M|0)==(c[U>>2]|0)){U=c[(c[H>>2]|0)+40>>2]|0;cZ[U&255](H)|0;F=T;G=H;continue}else{c[K>>2]=M+4;F=T;G=H;continue}}a[O+3|0]=0;do{if((a[19040]|0)==0){if((bx(19040)|0)==0){break}c[4176]=a0(2147483647,3232,0)|0}}while(0);G=iM(O,c[4176]|0,2960,(F=i,i=i+8|0,c[F>>2]=k,F)|0)|0;i=F;if((G|0)!=1){c[j>>2]=4}G=c[x>>2]|0;do{if((G|0)==0){W=0}else{F=c[G+12>>2]|0;if((F|0)==(c[G+16>>2]|0)){X=cZ[c[(c[G>>2]|0)+36>>2]&255](G)|0}else{X=c[F>>2]|0}if((X|0)!=-1){W=G;break}c[x>>2]=0;W=0}}while(0);x=(W|0)==0;G=c[w>>2]|0;do{if((G|0)==0){L=2120}else{F=c[G+12>>2]|0;if((F|0)==(c[G+16>>2]|0)){Y=cZ[c[(c[G>>2]|0)+36>>2]&255](G)|0}else{Y=c[F>>2]|0}if((Y|0)==-1){c[w>>2]=0;L=2120;break}if(!(x^(G|0)==0)){break}Z=b|0;c[Z>>2]=W;g_(p);g_(n);i=e;return}}while(0);do{if((L|0)==2120){if(x){break}Z=b|0;c[Z>>2]=W;g_(p);g_(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;Z=b|0;c[Z>>2]=W;g_(p);g_(n);i=e;return}}while(0);e=cy(4)|0;nG(e);bK(e|0,11832,162)}function i8(b,e,f,g,h,i,j,k,l,m){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0;n=c[g>>2]|0;o=(n|0)==(f|0);do{if(o){p=(c[m+96>>2]|0)==(b|0);if(!p){if((c[m+100>>2]|0)!=(b|0)){break}}c[g>>2]=f+1;a[f]=p?43:45;c[h>>2]=0;q=0;return q|0}}while(0);p=d[j]|0;if((p&1|0)==0){r=p>>>1}else{r=c[j+4>>2]|0}if((r|0)!=0&(b|0)==(i|0)){i=c[l>>2]|0;if((i-k|0)>=160){q=0;return q|0}k=c[h>>2]|0;c[l>>2]=i+4;c[i>>2]=k;c[h>>2]=0;q=0;return q|0}k=m+104|0;i=m;while(1){if((i|0)==(k|0)){s=k;break}if((c[i>>2]|0)==(b|0)){s=i;break}else{i=i+4|0}}i=s-m|0;m=i>>2;if((i|0)>92){q=-1;return q|0}do{if((e|0)==8|(e|0)==10){if((m|0)<(e|0)){break}else{q=-1}return q|0}else if((e|0)==16){if((i|0)<88){break}if(o){q=-1;return q|0}if((n-f|0)>=3){q=-1;return q|0}if((a[n-1|0]|0)!=48){q=-1;return q|0}c[h>>2]=0;s=a[13648+m|0]|0;b=c[g>>2]|0;c[g>>2]=b+1;a[b]=s;q=0;return q|0}}while(0);f=a[13648+m|0]|0;c[g>>2]=n+1;a[n]=f;c[h>>2]=(c[h>>2]|0)+1;q=0;return q|0}function i9(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=i;i=i+40|0;h=g|0;j=g+16|0;k=g+32|0;hi(k,d);d=k|0;k=c[d>>2]|0;if((c[4534]|0)!=-1){c[j>>2]=18136;c[j+4>>2]=16;c[j+8>>2]=0;gV(18136,j,108)}j=(c[4535]|0)-1|0;l=c[k+8>>2]|0;do{if((c[k+12>>2]|0)-l>>2>>>0>j>>>0){m=c[l+(j<<2)>>2]|0;if((m|0)==0){break}n=m;o=c[(c[m>>2]|0)+32>>2]|0;cX[o&15](n,13648,13674,e)|0;n=c[d>>2]|0;if((c[4438]|0)!=-1){c[h>>2]=17752;c[h+4>>2]=16;c[h+8>>2]=0;gV(17752,h,108)}o=(c[4439]|0)-1|0;m=c[n+8>>2]|0;do{if((c[n+12>>2]|0)-m>>2>>>0>o>>>0){p=c[m+(o<<2)>>2]|0;if((p|0)==0){break}q=p;a[f]=cZ[c[(c[p>>2]|0)+16>>2]&255](q)|0;cV[c[(c[p>>2]|0)+20>>2]&255](b,q);q=c[d>>2]|0;gA(q)|0;i=g;return}}while(0);o=cy(4)|0;nG(o);bK(o|0,11832,162)}}while(0);g=cy(4)|0;nG(g);bK(g|0,11832,162)}function ja(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;h=i;i=i+40|0;j=h|0;k=h+16|0;l=h+32|0;hi(l,d);d=l|0;l=c[d>>2]|0;if((c[4534]|0)!=-1){c[k>>2]=18136;c[k+4>>2]=16;c[k+8>>2]=0;gV(18136,k,108)}k=(c[4535]|0)-1|0;m=c[l+8>>2]|0;do{if((c[l+12>>2]|0)-m>>2>>>0>k>>>0){n=c[m+(k<<2)>>2]|0;if((n|0)==0){break}o=n;p=c[(c[n>>2]|0)+32>>2]|0;cX[p&15](o,13648,13680,e)|0;o=c[d>>2]|0;if((c[4438]|0)!=-1){c[j>>2]=17752;c[j+4>>2]=16;c[j+8>>2]=0;gV(17752,j,108)}p=(c[4439]|0)-1|0;n=c[o+8>>2]|0;do{if((c[o+12>>2]|0)-n>>2>>>0>p>>>0){q=c[n+(p<<2)>>2]|0;if((q|0)==0){break}r=q;s=q;a[f]=cZ[c[(c[s>>2]|0)+12>>2]&255](r)|0;a[g]=cZ[c[(c[s>>2]|0)+16>>2]&255](r)|0;cV[c[(c[q>>2]|0)+20>>2]&255](b,r);r=c[d>>2]|0;gA(r)|0;i=h;return}}while(0);p=cy(4)|0;nG(p);bK(p|0,11832,162)}}while(0);h=cy(4)|0;nG(h);bK(h|0,11832,162)}function jb(b,e,f,g,h,i,j,k,l,m,n,o){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0;if(b<<24>>24==i<<24>>24){if((a[e]&1)==0){p=-1;return p|0}a[e]=0;i=c[h>>2]|0;c[h>>2]=i+1;a[i]=46;i=d[k]|0;if((i&1|0)==0){q=i>>>1}else{q=c[k+4>>2]|0}if((q|0)==0){p=0;return p|0}q=c[m>>2]|0;if((q-l|0)>=160){p=0;return p|0}i=c[n>>2]|0;c[m>>2]=q+4;c[q>>2]=i;p=0;return p|0}do{if(b<<24>>24==j<<24>>24){i=d[k]|0;if((i&1|0)==0){r=i>>>1}else{r=c[k+4>>2]|0}if((r|0)==0){break}if((a[e]&1)==0){p=-1;return p|0}i=c[m>>2]|0;if((i-l|0)>=160){p=0;return p|0}q=c[n>>2]|0;c[m>>2]=i+4;c[i>>2]=q;c[n>>2]=0;p=0;return p|0}}while(0);r=o+32|0;j=o;while(1){if((j|0)==(r|0)){s=r;break}if((a[j]|0)==b<<24>>24){s=j;break}else{j=j+1|0}}j=s-o|0;if((j|0)>31){p=-1;return p|0}o=a[13648+j|0]|0;if((j|0)==22|(j|0)==23){a[f]=80;s=c[h>>2]|0;c[h>>2]=s+1;a[s]=o;p=0;return p|0}else if((j|0)==25|(j|0)==24){s=c[h>>2]|0;do{if((s|0)!=(g|0)){if((a[s-1|0]&95|0)==(a[f]&127|0)){break}else{p=-1}return p|0}}while(0);c[h>>2]=s+1;a[s]=o;p=0;return p|0}else{s=a[f]|0;do{if((o&95|0)==(s<<24>>24|0)){a[f]=s|-128;if((a[e]&1)==0){break}a[e]=0;g=d[k]|0;if((g&1|0)==0){t=g>>>1}else{t=c[k+4>>2]|0}if((t|0)==0){break}g=c[m>>2]|0;if((g-l|0)>=160){break}b=c[n>>2]|0;c[m>>2]=g+4;c[g>>2]=b}}while(0);m=c[h>>2]|0;c[h>>2]=m+1;a[m]=o;if((j|0)>21){p=0;return p|0}c[n>>2]=(c[n>>2]|0)+1;p=0;return p|0}return 0}function jc(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=i;i=i+40|0;g=f|0;h=f+16|0;j=f+32|0;hi(j,b);b=j|0;j=c[b>>2]|0;if((c[4532]|0)!=-1){c[h>>2]=18128;c[h+4>>2]=16;c[h+8>>2]=0;gV(18128,h,108)}h=(c[4533]|0)-1|0;k=c[j+8>>2]|0;do{if((c[j+12>>2]|0)-k>>2>>>0>h>>>0){l=c[k+(h<<2)>>2]|0;if((l|0)==0){break}m=l;n=c[(c[l>>2]|0)+48>>2]|0;cX[n&15](m,13648,13674,d)|0;m=c[b>>2]|0;if((c[4436]|0)!=-1){c[g>>2]=17744;c[g+4>>2]=16;c[g+8>>2]=0;gV(17744,g,108)}n=(c[4437]|0)-1|0;l=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-l>>2>>>0>n>>>0){o=c[l+(n<<2)>>2]|0;if((o|0)==0){break}p=o;c[e>>2]=cZ[c[(c[o>>2]|0)+16>>2]&255](p)|0;cV[c[(c[o>>2]|0)+20>>2]&255](a,p);p=c[b>>2]|0;gA(p)|0;i=f;return}}while(0);n=cy(4)|0;nG(n);bK(n|0,11832,162)}}while(0);f=cy(4)|0;nG(f);bK(f|0,11832,162)}function jd(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;g=i;i=i+40|0;h=g|0;j=g+16|0;k=g+32|0;hi(k,b);b=k|0;k=c[b>>2]|0;if((c[4532]|0)!=-1){c[j>>2]=18128;c[j+4>>2]=16;c[j+8>>2]=0;gV(18128,j,108)}j=(c[4533]|0)-1|0;l=c[k+8>>2]|0;do{if((c[k+12>>2]|0)-l>>2>>>0>j>>>0){m=c[l+(j<<2)>>2]|0;if((m|0)==0){break}n=m;o=c[(c[m>>2]|0)+48>>2]|0;cX[o&15](n,13648,13680,d)|0;n=c[b>>2]|0;if((c[4436]|0)!=-1){c[h>>2]=17744;c[h+4>>2]=16;c[h+8>>2]=0;gV(17744,h,108)}o=(c[4437]|0)-1|0;m=c[n+8>>2]|0;do{if((c[n+12>>2]|0)-m>>2>>>0>o>>>0){p=c[m+(o<<2)>>2]|0;if((p|0)==0){break}q=p;r=p;c[e>>2]=cZ[c[(c[r>>2]|0)+12>>2]&255](q)|0;c[f>>2]=cZ[c[(c[r>>2]|0)+16>>2]&255](q)|0;cV[c[(c[p>>2]|0)+20>>2]&255](a,q);q=c[b>>2]|0;gA(q)|0;i=g;return}}while(0);o=cy(4)|0;nG(o);bK(o|0,11832,162)}}while(0);g=cy(4)|0;nG(g);bK(g|0,11832,162)}function je(b,e,f,g,h,i,j,k,l,m,n,o){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0;if((b|0)==(i|0)){if((a[e]&1)==0){p=-1;return p|0}a[e]=0;i=c[h>>2]|0;c[h>>2]=i+1;a[i]=46;i=d[k]|0;if((i&1|0)==0){q=i>>>1}else{q=c[k+4>>2]|0}if((q|0)==0){p=0;return p|0}q=c[m>>2]|0;if((q-l|0)>=160){p=0;return p|0}i=c[n>>2]|0;c[m>>2]=q+4;c[q>>2]=i;p=0;return p|0}do{if((b|0)==(j|0)){i=d[k]|0;if((i&1|0)==0){r=i>>>1}else{r=c[k+4>>2]|0}if((r|0)==0){break}if((a[e]&1)==0){p=-1;return p|0}i=c[m>>2]|0;if((i-l|0)>=160){p=0;return p|0}q=c[n>>2]|0;c[m>>2]=i+4;c[i>>2]=q;c[n>>2]=0;p=0;return p|0}}while(0);r=o+128|0;j=o;while(1){if((j|0)==(r|0)){s=r;break}if((c[j>>2]|0)==(b|0)){s=j;break}else{j=j+4|0}}j=s-o|0;o=j>>2;if((j|0)>124){p=-1;return p|0}s=a[13648+o|0]|0;do{if((o|0)==22|(o|0)==23){a[f]=80}else if((o|0)==25|(o|0)==24){b=c[h>>2]|0;do{if((b|0)!=(g|0)){if((a[b-1|0]&95|0)==(a[f]&127|0)){break}else{p=-1}return p|0}}while(0);c[h>>2]=b+1;a[b]=s;p=0;return p|0}else{r=a[f]|0;if((s&95|0)!=(r<<24>>24|0)){break}a[f]=r|-128;if((a[e]&1)==0){break}a[e]=0;r=d[k]|0;if((r&1|0)==0){t=r>>>1}else{t=c[k+4>>2]|0}if((t|0)==0){break}r=c[m>>2]|0;if((r-l|0)>=160){break}q=c[n>>2]|0;c[m>>2]=r+4;c[r>>2]=q}}while(0);m=c[h>>2]|0;c[h>>2]=m+1;a[m]=s;if((j|0)>84){p=0;return p|0}c[n>>2]=(c[n>>2]|0)+1;p=0;return p|0}function jf(a){a=a|0;gy(a|0);n6(a);return}function jg(a){a=a|0;gy(a|0);return}function jh(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;j=i;i=i+48|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+16|0;m=j+24|0;n=j+32|0;if((c[f+4>>2]&1|0)==0){o=c[(c[d>>2]|0)+24>>2]|0;c[l>>2]=c[e>>2];c5[o&31](b,d,l,f,g,h&1);i=j;return}hi(m,f);f=m|0;m=c[f>>2]|0;if((c[4438]|0)!=-1){c[k>>2]=17752;c[k+4>>2]=16;c[k+8>>2]=0;gV(17752,k,108)}k=(c[4439]|0)-1|0;g=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-g>>2>>>0>k>>>0){l=c[g+(k<<2)>>2]|0;if((l|0)==0){break}d=l;o=c[f>>2]|0;gA(o)|0;o=c[l>>2]|0;if(h){cV[c[o+24>>2]&255](n,d)}else{cV[c[o+28>>2]&255](n,d)}d=n;o=n;l=a[o]|0;if((l&1)==0){p=d+1|0;q=p;r=p;s=n+8|0}else{p=n+8|0;q=c[p>>2]|0;r=d+1|0;s=p}p=e|0;d=n+4|0;t=q;u=l;while(1){if((u&1)==0){v=r}else{v=c[s>>2]|0}l=u&255;if((t|0)==(v+((l&1|0)==0?l>>>1:c[d>>2]|0)|0)){break}l=a[t]|0;w=c[p>>2]|0;do{if((w|0)!=0){x=w+24|0;y=c[x>>2]|0;if((y|0)!=(c[w+28>>2]|0)){c[x>>2]=y+1;a[y]=l;break}if((c6[c[(c[w>>2]|0)+52>>2]&63](w,l&255)|0)!=-1){break}c[p>>2]=0}}while(0);t=t+1|0;u=a[o]|0}c[b>>2]=c[p>>2];g_(n);i=j;return}}while(0);j=cy(4)|0;nG(j);bK(j|0,11832,162)}function ji(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+80|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+8|0;l=d+24|0;m=d+48|0;n=d+56|0;o=d+64|0;p=d+72|0;q=j|0;a[q]=a[5064]|0;a[q+1|0]=a[5065]|0;a[q+2|0]=a[5066]|0;a[q+3|0]=a[5067]|0;a[q+4|0]=a[5068]|0;a[q+5|0]=a[5069]|0;r=j+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=r}else{a[r]=43;u=j+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;u=v+1|0;v=t&74;do{if((v|0)==64){a[u]=111}else if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else{a[u]=100}}while(0);u=k|0;do{if((a[19040]|0)==0){if((bx(19040)|0)==0){break}c[4176]=a0(2147483647,3232,0)|0}}while(0);t=jj(u,12,c[4176]|0,q,(q=i,i=i+8|0,c[q>>2]=h,q)|0)|0;i=q;q=k+t|0;h=c[s>>2]&176;do{if((h|0)==32){w=q}else if((h|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=k+1|0;break}if(!((t|0)>1&s<<24>>24==48)){x=2383;break}s=a[k+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=2383;break}w=k+2|0}else{x=2383}}while(0);if((x|0)==2383){w=u}x=l|0;hi(o,f);jk(u,w,q,x,m,n,o);gA(c[o>>2]|0)|0;c[p>>2]=c[e>>2];jl(b,p,x,c[m>>2]|0,c[n>>2]|0,f,g);i=d;return}function jj(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0;g=i;i=i+16|0;h=g|0;j=h;c[j>>2]=f;c[j+4>>2]=0;j=ch(d|0)|0;d=ci(a|0,b|0,e|0,h|0)|0;if((j|0)==0){i=g;return d|0}ch(j|0)|0;i=g;return d|0}function jk(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;l=i;i=i+48|0;m=l|0;n=l+16|0;o=l+32|0;p=k|0;k=c[p>>2]|0;if((c[4534]|0)!=-1){c[n>>2]=18136;c[n+4>>2]=16;c[n+8>>2]=0;gV(18136,n,108)}n=(c[4535]|0)-1|0;q=c[k+8>>2]|0;if((c[k+12>>2]|0)-q>>2>>>0<=n>>>0){r=cy(4)|0;s=r;nG(s);bK(r|0,11832,162)}k=c[q+(n<<2)>>2]|0;if((k|0)==0){r=cy(4)|0;s=r;nG(s);bK(r|0,11832,162)}r=k;s=c[p>>2]|0;if((c[4438]|0)!=-1){c[m>>2]=17752;c[m+4>>2]=16;c[m+8>>2]=0;gV(17752,m,108)}m=(c[4439]|0)-1|0;p=c[s+8>>2]|0;if((c[s+12>>2]|0)-p>>2>>>0<=m>>>0){t=cy(4)|0;u=t;nG(u);bK(t|0,11832,162)}s=c[p+(m<<2)>>2]|0;if((s|0)==0){t=cy(4)|0;u=t;nG(u);bK(t|0,11832,162)}t=s;cV[c[(c[s>>2]|0)+20>>2]&255](o,t);u=o;m=o;p=d[m]|0;if((p&1|0)==0){v=p>>>1}else{v=c[o+4>>2]|0}do{if((v|0)==0){p=c[(c[k>>2]|0)+32>>2]|0;cX[p&15](r,b,f,g)|0;c[j>>2]=g+(f-b)}else{c[j>>2]=g;p=a[b]|0;if((p<<24>>24|0)==45|(p<<24>>24|0)==43){n=c6[c[(c[k>>2]|0)+28>>2]&63](r,p)|0;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=n;w=b+1|0}else{w=b}do{if((f-w|0)>1){if((a[w]|0)!=48){x=w;break}n=w+1|0;p=a[n]|0;if(!((p<<24>>24|0)==120|(p<<24>>24|0)==88)){x=w;break}p=k;q=c6[c[(c[p>>2]|0)+28>>2]&63](r,48)|0;y=c[j>>2]|0;c[j>>2]=y+1;a[y]=q;q=c6[c[(c[p>>2]|0)+28>>2]&63](r,a[n]|0)|0;n=c[j>>2]|0;c[j>>2]=n+1;a[n]=q;x=w+2|0}else{x=w}}while(0);do{if((x|0)!=(f|0)){q=f-1|0;if(x>>>0<q>>>0){z=x;A=q}else{break}do{q=a[z]|0;a[z]=a[A]|0;a[A]=q;z=z+1|0;A=A-1|0;}while(z>>>0<A>>>0)}}while(0);q=cZ[c[(c[s>>2]|0)+16>>2]&255](t)|0;if(x>>>0<f>>>0){n=u+1|0;p=k;y=o+4|0;B=o+8|0;C=0;D=0;E=x;while(1){F=(a[m]&1)==0;do{if((a[(F?n:c[B>>2]|0)+D|0]|0)==0){G=D;H=C}else{if((C|0)!=(a[(F?n:c[B>>2]|0)+D|0]|0)){G=D;H=C;break}I=c[j>>2]|0;c[j>>2]=I+1;a[I]=q;I=d[m]|0;G=(D>>>0<(((I&1|0)==0?I>>>1:c[y>>2]|0)-1|0)>>>0)+D|0;H=0}}while(0);F=c6[c[(c[p>>2]|0)+28>>2]&63](r,a[E]|0)|0;I=c[j>>2]|0;c[j>>2]=I+1;a[I]=F;F=E+1|0;if(F>>>0<f>>>0){C=H+1|0;D=G;E=F}else{break}}}E=g+(x-b)|0;D=c[j>>2]|0;if((E|0)==(D|0)){break}C=D-1|0;if(E>>>0<C>>>0){J=E;K=C}else{break}do{C=a[J]|0;a[J]=a[K]|0;a[K]=C;J=J+1|0;K=K-1|0;}while(J>>>0<K>>>0)}}while(0);if((e|0)==(f|0)){L=c[j>>2]|0;c[h>>2]=L;g_(o);i=l;return}else{L=g+(e-b)|0;c[h>>2]=L;g_(o);i=l;return}}function jl(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;k=i;i=i+16|0;l=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[l>>2];l=k|0;m=d|0;d=c[m>>2]|0;if((d|0)==0){c[b>>2]=0;i=k;return}n=g;g=e;o=n-g|0;p=h+12|0;h=c[p>>2]|0;q=(h|0)>(o|0)?h-o|0:0;o=f;h=o-g|0;do{if((h|0)>0){if((c_[c[(c[d>>2]|0)+48>>2]&63](d,e,h)|0)==(h|0)){break}c[m>>2]=0;c[b>>2]=0;i=k;return}}while(0);do{if((q|0)>0){gZ(l,q,j);if((a[l]&1)==0){r=l+1|0}else{r=c[l+8>>2]|0}if((c_[c[(c[d>>2]|0)+48>>2]&63](d,r,q)|0)==(q|0)){g_(l);break}c[m>>2]=0;c[b>>2]=0;g_(l);i=k;return}}while(0);l=n-o|0;do{if((l|0)>0){if((c_[c[(c[d>>2]|0)+48>>2]&63](d,f,l)|0)==(l|0)){break}c[m>>2]=0;c[b>>2]=0;i=k;return}}while(0);c[p>>2]=0;c[b>>2]=d;i=k;return}function jm(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+112|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+32|0;n=d+80|0;o=d+88|0;p=d+96|0;q=d+104|0;c[k>>2]=37;c[k+4>>2]=0;r=k;k=r+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=k}else{a[k]=43;u=r+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;a[v+1|0]=108;u=v+2|0;v=t&74;do{if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else if((v|0)==64){a[u]=111}else{a[u]=100}}while(0);u=l|0;do{if((a[19040]|0)==0){if((bx(19040)|0)==0){break}c[4176]=a0(2147483647,3232,0)|0}}while(0);v=jj(u,22,c[4176]|0,r,(r=i,i=i+16|0,c[r>>2]=h,c[r+8>>2]=j,r)|0)|0;i=r;r=l+v|0;j=c[s>>2]&176;do{if((j|0)==32){w=r}else if((j|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=l+1|0;break}if(!((v|0)>1&s<<24>>24==48)){x=2490;break}s=a[l+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=2490;break}w=l+2|0}else{x=2490}}while(0);if((x|0)==2490){w=u}x=m|0;hi(p,f);jk(u,w,r,x,n,o,p);gA(c[p>>2]|0)|0;c[q>>2]=c[e>>2];jl(b,q,x,c[n>>2]|0,c[o>>2]|0,f,g);i=d;return}function jn(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+80|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+8|0;l=d+24|0;m=d+48|0;n=d+56|0;o=d+64|0;p=d+72|0;q=j|0;a[q]=a[5064]|0;a[q+1|0]=a[5065]|0;a[q+2|0]=a[5066]|0;a[q+3|0]=a[5067]|0;a[q+4|0]=a[5068]|0;a[q+5|0]=a[5069]|0;r=j+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=r}else{a[r]=43;u=j+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;u=v+1|0;v=t&74;do{if((v|0)==64){a[u]=111}else if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else{a[u]=117}}while(0);u=k|0;do{if((a[19040]|0)==0){if((bx(19040)|0)==0){break}c[4176]=a0(2147483647,3232,0)|0}}while(0);t=jj(u,12,c[4176]|0,q,(q=i,i=i+8|0,c[q>>2]=h,q)|0)|0;i=q;q=k+t|0;h=c[s>>2]&176;do{if((h|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=k+1|0;break}if(!((t|0)>1&s<<24>>24==48)){x=2515;break}s=a[k+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=2515;break}w=k+2|0}else if((h|0)==32){w=q}else{x=2515}}while(0);if((x|0)==2515){w=u}x=l|0;hi(o,f);jk(u,w,q,x,m,n,o);gA(c[o>>2]|0)|0;c[p>>2]=c[e>>2];jl(b,p,x,c[m>>2]|0,c[n>>2]|0,f,g);i=d;return}function jo(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+112|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+32|0;n=d+80|0;o=d+88|0;p=d+96|0;q=d+104|0;c[k>>2]=37;c[k+4>>2]=0;r=k;k=r+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=k}else{a[k]=43;u=r+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;a[v+1|0]=108;u=v+2|0;v=t&74;do{if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else if((v|0)==64){a[u]=111}else{a[u]=117}}while(0);u=l|0;do{if((a[19040]|0)==0){if((bx(19040)|0)==0){break}c[4176]=a0(2147483647,3232,0)|0}}while(0);v=jj(u,23,c[4176]|0,r,(r=i,i=i+16|0,c[r>>2]=h,c[r+8>>2]=j,r)|0)|0;i=r;r=l+v|0;j=c[s>>2]&176;do{if((j|0)==32){w=r}else if((j|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=l+1|0;break}if(!((v|0)>1&s<<24>>24==48)){x=2540;break}s=a[l+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=2540;break}w=l+2|0}else{x=2540}}while(0);if((x|0)==2540){w=u}x=m|0;hi(p,f);jk(u,w,r,x,n,o,p);gA(c[p>>2]|0)|0;c[q>>2]=c[e>>2];jl(b,q,x,c[n>>2]|0,c[o>>2]|0,f,g);i=d;return}function jp(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=+j;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;d=i;i=i+152|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+40|0;n=d+48|0;o=d+112|0;p=d+120|0;q=d+128|0;r=d+136|0;s=d+144|0;c[k>>2]=37;c[k+4>>2]=0;t=k;k=t+1|0;u=f+4|0;v=c[u>>2]|0;if((v&2048|0)==0){w=k}else{a[k]=43;w=t+2|0}if((v&1024|0)==0){x=w}else{a[w]=35;x=w+1|0}w=v&260;k=v>>>14;do{if((w|0)==260){if((k&1|0)==0){a[x]=97;y=0;break}else{a[x]=65;y=0;break}}else{a[x]=46;v=x+2|0;a[x+1|0]=42;if((w|0)==256){if((k&1|0)==0){a[v]=101;y=1;break}else{a[v]=69;y=1;break}}else if((w|0)==4){if((k&1|0)==0){a[v]=102;y=1;break}else{a[v]=70;y=1;break}}else{if((k&1|0)==0){a[v]=103;y=1;break}else{a[v]=71;y=1;break}}}}while(0);k=l|0;c[m>>2]=k;do{if((a[19040]|0)==0){if((bx(19040)|0)==0){break}c[4176]=a0(2147483647,3232,0)|0}}while(0);l=c[4176]|0;if(y){w=jj(k,30,l,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;A=w}else{w=jj(k,30,l,t,(z=i,i=i+8|0,h[z>>3]=j,z)|0)|0;i=z;A=w}do{if((A|0)>29){w=(a[19040]|0)==0;if(y){do{if(w){if((bx(19040)|0)==0){break}c[4176]=a0(2147483647,3232,0)|0}}while(0);l=jq(m,c[4176]|0,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;B=l}else{do{if(w){if((bx(19040)|0)==0){break}c[4176]=a0(2147483647,3232,0)|0}}while(0);w=jq(m,c[4176]|0,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;B=w}w=c[m>>2]|0;if((w|0)!=0){C=B;D=w;E=w;break}ob();w=c[m>>2]|0;C=B;D=w;E=w}else{C=A;D=0;E=c[m>>2]|0}}while(0);A=E+C|0;B=c[u>>2]&176;do{if((B|0)==16){u=a[E]|0;if((u<<24>>24|0)==45|(u<<24>>24|0)==43){F=E+1|0;break}if(!((C|0)>1&u<<24>>24==48)){G=2596;break}u=a[E+1|0]|0;if(!((u<<24>>24|0)==120|(u<<24>>24|0)==88)){G=2596;break}F=E+2|0}else if((B|0)==32){F=A}else{G=2596}}while(0);if((G|0)==2596){F=E}do{if((E|0)==(k|0)){H=n|0;I=0;J=k}else{G=n$(C<<1)|0;if((G|0)!=0){H=G;I=G;J=E;break}ob();H=0;I=0;J=c[m>>2]|0}}while(0);hi(q,f);jr(J,F,A,H,o,p,q);gA(c[q>>2]|0)|0;q=e|0;c[s>>2]=c[q>>2];jl(r,s,H,c[o>>2]|0,c[p>>2]|0,f,g);g=c[r>>2]|0;c[q>>2]=g;c[b>>2]=g;if((I|0)!=0){n0(I)}if((D|0)==0){i=d;return}n0(D);i=d;return}function jq(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+16|0;g=f|0;h=g;c[h>>2]=e;c[h+4>>2]=0;h=ch(b|0)|0;b=cB(a|0,d|0,g|0)|0;if((h|0)==0){i=f;return b|0}ch(h|0)|0;i=f;return b|0}function jr(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0;l=i;i=i+48|0;m=l|0;n=l+16|0;o=l+32|0;p=k|0;k=c[p>>2]|0;if((c[4534]|0)!=-1){c[n>>2]=18136;c[n+4>>2]=16;c[n+8>>2]=0;gV(18136,n,108)}n=(c[4535]|0)-1|0;q=c[k+8>>2]|0;if((c[k+12>>2]|0)-q>>2>>>0<=n>>>0){r=cy(4)|0;s=r;nG(s);bK(r|0,11832,162)}k=c[q+(n<<2)>>2]|0;if((k|0)==0){r=cy(4)|0;s=r;nG(s);bK(r|0,11832,162)}r=k;s=c[p>>2]|0;if((c[4438]|0)!=-1){c[m>>2]=17752;c[m+4>>2]=16;c[m+8>>2]=0;gV(17752,m,108)}m=(c[4439]|0)-1|0;p=c[s+8>>2]|0;if((c[s+12>>2]|0)-p>>2>>>0<=m>>>0){t=cy(4)|0;u=t;nG(u);bK(t|0,11832,162)}s=c[p+(m<<2)>>2]|0;if((s|0)==0){t=cy(4)|0;u=t;nG(u);bK(t|0,11832,162)}t=s;cV[c[(c[s>>2]|0)+20>>2]&255](o,t);c[j>>2]=g;u=a[b]|0;if((u<<24>>24|0)==45|(u<<24>>24|0)==43){m=c6[c[(c[k>>2]|0)+28>>2]&63](r,u)|0;u=c[j>>2]|0;c[j>>2]=u+1;a[u]=m;v=b+1|0}else{v=b}m=f;L23:do{if((m-v|0)>1){if((a[v]|0)!=48){w=v;x=34;break}u=v+1|0;p=a[u]|0;if(!((p<<24>>24|0)==120|(p<<24>>24|0)==88)){w=v;x=34;break}p=k;n=c6[c[(c[p>>2]|0)+28>>2]&63](r,48)|0;q=c[j>>2]|0;c[j>>2]=q+1;a[q]=n;n=v+2|0;q=c6[c[(c[p>>2]|0)+28>>2]&63](r,a[u]|0)|0;u=c[j>>2]|0;c[j>>2]=u+1;a[u]=q;q=n;while(1){if(q>>>0>=f>>>0){y=q;z=n;break L23}u=a[q]|0;do{if((a[19040]|0)==0){if((bx(19040)|0)==0){break}c[4176]=a0(2147483647,3232,0)|0}}while(0);if((aQ(u<<24>>24|0,c[4176]|0)|0)==0){y=q;z=n;break}else{q=q+1|0}}}else{w=v;x=34}}while(0);L38:do{if((x|0)==34){while(1){x=0;if(w>>>0>=f>>>0){y=w;z=v;break L38}q=a[w]|0;do{if((a[19040]|0)==0){if((bx(19040)|0)==0){break}c[4176]=a0(2147483647,3232,0)|0}}while(0);if((cr(q<<24>>24|0,c[4176]|0)|0)==0){y=w;z=v;break}else{w=w+1|0;x=34}}}}while(0);x=o;w=o;v=d[w]|0;if((v&1|0)==0){A=v>>>1}else{A=c[o+4>>2]|0}do{if((A|0)==0){v=c[j>>2]|0;u=c[(c[k>>2]|0)+32>>2]|0;cX[u&15](r,z,y,v)|0;c[j>>2]=(c[j>>2]|0)+(y-z)}else{do{if((z|0)!=(y|0)){v=y-1|0;if(z>>>0<v>>>0){B=z;C=v}else{break}do{v=a[B]|0;a[B]=a[C]|0;a[C]=v;B=B+1|0;C=C-1|0;}while(B>>>0<C>>>0)}}while(0);q=cZ[c[(c[s>>2]|0)+16>>2]&255](t)|0;if(z>>>0<y>>>0){v=x+1|0;u=o+4|0;n=o+8|0;p=k;D=0;E=0;F=z;while(1){G=(a[w]&1)==0;do{if((a[(G?v:c[n>>2]|0)+E|0]|0)>0){if((D|0)!=(a[(G?v:c[n>>2]|0)+E|0]|0)){H=E;I=D;break}J=c[j>>2]|0;c[j>>2]=J+1;a[J]=q;J=d[w]|0;H=(E>>>0<(((J&1|0)==0?J>>>1:c[u>>2]|0)-1|0)>>>0)+E|0;I=0}else{H=E;I=D}}while(0);G=c6[c[(c[p>>2]|0)+28>>2]&63](r,a[F]|0)|0;J=c[j>>2]|0;c[j>>2]=J+1;a[J]=G;G=F+1|0;if(G>>>0<y>>>0){D=I+1|0;E=H;F=G}else{break}}}F=g+(z-b)|0;E=c[j>>2]|0;if((F|0)==(E|0)){break}D=E-1|0;if(F>>>0<D>>>0){K=F;L=D}else{break}do{D=a[K]|0;a[K]=a[L]|0;a[L]=D;K=K+1|0;L=L-1|0;}while(K>>>0<L>>>0)}}while(0);L77:do{if(y>>>0<f>>>0){L=k;K=y;while(1){z=a[K]|0;if(z<<24>>24==46){break}H=c6[c[(c[L>>2]|0)+28>>2]&63](r,z)|0;z=c[j>>2]|0;c[j>>2]=z+1;a[z]=H;H=K+1|0;if(H>>>0<f>>>0){K=H}else{M=H;break L77}}L=cZ[c[(c[s>>2]|0)+12>>2]&255](t)|0;H=c[j>>2]|0;c[j>>2]=H+1;a[H]=L;M=K+1|0}else{M=y}}while(0);cX[c[(c[k>>2]|0)+32>>2]&15](r,M,f,c[j>>2]|0)|0;r=(c[j>>2]|0)+(m-M)|0;c[j>>2]=r;if((e|0)==(f|0)){N=r;c[h>>2]=N;g_(o);i=l;return}N=g+(e-b)|0;c[h>>2]=N;g_(o);i=l;return}function js(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=+j;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;d=i;i=i+152|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+40|0;n=d+48|0;o=d+112|0;p=d+120|0;q=d+128|0;r=d+136|0;s=d+144|0;c[k>>2]=37;c[k+4>>2]=0;t=k;k=t+1|0;u=f+4|0;v=c[u>>2]|0;if((v&2048|0)==0){w=k}else{a[k]=43;w=t+2|0}if((v&1024|0)==0){x=w}else{a[w]=35;x=w+1|0}w=v&260;k=v>>>14;do{if((w|0)==260){a[x]=76;v=x+1|0;if((k&1|0)==0){a[v]=97;y=0;break}else{a[v]=65;y=0;break}}else{a[x]=46;a[x+1|0]=42;a[x+2|0]=76;v=x+3|0;if((w|0)==4){if((k&1|0)==0){a[v]=102;y=1;break}else{a[v]=70;y=1;break}}else if((w|0)==256){if((k&1|0)==0){a[v]=101;y=1;break}else{a[v]=69;y=1;break}}else{if((k&1|0)==0){a[v]=103;y=1;break}else{a[v]=71;y=1;break}}}}while(0);k=l|0;c[m>>2]=k;do{if((a[19040]|0)==0){if((bx(19040)|0)==0){break}c[4176]=a0(2147483647,3232,0)|0}}while(0);l=c[4176]|0;if(y){w=jj(k,30,l,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;A=w}else{w=jj(k,30,l,t,(z=i,i=i+8|0,h[z>>3]=j,z)|0)|0;i=z;A=w}do{if((A|0)>29){w=(a[19040]|0)==0;if(y){do{if(w){if((bx(19040)|0)==0){break}c[4176]=a0(2147483647,3232,0)|0}}while(0);l=jq(m,c[4176]|0,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;B=l}else{do{if(w){if((bx(19040)|0)==0){break}c[4176]=a0(2147483647,3232,0)|0}}while(0);w=jq(m,c[4176]|0,t,(z=i,i=i+8|0,h[z>>3]=j,z)|0)|0;i=z;B=w}w=c[m>>2]|0;if((w|0)!=0){C=B;D=w;E=w;break}ob();w=c[m>>2]|0;C=B;D=w;E=w}else{C=A;D=0;E=c[m>>2]|0}}while(0);A=E+C|0;B=c[u>>2]&176;do{if((B|0)==16){u=a[E]|0;if((u<<24>>24|0)==45|(u<<24>>24|0)==43){F=E+1|0;break}if(!((C|0)>1&u<<24>>24==48)){G=131;break}u=a[E+1|0]|0;if(!((u<<24>>24|0)==120|(u<<24>>24|0)==88)){G=131;break}F=E+2|0}else if((B|0)==32){F=A}else{G=131}}while(0);if((G|0)==131){F=E}do{if((E|0)==(k|0)){H=n|0;I=0;J=k}else{G=n$(C<<1)|0;if((G|0)!=0){H=G;I=G;J=E;break}ob();H=0;I=0;J=c[m>>2]|0}}while(0);hi(q,f);jr(J,F,A,H,o,p,q);gA(c[q>>2]|0)|0;q=e|0;c[s>>2]=c[q>>2];jl(r,s,H,c[o>>2]|0,c[p>>2]|0,f,g);g=c[r>>2]|0;c[q>>2]=g;c[b>>2]=g;if((I|0)!=0){n0(I)}if((D|0)==0){i=d;return}n0(D);i=d;return}function jt(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;d=i;i=i+104|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+24|0;l=d+48|0;m=d+88|0;n=d+96|0;o=d+16|0;a[o]=a[5072]|0;a[o+1|0]=a[5073]|0;a[o+2|0]=a[5074]|0;a[o+3|0]=a[5075]|0;a[o+4|0]=a[5076]|0;a[o+5|0]=a[5077]|0;p=k|0;do{if((a[19040]|0)==0){if((bx(19040)|0)==0){break}c[4176]=a0(2147483647,3232,0)|0}}while(0);q=jj(p,20,c[4176]|0,o,(o=i,i=i+8|0,c[o>>2]=h,o)|0)|0;i=o;o=k+q|0;h=c[f+4>>2]&176;do{if((h|0)==32){r=o}else if((h|0)==16){s=a[p]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){r=k+1|0;break}if(!((q|0)>1&s<<24>>24==48)){t=164;break}s=a[k+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){t=164;break}r=k+2|0}else{t=164}}while(0);if((t|0)==164){r=p}hi(m,f);t=m|0;m=c[t>>2]|0;if((c[4534]|0)!=-1){c[j>>2]=18136;c[j+4>>2]=16;c[j+8>>2]=0;gV(18136,j,108)}j=(c[4535]|0)-1|0;h=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-h>>2>>>0>j>>>0){s=c[h+(j<<2)>>2]|0;if((s|0)==0){break}u=s;v=c[t>>2]|0;gA(v)|0;v=l|0;w=c[(c[s>>2]|0)+32>>2]|0;cX[w&15](u,p,o,v)|0;u=l+q|0;if((r|0)==(o|0)){x=u;y=e|0;z=c[y>>2]|0;A=n|0;c[A>>2]=z;jl(b,n,v,x,u,f,g);i=d;return}x=l+(r-k)|0;y=e|0;z=c[y>>2]|0;A=n|0;c[A>>2]=z;jl(b,n,v,x,u,f,g);i=d;return}}while(0);d=cy(4)|0;nG(d);bK(d|0,11832,162)}function ju(a){a=a|0;gy(a|0);n6(a);return}function jv(a){a=a|0;gy(a|0);return}function jw(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;j=i;i=i+48|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+16|0;m=j+24|0;n=j+32|0;if((c[f+4>>2]&1|0)==0){o=c[(c[d>>2]|0)+24>>2]|0;c[l>>2]=c[e>>2];c5[o&31](b,d,l,f,g,h&1);i=j;return}hi(m,f);f=m|0;m=c[f>>2]|0;if((c[4436]|0)!=-1){c[k>>2]=17744;c[k+4>>2]=16;c[k+8>>2]=0;gV(17744,k,108)}k=(c[4437]|0)-1|0;g=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-g>>2>>>0>k>>>0){l=c[g+(k<<2)>>2]|0;if((l|0)==0){break}d=l;o=c[f>>2]|0;gA(o)|0;o=c[l>>2]|0;if(h){cV[c[o+24>>2]&255](n,d)}else{cV[c[o+28>>2]&255](n,d)}d=n;o=a[d]|0;if((o&1)==0){l=n+4|0;p=l;q=l;r=n+8|0}else{l=n+8|0;p=c[l>>2]|0;q=n+4|0;r=l}l=e|0;s=p;t=o;while(1){if((t&1)==0){u=q}else{u=c[r>>2]|0}o=t&255;if((o&1|0)==0){v=o>>>1}else{v=c[q>>2]|0}if((s|0)==(u+(v<<2)|0)){break}o=c[s>>2]|0;w=c[l>>2]|0;do{if((w|0)!=0){x=w+24|0;y=c[x>>2]|0;if((y|0)==(c[w+28>>2]|0)){z=c6[c[(c[w>>2]|0)+52>>2]&63](w,o)|0}else{c[x>>2]=y+4;c[y>>2]=o;z=o}if((z|0)!=-1){break}c[l>>2]=0}}while(0);s=s+4|0;t=a[d]|0}c[b>>2]=c[l>>2];g9(n);i=j;return}}while(0);j=cy(4)|0;nG(j);bK(j|0,11832,162)}function jx(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+144|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+8|0;l=d+24|0;m=d+112|0;n=d+120|0;o=d+128|0;p=d+136|0;q=j|0;a[q]=a[5064]|0;a[q+1|0]=a[5065]|0;a[q+2|0]=a[5066]|0;a[q+3|0]=a[5067]|0;a[q+4|0]=a[5068]|0;a[q+5|0]=a[5069]|0;r=j+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=r}else{a[r]=43;u=j+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;u=v+1|0;v=t&74;do{if((v|0)==64){a[u]=111}else if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else{a[u]=100}}while(0);u=k|0;do{if((a[19040]|0)==0){if((bx(19040)|0)==0){break}c[4176]=a0(2147483647,3232,0)|0}}while(0);t=jj(u,12,c[4176]|0,q,(q=i,i=i+8|0,c[q>>2]=h,q)|0)|0;i=q;q=k+t|0;h=c[s>>2]&176;do{if((h|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=k+1|0;break}if(!((t|0)>1&s<<24>>24==48)){x=235;break}s=a[k+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=235;break}w=k+2|0}else if((h|0)==32){w=q}else{x=235}}while(0);if((x|0)==235){w=u}x=l|0;hi(o,f);jy(u,w,q,x,m,n,o);gA(c[o>>2]|0)|0;c[p>>2]=c[e>>2];jz(b,p,x,c[m>>2]|0,c[n>>2]|0,f,g);i=d;return}function jy(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;l=i;i=i+48|0;m=l|0;n=l+16|0;o=l+32|0;p=k|0;k=c[p>>2]|0;if((c[4532]|0)!=-1){c[n>>2]=18128;c[n+4>>2]=16;c[n+8>>2]=0;gV(18128,n,108)}n=(c[4533]|0)-1|0;q=c[k+8>>2]|0;if((c[k+12>>2]|0)-q>>2>>>0<=n>>>0){r=cy(4)|0;s=r;nG(s);bK(r|0,11832,162)}k=c[q+(n<<2)>>2]|0;if((k|0)==0){r=cy(4)|0;s=r;nG(s);bK(r|0,11832,162)}r=k;s=c[p>>2]|0;if((c[4436]|0)!=-1){c[m>>2]=17744;c[m+4>>2]=16;c[m+8>>2]=0;gV(17744,m,108)}m=(c[4437]|0)-1|0;p=c[s+8>>2]|0;if((c[s+12>>2]|0)-p>>2>>>0<=m>>>0){t=cy(4)|0;u=t;nG(u);bK(t|0,11832,162)}s=c[p+(m<<2)>>2]|0;if((s|0)==0){t=cy(4)|0;u=t;nG(u);bK(t|0,11832,162)}t=s;cV[c[(c[s>>2]|0)+20>>2]&255](o,t);u=o;m=o;p=d[m]|0;if((p&1|0)==0){v=p>>>1}else{v=c[o+4>>2]|0}do{if((v|0)==0){p=c[(c[k>>2]|0)+48>>2]|0;cX[p&15](r,b,f,g)|0;c[j>>2]=g+(f-b<<2)}else{c[j>>2]=g;p=a[b]|0;if((p<<24>>24|0)==45|(p<<24>>24|0)==43){n=c6[c[(c[k>>2]|0)+44>>2]&63](r,p)|0;p=c[j>>2]|0;c[j>>2]=p+4;c[p>>2]=n;w=b+1|0}else{w=b}do{if((f-w|0)>1){if((a[w]|0)!=48){x=w;break}n=w+1|0;p=a[n]|0;if(!((p<<24>>24|0)==120|(p<<24>>24|0)==88)){x=w;break}p=k;q=c6[c[(c[p>>2]|0)+44>>2]&63](r,48)|0;y=c[j>>2]|0;c[j>>2]=y+4;c[y>>2]=q;q=c6[c[(c[p>>2]|0)+44>>2]&63](r,a[n]|0)|0;n=c[j>>2]|0;c[j>>2]=n+4;c[n>>2]=q;x=w+2|0}else{x=w}}while(0);do{if((x|0)!=(f|0)){q=f-1|0;if(x>>>0<q>>>0){z=x;A=q}else{break}do{q=a[z]|0;a[z]=a[A]|0;a[A]=q;z=z+1|0;A=A-1|0;}while(z>>>0<A>>>0)}}while(0);q=cZ[c[(c[s>>2]|0)+16>>2]&255](t)|0;if(x>>>0<f>>>0){n=u+1|0;p=k;y=o+4|0;B=o+8|0;C=0;D=0;E=x;while(1){F=(a[m]&1)==0;do{if((a[(F?n:c[B>>2]|0)+D|0]|0)==0){G=D;H=C}else{if((C|0)!=(a[(F?n:c[B>>2]|0)+D|0]|0)){G=D;H=C;break}I=c[j>>2]|0;c[j>>2]=I+4;c[I>>2]=q;I=d[m]|0;G=(D>>>0<(((I&1|0)==0?I>>>1:c[y>>2]|0)-1|0)>>>0)+D|0;H=0}}while(0);F=c6[c[(c[p>>2]|0)+44>>2]&63](r,a[E]|0)|0;I=c[j>>2]|0;c[j>>2]=I+4;c[I>>2]=F;F=E+1|0;if(F>>>0<f>>>0){C=H+1|0;D=G;E=F}else{break}}}E=g+(x-b<<2)|0;D=c[j>>2]|0;if((E|0)==(D|0)){break}C=D-4|0;if(E>>>0<C>>>0){J=E;K=C}else{break}do{C=c[J>>2]|0;c[J>>2]=c[K>>2];c[K>>2]=C;J=J+4|0;K=K-4|0;}while(J>>>0<K>>>0)}}while(0);if((e|0)==(f|0)){L=c[j>>2]|0;c[h>>2]=L;g_(o);i=l;return}else{L=g+(e-b<<2)|0;c[h>>2]=L;g_(o);i=l;return}}function jz(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;k=i;i=i+16|0;l=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[l>>2];l=k|0;m=d|0;d=c[m>>2]|0;if((d|0)==0){c[b>>2]=0;i=k;return}n=g;g=e;o=n-g>>2;p=h+12|0;h=c[p>>2]|0;q=(h|0)>(o|0)?h-o|0:0;o=f;h=o-g|0;g=h>>2;do{if((h|0)>0){if((c_[c[(c[d>>2]|0)+48>>2]&63](d,e,g)|0)==(g|0)){break}c[m>>2]=0;c[b>>2]=0;i=k;return}}while(0);do{if((q|0)>0){g8(l,q,j);if((a[l]&1)==0){r=l+4|0}else{r=c[l+8>>2]|0}if((c_[c[(c[d>>2]|0)+48>>2]&63](d,r,q)|0)==(q|0)){g9(l);break}c[m>>2]=0;c[b>>2]=0;g9(l);i=k;return}}while(0);l=n-o|0;o=l>>2;do{if((l|0)>0){if((c_[c[(c[d>>2]|0)+48>>2]&63](d,f,o)|0)==(o|0)){break}c[m>>2]=0;c[b>>2]=0;i=k;return}}while(0);c[p>>2]=0;c[b>>2]=d;i=k;return}function jA(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+232|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+32|0;n=d+200|0;o=d+208|0;p=d+216|0;q=d+224|0;c[k>>2]=37;c[k+4>>2]=0;r=k;k=r+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=k}else{a[k]=43;u=r+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;a[v+1|0]=108;u=v+2|0;v=t&74;do{if((v|0)==64){a[u]=111}else if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else{a[u]=100}}while(0);u=l|0;do{if((a[19040]|0)==0){if((bx(19040)|0)==0){break}c[4176]=a0(2147483647,3232,0)|0}}while(0);t=jj(u,22,c[4176]|0,r,(r=i,i=i+16|0,c[r>>2]=h,c[r+8>>2]=j,r)|0)|0;i=r;r=l+t|0;j=c[s>>2]&176;do{if((j|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=l+1|0;break}if(!((t|0)>1&s<<24>>24==48)){x=336;break}s=a[l+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=336;break}w=l+2|0}else if((j|0)==32){w=r}else{x=336}}while(0);if((x|0)==336){w=u}x=m|0;hi(p,f);jy(u,w,r,x,n,o,p);gA(c[p>>2]|0)|0;c[q>>2]=c[e>>2];jz(b,q,x,c[n>>2]|0,c[o>>2]|0,f,g);i=d;return}function jB(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+144|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+8|0;l=d+24|0;m=d+112|0;n=d+120|0;o=d+128|0;p=d+136|0;q=j|0;a[q]=a[5064]|0;a[q+1|0]=a[5065]|0;a[q+2|0]=a[5066]|0;a[q+3|0]=a[5067]|0;a[q+4|0]=a[5068]|0;a[q+5|0]=a[5069]|0;r=j+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=r}else{a[r]=43;u=j+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;u=v+1|0;v=t&74;do{if((v|0)==64){a[u]=111}else if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else{a[u]=117}}while(0);u=k|0;do{if((a[19040]|0)==0){if((bx(19040)|0)==0){break}c[4176]=a0(2147483647,3232,0)|0}}while(0);t=jj(u,12,c[4176]|0,q,(q=i,i=i+8|0,c[q>>2]=h,q)|0)|0;i=q;q=k+t|0;h=c[s>>2]&176;do{if((h|0)==32){w=q}else if((h|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=k+1|0;break}if(!((t|0)>1&s<<24>>24==48)){x=361;break}s=a[k+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=361;break}w=k+2|0}else{x=361}}while(0);if((x|0)==361){w=u}x=l|0;hi(o,f);jy(u,w,q,x,m,n,o);gA(c[o>>2]|0)|0;c[p>>2]=c[e>>2];jz(b,p,x,c[m>>2]|0,c[n>>2]|0,f,g);i=d;return}function jC(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+240|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+32|0;n=d+208|0;o=d+216|0;p=d+224|0;q=d+232|0;c[k>>2]=37;c[k+4>>2]=0;r=k;k=r+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=k}else{a[k]=43;u=r+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;a[v+1|0]=108;u=v+2|0;v=t&74;do{if((v|0)==64){a[u]=111}else if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else{a[u]=117}}while(0);u=l|0;do{if((a[19040]|0)==0){if((bx(19040)|0)==0){break}c[4176]=a0(2147483647,3232,0)|0}}while(0);t=jj(u,23,c[4176]|0,r,(r=i,i=i+16|0,c[r>>2]=h,c[r+8>>2]=j,r)|0)|0;i=r;r=l+t|0;j=c[s>>2]&176;do{if((j|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=l+1|0;break}if(!((t|0)>1&s<<24>>24==48)){x=386;break}s=a[l+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=386;break}w=l+2|0}else if((j|0)==32){w=r}else{x=386}}while(0);if((x|0)==386){w=u}x=m|0;hi(p,f);jy(u,w,r,x,n,o,p);gA(c[p>>2]|0)|0;c[q>>2]=c[e>>2];jz(b,q,x,c[n>>2]|0,c[o>>2]|0,f,g);i=d;return}function jD(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=+j;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;d=i;i=i+320|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+40|0;n=d+48|0;o=d+280|0;p=d+288|0;q=d+296|0;r=d+304|0;s=d+312|0;c[k>>2]=37;c[k+4>>2]=0;t=k;k=t+1|0;u=f+4|0;v=c[u>>2]|0;if((v&2048|0)==0){w=k}else{a[k]=43;w=t+2|0}if((v&1024|0)==0){x=w}else{a[w]=35;x=w+1|0}w=v&260;k=v>>>14;do{if((w|0)==260){if((k&1|0)==0){a[x]=97;y=0;break}else{a[x]=65;y=0;break}}else{a[x]=46;v=x+2|0;a[x+1|0]=42;if((w|0)==4){if((k&1|0)==0){a[v]=102;y=1;break}else{a[v]=70;y=1;break}}else if((w|0)==256){if((k&1|0)==0){a[v]=101;y=1;break}else{a[v]=69;y=1;break}}else{if((k&1|0)==0){a[v]=103;y=1;break}else{a[v]=71;y=1;break}}}}while(0);k=l|0;c[m>>2]=k;do{if((a[19040]|0)==0){if((bx(19040)|0)==0){break}c[4176]=a0(2147483647,3232,0)|0}}while(0);l=c[4176]|0;if(y){w=jj(k,30,l,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;A=w}else{w=jj(k,30,l,t,(z=i,i=i+8|0,h[z>>3]=j,z)|0)|0;i=z;A=w}do{if((A|0)>29){w=(a[19040]|0)==0;if(y){do{if(w){if((bx(19040)|0)==0){break}c[4176]=a0(2147483647,3232,0)|0}}while(0);l=jq(m,c[4176]|0,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;B=l}else{do{if(w){if((bx(19040)|0)==0){break}c[4176]=a0(2147483647,3232,0)|0}}while(0);w=jq(m,c[4176]|0,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;B=w}w=c[m>>2]|0;if((w|0)!=0){C=B;D=w;E=w;break}ob();w=c[m>>2]|0;C=B;D=w;E=w}else{C=A;D=0;E=c[m>>2]|0}}while(0);A=E+C|0;B=c[u>>2]&176;do{if((B|0)==16){u=a[E]|0;if((u<<24>>24|0)==45|(u<<24>>24|0)==43){F=E+1|0;break}if(!((C|0)>1&u<<24>>24==48)){G=442;break}u=a[E+1|0]|0;if(!((u<<24>>24|0)==120|(u<<24>>24|0)==88)){G=442;break}F=E+2|0}else if((B|0)==32){F=A}else{G=442}}while(0);if((G|0)==442){F=E}do{if((E|0)==(k|0)){H=n|0;I=0;J=k}else{G=n$(C<<3)|0;B=G;if((G|0)!=0){H=B;I=B;J=E;break}ob();H=B;I=B;J=c[m>>2]|0}}while(0);hi(q,f);jE(J,F,A,H,o,p,q);gA(c[q>>2]|0)|0;q=e|0;c[s>>2]=c[q>>2];jz(r,s,H,c[o>>2]|0,c[p>>2]|0,f,g);g=c[r>>2]|0;c[q>>2]=g;c[b>>2]=g;if((I|0)!=0){n0(I)}if((D|0)==0){i=d;return}n0(D);i=d;return}function jE(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0;l=i;i=i+48|0;m=l|0;n=l+16|0;o=l+32|0;p=k|0;k=c[p>>2]|0;if((c[4532]|0)!=-1){c[n>>2]=18128;c[n+4>>2]=16;c[n+8>>2]=0;gV(18128,n,108)}n=(c[4533]|0)-1|0;q=c[k+8>>2]|0;if((c[k+12>>2]|0)-q>>2>>>0<=n>>>0){r=cy(4)|0;s=r;nG(s);bK(r|0,11832,162)}k=c[q+(n<<2)>>2]|0;if((k|0)==0){r=cy(4)|0;s=r;nG(s);bK(r|0,11832,162)}r=k;s=c[p>>2]|0;if((c[4436]|0)!=-1){c[m>>2]=17744;c[m+4>>2]=16;c[m+8>>2]=0;gV(17744,m,108)}m=(c[4437]|0)-1|0;p=c[s+8>>2]|0;if((c[s+12>>2]|0)-p>>2>>>0<=m>>>0){t=cy(4)|0;u=t;nG(u);bK(t|0,11832,162)}s=c[p+(m<<2)>>2]|0;if((s|0)==0){t=cy(4)|0;u=t;nG(u);bK(t|0,11832,162)}t=s;cV[c[(c[s>>2]|0)+20>>2]&255](o,t);c[j>>2]=g;u=a[b]|0;if((u<<24>>24|0)==45|(u<<24>>24|0)==43){m=c6[c[(c[k>>2]|0)+44>>2]&63](r,u)|0;u=c[j>>2]|0;c[j>>2]=u+4;c[u>>2]=m;v=b+1|0}else{v=b}m=f;L562:do{if((m-v|0)>1){if((a[v]|0)!=48){w=v;x=497;break}u=v+1|0;p=a[u]|0;if(!((p<<24>>24|0)==120|(p<<24>>24|0)==88)){w=v;x=497;break}p=k;n=c6[c[(c[p>>2]|0)+44>>2]&63](r,48)|0;q=c[j>>2]|0;c[j>>2]=q+4;c[q>>2]=n;n=v+2|0;q=c6[c[(c[p>>2]|0)+44>>2]&63](r,a[u]|0)|0;u=c[j>>2]|0;c[j>>2]=u+4;c[u>>2]=q;q=n;while(1){if(q>>>0>=f>>>0){y=q;z=n;break L562}u=a[q]|0;do{if((a[19040]|0)==0){if((bx(19040)|0)==0){break}c[4176]=a0(2147483647,3232,0)|0}}while(0);if((aQ(u<<24>>24|0,c[4176]|0)|0)==0){y=q;z=n;break}else{q=q+1|0}}}else{w=v;x=497}}while(0);L577:do{if((x|0)==497){while(1){x=0;if(w>>>0>=f>>>0){y=w;z=v;break L577}q=a[w]|0;do{if((a[19040]|0)==0){if((bx(19040)|0)==0){break}c[4176]=a0(2147483647,3232,0)|0}}while(0);if((cr(q<<24>>24|0,c[4176]|0)|0)==0){y=w;z=v;break}else{w=w+1|0;x=497}}}}while(0);x=o;w=o;v=d[w]|0;if((v&1|0)==0){A=v>>>1}else{A=c[o+4>>2]|0}do{if((A|0)==0){v=c[j>>2]|0;u=c[(c[k>>2]|0)+48>>2]|0;cX[u&15](r,z,y,v)|0;c[j>>2]=(c[j>>2]|0)+(y-z<<2)}else{do{if((z|0)!=(y|0)){v=y-1|0;if(z>>>0<v>>>0){B=z;C=v}else{break}do{v=a[B]|0;a[B]=a[C]|0;a[C]=v;B=B+1|0;C=C-1|0;}while(B>>>0<C>>>0)}}while(0);q=cZ[c[(c[s>>2]|0)+16>>2]&255](t)|0;if(z>>>0<y>>>0){v=x+1|0;u=o+4|0;n=o+8|0;p=k;D=0;E=0;F=z;while(1){G=(a[w]&1)==0;do{if((a[(G?v:c[n>>2]|0)+E|0]|0)>0){if((D|0)!=(a[(G?v:c[n>>2]|0)+E|0]|0)){H=E;I=D;break}J=c[j>>2]|0;c[j>>2]=J+4;c[J>>2]=q;J=d[w]|0;H=(E>>>0<(((J&1|0)==0?J>>>1:c[u>>2]|0)-1|0)>>>0)+E|0;I=0}else{H=E;I=D}}while(0);G=c6[c[(c[p>>2]|0)+44>>2]&63](r,a[F]|0)|0;J=c[j>>2]|0;c[j>>2]=J+4;c[J>>2]=G;G=F+1|0;if(G>>>0<y>>>0){D=I+1|0;E=H;F=G}else{break}}}F=g+(z-b<<2)|0;E=c[j>>2]|0;if((F|0)==(E|0)){break}D=E-4|0;if(F>>>0<D>>>0){K=F;L=D}else{break}do{D=c[K>>2]|0;c[K>>2]=c[L>>2];c[L>>2]=D;K=K+4|0;L=L-4|0;}while(K>>>0<L>>>0)}}while(0);L616:do{if(y>>>0<f>>>0){L=k;K=y;while(1){z=a[K]|0;if(z<<24>>24==46){break}H=c6[c[(c[L>>2]|0)+44>>2]&63](r,z)|0;z=c[j>>2]|0;c[j>>2]=z+4;c[z>>2]=H;H=K+1|0;if(H>>>0<f>>>0){K=H}else{M=H;break L616}}L=cZ[c[(c[s>>2]|0)+12>>2]&255](t)|0;H=c[j>>2]|0;c[j>>2]=H+4;c[H>>2]=L;M=K+1|0}else{M=y}}while(0);cX[c[(c[k>>2]|0)+48>>2]&15](r,M,f,c[j>>2]|0)|0;r=(c[j>>2]|0)+(m-M<<2)|0;c[j>>2]=r;if((e|0)==(f|0)){N=r;c[h>>2]=N;g_(o);i=l;return}N=g+(e-b<<2)|0;c[h>>2]=N;g_(o);i=l;return}function jF(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=+j;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;d=i;i=i+320|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+40|0;n=d+48|0;o=d+280|0;p=d+288|0;q=d+296|0;r=d+304|0;s=d+312|0;c[k>>2]=37;c[k+4>>2]=0;t=k;k=t+1|0;u=f+4|0;v=c[u>>2]|0;if((v&2048|0)==0){w=k}else{a[k]=43;w=t+2|0}if((v&1024|0)==0){x=w}else{a[w]=35;x=w+1|0}w=v&260;k=v>>>14;do{if((w|0)==260){a[x]=76;v=x+1|0;if((k&1|0)==0){a[v]=97;y=0;break}else{a[v]=65;y=0;break}}else{a[x]=46;a[x+1|0]=42;a[x+2|0]=76;v=x+3|0;if((w|0)==4){if((k&1|0)==0){a[v]=102;y=1;break}else{a[v]=70;y=1;break}}else if((w|0)==256){if((k&1|0)==0){a[v]=101;y=1;break}else{a[v]=69;y=1;break}}else{if((k&1|0)==0){a[v]=103;y=1;break}else{a[v]=71;y=1;break}}}}while(0);k=l|0;c[m>>2]=k;do{if((a[19040]|0)==0){if((bx(19040)|0)==0){break}c[4176]=a0(2147483647,3232,0)|0}}while(0);l=c[4176]|0;if(y){w=jj(k,30,l,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;A=w}else{w=jj(k,30,l,t,(z=i,i=i+8|0,h[z>>3]=j,z)|0)|0;i=z;A=w}do{if((A|0)>29){w=(a[19040]|0)==0;if(y){do{if(w){if((bx(19040)|0)==0){break}c[4176]=a0(2147483647,3232,0)|0}}while(0);l=jq(m,c[4176]|0,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;B=l}else{do{if(w){if((bx(19040)|0)==0){break}c[4176]=a0(2147483647,3232,0)|0}}while(0);w=jq(m,c[4176]|0,t,(z=i,i=i+8|0,h[z>>3]=j,z)|0)|0;i=z;B=w}w=c[m>>2]|0;if((w|0)!=0){C=B;D=w;E=w;break}ob();w=c[m>>2]|0;C=B;D=w;E=w}else{C=A;D=0;E=c[m>>2]|0}}while(0);A=E+C|0;B=c[u>>2]&176;do{if((B|0)==16){u=a[E]|0;if((u<<24>>24|0)==45|(u<<24>>24|0)==43){F=E+1|0;break}if(!((C|0)>1&u<<24>>24==48)){G=594;break}u=a[E+1|0]|0;if(!((u<<24>>24|0)==120|(u<<24>>24|0)==88)){G=594;break}F=E+2|0}else if((B|0)==32){F=A}else{G=594}}while(0);if((G|0)==594){F=E}do{if((E|0)==(k|0)){H=n|0;I=0;J=k}else{G=n$(C<<3)|0;B=G;if((G|0)!=0){H=B;I=B;J=E;break}ob();H=B;I=B;J=c[m>>2]|0}}while(0);hi(q,f);jE(J,F,A,H,o,p,q);gA(c[q>>2]|0)|0;q=e|0;c[s>>2]=c[q>>2];jz(r,s,H,c[o>>2]|0,c[p>>2]|0,f,g);g=c[r>>2]|0;c[q>>2]=g;c[b>>2]=g;if((I|0)!=0){n0(I)}if((D|0)==0){i=d;return}n0(D);i=d;return}function jG(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;d=i;i=i+216|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+24|0;l=d+48|0;m=d+200|0;n=d+208|0;o=d+16|0;a[o]=a[5072]|0;a[o+1|0]=a[5073]|0;a[o+2|0]=a[5074]|0;a[o+3|0]=a[5075]|0;a[o+4|0]=a[5076]|0;a[o+5|0]=a[5077]|0;p=k|0;do{if((a[19040]|0)==0){if((bx(19040)|0)==0){break}c[4176]=a0(2147483647,3232,0)|0}}while(0);q=jj(p,20,c[4176]|0,o,(o=i,i=i+8|0,c[o>>2]=h,o)|0)|0;i=o;o=k+q|0;h=c[f+4>>2]&176;do{if((h|0)==16){r=a[p]|0;if((r<<24>>24|0)==45|(r<<24>>24|0)==43){s=k+1|0;break}if(!((q|0)>1&r<<24>>24==48)){t=627;break}r=a[k+1|0]|0;if(!((r<<24>>24|0)==120|(r<<24>>24|0)==88)){t=627;break}s=k+2|0}else if((h|0)==32){s=o}else{t=627}}while(0);if((t|0)==627){s=p}hi(m,f);t=m|0;m=c[t>>2]|0;if((c[4532]|0)!=-1){c[j>>2]=18128;c[j+4>>2]=16;c[j+8>>2]=0;gV(18128,j,108)}j=(c[4533]|0)-1|0;h=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-h>>2>>>0>j>>>0){r=c[h+(j<<2)>>2]|0;if((r|0)==0){break}u=r;v=c[t>>2]|0;gA(v)|0;v=l|0;w=c[(c[r>>2]|0)+48>>2]|0;cX[w&15](u,p,o,v)|0;u=l+(q<<2)|0;if((s|0)==(o|0)){x=u;y=e|0;z=c[y>>2]|0;A=n|0;c[A>>2]=z;jz(b,n,v,x,u,f,g);i=d;return}x=l+(s-k<<2)|0;y=e|0;z=c[y>>2]|0;A=n|0;c[A>>2]=z;jz(b,n,v,x,u,f,g);i=d;return}}while(0);d=cy(4)|0;nG(d);bK(d|0,11832,162)}function jH(d,e,f,g,h,j,k,l,m){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0;n=i;i=i+48|0;o=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[o>>2];o=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[o>>2];o=n|0;p=n+16|0;q=n+24|0;r=n+32|0;s=n+40|0;hi(p,h);t=p|0;p=c[t>>2]|0;if((c[4534]|0)!=-1){c[o>>2]=18136;c[o+4>>2]=16;c[o+8>>2]=0;gV(18136,o,108)}o=(c[4535]|0)-1|0;u=c[p+8>>2]|0;do{if((c[p+12>>2]|0)-u>>2>>>0>o>>>0){v=c[u+(o<<2)>>2]|0;if((v|0)==0){break}w=v;x=c[t>>2]|0;gA(x)|0;c[j>>2]=0;x=f|0;L746:do{if((l|0)==(m|0)){y=706}else{z=g|0;A=v;B=v;C=v+8|0;D=e;E=r|0;F=s|0;G=q|0;H=l;I=0;L748:while(1){J=I;while(1){if((J|0)!=0){y=706;break L746}K=c[x>>2]|0;do{if((K|0)==0){L=0}else{if((c[K+12>>2]|0)!=(c[K+16>>2]|0)){L=K;break}if((cZ[c[(c[K>>2]|0)+36>>2]&255](K)|0)!=-1){L=K;break}c[x>>2]=0;L=0}}while(0);K=(L|0)==0;M=c[z>>2]|0;L758:do{if((M|0)==0){y=659}else{do{if((c[M+12>>2]|0)==(c[M+16>>2]|0)){if((cZ[c[(c[M>>2]|0)+36>>2]&255](M)|0)!=-1){break}c[z>>2]=0;y=659;break L758}}while(0);if(K){N=M}else{y=660;break L748}}}while(0);if((y|0)==659){y=0;if(K){y=660;break L748}else{N=0}}if((c_[c[(c[A>>2]|0)+36>>2]&63](w,a[H]|0,0)|0)<<24>>24==37){y=663;break}M=a[H]|0;if(M<<24>>24>=0){O=c[C>>2]|0;if((b[O+(M<<24>>24<<1)>>1]&8192)!=0){P=H;y=674;break}}Q=L+12|0;M=c[Q>>2]|0;R=L+16|0;if((M|0)==(c[R>>2]|0)){S=(cZ[c[(c[L>>2]|0)+36>>2]&255](L)|0)&255}else{S=a[M]|0}M=c6[c[(c[B>>2]|0)+12>>2]&63](w,S)|0;if(M<<24>>24==(c6[c[(c[B>>2]|0)+12>>2]&63](w,a[H]|0)|0)<<24>>24){y=701;break}c[j>>2]=4;J=4}L776:do{if((y|0)==663){y=0;J=H+1|0;if((J|0)==(m|0)){y=664;break L748}M=c_[c[(c[A>>2]|0)+36>>2]&63](w,a[J]|0,0)|0;if((M<<24>>24|0)==69|(M<<24>>24|0)==48){T=H+2|0;if((T|0)==(m|0)){y=667;break L748}U=M;V=c_[c[(c[A>>2]|0)+36>>2]&63](w,a[T]|0,0)|0;W=T}else{U=0;V=M;W=J}J=c[(c[D>>2]|0)+36>>2]|0;c[E>>2]=L;c[F>>2]=N;c3[J&7](q,e,r,s,h,j,k,V,U);c[x>>2]=c[G>>2];X=W+1|0}else if((y|0)==701){y=0;J=c[Q>>2]|0;if((J|0)==(c[R>>2]|0)){M=c[(c[L>>2]|0)+40>>2]|0;cZ[M&255](L)|0}else{c[Q>>2]=J+1}X=H+1|0}else if((y|0)==674){while(1){y=0;J=P+1|0;if((J|0)==(m|0)){Y=m;break}M=a[J]|0;if(M<<24>>24<0){Y=J;break}if((b[O+(M<<24>>24<<1)>>1]&8192)==0){Y=J;break}else{P=J;y=674}}K=L;J=N;while(1){do{if((K|0)==0){Z=0}else{if((c[K+12>>2]|0)!=(c[K+16>>2]|0)){Z=K;break}if((cZ[c[(c[K>>2]|0)+36>>2]&255](K)|0)!=-1){Z=K;break}c[x>>2]=0;Z=0}}while(0);M=(Z|0)==0;do{if((J|0)==0){y=687}else{if((c[J+12>>2]|0)!=(c[J+16>>2]|0)){if(M){_=J;break}else{X=Y;break L776}}if((cZ[c[(c[J>>2]|0)+36>>2]&255](J)|0)==-1){c[z>>2]=0;y=687;break}else{if(M^(J|0)==0){_=J;break}else{X=Y;break L776}}}}while(0);if((y|0)==687){y=0;if(M){X=Y;break L776}else{_=0}}T=Z+12|0;$=c[T>>2]|0;aa=Z+16|0;if(($|0)==(c[aa>>2]|0)){ab=(cZ[c[(c[Z>>2]|0)+36>>2]&255](Z)|0)&255}else{ab=a[$]|0}if(ab<<24>>24<0){X=Y;break L776}if((b[(c[C>>2]|0)+(ab<<24>>24<<1)>>1]&8192)==0){X=Y;break L776}$=c[T>>2]|0;if(($|0)==(c[aa>>2]|0)){aa=c[(c[Z>>2]|0)+40>>2]|0;cZ[aa&255](Z)|0;K=Z;J=_;continue}else{c[T>>2]=$+1;K=Z;J=_;continue}}}}while(0);if((X|0)==(m|0)){y=706;break L746}H=X;I=c[j>>2]|0}if((y|0)==667){c[j>>2]=4;ac=L;break}else if((y|0)==660){c[j>>2]=4;ac=L;break}else if((y|0)==664){c[j>>2]=4;ac=L;break}}}while(0);if((y|0)==706){ac=c[x>>2]|0}w=f|0;do{if((ac|0)!=0){if((c[ac+12>>2]|0)!=(c[ac+16>>2]|0)){break}if((cZ[c[(c[ac>>2]|0)+36>>2]&255](ac)|0)!=-1){break}c[w>>2]=0}}while(0);x=c[w>>2]|0;v=(x|0)==0;I=g|0;H=c[I>>2]|0;L834:do{if((H|0)==0){y=716}else{do{if((c[H+12>>2]|0)==(c[H+16>>2]|0)){if((cZ[c[(c[H>>2]|0)+36>>2]&255](H)|0)!=-1){break}c[I>>2]=0;y=716;break L834}}while(0);if(!v){break}ad=d|0;c[ad>>2]=x;i=n;return}}while(0);do{if((y|0)==716){if(v){break}ad=d|0;c[ad>>2]=x;i=n;return}}while(0);c[j>>2]=c[j>>2]|2;ad=d|0;c[ad>>2]=x;i=n;return}}while(0);n=cy(4)|0;nG(n);bK(n|0,11832,162)}function jI(a){a=a|0;gy(a|0);n6(a);return}function jJ(a){a=a|0;gy(a|0);return}function jK(a){a=a|0;return 2}function jL(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;j=i;i=i+16|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;c[k>>2]=c[d>>2];c[l>>2]=c[e>>2];jH(a,b,k,l,f,g,h,5056,5064);i=j;return}function jM(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;k=i;i=i+16|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=k|0;m=k+8|0;n=d+8|0;o=cZ[c[(c[n>>2]|0)+20>>2]&255](n)|0;c[l>>2]=c[e>>2];c[m>>2]=c[f>>2];f=o;e=a[o]|0;if((e&1)==0){p=f+1|0;q=f+1|0}else{f=c[o+8>>2]|0;p=f;q=f}f=e&255;if((f&1|0)==0){r=f>>>1}else{r=c[o+4>>2]|0}jH(b,d,l,m,g,h,j,q,p+r|0);i=k;return}function jN(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;j=i;i=i+32|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;m=j+24|0;hi(m,f);f=m|0;m=c[f>>2]|0;if((c[4534]|0)!=-1){c[l>>2]=18136;c[l+4>>2]=16;c[l+8>>2]=0;gV(18136,l,108)}l=(c[4535]|0)-1|0;n=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-n>>2>>>0>l>>>0){o=c[n+(l<<2)>>2]|0;if((o|0)==0){break}p=o;o=c[f>>2]|0;gA(o)|0;o=c[e>>2]|0;q=b+8|0;r=cZ[c[c[q>>2]>>2]&255](q)|0;c[k>>2]=o;o=(ir(d,k,r,r+168|0,p,g,0)|0)-r|0;if((o|0)>=168){s=d|0;t=c[s>>2]|0;u=a|0;c[u>>2]=t;i=j;return}c[h+24>>2]=((o|0)/12|0|0)%7|0;s=d|0;t=c[s>>2]|0;u=a|0;c[u>>2]=t;i=j;return}}while(0);j=cy(4)|0;nG(j);bK(j|0,11832,162)}function jO(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;j=i;i=i+32|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;m=j+24|0;hi(m,f);f=m|0;m=c[f>>2]|0;if((c[4534]|0)!=-1){c[l>>2]=18136;c[l+4>>2]=16;c[l+8>>2]=0;gV(18136,l,108)}l=(c[4535]|0)-1|0;n=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-n>>2>>>0>l>>>0){o=c[n+(l<<2)>>2]|0;if((o|0)==0){break}p=o;o=c[f>>2]|0;gA(o)|0;o=c[e>>2]|0;q=b+8|0;r=cZ[c[(c[q>>2]|0)+4>>2]&255](q)|0;c[k>>2]=o;o=(ir(d,k,r,r+288|0,p,g,0)|0)-r|0;if((o|0)>=288){s=d|0;t=c[s>>2]|0;u=a|0;c[u>>2]=t;i=j;return}c[h+16>>2]=((o|0)/12|0|0)%12|0;s=d|0;t=c[s>>2]|0;u=a|0;c[u>>2]=t;i=j;return}}while(0);j=cy(4)|0;nG(j);bK(j|0,11832,162)}function jP(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;b=i;i=i+32|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;l=b+24|0;hi(l,f);f=l|0;l=c[f>>2]|0;if((c[4534]|0)!=-1){c[k>>2]=18136;c[k+4>>2]=16;c[k+8>>2]=0;gV(18136,k,108)}k=(c[4535]|0)-1|0;m=c[l+8>>2]|0;do{if((c[l+12>>2]|0)-m>>2>>>0>k>>>0){n=c[m+(k<<2)>>2]|0;if((n|0)==0){break}o=n;n=c[f>>2]|0;gA(n)|0;c[j>>2]=c[e>>2];n=jU(d,j,g,o,4)|0;if((c[g>>2]&4|0)!=0){p=d|0;q=c[p>>2]|0;r=a|0;c[r>>2]=q;i=b;return}if((n|0)<69){s=n+2e3|0}else{s=(n-69|0)>>>0<31>>>0?n+1900|0:n}c[h+20>>2]=s-1900;p=d|0;q=c[p>>2]|0;r=a|0;c[r>>2]=q;i=b;return}}while(0);b=cy(4)|0;nG(b);bK(b|0,11832,162)}function jQ(b,d,e,f,g,h,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0;l=i;i=i+328|0;m=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[m>>2];m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=l|0;n=l+8|0;o=l+16|0;p=l+24|0;q=l+32|0;r=l+40|0;s=l+48|0;t=l+56|0;u=l+64|0;v=l+72|0;w=l+80|0;x=l+88|0;y=l+96|0;z=l+112|0;A=l+120|0;B=l+128|0;C=l+136|0;D=l+144|0;E=l+152|0;F=l+160|0;G=l+168|0;H=l+176|0;I=l+184|0;J=l+192|0;K=l+200|0;L=l+208|0;M=l+216|0;N=l+224|0;O=l+232|0;P=l+240|0;Q=l+248|0;R=l+256|0;S=l+264|0;T=l+272|0;U=l+280|0;V=l+288|0;W=l+296|0;X=l+304|0;Y=l+312|0;Z=l+320|0;c[h>>2]=0;hi(z,g);_=z|0;z=c[_>>2]|0;if((c[4534]|0)!=-1){c[y>>2]=18136;c[y+4>>2]=16;c[y+8>>2]=0;gV(18136,y,108)}y=(c[4535]|0)-1|0;$=c[z+8>>2]|0;do{if((c[z+12>>2]|0)-$>>2>>>0>y>>>0){aa=c[$+(y<<2)>>2]|0;if((aa|0)==0){break}ab=aa;aa=c[_>>2]|0;gA(aa)|0;L911:do{switch(k<<24>>24|0){case 106:{c[s>>2]=c[f>>2];aa=jU(e,s,h,ab,3)|0;ac=c[h>>2]|0;if((ac&4|0)==0&(aa|0)<366){c[j+28>>2]=aa;break L911}else{c[h>>2]=ac|4;break L911}break};case 109:{c[r>>2]=c[f>>2];ac=(jU(e,r,h,ab,2)|0)-1|0;aa=c[h>>2]|0;if((aa&4|0)==0&(ac|0)<12){c[j+16>>2]=ac;break L911}else{c[h>>2]=aa|4;break L911}break};case 110:case 116:{c[J>>2]=c[f>>2];jR(0,e,J,h,ab);break};case 112:{c[K>>2]=c[f>>2];jS(d,j+8|0,e,K,h,ab);break};case 114:{aa=e|0;c[M>>2]=c[aa>>2];c[N>>2]=c[f>>2];jH(L,d,M,N,g,h,j,5024,5035);c[aa>>2]=c[L>>2];break};case 120:{aa=c[(c[d>>2]|0)+20>>2]|0;c[U>>2]=c[e>>2];c[V>>2]=c[f>>2];c$[aa&127](b,d,U,V,g,h,j);i=l;return};case 77:{c[q>>2]=c[f>>2];aa=jU(e,q,h,ab,2)|0;ac=c[h>>2]|0;if((ac&4|0)==0&(aa|0)<60){c[j+4>>2]=aa;break L911}else{c[h>>2]=ac|4;break L911}break};case 99:{ac=d+8|0;aa=cZ[c[(c[ac>>2]|0)+12>>2]&255](ac)|0;ac=e|0;c[B>>2]=c[ac>>2];c[C>>2]=c[f>>2];ad=aa;ae=a[aa]|0;if((ae&1)==0){af=ad+1|0;ag=ad+1|0}else{ad=c[aa+8>>2]|0;af=ad;ag=ad}ad=ae&255;if((ad&1|0)==0){ah=ad>>>1}else{ah=c[aa+4>>2]|0}jH(A,d,B,C,g,h,j,ag,af+ah|0);c[ac>>2]=c[A>>2];break};case 88:{ac=d+8|0;aa=cZ[c[(c[ac>>2]|0)+24>>2]&255](ac)|0;ac=e|0;c[X>>2]=c[ac>>2];c[Y>>2]=c[f>>2];ad=aa;ae=a[aa]|0;if((ae&1)==0){ai=ad+1|0;aj=ad+1|0}else{ad=c[aa+8>>2]|0;ai=ad;aj=ad}ad=ae&255;if((ad&1|0)==0){ak=ad>>>1}else{ak=c[aa+4>>2]|0}jH(W,d,X,Y,g,h,j,aj,ai+ak|0);c[ac>>2]=c[W>>2];break};case 73:{ac=j+8|0;c[t>>2]=c[f>>2];aa=jU(e,t,h,ab,2)|0;ad=c[h>>2]|0;do{if((ad&4|0)==0){if((aa-1|0)>>>0>=12>>>0){break}c[ac>>2]=aa;break L911}}while(0);c[h>>2]=ad|4;break};case 68:{aa=e|0;c[E>>2]=c[aa>>2];c[F>>2]=c[f>>2];jH(D,d,E,F,g,h,j,5048,5056);c[aa>>2]=c[D>>2];break};case 70:{aa=e|0;c[H>>2]=c[aa>>2];c[I>>2]=c[f>>2];jH(G,d,H,I,g,h,j,5040,5048);c[aa>>2]=c[G>>2];break};case 98:case 66:case 104:{aa=c[f>>2]|0;ac=d+8|0;ae=cZ[c[(c[ac>>2]|0)+4>>2]&255](ac)|0;c[w>>2]=aa;aa=(ir(e,w,ae,ae+288|0,ab,h,0)|0)-ae|0;if((aa|0)>=288){break L911}c[j+16>>2]=((aa|0)/12|0|0)%12|0;break};case 72:{c[u>>2]=c[f>>2];aa=jU(e,u,h,ab,2)|0;ae=c[h>>2]|0;if((ae&4|0)==0&(aa|0)<24){c[j+8>>2]=aa;break L911}else{c[h>>2]=ae|4;break L911}break};case 82:{ae=e|0;c[P>>2]=c[ae>>2];c[Q>>2]=c[f>>2];jH(O,d,P,Q,g,h,j,5016,5021);c[ae>>2]=c[O>>2];break};case 83:{c[p>>2]=c[f>>2];ae=jU(e,p,h,ab,2)|0;aa=c[h>>2]|0;if((aa&4|0)==0&(ae|0)<61){c[j>>2]=ae;break L911}else{c[h>>2]=aa|4;break L911}break};case 84:{aa=e|0;c[S>>2]=c[aa>>2];c[T>>2]=c[f>>2];jH(R,d,S,T,g,h,j,5008,5016);c[aa>>2]=c[R>>2];break};case 119:{c[o>>2]=c[f>>2];aa=jU(e,o,h,ab,1)|0;ae=c[h>>2]|0;if((ae&4|0)==0&(aa|0)<7){c[j+24>>2]=aa;break L911}else{c[h>>2]=ae|4;break L911}break};case 97:case 65:{ae=c[f>>2]|0;aa=d+8|0;ac=cZ[c[c[aa>>2]>>2]&255](aa)|0;c[x>>2]=ae;ae=(ir(e,x,ac,ac+168|0,ab,h,0)|0)-ac|0;if((ae|0)>=168){break L911}c[j+24>>2]=((ae|0)/12|0|0)%7|0;break};case 100:case 101:{ae=j+12|0;c[v>>2]=c[f>>2];ac=jU(e,v,h,ab,2)|0;aa=c[h>>2]|0;do{if((aa&4|0)==0){if((ac-1|0)>>>0>=31>>>0){break}c[ae>>2]=ac;break L911}}while(0);c[h>>2]=aa|4;break};case 121:{c[n>>2]=c[f>>2];ac=jU(e,n,h,ab,4)|0;if((c[h>>2]&4|0)!=0){break L911}if((ac|0)<69){al=ac+2e3|0}else{al=(ac-69|0)>>>0<31>>>0?ac+1900|0:ac}c[j+20>>2]=al-1900;break};case 89:{c[m>>2]=c[f>>2];ac=jU(e,m,h,ab,4)|0;if((c[h>>2]&4|0)!=0){break L911}c[j+20>>2]=ac-1900;break};case 37:{c[Z>>2]=c[f>>2];jT(0,e,Z,h,ab);break};default:{c[h>>2]=c[h>>2]|4}}}while(0);c[b>>2]=c[e>>2];i=l;return}}while(0);l=cy(4)|0;nG(l);bK(l|0,11832,162)}function jR(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;d=i;j=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[j>>2];j=e|0;e=f|0;f=h+8|0;L992:while(1){h=c[j>>2]|0;do{if((h|0)==0){k=0}else{if((c[h+12>>2]|0)!=(c[h+16>>2]|0)){k=h;break}if((cZ[c[(c[h>>2]|0)+36>>2]&255](h)|0)==-1){c[j>>2]=0;k=0;break}else{k=c[j>>2]|0;break}}}while(0);h=(k|0)==0;l=c[e>>2]|0;L1001:do{if((l|0)==0){m=856}else{do{if((c[l+12>>2]|0)==(c[l+16>>2]|0)){if((cZ[c[(c[l>>2]|0)+36>>2]&255](l)|0)!=-1){break}c[e>>2]=0;m=856;break L1001}}while(0);if(h){n=l;o=0}else{p=l;q=0;break L992}}}while(0);if((m|0)==856){m=0;if(h){p=0;q=1;break}else{n=0;o=1}}l=c[j>>2]|0;r=c[l+12>>2]|0;if((r|0)==(c[l+16>>2]|0)){s=(cZ[c[(c[l>>2]|0)+36>>2]&255](l)|0)&255}else{s=a[r]|0}if(s<<24>>24<0){p=n;q=o;break}if((b[(c[f>>2]|0)+(s<<24>>24<<1)>>1]&8192)==0){p=n;q=o;break}r=c[j>>2]|0;l=r+12|0;t=c[l>>2]|0;if((t|0)==(c[r+16>>2]|0)){u=c[(c[r>>2]|0)+40>>2]|0;cZ[u&255](r)|0;continue}else{c[l>>2]=t+1;continue}}o=c[j>>2]|0;do{if((o|0)==0){v=0}else{if((c[o+12>>2]|0)!=(c[o+16>>2]|0)){v=o;break}if((cZ[c[(c[o>>2]|0)+36>>2]&255](o)|0)==-1){c[j>>2]=0;v=0;break}else{v=c[j>>2]|0;break}}}while(0);j=(v|0)==0;do{if(q){m=875}else{if((c[p+12>>2]|0)!=(c[p+16>>2]|0)){if(!(j^(p|0)==0)){break}i=d;return}if((cZ[c[(c[p>>2]|0)+36>>2]&255](p)|0)==-1){c[e>>2]=0;m=875;break}if(!j){break}i=d;return}}while(0);do{if((m|0)==875){if(j){break}i=d;return}}while(0);c[g>>2]=c[g>>2]|2;i=d;return}function jS(a,b,e,f,g,h){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+8|0;k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=j|0;l=a+8|0;a=cZ[c[(c[l>>2]|0)+8>>2]&255](l)|0;l=d[a]|0;if((l&1|0)==0){m=l>>>1}else{m=c[a+4>>2]|0}l=d[a+12|0]|0;if((l&1|0)==0){n=l>>>1}else{n=c[a+16>>2]|0}if((m|0)==(-n|0)){c[g>>2]=c[g>>2]|4;i=j;return}c[k>>2]=c[f>>2];f=ir(e,k,a,a+24|0,h,g,0)|0;g=f-a|0;do{if((f|0)==(a|0)){if((c[b>>2]|0)!=12){break}c[b>>2]=0;i=j;return}}while(0);if((g|0)!=12){i=j;return}g=c[b>>2]|0;if((g|0)>=12){i=j;return}c[b>>2]=g+12;i=j;return}function jT(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0;b=i;h=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[h>>2];h=d|0;d=c[h>>2]|0;do{if((d|0)==0){j=0}else{if((c[d+12>>2]|0)!=(c[d+16>>2]|0)){j=d;break}if((cZ[c[(c[d>>2]|0)+36>>2]&255](d)|0)==-1){c[h>>2]=0;j=0;break}else{j=c[h>>2]|0;break}}}while(0);d=(j|0)==0;j=e|0;e=c[j>>2]|0;L1075:do{if((e|0)==0){k=913}else{do{if((c[e+12>>2]|0)==(c[e+16>>2]|0)){if((cZ[c[(c[e>>2]|0)+36>>2]&255](e)|0)!=-1){break}c[j>>2]=0;k=913;break L1075}}while(0);if(d){l=e;m=0}else{k=914}}}while(0);if((k|0)==913){if(d){k=914}else{l=0;m=1}}if((k|0)==914){c[f>>2]=c[f>>2]|6;i=b;return}d=c[h>>2]|0;e=c[d+12>>2]|0;if((e|0)==(c[d+16>>2]|0)){n=(cZ[c[(c[d>>2]|0)+36>>2]&255](d)|0)&255}else{n=a[e]|0}if((c_[c[(c[g>>2]|0)+36>>2]&63](g,n,0)|0)<<24>>24!=37){c[f>>2]=c[f>>2]|4;i=b;return}n=c[h>>2]|0;g=n+12|0;e=c[g>>2]|0;if((e|0)==(c[n+16>>2]|0)){d=c[(c[n>>2]|0)+40>>2]|0;cZ[d&255](n)|0}else{c[g>>2]=e+1}e=c[h>>2]|0;do{if((e|0)==0){o=0}else{if((c[e+12>>2]|0)!=(c[e+16>>2]|0)){o=e;break}if((cZ[c[(c[e>>2]|0)+36>>2]&255](e)|0)==-1){c[h>>2]=0;o=0;break}else{o=c[h>>2]|0;break}}}while(0);h=(o|0)==0;do{if(m){k=933}else{if((c[l+12>>2]|0)!=(c[l+16>>2]|0)){if(!(h^(l|0)==0)){break}i=b;return}if((cZ[c[(c[l>>2]|0)+36>>2]&255](l)|0)==-1){c[j>>2]=0;k=933;break}if(!h){break}i=b;return}}while(0);do{if((k|0)==933){if(h){break}i=b;return}}while(0);c[f>>2]=c[f>>2]|2;i=b;return}function jU(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;j=i;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;d=c[k>>2]|0;do{if((d|0)==0){l=0}else{if((c[d+12>>2]|0)!=(c[d+16>>2]|0)){l=d;break}if((cZ[c[(c[d>>2]|0)+36>>2]&255](d)|0)==-1){c[k>>2]=0;l=0;break}else{l=c[k>>2]|0;break}}}while(0);d=(l|0)==0;l=e|0;e=c[l>>2]|0;L1129:do{if((e|0)==0){m=953}else{do{if((c[e+12>>2]|0)==(c[e+16>>2]|0)){if((cZ[c[(c[e>>2]|0)+36>>2]&255](e)|0)!=-1){break}c[l>>2]=0;m=953;break L1129}}while(0);if(d){n=e}else{m=954}}}while(0);if((m|0)==953){if(d){m=954}else{n=0}}if((m|0)==954){c[f>>2]=c[f>>2]|6;o=0;i=j;return o|0}d=c[k>>2]|0;e=c[d+12>>2]|0;if((e|0)==(c[d+16>>2]|0)){p=(cZ[c[(c[d>>2]|0)+36>>2]&255](d)|0)&255}else{p=a[e]|0}do{if(p<<24>>24>=0){e=g+8|0;if((b[(c[e>>2]|0)+(p<<24>>24<<1)>>1]&2048)==0){break}d=g;q=(c_[c[(c[d>>2]|0)+36>>2]&63](g,p,0)|0)<<24>>24;r=c[k>>2]|0;s=r+12|0;t=c[s>>2]|0;if((t|0)==(c[r+16>>2]|0)){u=c[(c[r>>2]|0)+40>>2]|0;cZ[u&255](r)|0;v=q;w=h;x=n}else{c[s>>2]=t+1;v=q;w=h;x=n}while(1){y=v-48|0;q=w-1|0;t=c[k>>2]|0;do{if((t|0)==0){z=0}else{if((c[t+12>>2]|0)!=(c[t+16>>2]|0)){z=t;break}if((cZ[c[(c[t>>2]|0)+36>>2]&255](t)|0)==-1){c[k>>2]=0;z=0;break}else{z=c[k>>2]|0;break}}}while(0);t=(z|0)==0;if((x|0)==0){A=z;B=0}else{do{if((c[x+12>>2]|0)==(c[x+16>>2]|0)){if((cZ[c[(c[x>>2]|0)+36>>2]&255](x)|0)!=-1){C=x;break}c[l>>2]=0;C=0}else{C=x}}while(0);A=c[k>>2]|0;B=C}D=(B|0)==0;if(!((t^D)&(q|0)>0)){m=983;break}s=c[A+12>>2]|0;if((s|0)==(c[A+16>>2]|0)){E=(cZ[c[(c[A>>2]|0)+36>>2]&255](A)|0)&255}else{E=a[s]|0}if(E<<24>>24<0){o=y;m=996;break}if((b[(c[e>>2]|0)+(E<<24>>24<<1)>>1]&2048)==0){o=y;m=998;break}s=((c_[c[(c[d>>2]|0)+36>>2]&63](g,E,0)|0)<<24>>24)+(y*10|0)|0;r=c[k>>2]|0;u=r+12|0;F=c[u>>2]|0;if((F|0)==(c[r+16>>2]|0)){G=c[(c[r>>2]|0)+40>>2]|0;cZ[G&255](r)|0;v=s;w=q;x=B;continue}else{c[u>>2]=F+1;v=s;w=q;x=B;continue}}if((m|0)==983){do{if((A|0)==0){H=0}else{if((c[A+12>>2]|0)!=(c[A+16>>2]|0)){H=A;break}if((cZ[c[(c[A>>2]|0)+36>>2]&255](A)|0)==-1){c[k>>2]=0;H=0;break}else{H=c[k>>2]|0;break}}}while(0);d=(H|0)==0;L1186:do{if(D){m=993}else{do{if((c[B+12>>2]|0)==(c[B+16>>2]|0)){if((cZ[c[(c[B>>2]|0)+36>>2]&255](B)|0)!=-1){break}c[l>>2]=0;m=993;break L1186}}while(0);if(d){o=y}else{break}i=j;return o|0}}while(0);do{if((m|0)==993){if(d){break}else{o=y}i=j;return o|0}}while(0);c[f>>2]=c[f>>2]|2;o=y;i=j;return o|0}else if((m|0)==996){i=j;return o|0}else if((m|0)==998){i=j;return o|0}}}while(0);c[f>>2]=c[f>>2]|4;o=0;i=j;return o|0}function jV(a,b,d,e,f,g,h,j,k){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0;l=i;i=i+48|0;m=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[m>>2];m=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[m>>2];m=l|0;n=l+16|0;o=l+24|0;p=l+32|0;q=l+40|0;hi(n,f);r=n|0;n=c[r>>2]|0;if((c[4532]|0)!=-1){c[m>>2]=18128;c[m+4>>2]=16;c[m+8>>2]=0;gV(18128,m,108)}m=(c[4533]|0)-1|0;s=c[n+8>>2]|0;do{if((c[n+12>>2]|0)-s>>2>>>0>m>>>0){t=c[s+(m<<2)>>2]|0;if((t|0)==0){break}u=t;v=c[r>>2]|0;gA(v)|0;c[g>>2]=0;v=d|0;L1209:do{if((j|0)==(k|0)){w=1073}else{x=e|0;y=t;z=t;A=t;B=b;C=p|0;D=q|0;E=o|0;F=j;G=0;L1211:while(1){H=G;while(1){if((H|0)!=0){w=1073;break L1209}I=c[v>>2]|0;do{if((I|0)==0){J=0}else{K=c[I+12>>2]|0;if((K|0)==(c[I+16>>2]|0)){L=cZ[c[(c[I>>2]|0)+36>>2]&255](I)|0}else{L=c[K>>2]|0}if((L|0)!=-1){J=I;break}c[v>>2]=0;J=0}}while(0);I=(J|0)==0;K=c[x>>2]|0;do{if((K|0)==0){w=1025}else{M=c[K+12>>2]|0;if((M|0)==(c[K+16>>2]|0)){N=cZ[c[(c[K>>2]|0)+36>>2]&255](K)|0}else{N=c[M>>2]|0}if((N|0)==-1){c[x>>2]=0;w=1025;break}else{if(I^(K|0)==0){O=K;break}else{w=1027;break L1211}}}}while(0);if((w|0)==1025){w=0;if(I){w=1027;break L1211}else{O=0}}if((c_[c[(c[y>>2]|0)+52>>2]&63](u,c[F>>2]|0,0)|0)<<24>>24==37){w=1030;break}if(c_[c[(c[z>>2]|0)+12>>2]&63](u,8192,c[F>>2]|0)|0){P=F;w=1040;break}Q=J+12|0;K=c[Q>>2]|0;R=J+16|0;if((K|0)==(c[R>>2]|0)){S=cZ[c[(c[J>>2]|0)+36>>2]&255](J)|0}else{S=c[K>>2]|0}K=c6[c[(c[A>>2]|0)+28>>2]&63](u,S)|0;if((K|0)==(c6[c[(c[A>>2]|0)+28>>2]&63](u,c[F>>2]|0)|0)){w=1068;break}c[g>>2]=4;H=4}L1243:do{if((w|0)==1040){while(1){w=0;H=P+4|0;if((H|0)==(k|0)){T=k;break}if(c_[c[(c[z>>2]|0)+12>>2]&63](u,8192,c[H>>2]|0)|0){P=H;w=1040}else{T=H;break}}I=J;H=O;while(1){do{if((I|0)==0){U=0}else{K=c[I+12>>2]|0;if((K|0)==(c[I+16>>2]|0)){V=cZ[c[(c[I>>2]|0)+36>>2]&255](I)|0}else{V=c[K>>2]|0}if((V|0)!=-1){U=I;break}c[v>>2]=0;U=0}}while(0);K=(U|0)==0;do{if((H|0)==0){w=1055}else{M=c[H+12>>2]|0;if((M|0)==(c[H+16>>2]|0)){W=cZ[c[(c[H>>2]|0)+36>>2]&255](H)|0}else{W=c[M>>2]|0}if((W|0)==-1){c[x>>2]=0;w=1055;break}else{if(K^(H|0)==0){X=H;break}else{Y=T;break L1243}}}}while(0);if((w|0)==1055){w=0;if(K){Y=T;break L1243}else{X=0}}M=U+12|0;Z=c[M>>2]|0;_=U+16|0;if((Z|0)==(c[_>>2]|0)){$=cZ[c[(c[U>>2]|0)+36>>2]&255](U)|0}else{$=c[Z>>2]|0}if(!(c_[c[(c[z>>2]|0)+12>>2]&63](u,8192,$)|0)){Y=T;break L1243}Z=c[M>>2]|0;if((Z|0)==(c[_>>2]|0)){_=c[(c[U>>2]|0)+40>>2]|0;cZ[_&255](U)|0;I=U;H=X;continue}else{c[M>>2]=Z+4;I=U;H=X;continue}}}else if((w|0)==1068){w=0;H=c[Q>>2]|0;if((H|0)==(c[R>>2]|0)){I=c[(c[J>>2]|0)+40>>2]|0;cZ[I&255](J)|0}else{c[Q>>2]=H+4}Y=F+4|0}else if((w|0)==1030){w=0;H=F+4|0;if((H|0)==(k|0)){w=1031;break L1211}I=c_[c[(c[y>>2]|0)+52>>2]&63](u,c[H>>2]|0,0)|0;if((I<<24>>24|0)==69|(I<<24>>24|0)==48){Z=F+8|0;if((Z|0)==(k|0)){w=1034;break L1211}aa=I;ab=c_[c[(c[y>>2]|0)+52>>2]&63](u,c[Z>>2]|0,0)|0;ac=Z}else{aa=0;ab=I;ac=H}H=c[(c[B>>2]|0)+36>>2]|0;c[C>>2]=J;c[D>>2]=O;c3[H&7](o,b,p,q,f,g,h,ab,aa);c[v>>2]=c[E>>2];Y=ac+4|0}}while(0);if((Y|0)==(k|0)){w=1073;break L1209}F=Y;G=c[g>>2]|0}if((w|0)==1034){c[g>>2]=4;ad=J;break}else if((w|0)==1027){c[g>>2]=4;ad=J;break}else if((w|0)==1031){c[g>>2]=4;ad=J;break}}}while(0);if((w|0)==1073){ad=c[v>>2]|0}u=d|0;do{if((ad|0)!=0){t=c[ad+12>>2]|0;if((t|0)==(c[ad+16>>2]|0)){ae=cZ[c[(c[ad>>2]|0)+36>>2]&255](ad)|0}else{ae=c[t>>2]|0}if((ae|0)!=-1){break}c[u>>2]=0}}while(0);v=c[u>>2]|0;t=(v|0)==0;G=e|0;F=c[G>>2]|0;do{if((F|0)==0){w=1086}else{E=c[F+12>>2]|0;if((E|0)==(c[F+16>>2]|0)){af=cZ[c[(c[F>>2]|0)+36>>2]&255](F)|0}else{af=c[E>>2]|0}if((af|0)==-1){c[G>>2]=0;w=1086;break}if(!(t^(F|0)==0)){break}ag=a|0;c[ag>>2]=v;i=l;return}}while(0);do{if((w|0)==1086){if(t){break}ag=a|0;c[ag>>2]=v;i=l;return}}while(0);c[g>>2]=c[g>>2]|2;ag=a|0;c[ag>>2]=v;i=l;return}}while(0);l=cy(4)|0;nG(l);bK(l|0,11832,162)}function jW(a){a=a|0;gy(a|0);n6(a);return}function jX(a){a=a|0;gy(a|0);return}function jY(a){a=a|0;return 2}function jZ(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;j=i;i=i+16|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;c[k>>2]=c[d>>2];c[l>>2]=c[e>>2];jV(a,b,k,l,f,g,h,4976,5008);i=j;return}function j_(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;k=i;i=i+16|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=k|0;m=k+8|0;n=d+8|0;o=cZ[c[(c[n>>2]|0)+20>>2]&255](n)|0;c[l>>2]=c[e>>2];c[m>>2]=c[f>>2];f=a[o]|0;if((f&1)==0){p=o+4|0;q=o+4|0}else{e=c[o+8>>2]|0;p=e;q=e}e=f&255;if((e&1|0)==0){r=e>>>1}else{r=c[o+4>>2]|0}jV(b,d,l,m,g,h,j,q,p+(r<<2)|0);i=k;return}function j$(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;j=i;i=i+32|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;m=j+24|0;hi(m,f);f=m|0;m=c[f>>2]|0;if((c[4532]|0)!=-1){c[l>>2]=18128;c[l+4>>2]=16;c[l+8>>2]=0;gV(18128,l,108)}l=(c[4533]|0)-1|0;n=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-n>>2>>>0>l>>>0){o=c[n+(l<<2)>>2]|0;if((o|0)==0){break}p=o;o=c[f>>2]|0;gA(o)|0;o=c[e>>2]|0;q=b+8|0;r=cZ[c[c[q>>2]>>2]&255](q)|0;c[k>>2]=o;o=(iQ(d,k,r,r+168|0,p,g,0)|0)-r|0;if((o|0)>=168){s=d|0;t=c[s>>2]|0;u=a|0;c[u>>2]=t;i=j;return}c[h+24>>2]=((o|0)/12|0|0)%7|0;s=d|0;t=c[s>>2]|0;u=a|0;c[u>>2]=t;i=j;return}}while(0);j=cy(4)|0;nG(j);bK(j|0,11832,162)}function j0(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;j=i;i=i+32|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;m=j+24|0;hi(m,f);f=m|0;m=c[f>>2]|0;if((c[4532]|0)!=-1){c[l>>2]=18128;c[l+4>>2]=16;c[l+8>>2]=0;gV(18128,l,108)}l=(c[4533]|0)-1|0;n=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-n>>2>>>0>l>>>0){o=c[n+(l<<2)>>2]|0;if((o|0)==0){break}p=o;o=c[f>>2]|0;gA(o)|0;o=c[e>>2]|0;q=b+8|0;r=cZ[c[(c[q>>2]|0)+4>>2]&255](q)|0;c[k>>2]=o;o=(iQ(d,k,r,r+288|0,p,g,0)|0)-r|0;if((o|0)>=288){s=d|0;t=c[s>>2]|0;u=a|0;c[u>>2]=t;i=j;return}c[h+16>>2]=((o|0)/12|0|0)%12|0;s=d|0;t=c[s>>2]|0;u=a|0;c[u>>2]=t;i=j;return}}while(0);j=cy(4)|0;nG(j);bK(j|0,11832,162)}function j1(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;b=i;i=i+32|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;l=b+24|0;hi(l,f);f=l|0;l=c[f>>2]|0;if((c[4532]|0)!=-1){c[k>>2]=18128;c[k+4>>2]=16;c[k+8>>2]=0;gV(18128,k,108)}k=(c[4533]|0)-1|0;m=c[l+8>>2]|0;do{if((c[l+12>>2]|0)-m>>2>>>0>k>>>0){n=c[m+(k<<2)>>2]|0;if((n|0)==0){break}o=n;n=c[f>>2]|0;gA(n)|0;c[j>>2]=c[e>>2];n=j6(d,j,g,o,4)|0;if((c[g>>2]&4|0)!=0){p=d|0;q=c[p>>2]|0;r=a|0;c[r>>2]=q;i=b;return}if((n|0)<69){s=n+2e3|0}else{s=(n-69|0)>>>0<31>>>0?n+1900|0:n}c[h+20>>2]=s-1900;p=d|0;q=c[p>>2]|0;r=a|0;c[r>>2]=q;i=b;return}}while(0);b=cy(4)|0;nG(b);bK(b|0,11832,162)}
function c9(a){a=a|0;var b=0;b=i;i=i+a|0;i=i+7&-8;return b|0}function da(){return i|0}function db(a){a=a|0;i=a}function dc(a,b){a=a|0;b=b|0;if((x|0)==0){x=a;y=b}}function dd(b){b=b|0;a[k]=a[b];a[k+1|0]=a[b+1|0];a[k+2|0]=a[b+2|0];a[k+3|0]=a[b+3|0]}function de(b){b=b|0;a[k]=a[b];a[k+1|0]=a[b+1|0];a[k+2|0]=a[b+2|0];a[k+3|0]=a[b+3|0];a[k+4|0]=a[b+4|0];a[k+5|0]=a[b+5|0];a[k+6|0]=a[b+6|0];a[k+7|0]=a[b+7|0]}function df(a){a=a|0;K=a}function dg(a){a=a|0;L=a}function dh(a){a=a|0;M=a}function di(a){a=a|0;N=a}function dj(a){a=a|0;O=a}function dk(a){a=a|0;P=a}function dl(a){a=a|0;Q=a}function dm(a){a=a|0;R=a}function dn(a){a=a|0;S=a}function dp(a){a=a|0;T=a}function dq(){c[2950]=p+8;c[2952]=p+8;c[2954]=q+8;c[2958]=q+8;c[2962]=q+8;c[2966]=q+8;c[2970]=q+8;c[2974]=q+8;c[2978]=p+8;c[3012]=q+8;c[3016]=q+8;c[3080]=q+8;c[3084]=q+8;c[3104]=p+8;c[3106]=q+8;c[3142]=q+8;c[3146]=q+8;c[3182]=q+8;c[3186]=q+8;c[3206]=p+8;c[3208]=p+8;c[3210]=q+8;c[3214]=q+8;c[3218]=q+8;c[3222]=p+8;c[3224]=p+8;c[3226]=p+8;c[3228]=p+8;c[3230]=p+8;c[3232]=p+8;c[3234]=p+8;c[3260]=q+8;c[3264]=p+8;c[3266]=q+8;c[3270]=q+8;c[3274]=q+8;c[3278]=p+8;c[3280]=p+8;c[3282]=p+8;c[3284]=p+8;c[3318]=p+8;c[3320]=p+8;c[3322]=p+8;c[3324]=q+8;c[3328]=q+8;c[3332]=q+8;c[3336]=q+8;c[3340]=q+8;c[3344]=q+8;c[3348]=q+8;c[3352]=q+8;c[3356]=q+8;c[3360]=q+8;c[3364]=q+8;c[3368]=q+8;c[3372]=p+8;c[3374]=p+8;c[3376]=p+8;c[3378]=p+8;c[3380]=q+8;c[3384]=q+8;c[3388]=p+8;c[3390]=q+8;c[3394]=q+8;c[3398]=p+8;c[3400]=q+8;c[3404]=q+8;c[3408]=q+8}function dr(a,b){a=a|0;b=b|0;var c=0;c=a|0;g[c>>2]=+g[c>>2]+ +g[b>>2];c=a+4|0;g[c>>2]=+g[c>>2]+ +g[b+4>>2];return a|0}function ds(a,b){a=a|0;b=b|0;var c=0;c=a|0;g[c>>2]=+g[c>>2]- +g[b>>2];c=a+4|0;g[c>>2]=+g[c>>2]- +g[b+4>>2];return a|0}function dt(a,b){a=a|0;b=+b;var c=0;c=a|0;g[c>>2]=+g[c>>2]*b;c=a+4|0;g[c>>2]=+g[c>>2]*b;return a|0}function du(a){a=a|0;var b=0,c=0.0,d=0,e=0.0,f=0.0;b=a|0;c=+g[b>>2];d=a+4|0;e=+g[d>>2];f=+W(c*c+e*e);g[b>>2]=c/f;g[d>>2]=e/f;return}function dv(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,i=0,j=0,k=0,l=0.0,m=0.0,n=0,o=0,p=0.0,q=0.0,r=0.0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;d=n4(144)|0;e=d;f=d+80|0;oe(d|0,0,32);oe(f|0,0,32);g[d+72>>2]=.9994999766349792;g[d+76>>2]=.9994999766349792;h=d+112|0;c[d+136>>2]=0;c[d+140>>2]=0;oe(h|0,0,20);i=b+4|0;j=d;k=c[i+4>>2]|0;c[j>>2]=c[i>>2];c[j+4>>2]=k;k=n4(48)|0;c[k>>2]=8280;oe(k+8|0,0,32);c[k+4>>2]=2;l=+g[b+28>>2]*.5;g[k+40>>2]=l;m=+g[b+32>>2]*.5;g[k+44>>2]=m;j=k;k=d+32|0;c[k>>2]=j;i=b+12|0;n=d+8|0;o=c[i+4>>2]|0;c[n>>2]=c[i>>2];c[n+4>>2]=o;p=+g[b+24>>2];g[d+40>>2]=p;g[d+36>>2]=+g[b+36>>2];g[d+56>>2]=+g[b+48>>2];c[d+132>>2]=c[b>>2];if(p==0.0){g[d+44>>2]=0.0;q=0.0}else{r=1.0/p;g[d+44>>2]=r;q=r*3.0}g[d+48>>2]=+g[b+20>>2];g[d+68>>2]=q/(l*l+m*m);b=a+20|0;o=a+132|0;n=c[o>>2]|0;if((n|0)==0){s=0;t=j;u=h;c[u>>2]=s;v=d+116|0;w=v;c[w>>2]=b;c[o>>2]=e;x=t;y=c[x>>2]|0;z=c[y>>2]|0;A=f;c8[z&31](t,e,A);B=a+164|0;C=c[B>>2]|0;D=C+1|0;c[B>>2]=D;return e|0}c[n+116>>2]=e;s=c[o>>2]|0;t=c[k>>2]|0;u=h;c[u>>2]=s;v=d+116|0;w=v;c[w>>2]=b;c[o>>2]=e;x=t;y=c[x>>2]|0;z=c[y>>2]|0;A=f;c8[z&31](t,e,A);B=a+164|0;C=c[B>>2]|0;D=C+1|0;c[B>>2]=D;return e|0}function dw(a,b,c,d,e,f){a=a|0;b=+b;c=+c;d=+d;e=+e;f=+f;g[a>>2]=b;g[a+4>>2]=c;g[a+8>>2]=d;g[a+12>>2]=e;g[a+16>>2]=f;return}function dx(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=b+112|0;e=b+116|0;c[(c[e>>2]|0)+112>>2]=c[d>>2];f=c[d>>2]|0;if((f|0)!=0){c[f+116>>2]=c[e>>2]}e=a+164|0;c[e>>2]=(c[e>>2]|0)-1;n6(b);return}function dy(a,b){a=a|0;b=+b;var d=0,e=0,f=0,h=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0.0,as=0.0,at=0,au=0,av=0,aw=0.0,ax=0.0,ay=0.0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0,aI=0.0,aJ=0,aK=0.0,aL=0.0,aM=0.0,aN=0.0,aO=0.0,aP=0.0,aQ=0.0,aR=0.0;d=i;i=i+44232|0;e=d|0;f=d+8|0;h=d+16|0;j=d+24|0;l=d+32|0;m=d+40|0;n=d+48|0;o=d+56|0;p=d+64|0;q=d+72|0;r=d+80|0;s=d+88|0;t=d+96|0;u=d+104|0;v=d+112|0;w=d+120|0;x=d+128|0;y=d+136|0;z=d+144|0;A=d+152|0;B=d+160|0;C=d+168|0;D=d+176|0;E=d+44176|0;F=d+44184|0;G=d+44192|0;H=d+44200|0;I=d+44208|0;J=d+44216|0;K=d+44224|0;L=D+44e3|0;M=D|0;do{oe(M+12|0,0,24);M=M+44|0;}while((M|0)!=(L|0));L=e;M=f;N=h;O=m;P=n;Q=o;R=r;S=E;T=F;U=G;X=H;Y=I;Z=J;_=K;dD(a+20|0);$=a+132|0;aa=c[$>>2]|0;ab=aa+112|0;ac=c[ab>>2]|0;if((ac|0)==0){ad=0}else{ae=0;af=aa;aa=ab;ab=ac;while(1){L25:do{if((ab|0)==0){ag=ae}else{ac=af+84|0;ah=af+80|0;ai=af+92|0;aj=af+88|0;ak=af+68|0;al=af+44|0;am=af+136|0;an=ab;ao=ae;while(1){ap=D+(ao*44|0)|0;L29:do{if((ao|0)>999){aq=an;while(1){ar=+g[ac>>2];as=+g[aq+80>>2];if(ar<as){ag=ao;break L25}if(+g[aq+84>>2]<+g[ah>>2]|as>ar){at=ao;au=aq;break L29}if(+g[aq+88>>2]<+g[ai>>2]){at=ao;au=aq;break L29}if(+g[aq+92>>2]>+g[aj>>2]){at=ao;au=aq;break L29}if(!(dC(af,aq,ap)|0)){at=ao;au=aq;break L29}av=c[aq+112>>2]|0;if((av|0)==0){ag=ao;break L25}else{aq=av}}}else{ar=+g[ac>>2];as=+g[an+80>>2];if(ar<as){ag=ao;break L25}if(+g[an+84>>2]<+g[ah>>2]|as>ar){at=ao;au=an;break}if(+g[an+88>>2]<+g[ai>>2]){at=ao;au=an;break}if(+g[an+92>>2]>+g[aj>>2]){at=ao;au=an;break}if(!(dC(af,an,ap)|0)){at=ao;au=an;break}c[ap>>2]=af;c[D+(ao*44|0)+4>>2]=an;g[D+(ao*44|0)+36>>2]=0.0;ar=+g[D+(ao*44|0)+16>>2];as=+g[D+(ao*44|0)+12>>2];aw=+g[D+(ao*44|0)+20>>2]*ar- +g[D+(ao*44|0)+24>>2]*as;ax=ar*+g[D+(ao*44|0)+28>>2]-as*+g[D+(ao*44|0)+32>>2];as=+g[an+68>>2]*ax*ax+(aw*aw*+g[ak>>2]+(+g[al>>2]+ +g[an+44>>2]));if(as!=0.0){ay=1.0/as}else{ay=as}g[D+(ao*44|0)+40>>2]=ay;aq=c[am>>2]|0;if((aq|0)==0){az=1}else{az=c6[aq&63](af,ap)|0}aq=c[an+136>>2]|0;if((aq|0)==0){aA=az}else{aA=az&(c6[aq&63](an,ap)|0)}at=(aA&1)+ao|0;au=an}}while(0);ap=c[au+112>>2]|0;if((ap|0)==0){ag=at;break}else{an=ap;ao=at}}}}while(0);ao=c[aa>>2]|0;an=ao+112|0;am=c[an>>2]|0;if((am|0)==0){ad=ag;break}else{ae=ag;af=ao;aa=an;ab=am}}}ab=a+168|0;aa=c[ab>>2]|0;L55:do{if((aa|0)>0){af=w;ag=x;ae=y;at=z;au=s;aA=t;az=u;am=v;an=q;if((ad|0)>0){aB=0}else{ao=0;while(1){ao=ao+1|0;if((ao|0)>=(aa|0)){break L55}}}do{ao=0;do{al=c[D+(ao*44|0)>>2]|0;ak=c[D+(ao*44|0)+4>>2]|0;aj=al+64|0;ay=+g[al+52>>2]+ +g[aj>>2]*+g[al+68>>2];ai=D+(ao*44|0)+24|0;ah=D+(ao*44|0)+20|0;as=+(ay*+g[ah>>2]);g[x>>2]=+g[ai>>2]*(-0.0-ay);g[x+4>>2]=as;dr(ag,al+8|0)|0;ac=c[x>>2]|0;ap=c[x+4>>2]|0;aq=al+24|0;av=aq;aC=c[av+4>>2]|0;as=+g[al+44>>2];c[w>>2]=c[av>>2];c[w+4>>2]=aC;dt(af,as)|0;aC=c[w+4>>2]|0;c[z>>2]=c[w>>2];c[z+4>>2]=aC;c[y>>2]=ac;c[y+4>>2]=ap;dr(ae,at)|0;ap=c[y>>2]|0;ac=c[y+4>>2]|0;aC=ak+64|0;as=+g[ak+52>>2]+ +g[aC>>2]*+g[ak+68>>2];av=D+(ao*44|0)+32|0;al=D+(ao*44|0)+28|0;ay=+(as*+g[al>>2]);g[t>>2]=+g[av>>2]*(-0.0-as);g[t+4>>2]=ay;dr(aA,ak+8|0)|0;aD=c[t>>2]|0;aE=c[t+4>>2]|0;aF=ak+24|0;aG=aF;aH=c[aG+4>>2]|0;ay=+g[ak+44>>2];c[s>>2]=c[aG>>2];c[s+4>>2]=aH;dt(au,ay)|0;aH=c[s+4>>2]|0;c[v>>2]=c[s>>2];c[v+4>>2]=aH;c[u>>2]=aD;c[u+4>>2]=aE;dr(az,am)|0;aE=c[u+4>>2]|0;c[E>>2]=c[u>>2];c[E+4>>2]=aE;c[r>>2]=ap;c[r+4>>2]=ac;ds(R,S)|0;ac=D+(ao*44|0)+12|0;ay=+g[D+(ao*44|0)+16>>2];as=+g[ac>>2];aw=+g[ah>>2]*ay- +g[ai>>2]*as;ax=ay*+g[al>>2]-as*+g[av>>2];av=D+(ao*44|0)+36|0;ar=+g[av>>2];aI=ar+(ay*+g[r+4>>2]+ +g[r>>2]*as)*+g[D+(ao*44|0)+40>>2];as=aI>0.0?aI:0.0;g[av>>2]=as;av=ac;ac=c[av+4>>2]|0;c[q>>2]=c[av>>2];c[q+4>>2]=ac;dt(an,as-ar)|0;ac=c[q>>2]|0;av=c[q+4>>2]|0;c[F>>2]=ac;c[F+4>>2]=av;ar=(c[k>>2]=ac,+g[k>>2]);as=(c[k>>2]=av,+g[k>>2]);aI=+W(ar*ar+as*as);ds(aq,T)|0;g[aj>>2]=+g[aj>>2]-aw*aI;dr(aF,T)|0;g[aC>>2]=ax*aI+ +g[aC>>2];ao=ao+1|0;}while((ao|0)<(ad|0));aB=aB+1|0;}while((aB|0)<(c[ab>>2]|0))}}while(0);ab=a+172|0;aB=c[ab>>2]|0;L66:do{if((aB|0)>0){T=p;if((ad|0)>0){aJ=0}else{F=0;while(1){F=F+1|0;if((F|0)>=(aB|0)){break L66}}}do{F=0;do{q=c[D+(F*44|0)>>2]|0;r=c[D+(F*44|0)+4>>2]|0;aI=+V(+(+g[D+(F*44|0)+8>>2]))+-.00019999999494757503;if(aI>0.0){aK=aI*3.0}else{aK=0.0}aI=aK*+g[D+(F*44|0)+40>>2];S=D+(F*44|0)+12|0;R=S;E=c[R+4>>2]|0;c[p>>2]=c[R>>2];c[p+4>>2]=E;dt(T,aI)|0;E=c[p+4>>2]|0;c[G>>2]=c[p>>2];c[G+4>>2]=E;ax=+g[D+(F*44|0)+16>>2];aw=+g[S>>2];as=+g[D+(F*44|0)+20>>2]*ax- +g[D+(F*44|0)+24>>2]*aw;ar=ax*+g[D+(F*44|0)+28>>2]-aw*+g[D+(F*44|0)+32>>2];ds(q+16|0,U)|0;S=q+60|0;g[S>>2]=+g[S>>2]-aI*as;dr(r+16|0,U)|0;S=r+60|0;g[S>>2]=aI*ar+ +g[S>>2];F=F+1|0;}while((F|0)<(ad|0));aJ=aJ+1|0;}while((aJ|0)<(c[ab>>2]|0))}}while(0);if((ad|0)>0){ab=j;aJ=l;U=0;aK=0.0;while(1){G=D+(U*44|0)|0;p=c[G>>2]|0;aB=c[D+(U*44|0)+4>>2]|0;T=D+(U*44|0)+12|0;ar=+g[D+(U*44|0)+16>>2];aI=-0.0-ar;as=+g[T>>2];F=D+(U*44|0)+36|0;aw=+g[p+56>>2];ax=+g[aB+56>>2];ay=+g[F>>2]*(aw>ax?aw:ax);ax=+g[aB+24>>2]*aI+as*+g[aB+28>>2];aw=+g[D+(U*44|0)+20>>2]*ar-as*+g[D+(U*44|0)+24>>2];aL=ar*+g[D+(U*44|0)+28>>2]-as*+g[D+(U*44|0)+32>>2];S=p+40|0;ar=ax+ +g[S>>2]*(+g[p+8>>2]*aI+as*+g[p+12>>2]);aM=+aI;aN=+as;g[j>>2]=aM;g[j+4>>2]=aN;dt(ab,ar>0.0?1.0:-1.0)|0;r=c[j+4>>2]|0;aO=ay;aP=+V(+ar);c[h>>2]=c[j>>2];c[h+4>>2]=r;dt(N,ay<aP?aO:aP)|0;r=c[h+4>>2]|0;c[H>>2]=c[h>>2];c[H+4>>2]=r;r=T;T=c[r+4>>2]|0;aP=+g[F>>2];c[f>>2]=c[r>>2];c[f+4>>2]=T;dt(M,aP)|0;T=c[f+4>>2]|0;c[e>>2]=c[f>>2];c[e+4>>2]=T;dr(L,X)|0;T=c[e+4>>2]|0;c[I>>2]=c[e>>2];c[I+4>>2]=T;ds(p+16|0,Y)|0;T=p+60|0;g[T>>2]=+g[T>>2]-aw*+g[F>>2];do{if(+g[S>>2]!=0.0){aP=+g[F>>2];if(aP<=aK){aQ=aK;break}aQ=aw*aP}else{aQ=aK}}while(0);S=aB+40|0;aw=ax+ +g[S>>2]*(+g[aB+8>>2]*aI+as*+g[aB+12>>2]);g[l>>2]=aM;g[l+4>>2]=aN;dt(aJ,aw>0.0?1.0:-1.0)|0;T=c[l+4>>2]|0;aP=+V(+aw);c[m>>2]=c[l>>2];c[m+4>>2]=T;dt(O,ay<aP?aO:aP)|0;T=c[m+4>>2]|0;c[J>>2]=c[m>>2];c[J+4>>2]=T;T=c[r+4>>2]|0;aP=+g[F>>2];c[n>>2]=c[r>>2];c[n+4>>2]=T;dt(P,aP)|0;T=c[n+4>>2]|0;c[o>>2]=c[n>>2];c[o+4>>2]=T;ds(Q,Z)|0;T=c[o+4>>2]|0;c[K>>2]=c[o>>2];c[K+4>>2]=T;dr(aB+16|0,_)|0;T=aB+60|0;g[T>>2]=+g[T>>2]+aL*+g[F>>2];q=c[p+140>>2]|0;if((q|0)!=0){cV[q&255](p,G)}q=c[aB+140>>2]|0;if((q|0)!=0){cV[q&255](aB,G)}aP=+g[T>>2];do{if(+V(+(aP- +g[aB+64>>2]))<.001&aP!=0.0){aR=aQ}else{if(+g[S>>2]==0.0){aR=aQ;break}aw=aL*+g[F>>2];if(aw<=aQ){aR=aQ;break}aR=aw}}while(0);F=U+1|0;if((F|0)<(ad|0)){U=F;aK=aR}else{break}}}U=c[$>>2]|0;if((U|0)==0){i=d;return}$=A;ad=B;_=a|0;a=C;K=U;do{U=K+28|0;g[U>>2]=0.0;g[K+24>>2]=0.0;g[K+64>>2]=0.0;o=K+8|0;Z=K+16|0;Q=Z;n=c[Q+4>>2]|0;aR=+g[K+44>>2];c[A>>2]=c[Q>>2];c[A+4>>2]=n;dt($,aR)|0;n=c[A+4>>2]|0;c[B>>2]=c[A>>2];c[B+4>>2]=n;dr(o,ad)|0;n=K+60|0;Q=K+52|0;g[Q>>2]=+g[Q>>2]+ +g[n>>2]*+g[K+68>>2];g[n>>2]=0.0;n=K+20|0;g[n>>2]=0.0;g[Z>>2]=0.0;aR=+g[_>>2]*+g[K+40>>2]*b;g[U>>2]=aR;g[n>>2]=aR;n=K|0;g[n>>2]=+g[n>>2]+ +g[K+8>>2]*b;n=K+4|0;g[n>>2]=+g[n>>2]+ +g[K+12>>2]*b;n=K+48|0;g[n>>2]=+g[n>>2]+ +g[Q>>2]*b;n=c[K+32>>2]|0;c8[c[c[n>>2]>>2]&31](n,K,K+80|0);n=o;o=c[n+4>>2]|0;aR=+g[K+72>>2];c[C>>2]=c[n>>2];c[C+4>>2]=o;dt(a,aR)|0;o=c[C+4>>2]|0;c[n>>2]=c[C>>2];c[n+4>>2]=o;g[Q>>2]=+g[K+76>>2]*+g[Q>>2];K=c[K+112>>2]|0;}while((K|0)!=0);i=d;return}function dz(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,h=0,i=0,j=0.0,k=0.0,l=0;g[a+4>>2]=0.0;g[a>>2]=0.0;d=b&255;if((d&1|0)==0){e=3}else{b=c+8|0;dr(a,b)|0;e=4}if((d&2|0)==0){f=e-1|0}else{b=c+16|0;dr(a,b)|0;f=e}if((d&4|0)==0){h=f-1|0}else{e=c+24|0;dr(a,e)|0;h=f}if((d&8|0)==0){i=h-1|0;j=+(i|0);k=1.0/j;l=dt(a,k)|0;return}else{d=c+32|0;dr(a,d)|0;i=h;j=+(i|0);k=1.0/j;l=dt(a,k)|0;return}}function dA(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0;e=i;i=i+32|0;f=e|0;h=e+8|0;j=e+16|0;k=e+24|0;l=+g[b+48>>2];m=+Y(l);n=+Z(l);l=+g[a+40>>2];o=m*l;p=+g[a+44>>2];q=n*p;r=o+q;g[a+32>>2]=r;g[a+8>>2]=-0.0-r;r=m*p;p=n*(-0.0-l)+r;g[a+12>>2]=p;m=o-q;g[a+16>>2]=m;q=n*l+r;g[a+20>>2]=q;g[a+24>>2]=-0.0-m;g[a+28>>2]=-0.0-q;g[a+36>>2]=-0.0-p;c[k>>2]=0;c[k+4>>2]=0;dr(k,a+8|0)|0;p=+g[k>>2];q=+g[k+4>>2];c[j>>2]=0;c[j+4>>2]=0;dr(j,a+16|0)|0;m=+g[j>>2];r=+g[j+4>>2];c[h>>2]=0;c[h+4>>2]=0;dr(h,a+24|0)|0;l=+g[h>>2];n=+g[h+4>>2];c[f>>2]=0;c[f+4>>2]=0;dr(f,a+32|0)|0;o=+g[f>>2];s=+g[f+4>>2];t=p<m?p:m;u=l<o?l:o;v=t<u?t:u;u=p>m?p:m;m=l>o?l:o;o=u>m?u:m;m=q<r?q:r;u=n<s?n:s;l=m<u?m:u;u=q>r?q:r;r=n>s?n:s;s=u>r?u:r;g[b+96>>2]=v;g[b+100>>2]=o;g[b+104>>2]=s;g[b+108>>2]=l;f=b|0;g[d>>2]=+g[f>>2]+v;g[d+4>>2]=o+ +g[f>>2];f=b+4|0;g[d+8>>2]=s+ +g[f>>2];g[d+12>>2]=l+ +g[f>>2];i=e;return}function dB(b,d,e,f,h,j){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0;k=i;i=i+8|0;l=k|0;m=i;i=i+8|0;n=i;i=i+8|0;o=i;i=i+8|0;p=d;d=c[p+4>>2]|0;c[o>>2]=c[p>>2];c[o+4>>2]=d;dr(o,b+8|0)|0;q=+g[o>>2];r=+g[o+4>>2];o=c[p+4>>2]|0;c[n>>2]=c[p>>2];c[n+4>>2]=o;dr(n,b+16|0)|0;s=+g[n>>2];t=+g[n+4>>2];n=c[p+4>>2]|0;c[m>>2]=c[p>>2];c[m+4>>2]=n;dr(m,b+24|0)|0;u=+g[m>>2];v=+g[m+4>>2];m=c[p+4>>2]|0;c[l>>2]=c[p>>2];c[l+4>>2]=m;dr(l,b+32|0)|0;w=+g[l>>2];x=+g[l+4>>2];y=+g[e>>2];z=+g[e+4>>2];A=q*y+r*z;B=+g[f>>2];C=+g[f+4>>2];D=q*B+r*C;r=s*y+t*z;q=s*B+t*C;t=u*y+v*z;s=u*B+v*C;v=y*w+z*x;z=w*B+x*C;f=j+9|0;a[f]=0;e=j+8|0;a[e]=0;l=h+9|0;a[l]=0;b=h+8|0;a[b]=0;C=A<r?A:r;x=t<v?t:v;m=h|0;g[m>>2]=C<x?C:x;x=A>r?A:r;C=t>v?t:v;p=h+4|0;g[p>>2]=x>C?x:C;C=D<q?D:q;x=s<z?s:z;h=j|0;g[h>>2]=C<x?C:x;x=D>q?D:q;C=s>z?s:z;n=j+4|0;g[n>>2]=x>C?x:C;C=+g[m>>2];if(+V(+(C-A))<.0010000000474974513){a[b]=a[b]|1}if(+V(+(C-r))<.0010000000474974513){a[b]=a[b]|2}if(+V(+(C-t))<.0010000000474974513){a[b]=a[b]|4}if(+V(+(C-v))<.0010000000474974513){a[b]=a[b]|8}C=+g[p>>2];if(+V(+(C-A))<.0010000000474974513){a[l]=a[l]|1}if(+V(+(C-r))<.0010000000474974513){a[l]=a[l]|2}if(+V(+(C-t))<.0010000000474974513){a[l]=a[l]|4}if(+V(+(C-v))<.0010000000474974513){a[l]=a[l]|8}v=+g[h>>2];if(+V(+(v-D))<.0010000000474974513){a[e]=a[e]|1}if(+V(+(v-q))<.0010000000474974513){a[e]=a[e]|2}if(+V(+(v-s))<.0010000000474974513){a[e]=a[e]|4}if(+V(+(v-z))<.0010000000474974513){a[e]=a[e]|8}v=+g[n>>2];if(+V(+(v-D))<.0010000000474974513){a[f]=a[f]|1}if(+V(+(v-q))<.0010000000474974513){a[f]=a[f]|2}if(+V(+(v-s))<.0010000000474974513){a[f]=a[f]|4}if(+V(+(v-z))>=.0010000000474974513){i=k;return}a[f]=a[f]|8;i=k;return}function dC(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,X=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0.0,ao=0.0,ap=0.0,aq=0.0,ar=0.0,as=0.0,at=0.0,au=0.0,av=0.0,aw=0.0,ax=0.0,ay=0.0,az=0.0,aA=0.0,aB=0.0,aC=0.0,aD=0.0,aE=0.0,aF=0.0,aG=0.0;f=i;i=i+48|0;h=f|0;j=f+8|0;l=f+16|0;m=f+24|0;n=f+32|0;o=f+40|0;p=o;q=i;i=i+8|0;r=q;s=i;i=i+8|0;t=s;u=i;i=i+8|0;v=u;w=i;i=i+8|0;x=w;y=i;i=i+8|0;z=y;A=i;i=i+8|0;B=A;C=i;i=i+12|0;i=i+7&-8;D=i;i=i+12|0;i=i+7&-8;E=i;i=i+12|0;i=i+7&-8;F=i;i=i+12|0;i=i+7&-8;G=i;i=i+8|0;H=G;I=i;i=i+8|0;J=I;K=i;i=i+8|0;L=K;M=i;i=i+8|0;N=M;O=i;i=i+8|0;P=O;Q=i;i=i+8|0;R=Q;S=i;i=i+8|0;T=S;U=i;i=i+8|0;X=U;_=i;i=i+8|0;$=_;aa=c[b+32>>2]|0;ab=c[aa+4>>2]|0;if((ab|0)==2){ac=c[d+32>>2]|0;if((c[ac+4>>2]|0)!=2){ad=0;i=f;return ad|0}ae=aa;af=ac;ag=d;ah=c[ag+4>>2]|0;ai=b|0;c[o>>2]=c[ag>>2];c[o+4>>2]=ah;ds(p,ai)|0;ai=c[o+4>>2]|0;c[s>>2]=c[o>>2];c[s+4>>2]=ai;ai=v+4|0;o=u;p=x+4|0;ah=w;ag=z+4|0;g[ag>>2]=0.0;aj=y;g[aj>>2]=0.0;ak=B+4|0;g[ak>>2]=0.0;al=A;g[al>>2]=0.0;am=b+48|0;an=+g[am>>2];ao=+Y(an);g[o>>2]=ao;ap=+Z(an);g[ai>>2]=ap;g[ah>>2]=-0.0-ap;g[p>>2]=ao;dB(af,t,v,x,C,D);ao=+g[aa+40>>2];ap=+g[C+4>>2];if(ap<-0.0-ao){ad=0;i=f;return ad|0}an=+g[C>>2];if(an>ao){ad=0;i=f;return ad|0}aq=+g[aa+44>>2];ar=+g[D+4>>2];if(ar<-0.0-aq){ad=0;i=f;return ad|0}as=+g[D>>2];if(as>aq){ad=0;i=f;return ad|0}at=+g[s>>2];au=+g[t+4>>2];av=+g[o>>2]*at+ +g[ai>>2]*au;aw=at*+g[ah>>2]+au*+g[p>>2];ax=+V(+(-0.0-av))-ao-(ap-an)*.5;an=+V(+(-0.0-aw))-aq-(ar-as)*.5;p=d+48|0;as=+g[p>>2];do{if(as!=+g[am>>2]){ar=as;aq=+Y(ar);g[aj>>2]=aq;ap=+Z(ar);g[ag>>2]=ap;ar=-0.0-ap;g[al>>2]=ar;g[ak>>2]=aq;ao=-0.0-(aq*at+ap*au);ap=-0.0-(aq*au+at*ar);ah=c[s+4>>2]|0;ai=h;c[h>>2]=c[s>>2];c[h+4>>2]=ah;dt(ai,-1.0)|0;ai=c[h+4>>2]|0;c[G>>2]=c[h>>2];c[G+4>>2]=ai;dB(ae,H,z,B,E,F);ar=+g[ac+40>>2];aq=+g[E+4>>2];if(aq<-0.0-ar){ad=0;i=f;return ad|0}ay=+g[E>>2];if(ay>ar){ad=0;i=f;return ad|0}az=+g[ac+44>>2];aA=+g[F+4>>2];if(aA<-0.0-az){ad=0;i=f;return ad|0}aB=+g[F>>2];if(aB<=az){aC=+V(+ap)-az-(aA-aB)*.5;aD=+V(+ao)-ar-(aq-ay)*.5;aE=ao;aF=ap;break}else{ad=0;i=f;return ad|0}}else{ap=(ax<an?ax:an)+-1.0;aC=ap;aD=ap;aE=0.0;aF=0.0}}while(0);ac=e+8|0;do{if(an>ax){g[ac>>2]=an;B=e+12|0;if(aw>-0.0){z=B;H=c[w+4>>2]|0;c[z>>2]=c[w>>2];c[z+4>>2]=H;dz(J,a[D+8|0]|0,af);H=e+28|0;z=c[I+4>>2]|0;c[H>>2]=c[I>>2];c[H+4>>2]=z;break}else{z=c[w+4>>2]|0;H=j;c[j>>2]=c[w>>2];c[j+4>>2]=z;dt(H,-1.0)|0;H=c[j+4>>2]|0;z=B;c[z>>2]=c[j>>2];c[z+4>>2]=H;dz(L,a[D+9|0]|0,af);H=e+28|0;z=c[K+4>>2]|0;c[H>>2]=c[K>>2];c[H+4>>2]=z;break}}else{g[ac>>2]=ax;z=e+12|0;if(av>-0.0){H=z;B=c[u+4>>2]|0;c[H>>2]=c[u>>2];c[H+4>>2]=B;dz(N,a[C+8|0]|0,af);B=e+28|0;H=c[M+4>>2]|0;c[B>>2]=c[M>>2];c[B+4>>2]=H;break}else{H=c[u+4>>2]|0;B=l;c[l>>2]=c[u>>2];c[l+4>>2]=H;dt(B,-1.0)|0;B=c[l+4>>2]|0;H=z;c[H>>2]=c[l>>2];c[H+4>>2]=B;dz(P,a[C+9|0]|0,af);B=e+28|0;H=c[O+4>>2]|0;c[B>>2]=c[O>>2];c[B+4>>2]=H;break}}}while(0);do{if(+g[am>>2]!=+g[p>>2]){if(aD>aC){O=aD>+g[ac>>2];if(aE<0.0){if(O){af=e+12|0;C=c[y+4>>2]|0;c[af>>2]=c[y>>2];c[af+4>>2]=C}dz(R,a[E+9|0]|0,ae);C=e+20|0;af=c[Q+4>>2]|0;c[C>>2]=c[Q>>2];c[C+4>>2]=af}else{if(O){O=e+12|0;af=c[y+4>>2]|0;C=m;c[m>>2]=c[y>>2];c[m+4>>2]=af;dt(C,-1.0)|0;C=c[m+4>>2]|0;af=O;c[af>>2]=c[m>>2];c[af+4>>2]=C}dz(T,a[E+8|0]|0,ae);C=e+20|0;af=c[S+4>>2]|0;c[C>>2]=c[S>>2];c[C+4>>2]=af}av=+g[ac>>2];if(aD<=av){aG=av;break}g[ac>>2]=aD;aG=aD;break}else{af=aD>+g[ac>>2];if(aF<0.0){if(af){C=e+12|0;O=c[A+4>>2]|0;c[C>>2]=c[A>>2];c[C+4>>2]=O}dz(X,a[F+9|0]|0,ae);O=e+20|0;C=c[U+4>>2]|0;c[O>>2]=c[U>>2];c[O+4>>2]=C}else{if(af){af=e+12|0;C=c[A+4>>2]|0;O=n;c[n>>2]=c[A>>2];c[n+4>>2]=C;dt(O,-1.0)|0;O=c[n+4>>2]|0;C=af;c[C>>2]=c[n>>2];c[C+4>>2]=O}dz($,a[F+8|0]|0,ae);O=e+20|0;C=c[_+4>>2]|0;c[O>>2]=c[_>>2];c[O+4>>2]=C}av=+g[ac>>2];if(aC<=av){aG=av;break}g[ac>>2]=aC;aG=aC;break}}else{aG=+g[ac>>2]}}while(0);if(+V(+aG)<=.15000000596046448){ad=1;i=f;return ad|0}g[ac>>2]=aG;ad=1;i=f;return ad|0}else if((ab|0)==1){ab=c[d+32>>2]|0;if((c[ab+4>>2]|0)!=1){ad=0;i=f;return ad|0}ac=d;d=c[ac+4>>2]|0;c[q>>2]=c[ac>>2];c[q+4>>2]=d;ds(r,b|0)|0;b=c[q>>2]|0;r=c[q+4>>2]|0;aG=(c[k>>2]=b,+g[k>>2]);q=r;aC=(c[k>>2]=q,+g[k>>2]);aF=+W(aG*aG+aC*aC);aC=aF- +g[aa+8>>2]- +g[ab+8>>2];if(aC>=0.0){ad=0;i=f;return ad|0}g[e+8>>2]=aC;ab=e+12|0;aa=ab;c[aa>>2]=b|0;c[aa+4>>2]=q|r&0;du(ab);g[e+24>>2]=0.0;g[e+20>>2]=0.0;ad=1;i=f;return ad|0}else{ad=0;i=f;return ad|0}return 0}function dD(a){a=a|0;var b=0,d=0,e=0,f=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;b=a+112|0;d=c[b>>2]|0;if((d|0)==0){return}else{e=d}do{d=e+116|0;f=e+80|0;h=d;while(1){i=c[h>>2]|0;if((i|0)==0){break}if((i|0)==(a|0)){j=193;break}if(+g[f>>2]<+g[i+80>>2]){h=i+116|0}else{j=202;break}}do{if((j|0)==193){j=0;h=c[d>>2]|0;if((h|0)==(a|0)){break}f=e+112|0;k=c[f>>2]|0;if((k|0)==0){l=h}else{c[k+116>>2]=h;l=c[d>>2]|0}if((l|0)!=0){c[l+112>>2]=c[f>>2]}h=c[b>>2]|0;if((h|0)==0){m=0}else{c[h+116>>2]=e;m=c[b>>2]|0}c[f>>2]=m;c[d>>2]=a;c[b>>2]=e}else if((j|0)==202){j=0;f=c[d>>2]|0;if((f|0)==(i|0)){break}h=e+112|0;k=c[h>>2]|0;if((k|0)==0){n=f}else{c[k+116>>2]=f;n=c[d>>2]|0}if((n|0)!=0){c[n+112>>2]=c[h>>2]}f=i+112|0;k=c[f>>2]|0;if((k|0)==0){o=0}else{c[k+116>>2]=e;o=c[f>>2]|0}c[h>>2]=o;c[d>>2]=i;c[f>>2]=e}}while(0);e=c[e+112>>2]|0;}while((e|0)!=0);return}function dE(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0;d=dF(b)|0;e=a+8|0;g[d>>2]=+g[c[e>>2]>>2];g[d+4>>2]=+g[(c[e>>2]|0)+4>>2];a=c[e>>2]|0;if((c[(c[a+32>>2]|0)+4>>2]|0)==2){c[d+12>>2]=1;g[d+28>>2]=1.0;g[d+24>>2]=1.0;g[d+20>>2]=1.0;g[d+16>>2]=1.0;g[d+40>>2]=2.0;g[d+32>>2]=+g[(c[(c[e>>2]|0)+32>>2]|0)+40>>2]*2.0;g[d+36>>2]=+g[(c[(c[e>>2]|0)+32>>2]|0)+44>>2]*2.0;f=c[e>>2]|0}else{f=a}g[d+8>>2]=+g[f+48>>2];f=b+16|0;a=n4(12)|0;e=a;h=a+8|0;if((h|0)!=0){c[h>>2]=d}d=f|0;c[(c[d>>2]|0)+4>>2]=e;c[a>>2]=c[d>>2];c[d>>2]=e;c[a+4>>2]=f;f=b+24|0;c[f>>2]=(c[f>>2]|0)+1;return}function dF(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;b=i;i=i+8|0;d=b|0;e=a+12|0;f=a|0;g=a+4|0;h=c[g>>2]|0;j=a|0;do{if((c[e>>2]|0)>>>0<h-(c[j>>2]|0)>>2>>>0){k=h}else{l=n4(44)|0;m=l;c[l+12>>2]=1;c[d>>2]=m;if((h|0)==(c[a+8>>2]|0)){dH(f,d);k=c[g>>2]|0;break}if((h|0)==0){n=0}else{c[h>>2]=m;n=c[g>>2]|0}m=n+4|0;c[g>>2]=m;k=m}}while(0);g=c[e>>2]|0;n=c[j>>2]|0;if(k-n>>2>>>0>g>>>0){k=c[n+(g<<2)>>2]|0;c[e>>2]=g+1;i=b;return k|0}else{lA(0);return 0}return 0}function dG(a,b){a=a|0;b=b|0;return 0}function dH(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;d=a+4|0;e=a|0;f=c[e>>2]|0;g=f;h=(c[d>>2]|0)-g|0;i=h>>2;j=i+1|0;if(j>>>0>1073741823>>>0){lz(0)}k=a+8|0;a=(c[k>>2]|0)-g|0;if(a>>2>>>0>536870910>>>0){l=1073741823;m=233}else{g=a>>1;a=g>>>0<j>>>0?j:g;if((a|0)==0){n=0;o=0}else{l=a;m=233}}if((m|0)==233){n=n4(l<<2)|0;o=l}l=n+(i<<2)|0;i=n+(o<<2)|0;if((l|0)!=0){c[l>>2]=c[b>>2]}b=n+(j<<2)|0;j=n;l=f;of(j|0,l|0,h)|0;c[e>>2]=n;c[d>>2]=b;c[k>>2]=i;if((f|0)==0){return}n6(l);return}function dI(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;b=a+24|0;d=a+32|0;do{if((c[d>>2]|0)!=0){e=c[a+28>>2]|0;f=b;g=(c[b>>2]|0)+4|0;h=e|0;c[(c[h>>2]|0)+4>>2]=c[g>>2];c[c[g>>2]>>2]=c[h>>2];c[d>>2]=0;if((e|0)==(f|0)){break}else{i=e}while(1){e=c[i+4>>2]|0;n6(i);if((e|0)==(f|0)){break}else{i=e}}}}while(0);i=a+12|0;d=a+20|0;if((c[d>>2]|0)==0){return}b=c[a+16>>2]|0;a=i;f=(c[i>>2]|0)+4|0;i=b|0;c[(c[i>>2]|0)+4>>2]=c[f>>2];c[c[f>>2]>>2]=c[i>>2];c[d>>2]=0;if((b|0)==(a|0)){return}else{j=b}while(1){b=c[j+4>>2]|0;n6(j);if((b|0)==(a|0)){break}else{j=b}}return}function dJ(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0.0;d=i;i=i+616|0;b=d|0;e=d+56|0;f=d+112|0;h=d+168|0;j=d+224|0;k=d+280|0;l=d+336|0;m=d+392|0;n=d+448|0;o=d+504|0;p=d+560|0;q=n4(52)|0;r=q;d$(r,1366,700);if((a[q+40|0]&1)==0){s=-1;i=d;return s|0}t=n4(12)|0;eb(t,c[q+36>>2]|0);g[q+12>>2]=0.0;g[q+4>>2]=150.0;g[q+8>>2]=-1.0;c[3655]=q;c[3656]=t;c[t+4>>2]=14616;t=n4(24)|0;u=c[3654]|0;v=n+4|0;oe(v|0,0,16);g[n+36>>2]=0.0;g[n+44>>2]=.9999979734420776;g[n+40>>2]=.9999979734420776;g[n+48>>2]=.10000000149011612;c[n>>2]=0;g[v>>2]=0.0;g[n+8>>2]=0.0;g[n+28>>2]=300.0;g[n+32>>2]=16.0;g[n+24>>2]=0.0;g[n+20>>2]=0.0;fp(t,dv(u,n)|0,1,1);c[t>>2]=8120;c[t+20>>2]=2;n=n4(24)|0;u=c[3654]|0;v=m+4|0;oe(v|0,0,16);g[m+36>>2]=0.0;g[m+44>>2]=.9999979734420776;g[m+40>>2]=.9999979734420776;g[m+48>>2]=.10000000149011612;c[m>>2]=0;g[v>>2]=-150.0;g[m+8>>2]=100.0;g[m+28>>2]=16.0;g[m+32>>2]=600.0;g[m+24>>2]=0.0;g[m+20>>2]=0.0;fp(n,dv(u,m)|0,1,1);c[n>>2]=8120;c[n+20>>2]=2;m=n4(24)|0;u=c[3654]|0;v=l+4|0;oe(v|0,0,16);g[l+36>>2]=0.0;g[l+44>>2]=.9999979734420776;g[l+40>>2]=.9999979734420776;g[l+48>>2]=.10000000149011612;c[l>>2]=0;g[v>>2]=150.0;g[l+8>>2]=100.0;g[l+28>>2]=16.0;g[l+32>>2]=600.0;g[l+24>>2]=0.0;g[l+20>>2]=0.0;fp(m,dv(u,l)|0,1,1);c[m>>2]=8120;c[m+20>>2]=2;l=n4(24)|0;u=c[3654]|0;v=k+4|0;oe(v|0,0,16);g[k+36>>2]=0.0;g[k+44>>2]=.9999979734420776;g[k+40>>2]=.9999979734420776;g[k+48>>2]=.10000000149011612;c[k>>2]=0;g[v>>2]=0.0;g[k+8>>2]=400.0;g[k+28>>2]=300.0;g[k+32>>2]=16.0;g[k+24>>2]=0.0;g[k+20>>2]=0.0;fp(l,dv(u,k)|0,1,1);c[l>>2]=8120;c[l+20>>2]=2;k=n4(24)|0;u=c[3654]|0;v=h+4|0;oe(v|0,0,16);g[h+36>>2]=0.0;g[h+44>>2]=.9999979734420776;g[h+40>>2]=.9999979734420776;g[h+48>>2]=.10000000149011612;c[h>>2]=0;g[v>>2]=60.0;g[h+8>>2]=40.0;g[h+28>>2]=60.0;g[h+32>>2]=4.0;g[h+24>>2]=0.0;g[h+20>>2]=0.0;fp(k,dv(u,h)|0,1,1);c[k>>2]=8120;c[k+20>>2]=2;h=n4(24)|0;u=c[3654]|0;v=f+4|0;oe(v|0,0,16);g[f+36>>2]=0.0;g[f+44>>2]=.9999979734420776;g[f+40>>2]=.9999979734420776;g[f+48>>2]=.10000000149011612;c[f>>2]=0;g[v>>2]=40.0;g[f+8>>2]=50.0;g[f+28>>2]=4.0;g[f+32>>2]=20.0;g[f+24>>2]=0.0;g[f+20>>2]=0.0;fp(h,dv(u,f)|0,1,1);c[h>>2]=8120;c[h+20>>2]=2;f=n4(24)|0;u=c[3654]|0;w=+(((bI()|0)%50|0)-25|0);v=b+4|0;oe(v|0,0,16);g[b+36>>2]=0.0;g[b+44>>2]=.9999979734420776;g[b+40>>2]=.9999979734420776;g[b+48>>2]=.10000000149011612;c[b>>2]=0;g[v>>2]=w;g[b+8>>2]=20.0;g[b+28>>2]=6.0;g[b+32>>2]=8.0;g[b+24>>2]=15.0;g[b+20>>2]=0.0;fp(f,dv(u,b)|0,1,1);c[f>>2]=8120;c[f+20>>2]=2;b=n4(24)|0;u=c[3654]|0;w=+(((bI()|0)%50|0)-25|0);v=e+4|0;oe(v|0,0,16);g[e+36>>2]=0.0;g[e+44>>2]=.9999979734420776;g[e+40>>2]=.9999979734420776;g[e+48>>2]=.10000000149011612;c[e>>2]=0;g[v>>2]=w;g[e+8>>2]=20.0;g[e+28>>2]=15.0;g[e+32>>2]=5.0;g[e+24>>2]=15.0;g[e+20>>2]=0.0;fp(b,dv(u,e)|0,1,1);c[b>>2]=8120;c[b+20>>2]=2;g[(c[f+8>>2]|0)+68>>2]=0.0;g[(c[b+8>>2]|0)+68>>2]=0.0;e=n4(24)|0;dX(e,1);dZ(e,t,0);dZ(e,n,0);dZ(e,m,0);dZ(e,l,0);dZ(e,k,0);dZ(e,h,0);dZ(e,f,0);dZ(e,b,0);c[3664]=e;e=c[3654]|0;b=j+4|0;oe(b|0,0,16);g[j+36>>2]=0.0;g[j+44>>2]=.9999979734420776;g[j+40>>2]=.9999979734420776;g[j+48>>2]=.10000000149011612;c[j>>2]=0;g[b>>2]=10.0;g[j+8>>2]=10.0;g[j+28>>2]=2.0;g[j+32>>2]=2.0;g[j+24>>2]=1.0;g[j+20>>2]=0.0;b=dv(e,j)|0;j=n4(48)|0;fQ(j,0,b);c[j+24>>2]=10;c[j+20>>2]=1;c[j+40>>2]=14616;e=q;c8[c[(c[e>>2]|0)+24>>2]&31](r,1,416);c8[c[(c[e>>2]|0)+24>>2]&31](r,2,4432);c8[c[(c[e>>2]|0)+24>>2]&31](r,3,3160);c[3667]=j;c[b+132>>2]=j;dS(14616,c[3667]|0);j=o+4|0;b=o+24|0;r=j;e=o+32|0;q=o+28|0;f=o+36|0;h=o+44|0;k=o+40|0;l=o+48|0;m=o|0;n=o+8|0;t=o+20|0;u=n4(44)|0;v=c[3654]|0;w=+(((bI()|0)%5|0)+45|0);oe(r|0,0,16);g[f>>2]=0.0;g[h>>2]=.9999979734420776;g[k>>2]=.9999979734420776;g[l>>2]=.10000000149011612;c[m>>2]=0;g[j>>2]=w;g[n>>2]=60.0;g[q>>2]=2.0;g[e>>2]=2.0;g[b>>2]=1.0;g[t>>2]=0.0;fc(u,dv(v,o)|0);c[u+20>>2]=3;c[u+24>>2]=10;dS(14616,u);u=n4(44)|0;v=c[3654]|0;w=+(((bI()|0)%5|0)+45|0);oe(r|0,0,16);g[f>>2]=0.0;g[h>>2]=.9999979734420776;g[k>>2]=.9999979734420776;g[l>>2]=.10000000149011612;c[m>>2]=0;g[j>>2]=w;g[n>>2]=60.0;g[q>>2]=2.0;g[e>>2]=2.0;g[b>>2]=1.0;g[t>>2]=0.0;fc(u,dv(v,o)|0);c[u+20>>2]=3;c[u+24>>2]=10;dS(14616,u);u=n4(44)|0;v=c[3654]|0;w=+(((bI()|0)%5|0)+45|0);oe(r|0,0,16);g[f>>2]=0.0;g[h>>2]=.9999979734420776;g[k>>2]=.9999979734420776;g[l>>2]=.10000000149011612;c[m>>2]=0;g[j>>2]=w;g[n>>2]=60.0;g[q>>2]=2.0;g[e>>2]=2.0;g[b>>2]=1.0;g[t>>2]=0.0;fc(u,dv(v,o)|0);c[u+20>>2]=3;c[u+24>>2]=10;dS(14616,u);u=p+4|0;o=p+24|0;v=u;t=p+32|0;b=p+28|0;e=p+36|0;q=p+44|0;n=p+40|0;j=p+48|0;m=p|0;l=p+8|0;k=p+20|0;h=n4(44)|0;f=c[3654]|0;w=+(bI()|0)*120.0*4.656612873077393e-10+-60.0;oe(v|0,0,16);g[e>>2]=0.0;g[q>>2]=.9999979734420776;g[n>>2]=.9999979734420776;g[j>>2]=.10000000149011612;c[m>>2]=0;g[u>>2]=w;g[l>>2]=10.0;g[b>>2]=2.0;g[t>>2]=2.0;g[o>>2]=1.0;g[k>>2]=0.0;fi(h,dv(f,p)|0);c[h+20>>2]=3;c[h+24>>2]=10;dS(14616,h);h=n4(44)|0;f=c[3654]|0;w=+(bI()|0)*120.0*4.656612873077393e-10+-60.0;oe(v|0,0,16);g[e>>2]=0.0;g[q>>2]=.9999979734420776;g[n>>2]=.9999979734420776;g[j>>2]=.10000000149011612;c[m>>2]=0;g[u>>2]=w;g[l>>2]=10.0;g[b>>2]=2.0;g[t>>2]=2.0;g[o>>2]=1.0;g[k>>2]=0.0;fi(h,dv(f,p)|0);c[h+20>>2]=3;c[h+24>>2]=10;dS(14616,h);h=n4(44)|0;f=c[3654]|0;w=+(bI()|0)*120.0*4.656612873077393e-10+-60.0;oe(v|0,0,16);g[e>>2]=0.0;g[q>>2]=.9999979734420776;g[n>>2]=.9999979734420776;g[j>>2]=.10000000149011612;c[m>>2]=0;g[u>>2]=w;g[l>>2]=10.0;g[b>>2]=2.0;g[t>>2]=2.0;g[o>>2]=1.0;g[k>>2]=0.0;fi(h,dv(f,p)|0);c[h+20>>2]=3;c[h+24>>2]=10;dS(14616,h);bs(2,60,1);s=0;i=d;return s|0}function dK(){dW(14616);dQ(14616);return}function dL(a){a=a|0;fr(a|0);return}function dM(a){a=a|0;fr(a|0);n6(a);return}function dN(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0.0,i=0,j=0.0,k=0,l=0.0,m=0.0,n=0.0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;d=dF(b)|0;e=c[a+8>>2]|0;f=e|0;h=+g[f>>2];g[d>>2]=h;i=e+4|0;j=+g[i>>2];g[d+4>>2]=j;c[d+12>>2]=4;k=e+32|0;l=+g[(c[k>>2]|0)+40>>2]*2.0;g[d+16>>2]=l;m=+g[(c[k>>2]|0)+44>>2]*2.0;g[d+20>>2]=m;n=j*.4000000059604645;g[d+24>>2]=n;j=h*.4000000059604645;g[d+28>>2]=j;g[d+32>>2]=n-m;g[d+36>>2]=j-l;c[d+40>>2]=c[a+20>>2];a=e+48|0;g[d+8>>2]=+g[a>>2];e=b+16|0;o=n4(12)|0;p=o;q=o+8|0;if((q|0)!=0){c[q>>2]=d}d=e;q=e|0;c[(c[q>>2]|0)+4>>2]=p;c[o>>2]=c[q>>2];c[q>>2]=p;c[o+4>>2]=d;o=b+24|0;c[o>>2]=(c[o>>2]|0)+1;p=dF(b)|0;g[p>>2]=+g[f>>2];g[p+4>>2]=+g[i>>2];c[p+12>>2]=1;g[p+8>>2]=+g[a>>2];g[p+40>>2]=1.0;g[p+32>>2]=+g[(c[k>>2]|0)+40>>2]*2.0;g[p+36>>2]=+g[(c[k>>2]|0)+44>>2]*2.0;g[p+16>>2]=1.0;g[p+28>>2]=1.0;g[p+24>>2]=1.0;g[p+20>>2]=1.0;k=n4(12)|0;a=k;i=k+8|0;if((i|0)==0){r=c[q>>2]|0;s=r+4|0;c[s>>2]=a;t=c[q>>2]|0;u=k;c[u>>2]=t;c[q>>2]=a;v=k+4|0;w=v;c[w>>2]=d;x=c[o>>2]|0;y=x+1|0;c[o>>2]=y;return}c[i>>2]=p;r=c[q>>2]|0;s=r+4|0;c[s>>2]=a;t=c[q>>2]|0;u=k;c[u>>2]=t;c[q>>2]=a;v=k+4|0;w=v;c[w>>2]=d;x=c[o>>2]|0;y=x+1|0;c[o>>2]=y;return}function dO(){dP(14616);bf(286,14616,u|0)|0;return}function dP(b){b=b|0;var d=0,e=0,f=0;d=b+12|0;e=d;c[d>>2]=e;c[b+16>>2]=e;c[b+20>>2]=0;e=b+24|0;d=e;c[e>>2]=d;c[b+28>>2]=d;c[b+32>>2]=0;d=n4(176)|0;e=d;oe(d+20|0,0,32);oe(d+100|0,0,32);g[d+92>>2]=.9994999766349792;g[d+96>>2]=.9994999766349792;c[d+156>>2]=0;c[d+160>>2]=0;oe(d+132|0,0,20);c[d+168>>2]=10;c[d+172>>2]=3;c[b>>2]=e;dw(e,-9.8100004196167,0.0,0.0,1.0,1.0);e=n4(28)|0;c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;d=e+16|0;f=d;c[d>>2]=f;c[e+20>>2]=f;c[e+24>>2]=0;c[e+12>>2]=0;c[b+36>>2]=e;a[b+44|0]=0;return}function dQ(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;b=a|0;dy(c[b>>2]|0,.01666666753590107);d=c[a+40>>2]|0;cU[c[c[d>>2]>>2]&511](d);d=c[a+28>>2]|0;e=a+24|0;if((d|0)!=(e|0)){f=a+32|0;g=d;while(1){d=c[g+8>>2]|0;do{if(c6[c[(c[d>>2]|0)+12>>2]&63](d,a)|0){dx(c[b>>2]|0,c[d+8>>2]|0);h=g+4|0;i=c[h>>2]|0;j=g|0;c[(c[j>>2]|0)+4>>2]=i;c[c[h>>2]>>2]=c[j>>2];c[f>>2]=(c[f>>2]|0)-1;n6(g);if((d|0)==0){k=i;break}cU[c[(c[d>>2]|0)+4>>2]&511](d);k=i}else{k=c[g+4>>2]|0}}while(0);if((k|0)==(e|0)){break}else{g=k}}}k=c[a+16>>2]|0;g=a+12|0;if((k|0)==(g|0)){dR(a);l=a+8|0;m=c[l>>2]|0;n=m;o=c[n>>2]|0;p=c[o>>2]|0;cU[p&511](m);return}e=a+20|0;f=k;while(1){k=c[f+8>>2]|0;b=cZ[c[c[k>>2]>>2]&255](k)|0;d=f+4|0;i=c[d>>2]|0;do{if(b){j=f|0;c[(c[j>>2]|0)+4>>2]=i;c[c[d>>2]>>2]=c[j>>2];c[e>>2]=(c[e>>2]|0)-1;n6(f);if((k|0)==0){break}n6(k)}}while(0);if((i|0)==(g|0)){break}else{f=i}}dR(a);l=a+8|0;m=c[l>>2]|0;n=m;o=c[n>>2]|0;p=c[o>>2]|0;cU[p&511](m);return}function dR(b){b=b|0;var d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0;d=i;i=i+16|0;e=d|0;f=d+8|0;h=f;do{if((a[b+48|0]&1)!=0){j=c[(c[b+52>>2]|0)+8>>2]|0;if(+g[j+8>>2]>=10.0){break}k=j+8|0;dr(k,104)|0}}while(0);do{if((a[b+46|0]&1)!=0){k=c[(c[b+52>>2]|0)+8>>2]|0;if(+g[k+8>>2]<=-10.0){break}j=k+8|0;k=104;l=c[k+4>>2]|0;m=e;c[e>>2]=c[k>>2];c[e+4>>2]=l;dt(m,-1.0)|0;m=c[e+4>>2]|0;c[f>>2]=c[e>>2];c[f+4>>2]=m;dr(j,h)|0}}while(0);do{if((a[b+45|0]&1)!=0){h=b+52|0;f=c[h>>2]|0;if((c[f+44>>2]|0)<=10){break}e=(c[f+8>>2]|0)+8|0;dr(e,8)|0;c[(c[h>>2]|0)+44>>2]=0}}while(0);do{if((a[b+47|0]&1)!=0){h=c[(c[b+52>>2]|0)+8>>2]|0;if(+g[h+12>>2]<=-10.0){break}e=h+8|0;dr(e,112)|0}}while(0);if((a[b+49|0]&1)!=0){i=d;return}fX(c[b+52>>2]|0);i=d;return}function dS(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=a+24|0;e=n4(12)|0;f=e;g=e+8|0;if((g|0)!=0){c[g>>2]=b}b=d|0;c[(c[b>>2]|0)+4>>2]=f;c[e>>2]=c[b>>2];c[b>>2]=f;c[e+4>>2]=d;d=a+32|0;c[d>>2]=(c[d>>2]|0)+1;return}function dT(b,c,d){b=b|0;c=c|0;d=d|0;if((c|0)==65){a[b+46|0]=(d|0)!=2|0;return}else if((c|0)==68){a[b+48|0]=(d|0)!=2|0;return}else if((c|0)==83){a[b+47|0]=(d|0)!=2|0;return}else if((c|0)==87){a[b+45|0]=(d|0)!=2|0;return}else{return}}function dU(b,d,e,f,g){b=b|0;d=+d;e=+e;f=f|0;g=g|0;var h=0,i=0,j=0;h=c[b+52>>2]|0;i=h;j=(g|0)==3;L465:do{if(j&(f|0)==5){g=c[h+36>>2]|0;do{if((g|0)!=0){if((a[g+56|0]&1)!=0){break}fW(i,d,e);break L465}}while(0);fT(i,b,d,e)}}while(0);if((f|0)!=6){return}a[b+49|0]=j&1;if(!j){return}fV(i,d,e);return}function dV(a,b,c){a=a|0;b=+b;c=+c;return}function dW(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0;b=c[a+16>>2]|0;d=a+12|0;if((b|0)!=(d|0)){e=a+36|0;f=b;do{b=c[f+8>>2]|0;cV[c[(c[b>>2]|0)+4>>2]&255](b,c[e>>2]|0);f=c[f+4>>2]|0;}while((f|0)!=(d|0))}d=c[a+28>>2]|0;f=a+24|0;e=a+36|0;if((d|0)!=(f|0)){b=d;do{d=c[b+8>>2]|0;cV[c[(c[d>>2]|0)+8>>2]&255](d,c[e>>2]|0);b=c[b+4>>2]|0;}while((b|0)!=(f|0))}f=a+4|0;b=c[f>>2]|0;cU[c[(c[b>>2]|0)+12>>2]&511](b);b=c[f>>2]|0;d=c[(c[b>>2]|0)+20>>2]|0;g=dY(c[a+40>>2]|0,0)|0;cV[d&255](b,g);g=c[f>>2]|0;cV[c[(c[g>>2]|0)+20>>2]&255](g,c[e>>2]|0);g=c[f>>2]|0;cU[c[(c[g>>2]|0)+16>>2]&511](g);g=c[e>>2]|0;e=g+16|0;f=g+24|0;if((c[f>>2]|0)==0){h=g+12|0;c[h>>2]=0;return}b=c[g+20>>2]|0;d=e;a=(c[e>>2]|0)+4|0;e=b|0;c[(c[e>>2]|0)+4>>2]=c[a>>2];c[c[a>>2]>>2]=c[e>>2];c[f>>2]=0;if((b|0)==(d|0)){h=g+12|0;c[h>>2]=0;return}else{i=b}while(1){b=c[i+4>>2]|0;n6(i);if((b|0)==(d|0)){break}else{i=b}}h=g+12|0;c[h>>2]=0;return}function dX(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;c[a>>2]=8256;d=a+8|0;e=d;c[d>>2]=e;c[a+12>>2]=e;c[a+16>>2]=0;c[a+20>>2]=b;e=aV(b|0,28)|0;d=K;f=bv(e|0,4)|0;e=n5(d|K?-1:f)|0;c[e>>2]=b;f=e+4|0;if((b|0)==0){g=a+4|0;c[g>>2]=f;return}e=f+(b*28|0)|0;b=f;do{c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;d=b+16|0;h=d;c[d>>2]=h;c[b+20>>2]=h;c[b+24>>2]=0;c[b+12>>2]=0;b=b+28|0;}while((b|0)!=(e|0));g=a+4|0;c[g>>2]=f;return}function dY(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;d=a+4|0;e=c[d>>2]|0;f=e+(b*28|0)+16|0;g=e+(b*28|0)+24|0;do{if((c[g>>2]|0)!=0){h=c[e+(b*28|0)+20>>2]|0;i=f;j=(c[f>>2]|0)+4|0;k=h|0;c[(c[k>>2]|0)+4>>2]=c[j>>2];c[c[j>>2]>>2]=c[k>>2];c[g>>2]=0;if((h|0)==(i|0)){break}else{l=h}while(1){h=c[l+4>>2]|0;n6(l);if((h|0)==(i|0)){break}else{l=h}}}}while(0);c[e+(b*28|0)+12>>2]=0;e=c[a+12>>2]|0;l=a+8|0;if((e|0)==(l|0)){m=c[d>>2]|0;n=m+(b*28|0)|0;return n|0}else{o=e}do{e=c[o+8>>2]|0;cV[c[(c[e>>2]|0)+8>>2]&255](e,(c[d>>2]|0)+(b*28|0)|0);o=c[o+4>>2]|0;}while((o|0)!=(l|0));m=c[d>>2]|0;n=m+(b*28|0)|0;return n|0}function dZ(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;d=a+8|0;e=n4(12)|0;f=e;g=e+8|0;if((g|0)!=0){c[g>>2]=b}b=d|0;c[(c[b>>2]|0)+4>>2]=f;c[e>>2]=c[b>>2];c[b>>2]=f;c[e+4>>2]=d;d=a+16|0;c[d>>2]=(c[d>>2]|0)+1;return}function d_(a){a=a|0;return}function d$(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;c[b>>2]=8424;f=b+28|0;c[f>>2]=0;c[b+32>>2]=0;c[b+24>>2]=f;f=b+40|0;a[f]=0;eg(66);if((ca()|0)==0){return}g=eh(d,e,3024,0,0)|0;c[b+36>>2]=g;ei(g);ev(14400)|0;a[f]=1;c[b+44>>2]=d;c[b+48>>2]=e;return}function d0(a,b){a=a|0;b=b|0;return}function d1(a){a=a|0;var b=0,d=0,e=0,f=0,h=0,j=0.0,k=0,l=0,m=0.0,n=0.0;b=i;i=i+16|0;d=b|0;e=b+8|0;f=a+4|0;h=a+8|0;j=+g[f>>2]- +g[h>>2];k=a+36|0;ek(c[k>>2]|0,d,e);ej(c[k>>2]|0,a+44|0,a+48|0);k=c[d>>2]|0;d=c[e>>2]|0;cC(0,0,k|0,d|0);bV(16384);e=a+16|0;l=a+20|0;ex(14400,+g[e>>2],+g[l>>2],+g[f>>2],+g[h>>2]);m=+g[a+12>>2];n=j*.5*(+(k|0)/+(d|0));g[e>>2]=m-n;g[l>>2]=n+m;i=b;return}function d2(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+40|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=e+32|0;c[f>>2]=b;b=eJ(d,g,h,j,0)|0;a$(1,k|0);aO(3553,c[k>>2]|0);cl(3553,0,6407,c[g>>2]|0,c[h>>2]|0,0,((c[j>>2]|0)==3?6407:6408)|0,5121,b|0);cL(3553,10240,9728);cL(3553,10241,9728);cL(3553,10242,10497);cL(3553,10243,10497);eI(b);b=c[k>>2]|0;c[(d3(a+24|0,f)|0)>>2]=b;i=e;return}function d3(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;d=i;i=i+8|0;e=d|0;f=a+4|0;g=f|0;h=c[g>>2]|0;do{if((h|0)==0){j=f;c[e>>2]=j;k=g;l=j}else{j=c[b>>2]|0;m=h;while(1){n=c[m+16>>2]|0;if(j>>>0<n>>>0){o=m|0;p=c[o>>2]|0;if((p|0)==0){q=443;break}else{m=p;continue}}if(n>>>0>=j>>>0){q=447;break}r=m+4|0;n=c[r>>2]|0;if((n|0)==0){q=446;break}else{m=n}}if((q|0)==443){c[e>>2]=m;k=o;l=m;break}else if((q|0)==447){c[e>>2]=m;k=e;l=m;break}else if((q|0)==446){c[e>>2]=m;k=r;l=m;break}}}while(0);r=c[k>>2]|0;if((r|0)!=0){s=r;t=s+20|0;i=d;return t|0}r=n4(24)|0;e=r+16|0;if((e|0)!=0){c[e>>2]=c[b>>2]}b=r+20|0;if((b|0)!=0){c[b>>2]=0}b=r;c[r>>2]=0;c[r+4>>2]=0;c[r+8>>2]=l;c[k>>2]=b;l=a|0;e=c[c[l>>2]>>2]|0;if((e|0)==0){u=b}else{c[l>>2]=e;u=c[k>>2]|0}d9(c[a+4>>2]|0,u);u=a+8|0;c[u>>2]=(c[u>>2]|0)+1;s=r;t=s+20|0;i=d;return t|0}function d4(a){a=a|0;el(c[a+36>>2]|0);return}function d5(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;d=i;i=i+96|0;e=d|0;f=d+32|0;h=d+64|0;j=d+80|0;k=c[b+20>>2]|0;l=b+16|0;if((k|0)==(l|0)){i=d;return}b=a+24|0;a=e|0;m=e+4|0;n=e+8|0;o=e+12|0;p=e+16|0;q=e+20|0;r=e+24|0;s=e+28|0;e=f|0;t=f+4|0;u=f+8|0;v=f+12|0;w=f+16|0;x=f+20|0;y=f+24|0;z=f+28|0;f=j+4|0;A=j|0;B=j+12|0;C=j+8|0;D=h|0;E=h+4|0;F=h+8|0;G=h+12|0;H=k;do{k=c[H+8>>2]|0;I=k+12|0;L569:do{switch(c[I>>2]|0){case 0:case 1:{ew(14400,+g[k+20>>2],+g[k+24>>2],+g[k+28>>2],+g[k+16>>2]);if((c[I>>2]|0)==1){ey(14400,+g[k+40>>2]);eC(14400,+g[k>>2],+g[k+4>>2],+g[k+32>>2],+g[k+36>>2],+g[k+8>>2]*57.295780181884766);break L569}else{eE(14400,+g[k>>2],+g[k+4>>2],+g[k+32>>2],+g[k+36>>2],+g[k+8>>2]*57.295780181884766);break L569}break};case 2:case 3:{ew(14400,+g[k+20>>2],+g[k+24>>2],+g[k+28>>2],+g[k+16>>2]);if((c[I>>2]|0)==3){ey(14400,+g[k+36>>2]);ez(14400,+g[k>>2],+g[k+4>>2],+g[k+32>>2]);break L569}else{eF(14400,+g[k>>2],+g[k+4>>2],+g[k+32>>2]);break L569}break};case 4:{J=c[(d3(b,k+40|0)|0)>>2]|0;K=k+24|0;g[a>>2]=+g[K>>2];L=k+28|0;g[m>>2]=+g[L>>2];g[n>>2]=+g[K>>2];K=k+36|0;g[o>>2]=+g[K>>2];M=k+32|0;g[p>>2]=+g[M>>2];g[q>>2]=+g[K>>2];g[r>>2]=+g[M>>2];g[s>>2]=+g[L>>2];eH(14400,J,+g[k>>2],+g[k+4>>2],a,+g[k+16>>2],+g[k+20>>2],+g[k+8>>2]*57.295780181884766);break};case 5:{J=c[(d3(b,k+40|0)|0)>>2]|0;L=k+24|0;g[e>>2]=+g[L>>2];M=k+28|0;g[t>>2]=+g[M>>2];g[u>>2]=+g[L>>2];L=k+36|0;g[v>>2]=+g[L>>2];K=k+32|0;g[w>>2]=+g[K>>2];g[x>>2]=+g[L>>2];g[y>>2]=+g[K>>2];g[z>>2]=+g[M>>2];g[f>>2]=0.0;g[A>>2]=0.0;g[B>>2]=100.0;g[C>>2]=100.0;g[D>>2]=+g[k>>2];g[E>>2]=+g[k+4>>2];g[F>>2]=+g[k+16>>2];g[G>>2]=+g[k+20>>2];eG(14400,J,h,j,e,+g[k+8>>2]*57.295780181884766);break};default:{}}}while(0);H=c[H+4>>2]|0;}while((H|0)!=(l|0));i=d;return}function d6(a){a=a|0;return+(+g[a+16>>2])}function d7(a){a=a|0;return+(+g[a+20>>2])}function d8(a){a=a|0;return+(+g[a+20>>2]- +g[a+16>>2])}function d9(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;e=(d|0)==(b|0);a[d+12|0]=e&1;if(e){return}else{f=d}while(1){g=f+8|0;h=c[g>>2]|0;d=h+12|0;if((a[d]&1)!=0){i=519;break}j=h+8|0;k=c[j>>2]|0;e=c[k>>2]|0;if((h|0)==(e|0)){l=c[k+4>>2]|0;if((l|0)==0){i=485;break}m=l+12|0;if((a[m]&1)!=0){i=485;break}a[d]=1;a[k+12|0]=(k|0)==(b|0)|0;a[m]=1}else{if((e|0)==0){i=502;break}m=e+12|0;if((a[m]&1)!=0){i=502;break}a[d]=1;a[k+12|0]=(k|0)==(b|0)|0;a[m]=1}if((k|0)==(b|0)){i=516;break}else{f=k}}if((i|0)==485){if((f|0)==(c[h>>2]|0)){n=h;o=k}else{b=h+4|0;m=c[b>>2]|0;d=m|0;e=c[d>>2]|0;c[b>>2]=e;if((e|0)==0){p=k}else{c[e+8>>2]=h;p=c[j>>2]|0}e=m+8|0;c[e>>2]=p;p=c[j>>2]|0;b=p|0;if((c[b>>2]|0)==(h|0)){c[b>>2]=m}else{c[p+4>>2]=m}c[d>>2]=h;c[j>>2]=m;n=m;o=c[e>>2]|0}a[n+12|0]=1;a[o+12|0]=0;n=o|0;e=c[n>>2]|0;m=e+4|0;d=c[m>>2]|0;c[n>>2]=d;if((d|0)!=0){c[d+8>>2]=o}d=o+8|0;c[e+8>>2]=c[d>>2];n=c[d>>2]|0;p=n|0;if((c[p>>2]|0)==(o|0)){c[p>>2]=e}else{c[n+4>>2]=e}c[m>>2]=o;c[d>>2]=e;return}else if((i|0)==502){e=h|0;if((f|0)==(c[e>>2]|0)){d=f+4|0;o=c[d>>2]|0;c[e>>2]=o;if((o|0)==0){q=k}else{c[o+8>>2]=h;q=c[j>>2]|0}c[g>>2]=q;q=c[j>>2]|0;o=q|0;if((c[o>>2]|0)==(h|0)){c[o>>2]=f}else{c[q+4>>2]=f}c[d>>2]=h;c[j>>2]=f;r=f;s=c[g>>2]|0}else{r=h;s=k}a[r+12|0]=1;a[s+12|0]=0;r=s+4|0;k=c[r>>2]|0;h=k|0;g=c[h>>2]|0;c[r>>2]=g;if((g|0)!=0){c[g+8>>2]=s}g=s+8|0;c[k+8>>2]=c[g>>2];r=c[g>>2]|0;f=r|0;if((c[f>>2]|0)==(s|0)){c[f>>2]=k}else{c[r+4>>2]=k}c[h>>2]=s;c[g>>2]=k;return}else if((i|0)==516){return}else if((i|0)==519){return}}function ea(a,b){a=a|0;b=b|0;if((b|0)==0){return}else{ea(a,c[b>>2]|0);ea(a,c[b+4>>2]|0);n6(b);return}}function eb(a,b){a=a|0;b=b|0;var d=0;c[a>>2]=8064;d=a+8|0;c[d>>2]=b;en(b,6);ep(c[d>>2]|0,2);er(c[d>>2]|0,8);return}function ec(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0;do{if((e|0)==1){g=1}else{f=(e|0)==0;if(f){g=f?2:0;break}return}}while(0);dT(c[(c[3674]|0)+4>>2]|0,b,g);return}function ed(a,b,d){a=a|0;b=+b;d=+d;var e=0,f=0.0,h=0;a=c[(c[(c[3674]|0)+4>>2]|0)+4>>2]|0;e=a;f=b/+(c[a+44>>2]|0);h=a;b=f*+cS[c[(c[h>>2]|0)+8>>2]&7](e);f=b+ +cS[c[c[h>>2]>>2]&7](e);b=+g[a+4>>2];dV(c[(c[3674]|0)+4>>2]|0,f,b+d/+(c[a+48>>2]|0)*(b- +g[a+8>>2]));return}function ee(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,j=0,k=0,l=0,m=0.0,n=0.0,o=0.0,p=0,q=0,r=0,s=0;e=i;i=i+16|0;f=e|0;j=e+8|0;et(a,f,j);a=c[(c[(c[3674]|0)+4>>2]|0)+4>>2]|0;k=a;l=a+48|0;h[j>>3]=+(c[l>>2]|0)- +h[j>>3];m=+h[f>>3]/+(c[a+44>>2]|0);f=a;n=m*+cS[c[(c[f>>2]|0)+8>>2]&7](k);m=n+ +cS[c[c[f>>2]>>2]&7](k);n=+g[a+8>>2];o=n+ +h[j>>3]/+(c[l>>2]|0)*(+g[a+4>>2]-n);a=(d|0)==1?3:4;if((b|0)==0){p=5;q=c[3674]|0;r=q+4|0;s=c[r>>2]|0;dU(s,m,o,p,a);i=e;return}p=(b|0)==1?6:0;q=c[3674]|0;r=q+4|0;s=c[r>>2]|0;dU(s,m,o,p,a);i=e;return}function ef(b){b=b|0;c[3674]=b;if(!(es(c[b+8>>2]|0)|0)){return}a[(c[b+4>>2]|0)+44|0]=1;return}function eg(a){a=a|0;return}function eh(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;b_(a|0,b|0,5,6,5,0,0,0,65537)|0;return 0}function ei(a){a=a|0;return}function ej(a,b,c){a=a|0;b=b|0;c=c|0;cn(b|0,c|0);return}function ek(a,b,c){a=a|0;b=b|0;c=c|0;cn(b|0,c|0);return}function el(a){a=a|0;return}function em(a,b){a=a|0;b=b|0;var d=0;d=c[3672]|0;if((d|0)==0){return}cR[d&15](0,a,0,b,0);return}function en(a,b){a=a|0;b=b|0;c[3672]=b;cM(100);return}function eo(a,b){a=a|0;b=b|0;var d=0;d=c[3668]|0;if((d|0)==0){return}cW[d&3](0,+(a|0),+(b|0));return}function ep(a,b){a=a|0;b=b|0;c[3668]=b;aZ(20);return}function eq(a,b){a=a|0;b=b|0;var d=0;d=c[3670]|0;if((d|0)==0){return}cT[d&31](0,(a|0)==2?1:a,b,0);return}function er(a,b){a=a|0;b=b|0;c[3670]=b;cN(14);return}function es(a){a=a|0;return 0}function et(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;a=i;i=i+16|0;e=a|0;f=a+8|0;bA(e|0,f|0);h[b>>3]=+(c[e>>2]|0);h[d>>3]=+(c[f>>2]|0);i=a;return}function eu(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+24|0;e=d|0;f=d+8|0;g=d+16|0;c[e>>2]=b;b=a7(a|0)|0;if((b|0)==0){h=0;i=d;return h|0}bO(b|0,1,e|0,0);aW(b|0);bF(b|0,35713,f|0);if((c[f>>2]|0)!=0){h=b;i=d;return h|0}c[g>>2]=0;bF(b|0,35716,g|0);a2(b|0);h=0;i=d;return h|0}function ev(a){a=a|0;var b=0,d=0,e=0,f=0,h=0,j=0.0,k=0,l=0;b=i;i=i+224|0;d=b|0;e=b+176|0;f=a+4|0;cx(1,f|0);g[d>>2]=0.0;g[d+4>>2]=0.0;h=1;do{j=+(h|0)*.314159;k=h<<1;g[d+(k<<2)>>2]=+Y(j);g[d+((k|1)<<2)>>2]=+Z(j);h=h+1|0;}while((h|0)<22);bX(34962,c[f>>2]|0);b$(34962,176,d|0,35044);d=e;of(d|0,5080,48)|0;e=a|0;cx(1,e|0);bX(34962,c[e>>2]|0);b$(34962,48,d|0,35044);d=a+8|0;c[d>>2]=cA()|0;e=eu(35633,c[4]|0)|0;f=eu(35632,c[6]|0)|0;if((e|0)==0|(f|0)==0){l=0;i=b;return l|0}br(c[d>>2]|0,e|0);br(c[d>>2]|0,f|0);aM(c[d>>2]|0);c[a+20>>2]=bh(c[d>>2]|0,2272)|0;c[a+44>>2]=bh(c[d>>2]|0,2080)|0;l=1;i=b;return l|0}function ew(a,b,c,d,e){a=a|0;b=+b;c=+c;d=+d;e=+e;var f=0.0;f=b>1.0?1.0:b;g[a+24>>2]=f<0.0?0.0:f;f=c>1.0?1.0:c;g[a+28>>2]=f<0.0?0.0:f;f=d>1.0?1.0:d;g[a+32>>2]=f<0.0?0.0:f;f=e>1.0?1.0:e;g[a+36>>2]=f<0.0?0.0:f;return}function ex(a,b,c,d,e){a=a|0;b=+b;c=+c;d=+d;e=+e;var f=0.0,h=0.0;f=c-b;h=d-e;g[3612]=2.0/f;oe(14452|0,0|0,16|0);g[3617]=2.0/h;oe(14472|0,0|0,16|0);g[3622]=1.0;g[3623]=0.0;g[3624]=(-0.0-(b+c))/f;g[3625]=(-0.0-(d+e))/h;g[3626]=0.0;g[3627]=1.0;return}function ey(a,b){a=a|0;b=+b;g[a+40>>2]=b;return}function ez(a,b,d,e){a=a|0;b=+b;d=+d;e=+e;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=i;i=i+120|0;h=f|0;j=f+64|0;k=f+72|0;l=f+88|0;m=f+104|0;oe(k|0,0,16);oe(l|0,0,16);oe(m|0,0,16);g[3628]=1.0;c[3629]=c[k>>2];c[3630]=c[k+4>>2];c[3631]=c[k+8>>2];c[3632]=c[k+12>>2];g[3633]=1.0;c[3634]=c[l>>2];c[3635]=c[l+4>>2];c[3636]=c[l+8>>2];c[3637]=c[l+12>>2];g[3638]=1.0;c[3639]=c[m>>2];c[3640]=c[m+4>>2];c[3641]=c[m+8>>2];c[3642]=c[m+12>>2];g[3643]=1.0;eA(b,d);eB(e,e);m=h;l=j|0;k=j+4|0;n=0;do{a6(j|0,n|0,4);o=c[k>>2]|0;p=c[l>>2]<<2;g[h+(n<<2)>>2]=+g[14512+(p<<2)>>2]*+g[14448+(o<<2)>>2]+0.0+ +g[14512+((p|1)<<2)>>2]*+g[14448+(o+4<<2)>>2]+ +g[14512+((p|2)<<2)>>2]*+g[14448+(o+8<<2)>>2]+ +g[14512+((p|3)<<2)>>2]*+g[14448+(o+12<<2)>>2];n=n+1|0;}while((n|0)<16);of(14512,m|0,64)|0;cj(c[a+8>>2]|0);cI(c[a+44>>2]|0,1,0,14512);bZ(c[a+20>>2]|0,+(+g[a+24>>2]),+(+g[a+28>>2]),+(+g[a+32>>2]),+(+g[a+36>>2]));bW(0);bX(34962,c[a+4>>2]|0);bd(0,2,5126,0,0,0);bl(2,2,20);bL(0);cj(0);i=f;return}function eA(a,b){a=+a;b=+b;var d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;d=i;i=i+136|0;e=d|0;f=d+64|0;h=d+72|0;g[h>>2]=1.0;oe(h+4|0,0,16);g[h+20>>2]=1.0;oe(h+24|0,0,16);g[h+40>>2]=1.0;g[h+44>>2]=0.0;g[h+48>>2]=a;g[h+52>>2]=b;g[h+56>>2]=0.0;g[h+60>>2]=1.0;j=e;k=f|0;l=f+4|0;m=0;do{a6(f|0,m|0,4);n=c[l>>2]|0;o=c[k>>2]<<2;g[e+(m<<2)>>2]=+g[h+(o<<2)>>2]*+g[14512+(n<<2)>>2]+0.0+ +g[h+((o|1)<<2)>>2]*+g[14512+(n+4<<2)>>2]+ +g[h+((o|2)<<2)>>2]*+g[14512+(n+8<<2)>>2]+ +g[h+((o|3)<<2)>>2]*+g[14512+(n+12<<2)>>2];m=m+1|0;}while((m|0)<16);of(14512,j|0,64)|0;i=d;return}function eB(a,b){a=+a;b=+b;var d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;d=i;i=i+136|0;e=d|0;f=d+64|0;h=d+72|0;g[h>>2]=a;oe(h+4|0,0,16);g[h+20>>2]=b;oe(h+24|0,0,16);g[h+40>>2]=1.0;oe(h+44|0,0,16);g[h+60>>2]=1.0;j=e;k=f|0;l=f+4|0;m=0;do{a6(f|0,m|0,4);n=c[l>>2]|0;o=c[k>>2]<<2;g[e+(m<<2)>>2]=+g[h+(o<<2)>>2]*+g[14512+(n<<2)>>2]+0.0+ +g[h+((o|1)<<2)>>2]*+g[14512+(n+4<<2)>>2]+ +g[h+((o|2)<<2)>>2]*+g[14512+(n+8<<2)>>2]+ +g[h+((o|3)<<2)>>2]*+g[14512+(n+12<<2)>>2];m=m+1|0;}while((m|0)<16);of(14512,j|0,64)|0;i=d;return}function eC(a,b,d,e,f,h){a=a|0;b=+b;d=+d;e=+e;f=+f;h=+h;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;j=i;i=i+120|0;k=j|0;l=j+64|0;m=j+72|0;n=j+88|0;o=j+104|0;oe(m|0,0,16);oe(n|0,0,16);oe(o|0,0,16);g[3628]=1.0;c[3629]=c[m>>2];c[3630]=c[m+4>>2];c[3631]=c[m+8>>2];c[3632]=c[m+12>>2];g[3633]=1.0;c[3634]=c[n>>2];c[3635]=c[n+4>>2];c[3636]=c[n+8>>2];c[3637]=c[n+12>>2];g[3638]=1.0;c[3639]=c[o>>2];c[3640]=c[o+4>>2];c[3641]=c[o+8>>2];c[3642]=c[o+12>>2];g[3643]=1.0;eA(b,d);eD(h*3.14159/180.0);eB(e,f);o=k;n=l|0;m=l+4|0;p=0;do{a6(l|0,p|0,4);q=c[m>>2]|0;r=c[n>>2]<<2;g[k+(p<<2)>>2]=+g[14512+(r<<2)>>2]*+g[14448+(q<<2)>>2]+0.0+ +g[14512+((r|1)<<2)>>2]*+g[14448+(q+4<<2)>>2]+ +g[14512+((r|2)<<2)>>2]*+g[14448+(q+8<<2)>>2]+ +g[14512+((r|3)<<2)>>2]*+g[14448+(q+12<<2)>>2];p=p+1|0;}while((p|0)<16);of(14512,o|0,64)|0;cj(c[a+8>>2]|0);cI(c[a+44>>2]|0,1,0,14512);bZ(c[a+20>>2]|0,+(+g[a+24>>2]),+(+g[a+28>>2]),+(+g[a+32>>2]),+(+g[a+36>>2]));bW(0);bX(34962,c[a>>2]|0);bd(0,2,5126,0,0,0);bl(2,2,4);bL(0);cj(0);i=j;return}function eD(a){a=+a;var b=0,d=0,e=0,f=0,j=0,k=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0,s=0,t=0,u=0;b=i;i=i+152|0;d=b|0;e=b+64|0;f=b+72|0;j=b+80|0;k=b+88|0;cq(+a,f|0,j|0);a=+h[j>>3];l=1.0-a;m=l*0.0;n=a+m;g[k>>2]=n;o=+h[f>>3];g[k+4>>2]=o+m;p=o*0.0;q=m-p;g[k+8>>2]=q;g[k+12>>2]=0.0;g[k+16>>2]=m-o;g[k+20>>2]=n;n=m+p;g[k+24>>2]=n;g[k+28>>2]=0.0;g[k+32>>2]=n;g[k+36>>2]=q;g[k+40>>2]=a+l;oe(k+44|0,0,16);g[k+60>>2]=1.0;f=d;j=e|0;r=e+4|0;s=0;do{a6(e|0,s|0,4);t=c[r>>2]|0;u=c[j>>2]<<2;g[d+(s<<2)>>2]=+g[k+(u<<2)>>2]*+g[14512+(t<<2)>>2]+0.0+ +g[k+((u|1)<<2)>>2]*+g[14512+(t+4<<2)>>2]+ +g[k+((u|2)<<2)>>2]*+g[14512+(t+8<<2)>>2]+ +g[k+((u|3)<<2)>>2]*+g[14512+(t+12<<2)>>2];s=s+1|0;}while((s|0)<16);of(14512,f|0,64)|0;i=b;return}function eE(a,b,d,e,f,h){a=a|0;b=+b;d=+d;e=+e;f=+f;h=+h;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;j=i;i=i+120|0;k=j|0;l=j+64|0;m=j+72|0;n=j+88|0;o=j+104|0;oe(m|0,0,16);oe(n|0,0,16);oe(o|0,0,16);g[3628]=1.0;c[3629]=c[m>>2];c[3630]=c[m+4>>2];c[3631]=c[m+8>>2];c[3632]=c[m+12>>2];g[3633]=1.0;c[3634]=c[n>>2];c[3635]=c[n+4>>2];c[3636]=c[n+8>>2];c[3637]=c[n+12>>2];g[3638]=1.0;c[3639]=c[o>>2];c[3640]=c[o+4>>2];c[3641]=c[o+8>>2];c[3642]=c[o+12>>2];g[3643]=1.0;eA(b,d);eD(h*3.14159/180.0);eB(e,f);o=k;n=l|0;m=l+4|0;p=0;do{a6(l|0,p|0,4);q=c[m>>2]|0;r=c[n>>2]<<2;g[k+(p<<2)>>2]=+g[14512+(r<<2)>>2]*+g[14448+(q<<2)>>2]+0.0+ +g[14512+((r|1)<<2)>>2]*+g[14448+(q+4<<2)>>2]+ +g[14512+((r|2)<<2)>>2]*+g[14448+(q+8<<2)>>2]+ +g[14512+((r|3)<<2)>>2]*+g[14448+(q+12<<2)>>2];p=p+1|0;}while((p|0)<16);of(14512,o|0,64)|0;cj(c[a+8>>2]|0);cI(c[a+44>>2]|0,1,0,14512);bZ(c[a+20>>2]|0,+(+g[a+24>>2]),+(+g[a+28>>2]),+(+g[a+32>>2]),+(+g[a+36>>2]));bW(0);bX(34962,c[a>>2]|0);bd(0,2,5126,0,0,0);bl(6,0,6);bL(0);cj(0);i=j;return}function eF(a,b,d,e){a=a|0;b=+b;d=+d;e=+e;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=i;i=i+120|0;h=f|0;j=f+64|0;k=f+72|0;l=f+88|0;m=f+104|0;oe(k|0,0,16);oe(l|0,0,16);oe(m|0,0,16);g[3628]=1.0;c[3629]=c[k>>2];c[3630]=c[k+4>>2];c[3631]=c[k+8>>2];c[3632]=c[k+12>>2];g[3633]=1.0;c[3634]=c[l>>2];c[3635]=c[l+4>>2];c[3636]=c[l+8>>2];c[3637]=c[l+12>>2];g[3638]=1.0;c[3639]=c[m>>2];c[3640]=c[m+4>>2];c[3641]=c[m+8>>2];c[3642]=c[m+12>>2];g[3643]=1.0;eA(b,d);eB(e,e);m=h;l=j|0;k=j+4|0;n=0;do{a6(j|0,n|0,4);o=c[k>>2]|0;p=c[l>>2]<<2;g[h+(n<<2)>>2]=+g[14512+(p<<2)>>2]*+g[14448+(o<<2)>>2]+0.0+ +g[14512+((p|1)<<2)>>2]*+g[14448+(o+4<<2)>>2]+ +g[14512+((p|2)<<2)>>2]*+g[14448+(o+8<<2)>>2]+ +g[14512+((p|3)<<2)>>2]*+g[14448+(o+12<<2)>>2];n=n+1|0;}while((n|0)<16);of(14512,m|0,64)|0;cj(c[a+8>>2]|0);cI(c[a+44>>2]|0,1,0,14512);bZ(c[a+20>>2]|0,+(+g[a+24>>2]),+(+g[a+28>>2]),+(+g[a+32>>2]),+(+g[a+36>>2]));bW(0);bX(34962,c[a+4>>2]|0);bd(0,2,5126,0,0,0);bl(6,0,22);bL(0);cj(0);i=f;return}function eG(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;g[a+24>>2]=1.0;g[a+28>>2]=1.0;g[a+32>>2]=1.0;g[a+36>>2]=1.0;eC(a,+g[c>>2],+g[c+4>>2],+g[c+8>>2],+g[c+12>>2],f);return}function eH(a,b,c,d,e,f,h,i){a=a|0;b=b|0;c=+c;d=+d;e=e|0;f=+f;h=+h;i=+i;g[a+24>>2]=1.0;g[a+28>>2]=1.0;g[a+32>>2]=1.0;g[a+36>>2]=1.0;eC(a,c,d,f,h,i);return}function eI(a){a=a|0;n0(a);return}function eJ(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0;h=i;i=i+184|0;j=h|0;k=bQ(b|0,824)|0;if((k|0)==0){c[4668]=3216;l=0;i=h;return l|0}b=k;m=j+16|0;c[m>>2]=c[3492];c[m+4>>2]=c[3493];c[m+8>>2]=c[3494];c[j+28>>2]=b;c[j+36>>2]=128;m=j+32|0;c[m>>2]=1;n=j+40|0;c[j+176>>2]=n;o=c_[c[j+16>>2]&63](b,n,128)|0;if((o|0)==0){c[m>>2]=0;m=(c[j+172>>2]|0)-1|0;c[j+168>>2]=m;a[m]=0}else{c[j+168>>2]=n;c[j+172>>2]=j+40+o}o=eK(j,d,e,f,g)|0;aJ(k|0)|0;l=o;i=h;return l|0}function eK(e,f,h,j,k){e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aK=0,aL=0,aM=0,aN=0,aO=0,aP=0,aQ=0,aR=0,aS=0,aT=0,aU=0,aV=0,aW=0,aX=0,aY=0,aZ=0,a_=0,a$=0,a0=0,a1=0,a2=0,a3=0,a4=0,a5=0,a6=0,a7=0,a8=0,a9=0,ba=0,bb=0,bc=0,bd=0,be=0,bf=0,bg=0,bh=0,bi=0,bj=0,bk=0,bl=0,bm=0,bn=0,bo=0,bp=0,bq=0,br=0,bs=0,bt=0,bu=0,bv=0,bw=0,bx=0,by=0,bz=0,bA=0,bB=0,bC=0,bD=0,bE=0,bF=0,bG=0,bH=0,bI=0,bJ=0,bK=0,bL=0,bM=0,bN=0,bO=0,bP=0,bQ=0,bR=0,bS=0,bT=0,bU=0,bV=0,bW=0,bX=0,bY=0,bZ=0,b_=0,b$=0,b0=0,b1=0,b2=0,b3=0,b4=0,b5=0,b6=0,b7=0,b8=0,b9=0,ca=0,cb=0,cc=0,cd=0,ce=0,cf=0,cg=0,ch=0,ci=0,cj=0,ck=0,cl=0,cm=0,cn=0,co=0,cp=0,cq=0,cr=0,cs=0,ct=0,cu=0,cv=0,cw=0,cx=0,cy=0,cz=0,cA=0,cB=0,cC=0,cD=0,cE=0,cF=0,cG=0,cH=0,cI=0,cJ=0,cK=0,cL=0,cM=0,cN=0,cO=0,cP=0,cQ=0,cR=0,cS=0,cT=0,cU=0,cW=0,cX=0,cY=0,c$=0,c0=0,c1=0,c2=0,c3=0,c4=0,c5=0,c6=0,c8=0,c9=0,da=0,db=0,dc=0,dd=0,de=0,df=0,dg=0,dh=0,di=0,dj=0,dk=0,dl=0,dm=0,dn=0,dp=0,dq=0,dr=0,ds=0,dt=0,du=0,dv=0,dw=0,dx=0,dy=0,dz=0,dA=0,dB=0,dC=0,dD=0,dE=0,dF=0,dG=0,dH=0,dI=0,dJ=0,dK=0,dL=0,dM=0,dN=0,dO=0,dP=0,dQ=0,dR=0,dS=0,dT=0,dU=0,dV=0,dW=0,dX=0,dY=0,dZ=0,d_=0,d$=0,d0=0,d1=0,d2=0,d3=0,d4=0,d5=0,d6=0,d7=0,d8=0,d9=0,ea=0,eb=0,ec=0,ed=0,ee=0,ef=0,eg=0,eh=0,ei=0,ej=0,ek=0,el=0,em=0,en=0,eo=0,ep=0,eq=0,er=0,es=0,et=0,eu=0,ev=0,ew=0,ex=0,ey=0,ez=0,eA=0,eB=0,eC=0,eD=0,eE=0,eF=0,eG=0,eH=0,eI=0,eJ=0,eK=0,eM=0,eN=0,eO=0,eP=0,eQ=0,eT=0,eW=0,eX=0,eY=0,e1=0,e2=0,e3=0,e4=0,e5=0,e8=0,e9=0,fa=0,fb=0,fc=0,fd=0,fe=0,ff=0,fg=0,fh=0,fi=0,fj=0,fk=0,fl=0,fm=0,fn=0,fo=0,fp=0,fq=0,fr=0,fs=0,ft=0,fu=0,fv=0,fw=0,fx=0,fy=0,fz=0,fA=0,fB=0,fC=0,fD=0,fE=0,fF=0,fG=0,fH=0,fI=0,fJ=0,fK=0,fL=0,fM=0,fN=0,fO=0,fP=0,fQ=0,fR=0,fS=0,fT=0,fU=0,fV=0,fW=0,fX=0,fY=0,fZ=0,f_=0,f$=0,f0=0,f1=0,f2=0,f3=0,f4=0,f5=0,f6=0,f7=0,f8=0,f9=0,ga=0,gb=0,gc=0,gd=0,ge=0,gf=0,gg=0,gh=0,gi=0,gj=0,gk=0,gl=0,gm=0,gn=0,go=0,gp=0,gq=0,gr=0,gs=0,gt=0,gu=0,gv=0,gw=0,gx=0,gy=0,gz=0,gA=0,gB=0,gC=0,gD=0,gE=0,gF=0,gG=0,gH=0,gI=0,gJ=0,gK=0,gL=0,gM=0,gN=0,gO=0,gP=0,gQ=0,gR=0,gS=0,gT=0,gU=0,gV=0,gW=0,gX=0,gY=0,gZ=0,g_=0,g$=0,g0=0,g1=0,g2=0,g3=0,g4=0,g5=0,g6=0,g7=0,g8=0,g9=0,ha=0,hb=0,hc=0,hd=0,he=0,hf=0,hg=0,hh=0,hi=0,hj=0,hk=0,hl=0,hm=0,hn=0,ho=0,hp=0,hq=0,hr=0,hs=0,ht=0,hu=0,hv=0,hw=0,hx=0,hy=0,hz=0,hA=0,hB=0,hC=0,hD=0,hE=0,hF=0,hG=0,hH=0,hI=0,hJ=0,hK=0,hL=0,hM=0,hN=0,hO=0,hP=0,hQ=0,hR=0,hS=0,hT=0,hU=0,hV=0,hW=0,hX=0,hY=0,hZ=0,h_=0,h$=0,h0=0,h1=0,h2=0,h3=0,h4=0,h5=0,h6=0,h7=0,h8=0,h9=0,ia=0,ib=0,ic=0,id=0,ie=0,ig=0,ih=0,ii=0,ij=0,ik=0,il=0,im=0,io=0,ip=0,iq=0,ir=0,is=0,it=0,iu=0,iv=0,iw=0,ix=0,iy=0,iz=0,iA=0,iB=0,iC=0,iD=0,iE=0,iF=0,iG=0,iH=0,iI=0,iJ=0,iK=0,iL=0,iM=0,iN=0,iO=0,iP=0,iQ=0,iR=0,iS=0,iT=0,iU=0,iV=0,iW=0,iX=0,iY=0,iZ=0,i_=0,i$=0,i0=0,i1=0,i2=0,i3=0,i4=0,i5=0,i6=0,i7=0,i8=0,i9=0,ja=0,jb=0,jc=0,jd=0,je=0,jf=0,jg=0,jh=0,ji=0,jj=0,jk=0,jl=0,jm=0,jn=0,jo=0.0,jp=0.0,jq=0.0,jr=0.0,js=0,jt=0,ju=0,jv=0,jw=0,jx=0,jy=0,jz=0,jA=0,jB=0,jC=0,jD=0,jE=0,jF=0,jG=0,jH=0,jI=0,jJ=0,jK=0,jL=0,jM=0,jN=0,jO=0,jP=0,jQ=0,jR=0,jS=0,jT=0,jU=0,jV=0,jW=0,jX=0,jY=0,jZ=0,j_=0,j$=0,j0=0,j1=0,j2=0,j3=0,j4=0,j5=0,j6=0,j7=0,j8=0,j9=0,ka=0,kb=0,kc=0,kd=0,ke=0,kf=0,kg=0,kh=0,ki=0,kj=0,kk=0,kl=0,km=0,kn=0,ko=0,kp=0,kq=0,kr=0,ks=0,kt=0,ku=0,kv=0,kw=0,kx=0,ky=0,kz=0,kA=0,kB=0,kC=0,kD=0,kE=0,kF=0,kG=0,kH=0,kI=0,kJ=0,kK=0,kL=0,kM=0,kN=0,kO=0,kP=0,kQ=0,kR=0,kS=0,kT=0,kU=0,kV=0,kW=0,kX=0,kY=0,kZ=0,k_=0,k$=0,k0=0,k1=0,k2=0,k3=0,k4=0,k5=0,k6=0,k7=0,k8=0,k9=0,la=0,lb=0,lc=0,ld=0,le=0,lf=0,lg=0,lh=0,li=0,lj=0,lk=0,ll=0,lm=0,ln=0,lo=0,lp=0,lq=0,lr=0,ls=0,lt=0,lu=0,lv=0,lw=0,lx=0,ly=0,lz=0,lA=0,lB=0,lC=0,lD=0,lE=0,lF=0,lG=0,lH=0,lI=0,lJ=0,lK=0,lL=0,lM=0,lN=0,lO=0,lP=0,lQ=0,lR=0,lS=0,lT=0,lU=0,lV=0,lW=0,lX=0,lY=0,lZ=0,l_=0,l$=0,l0=0,l1=0,l2=0,l3=0;l=i;i=i+46960|0;m=l|0;n=l+32|0;o=l+40|0;p=l+48|0;q=l+18560|0;r=l+18576|0;s=l+18704|0;t=l+18832|0;u=l+18848|0;v=l+18976|0;w=l+32968|0;c[w>>2]=e;x=eU(w,1)|0;w=e+176|0;y=c[w>>2]|0;z=e+168|0;c[z>>2]=y;if((x|0)!=0){x=v|0;c[x>>2]=e;if(k>>>0>4>>>0){c[4668]=4360;A=0;i=l;return A|0}c[e+8>>2]=0;B=v+13984|0;c[B>>2]=0;L755:do{if((eU(v,0)|0)!=0){C=v+13956|0;D=a[C]|0;L757:do{if(D<<24>>24==-1){E=c[x>>2]|0;F=E+168|0;G=c[F>>2]|0;H=E+172|0;do{if(G>>>0<(c[H>>2]|0)>>>0){I=G}else{J=E+32|0;if((c[J>>2]|0)==0){K=-1;break L757}L=E+40|0;M=c_[c[E+16>>2]&63](c[E+28>>2]|0,L,c[E+36>>2]|0)|0;if((M|0)==0){c[J>>2]=0;J=(c[H>>2]|0)-1|0;c[F>>2]=J;a[J]=0;I=c[F>>2]|0;break}else{c[F>>2]=L;c[H>>2]=E+40+M;I=L;break}}}while(0);c[F>>2]=I+1;if((a[I]|0)!=-1){K=-1;break}while(1){E=c[x>>2]|0;H=E+168|0;G=c[H>>2]|0;L=E+172|0;do{if(G>>>0<(c[L>>2]|0)>>>0){N=G}else{M=E+32|0;if((c[M>>2]|0)==0){K=0;break L757}J=E+40|0;O=c_[c[E+16>>2]&63](c[E+28>>2]|0,J,c[E+36>>2]|0)|0;if((O|0)==0){c[M>>2]=0;M=(c[L>>2]|0)-1|0;c[H>>2]=M;a[M]=0;N=c[H>>2]|0;break}else{c[H>>2]=J;c[L>>2]=E+40+O;N=J;break}}}while(0);c[H>>2]=N+1;E=a[N]|0;if(E<<24>>24!=-1){K=E;break}}}else{a[C]=-1;K=D}}while(0);D=v+13964|0;F=v+13952|0;E=v+13948|0;L=v+13960|0;G=v+13860|0;J=v+13804|0;O=v+13748|0;M=v+13988|0;P=v+13968|0;Q=r|0;R=v+13712|0;S=v+13708|0;T=s|0;U=K;L777:while(1){L779:do{if((U<<24>>24|0)==(-38|0)){V=c[x>>2]|0;W=V+168|0;Y=c[W>>2]|0;Z=V+172|0;_=c[Z>>2]|0;do{if(Y>>>0<_>>>0){$=Y+1|0;c[W>>2]=$;aa=d[Y]|0;ab=$;ac=_}else{$=V+32|0;if((c[$>>2]|0)==0){aa=0;ab=Y;ac=_;break}ad=V+40|0;ae=c_[c[V+16>>2]&63](c[V+28>>2]|0,ad,c[V+36>>2]|0)|0;if((ae|0)==0){c[$>>2]=0;$=(c[Z>>2]|0)-1|0;c[W>>2]=$;a[$]=0;af=c[W>>2]|0;ah=c[Z>>2]|0}else{c[W>>2]=ad;$=V+40+ae|0;c[Z>>2]=$;af=ad;ah=$}$=af+1|0;c[W>>2]=$;aa=d[af]|0;ab=$;ac=ah}}while(0);_=aa<<8;do{if(ab>>>0<ac>>>0){c[W>>2]=ab+1;ai=d[ab]|0}else{Y=V+32|0;if((c[Y>>2]|0)==0){ai=0;break}H=V+40|0;$=c_[c[V+16>>2]&63](c[V+28>>2]|0,H,c[V+36>>2]|0)|0;if(($|0)==0){c[Y>>2]=0;Y=(c[Z>>2]|0)-1|0;c[W>>2]=Y;a[Y]=0;aj=c[W>>2]|0}else{c[W>>2]=H;c[Z>>2]=V+40+$;aj=H}c[W>>2]=aj+1;ai=d[aj]|0}}while(0);W=ai|_;V=c[x>>2]|0;Z=V+168|0;H=c[Z>>2]|0;$=V+172|0;do{if(H>>>0<(c[$>>2]|0)>>>0){ak=H}else{Y=V+32|0;if((c[Y>>2]|0)==0){al=654;break L777}ad=V+40|0;ae=c_[c[V+16>>2]&63](c[V+28>>2]|0,ad,c[V+36>>2]|0)|0;if((ae|0)==0){c[Y>>2]=0;Y=(c[$>>2]|0)-1|0;c[Z>>2]=Y;a[Y]=0;ak=c[Z>>2]|0;break}else{c[Z>>2]=ad;c[$>>2]=V+40+ae;ak=ad;break}}}while(0);c[Z>>2]=ak+1;V=a[ak]|0;$=V&255;c[D>>2]=$;if(V<<24>>24==0|(V&255)>>>0>4>>>0){break L777}V=c[x>>2]|0;if(($|0)>(c[V+8>>2]|0)){break L777}if((W|0)==(($<<1)+6|0)){am=0;an=$;ao=V}else{al=662;break L777}while(1){V=(am|0)<(an|0);$=ao+168|0;H=c[$>>2]|0;_=ao+172|0;do{if(H>>>0<(c[_>>2]|0)>>>0){c[$>>2]=H+1;ap=d[H]|0}else{ad=ao+32|0;if((c[ad>>2]|0)==0){ap=0;break}ae=ao+40|0;Y=c_[c[ao+16>>2]&63](c[ao+28>>2]|0,ae,c[ao+36>>2]|0)|0;if((Y|0)==0){c[ad>>2]=0;ad=(c[_>>2]|0)-1|0;c[$>>2]=ad;a[ad]=0;aq=c[$>>2]|0}else{c[$>>2]=ae;c[_>>2]=ao+40+Y;aq=ae}c[$>>2]=aq+1;ap=d[aq]|0}}while(0);if(!V){break}$=c[x>>2]|0;_=$+168|0;H=c[_>>2]|0;ae=$+172|0;do{if(H>>>0<(c[ae>>2]|0)>>>0){c[_>>2]=H+1;ar=d[H]|0}else{Y=$+32|0;if((c[Y>>2]|0)==0){ar=0;break}ad=$+40|0;as=c_[c[$+16>>2]&63](c[$+28>>2]|0,ad,c[$+36>>2]|0)|0;if((as|0)==0){c[Y>>2]=0;Y=(c[ae>>2]|0)-1|0;c[_>>2]=Y;a[Y]=0;at=c[_>>2]|0}else{c[_>>2]=ad;c[ae>>2]=$+40+as;at=ad}c[_>>2]=at+1;ar=d[at]|0}}while(0);_=c[(c[x>>2]|0)+8>>2]|0;$=0;while(1){if(($|0)>=(_|0)){break}if((c[v+13724+($*56|0)>>2]|0)==(ap|0)){break}else{$=$+1|0}}if(($|0)==(_|0)){break L755}c[v+13724+($*56|0)+16>>2]=ar>>>4;if(ar>>>0>63>>>0){al=683;break L777}ae=ar&15;c[v+13724+($*56|0)+20>>2]=ae;if(ae>>>0>3>>>0){al=685;break L777}c[v+13968+(am<<2)>>2]=$;am=am+1|0;an=c[D>>2]|0;ao=c[x>>2]|0}if((ap|0)!=0){al=688;break L777}W=c[x>>2]|0;Z=W+168|0;ae=c[Z>>2]|0;H=W+172|0;do{if(ae>>>0<(c[H>>2]|0)>>>0){c[Z>>2]=ae+1}else{V=W+32|0;if((c[V>>2]|0)==0){break}ad=W+40|0;as=c_[c[W+16>>2]&63](c[W+28>>2]|0,ad,c[W+36>>2]|0)|0;if((as|0)==0){c[V>>2]=0;V=(c[H>>2]|0)-1|0;c[Z>>2]=V;a[V]=0;au=c[Z>>2]|0}else{c[Z>>2]=ad;c[H>>2]=W+40+as;au=ad}c[Z>>2]=au+1}}while(0);Z=c[x>>2]|0;W=Z+168|0;H=c[W>>2]|0;ae=Z+172|0;do{if(H>>>0<(c[ae>>2]|0)>>>0){av=H;al=701}else{ad=Z+32|0;if((c[ad>>2]|0)==0){break}as=Z+40|0;V=c_[c[Z+16>>2]&63](c[Z+28>>2]|0,as,c[Z+36>>2]|0)|0;if((V|0)==0){c[ad>>2]=0;ad=(c[ae>>2]|0)-1|0;c[W>>2]=ad;a[ad]=0;av=c[W>>2]|0;al=701;break}else{c[W>>2]=as;c[ae>>2]=Z+40+V;av=as;al=701;break}}}while(0);if((al|0)==701){al=0;c[W>>2]=av+1;if((a[av]|0)!=0){al=702;break L777}}c[F>>2]=0;c[E>>2]=0;c[L>>2]=0;c[G>>2]=0;c[J>>2]=0;c[O>>2]=0;a[C]=-1;Z=c[B>>2]|0;ae=(Z|0)==0?2147483647:Z;c[M>>2]=ae;L856:do{if((c[D>>2]|0)==1){Z=c[P>>2]|0;H=(c[v+13724+(Z*56|0)+28>>2]|0)+7>>3;as=(c[v+13724+(Z*56|0)+32>>2]|0)+7>>3;if((as|0)<=0){break}V=(H|0)>0;ad=v+13724+(Z*56|0)+16|0;Y=v+13724+(Z*56|0)+20|0;aw=v+13724+(Z*56|0)+44|0;ax=v+13724+(Z*56|0)+36|0;ay=v+13724+(Z*56|0)+12|0;az=0;do{if(V){aA=0;do{if((e6(v,Q,v+4+((c[ad>>2]|0)*1680|0)|0,v+6724+((c[Y>>2]|0)*1680|0)|0,Z)|0)==0){break L755}aB=c[ax>>2]|0;aC=(c[aw>>2]|0)+((ag(aB,az)|0)+aA<<3)|0;e7(aC,aB,Q,v+13444+(c[ay>>2]<<6)|0);aB=(c[M>>2]|0)-1|0;c[M>>2]=aB;if((aB|0)<1){L921:do{if((c[F>>2]|0)<24){L922:while(1){L924:do{if((c[L>>2]|0)==0){aB=c[x>>2]|0;aC=aB+168|0;aD=c[aC>>2]|0;aE=aB+172|0;do{if(aD>>>0<(c[aE>>2]|0)>>>0){aF=aD}else{aG=aB+32|0;if((c[aG>>2]|0)==0){aH=0;break L924}aI=aB+40|0;aJ=c_[c[aB+16>>2]&63](c[aB+28>>2]|0,aI,c[aB+36>>2]|0)|0;if((aJ|0)==0){c[aG>>2]=0;aG=(c[aE>>2]|0)-1|0;c[aC>>2]=aG;a[aG]=0;aF=c[aC>>2]|0;break}else{c[aC>>2]=aI;c[aE>>2]=aB+40+aJ;aF=aI;break}}}while(0);c[aC>>2]=aF+1;aB=a[aF]|0;if(aB<<24>>24!=-1){aH=aB&255;break}aB=c[x>>2]|0;aE=aB+168|0;aD=c[aE>>2]|0;aI=aB+172|0;do{if(aD>>>0<(c[aI>>2]|0)>>>0){aK=aD}else{aJ=aB+32|0;if((c[aJ>>2]|0)==0){aH=255;break L924}aG=aB+40|0;aL=c_[c[aB+16>>2]&63](c[aB+28>>2]|0,aG,c[aB+36>>2]|0)|0;if((aL|0)==0){c[aJ>>2]=0;aJ=(c[aI>>2]|0)-1|0;c[aE>>2]=aJ;a[aJ]=0;aK=c[aE>>2]|0;break}else{c[aE>>2]=aG;c[aI>>2]=aB+40+aL;aK=aG;break}}}while(0);c[aE>>2]=aK+1;aM=a[aK]|0;if(aM<<24>>24==0){aH=255}else{break L922}}else{aH=0}}while(0);aB=c[F>>2]|0;c[E>>2]=aH<<24-aB|c[E>>2];aI=aB+8|0;c[F>>2]=aI;if((aI|0)>=25){break L921}}a[C]=aM;c[L>>2]=1}}while(0);if(((a[C]|0)+48&255)>>>0>=8>>>0){break L856}c[F>>2]=0;c[E>>2]=0;c[L>>2]=0;c[G>>2]=0;c[J>>2]=0;c[O>>2]=0;a[C]=-1;aI=c[B>>2]|0;c[M>>2]=(aI|0)==0?2147483647:aI}aA=aA+1|0;}while((aA|0)<(H|0))}az=az+1|0;}while((az|0)<(as|0))}else{as=c[R>>2]|0;if((as|0)<=0){break}az=0;H=c[S>>2]|0;ay=as;as=ae;while(1){if((H|0)>0){aw=0;ax=as;while(1){Z=c[D>>2]|0;if((Z|0)>0){Y=0;ad=Z;while(1){Z=c[v+13968+(Y<<2)>>2]|0;V=v+13724+(Z*56|0)+8|0;$=c[V>>2]|0;if(($|0)>0){_=v+13724+(Z*56|0)+4|0;aA=v+13724+(Z*56|0)+16|0;aI=v+13724+(Z*56|0)+20|0;aB=v+13724+(Z*56|0)+44|0;aD=v+13724+(Z*56|0)+36|0;aC=v+13724+(Z*56|0)+12|0;aG=0;aL=c[_>>2]|0;aJ=$;while(1){if((aL|0)>0){$=0;aN=aL;aO=aJ;while(1){if((e6(v,T,v+4+((c[aA>>2]|0)*1680|0)|0,v+6724+((c[aI>>2]|0)*1680|0)|0,Z)|0)==0){break L755}aP=(ag(aO,az)|0)+aG|0;aQ=(ag(aN,aw)|0)+$|0;aR=c[aD>>2]|0;aS=(c[aB>>2]|0)+(aQ+(ag(aR,aP)|0)<<3)|0;e7(aS,aR,T,v+13444+(c[aC>>2]<<6)|0);aR=$+1|0;aS=c[_>>2]|0;aP=c[V>>2]|0;if((aR|0)<(aS|0)){$=aR;aN=aS;aO=aP}else{aT=aS;aU=aP;break}}}else{aT=aL;aU=aJ}aO=aG+1|0;if((aO|0)<(aU|0)){aG=aO;aL=aT;aJ=aU}else{break}}aV=c[D>>2]|0}else{aV=ad}aJ=Y+1|0;if((aJ|0)<(aV|0)){Y=aJ;ad=aV}else{break}}aW=c[M>>2]|0}else{aW=ax}ad=aW-1|0;c[M>>2]=ad;if((ad|0)<1){L882:do{if((c[F>>2]|0)<24){L883:while(1){L885:do{if((c[L>>2]|0)==0){Y=c[x>>2]|0;aJ=Y+168|0;aL=c[aJ>>2]|0;aG=Y+172|0;do{if(aL>>>0<(c[aG>>2]|0)>>>0){aX=aL}else{V=Y+32|0;if((c[V>>2]|0)==0){aY=0;break L885}_=Y+40|0;aC=c_[c[Y+16>>2]&63](c[Y+28>>2]|0,_,c[Y+36>>2]|0)|0;if((aC|0)==0){c[V>>2]=0;V=(c[aG>>2]|0)-1|0;c[aJ>>2]=V;a[V]=0;aX=c[aJ>>2]|0;break}else{c[aJ>>2]=_;c[aG>>2]=Y+40+aC;aX=_;break}}}while(0);c[aJ>>2]=aX+1;Y=a[aX]|0;if(Y<<24>>24!=-1){aY=Y&255;break}Y=c[x>>2]|0;aG=Y+168|0;aL=c[aG>>2]|0;aE=Y+172|0;do{if(aL>>>0<(c[aE>>2]|0)>>>0){aZ=aL}else{_=Y+32|0;if((c[_>>2]|0)==0){aY=255;break L885}aC=Y+40|0;V=c_[c[Y+16>>2]&63](c[Y+28>>2]|0,aC,c[Y+36>>2]|0)|0;if((V|0)==0){c[_>>2]=0;_=(c[aE>>2]|0)-1|0;c[aG>>2]=_;a[_]=0;aZ=c[aG>>2]|0;break}else{c[aG>>2]=aC;c[aE>>2]=Y+40+V;aZ=aC;break}}}while(0);c[aG>>2]=aZ+1;a_=a[aZ]|0;if(a_<<24>>24==0){aY=255}else{break L883}}else{aY=0}}while(0);Y=c[F>>2]|0;c[E>>2]=aY<<24-Y|c[E>>2];aE=Y+8|0;c[F>>2]=aE;if((aE|0)>=25){break L882}}a[C]=a_;c[L>>2]=1}}while(0);if(((a[C]|0)+48&255)>>>0>=8>>>0){break L856}c[F>>2]=0;c[E>>2]=0;c[L>>2]=0;c[G>>2]=0;c[J>>2]=0;c[O>>2]=0;a[C]=-1;aE=c[B>>2]|0;Y=(aE|0)==0?2147483647:aE;c[M>>2]=Y;a$=Y}else{a$=ad}Y=aw+1|0;a0=c[S>>2]|0;if((Y|0)<(a0|0)){aw=Y;ax=a$}else{break}}a1=a0;a2=c[R>>2]|0;a3=a$}else{a1=H;a2=ay;a3=as}ax=az+1|0;if((ax|0)<(a2|0)){az=ax;H=a1;ay=a2;as=a3}else{break}}}}while(0);ae=a[C]|0;if(ae<<24>>24!=-1){a4=ae;break}L950:while(1){ae=c[x>>2]|0;do{if((c[ae+16>>2]|0)==0){al=770}else{if((cZ[c[ae+24>>2]&255](c[ae+28>>2]|0)|0)==0){break}if((c[ae+32>>2]|0)==0){al=786;break L779}else{al=770}}}while(0);if((al|0)==770){al=0;if((c[ae+168>>2]|0)>>>0>=(c[ae+172>>2]|0)>>>0){al=786;break L779}}W=c[x>>2]|0;as=W+168|0;ay=c[as>>2]|0;H=W+172|0;do{if(ay>>>0<(c[H>>2]|0)>>>0){a5=ay}else{az=W+32|0;if((c[az>>2]|0)==0){continue L950}ax=W+40|0;aw=c_[c[W+16>>2]&63](c[W+28>>2]|0,ax,c[W+36>>2]|0)|0;if((aw|0)==0){c[az>>2]=0;az=(c[H>>2]|0)-1|0;c[as>>2]=az;a[az]=0;a5=c[as>>2]|0;break}else{c[as>>2]=ax;c[H>>2]=W+40+aw;a5=ax;break}}}while(0);c[as>>2]=a5+1;W=d[a5]|0;if((W|0)==255){break}else if((W|0)!=0){break L755}}W=c[x>>2]|0;H=W+168|0;ay=c[H>>2]|0;ae=W+172|0;do{if(ay>>>0<(c[ae>>2]|0)>>>0){c[H>>2]=ay+1;a6=a[ay]|0}else{ax=W+32|0;if((c[ax>>2]|0)==0){a6=0;break}aw=W+40|0;az=c_[c[W+16>>2]&63](c[W+28>>2]|0,aw,c[W+36>>2]|0)|0;if((az|0)==0){c[ax>>2]=0;ax=(c[ae>>2]|0)-1|0;c[H>>2]=ax;a[ax]=0;a7=c[H>>2]|0}else{c[H>>2]=aw;c[ae>>2]=W+40+az;a7=aw}c[H>>2]=a7+1;a6=a[a7]|0}}while(0);a[C]=a6;a8=a6;al=787}else if((U<<24>>24|0)==(-39|0)){al=807;break L777}else{if((eV(v,U&255)|0)==0){break L755}else{al=786}}}while(0);if((al|0)==786){al=0;a8=a[C]|0;al=787}do{if((al|0)==787){al=0;if(a8<<24>>24!=-1){a4=a8;break}H=c[x>>2]|0;W=H+168|0;ae=c[W>>2]|0;ay=H+172|0;do{if(ae>>>0<(c[ay>>2]|0)>>>0){a9=ae}else{aw=H+32|0;if((c[aw>>2]|0)==0){U=-1;continue L777}az=H+40|0;ax=c_[c[H+16>>2]&63](c[H+28>>2]|0,az,c[H+36>>2]|0)|0;if((ax|0)==0){c[aw>>2]=0;aw=(c[ay>>2]|0)-1|0;c[W>>2]=aw;a[aw]=0;a9=c[W>>2]|0;break}else{c[W>>2]=az;c[ay>>2]=H+40+ax;a9=az;break}}}while(0);c[W>>2]=a9+1;if((a[a9]|0)!=-1){U=-1;continue L777}while(1){H=c[x>>2]|0;ay=H+168|0;ae=c[ay>>2]|0;az=H+172|0;do{if(ae>>>0<(c[az>>2]|0)>>>0){ba=ae}else{ax=H+32|0;if((c[ax>>2]|0)==0){U=0;continue L777}aw=H+40|0;Y=c_[c[H+16>>2]&63](c[H+28>>2]|0,aw,c[H+36>>2]|0)|0;if((Y|0)==0){c[ax>>2]=0;ax=(c[az>>2]|0)-1|0;c[ay>>2]=ax;a[ax]=0;ba=c[ay>>2]|0;break}else{c[ay>>2]=aw;c[az>>2]=H+40+Y;ba=aw;break}}}while(0);c[ay>>2]=ba+1;H=a[ba]|0;if(H<<24>>24!=-1){U=H;continue L777}}}}while(0);a[C]=-1;U=a4}if((al|0)==702){c[4668]=4112;break}else if((al|0)==654){c[D>>2]=0}else if((al|0)==683){c[4668]=4200;break}else if((al|0)==685){c[4668]=4152;break}else if((al|0)==688){c[4668]=4112;break}else if((al|0)==662){c[4668]=4216;break}else if((al|0)==807){U=c[x>>2]|0;C=c[U+8>>2]|0;R=(k|0)==0?C:k;S=(C|0)==3&(R|0)<3?1:C;C=(S|0)>0;L1006:do{if(C){M=v+13700|0;O=v+13704|0;J=0;G=c[U>>2]|0;while(1){L=u+(J<<5)|0;E=n$(G+3|0)|0;c[v+13724+(J*56|0)+52>>2]=E;if((E|0)==0){break}E=(c[M>>2]|0)/(c[v+13724+(J*56|0)+4>>2]|0)|0;c[u+(J<<5)+12>>2]=E;F=(c[O>>2]|0)/(c[v+13724+(J*56|0)+8>>2]|0)|0;c[u+(J<<5)+16>>2]=F;c[u+(J<<5)+24>>2]=F>>1;T=c[x>>2]|0;Q=c[T>>2]|0;c[u+(J<<5)+20>>2]=((E-1+Q|0)>>>0)/(E>>>0)|0;c[u+(J<<5)+28>>2]=0;P=c[v+13724+(J*56|0)+44>>2]|0;c[u+(J<<5)+8>>2]=P;c[u+(J<<5)+4>>2]=P;do{if((E|0)==1){if((F|0)==1){c[L>>2]=2;break}else if((F|0)==2){c[L>>2]=34;break}else{al=825;break}}else if((E|0)==2){if((F|0)==1){c[L>>2]=10;break}else if((F|0)==2){c[L>>2]=4;break}else{al=825;break}}else{al=825}}while(0);if((al|0)==825){al=0;c[L>>2]=16}F=J+1|0;if((F|0)<(S|0)){J=F;G=Q}else{bb=T;bc=Q;break L1006}}if((c[(c[x>>2]|0)+8>>2]|0)>0){G=0;do{J=v+13724+(G*56|0)+44|0;if((c[J>>2]|0)!=0){n0(c[v+13724+(G*56|0)+48>>2]|0);c[J>>2]=0}J=v+13724+(G*56|0)+52|0;O=c[J>>2]|0;if((O|0)!=0){n0(O);c[J>>2]=0}G=G+1|0;}while((G|0)<(c[(c[x>>2]|0)+8>>2]|0))}c[4668]=3032;A=0;i=l;return A|0}else{bb=U;bc=c[U>>2]|0}}while(0);U=ag(bc,R)|0;D=c[bb+4>>2]|0;G=n$((ag(U,D)|0)+1|0)|0;if((G|0)==0){if((c[bb+8>>2]|0)>0){U=0;do{J=v+13724+(U*56|0)+44|0;if((c[J>>2]|0)!=0){n0(c[v+13724+(U*56|0)+48>>2]|0);c[J>>2]=0}J=v+13724+(U*56|0)+52|0;O=c[J>>2]|0;if((O|0)!=0){n0(O);c[J>>2]=0}U=U+1|0;}while((U|0)<(c[(c[x>>2]|0)+8>>2]|0))}c[4668]=3032;A=0;i=l;return A|0}L1051:do{if((D|0)==0){bd=bb}else{U=(R|0)>2;J=t|0;O=t+4|0;M=t+8|0;F=(R|0)==1;E=0;P=bc;W=bb;while(1){H=G+(ag(ag(P,R)|0,E)|0)|0;if(C){az=0;do{ae=u+(az<<5)+24|0;as=c[ae>>2]|0;aw=c[u+(az<<5)+16>>2]|0;if((as|0)<(aw>>1|0)){be=u+(az<<5)+8|0;bf=u+(az<<5)+4|0}else{be=u+(az<<5)+4|0;bf=u+(az<<5)+8|0}c[t+(az<<2)>>2]=c7[c[u+(az<<5)>>2]&63](c[v+13724+(az*56|0)+52>>2]|0,c[bf>>2]|0,c[be>>2]|0,c[u+(az<<5)+20>>2]|0,c[u+(az<<5)+12>>2]|0)|0;Y=as+1|0;c[ae>>2]=Y;do{if((Y|0)>=(aw|0)){c[ae>>2]=0;as=u+(az<<5)+8|0;ax=c[as>>2]|0;c[u+(az<<5)+4>>2]=ax;aE=u+(az<<5)+28|0;aL=(c[aE>>2]|0)+1|0;c[aE>>2]=aL;if((aL|0)>=(c[v+13724+(az*56|0)+32>>2]|0)){break}c[as>>2]=ax+(c[v+13724+(az*56|0)+36>>2]|0)}}while(0);az=az+1|0;}while((az|0)<(S|0));bg=c[x>>2]|0}else{bg=W}az=c[J>>2]|0;L1068:do{if(U){if((c[bg+8>>2]|0)!=3){if((c[bg>>2]|0)==0){bh=bg;break}else{bi=H;bj=0}while(1){Q=a[az+bj|0]|0;a[bi+2|0]=Q;a[bi+1|0]=Q;a[bi]=Q;a[bi+3|0]=-1;Q=bj+1|0;T=c[x>>2]|0;if(Q>>>0<(c[T>>2]|0)>>>0){bi=bi+R|0;bj=Q}else{bh=T;break L1068}}}T=c[O>>2]|0;Q=c[M>>2]|0;L=c[bg>>2]|0;if((L|0)>0){bk=0;bl=H}else{bh=bg;break}while(1){ae=d[az+bk|0]<<16|32768;aw=(d[Q+bk|0]|0)-128|0;Y=(d[T+bk|0]|0)-128|0;ay=(aw*91881|0)+ae|0;ax=(aw*-46802|0)+ae+(Y*-22554|0)|0;aw=(Y*116130|0)+ae|0;ae=ay>>16;Y=ax>>16;as=aw>>16;if(ae>>>0>255>>>0){bm=~(ay>>31&255)}else{bm=ae&255}if(Y>>>0>255>>>0){bn=~(ax>>31&255)}else{bn=Y&255}if(as>>>0>255>>>0){bo=~(aw>>31&255)}else{bo=as&255}a[bl]=bm;a[bl+1|0]=bn;a[bl+2|0]=bo;a[bl+3|0]=-1;as=bk+1|0;if((as|0)<(L|0)){bk=as;bl=bl+R|0}else{break}}bh=c[x>>2]|0}else{L=c[bg>>2]|0;T=(L|0)==0;if(F){if(T){bh=bg;break}Q=L>>>0>1>>>0?L:1;of(H|0,az|0,Q)|0;bh=bg;break}else{if(T){bh=bg;break}else{bp=H;bq=0}while(1){a[bp]=a[az+bq|0]|0;a[bp+1|0]=-1;T=bq+1|0;Q=c[x>>2]|0;if(T>>>0<(c[Q>>2]|0)>>>0){bp=bp+2|0;bq=T}else{bh=Q;break}}}}}while(0);az=E+1|0;if(az>>>0>=(c[bh+4>>2]|0)>>>0){bd=bh;break L1051}E=az;P=c[bh>>2]|0;W=bh}}}while(0);if((c[bd+8>>2]|0)>0){R=0;while(1){S=v+13724+(R*56|0)+44|0;if((c[S>>2]|0)!=0){n0(c[v+13724+(R*56|0)+48>>2]|0);c[S>>2]=0}S=v+13724+(R*56|0)+52|0;C=c[S>>2]|0;if((C|0)!=0){n0(C);c[S>>2]=0}S=R+1|0;C=c[x>>2]|0;if((S|0)<(c[C+8>>2]|0)){R=S}else{br=C;break}}}else{br=bd}c[f>>2]=c[br>>2];c[h>>2]=c[br+4>>2];if((j|0)==0){A=G;i=l;return A|0}c[j>>2]=c[br+8>>2];A=G;i=l;return A|0}c[4668]=4240}}while(0);if((c[(c[x>>2]|0)+8>>2]|0)>0){bs=0}else{A=0;i=l;return A|0}while(1){br=v+13724+(bs*56|0)+44|0;if((c[br>>2]|0)!=0){n0(c[v+13724+(bs*56|0)+48>>2]|0);c[br>>2]=0}br=v+13724+(bs*56|0)+52|0;bd=c[br>>2]|0;if((bd|0)!=0){n0(bd);c[br>>2]=0}br=bs+1|0;if((br|0)<(c[(c[x>>2]|0)+8>>2]|0)){bs=br}else{A=0;break}}i=l;return A|0}bs=e+172|0;x=e+32|0;v=e+16|0;br=e+28|0;bd=e+40|0;bh=e+36|0;bq=0;bp=y;while(1){if((bq|0)>=8){al=884;break}do{if(bp>>>0<(c[bs>>2]|0)>>>0){y=bp+1|0;c[z>>2]=y;bt=a[bp]|0;bu=y}else{if((c[x>>2]|0)==0){bt=0;bu=bp;break}y=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((y|0)==0){c[x>>2]=0;bg=(c[bs>>2]|0)-1|0;c[z>>2]=bg;a[bg]=0;bv=c[z>>2]|0}else{c[z>>2]=bd;c[bs>>2]=e+40+y;bv=bd}y=bv+1|0;c[z>>2]=y;bt=a[bv]|0;bu=y}}while(0);if(bt<<24>>24==(a[5280+bq|0]|0)){bq=bq+1|0;bp=bu}else{break}}if((al|0)==884){c[z>>2]=c[w>>2];bu=q|0;c[bu>>2]=e;if(k>>>0>4>>>0){c[4668]=4360;A=0;i=l;return A|0}bp=(eS(q,0,k)|0)==0;bq=q+12|0;bt=c[bq>>2]|0;do{if(bp){bw=0;bx=bt}else{c[bq>>2]=0;bv=c[bu>>2]|0;do{if((k|0)==0){by=bt}else{G=bv+12|0;y=c[G>>2]|0;if((y|0)==(k|0)){by=bt;break}bg=eZ(bt,y,k,c[bv>>2]|0,c[bv+4>>2]|0)|0;c[G>>2]=k;if((bg|0)==0){A=0}else{by=bg;break}i=l;return A|0}}while(0);c[f>>2]=c[bv>>2];c[h>>2]=c[bv+4>>2];if((j|0)==0){bw=by;bx=0;break}c[j>>2]=c[bv+8>>2];bw=by;bx=0}}while(0);n0(bx);c[bq>>2]=0;bq=q+8|0;n0(c[bq>>2]|0);c[bq>>2]=0;bq=q+4|0;n0(c[bq>>2]|0);c[bq>>2]=0;A=bw;i=l;return A|0}c[4668]=2536;bw=c[w>>2]|0;c[z>>2]=bw;do{if(bw>>>0<(c[bs>>2]|0)>>>0){bz=bw;al=898}else{if((c[x>>2]|0)==0){break}bq=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((bq|0)==0){c[x>>2]=0;q=(c[bs>>2]|0)-1|0;c[z>>2]=q;a[q]=0;bz=c[z>>2]|0;al=898;break}else{c[z>>2]=bd;c[bs>>2]=e+40+bq;bz=bd;al=898;break}}}while(0);L1160:do{if((al|0)==898){bw=bz+1|0;c[z>>2]=bw;if((a[bz]|0)!=66){break}do{if(bw>>>0<(c[bs>>2]|0)>>>0){bA=bw}else{if((c[x>>2]|0)==0){break L1160}bq=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((bq|0)==0){c[x>>2]=0;q=(c[bs>>2]|0)-1|0;c[z>>2]=q;a[q]=0;bA=c[z>>2]|0;break}else{c[z>>2]=bd;c[bs>>2]=e+40+bq;bA=bd;break}}}while(0);bw=bA+1|0;c[z>>2]=bw;if((a[bA]|0)!=77){break}bv=c[bs>>2]|0;do{if(bw>>>0<bv>>>0){bq=bA+2|0;c[z>>2]=bq;bB=bq;bC=bv}else{if((c[x>>2]|0)==0){bB=bw;bC=bv;break}bq=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((bq|0)==0){c[x>>2]=0;q=(c[bs>>2]|0)-1|0;c[z>>2]=q;a[q]=0;bD=c[z>>2]|0;bE=c[bs>>2]|0}else{c[z>>2]=bd;q=e+40+bq|0;c[bs>>2]=q;bD=bd;bE=q}q=bD+1|0;c[z>>2]=q;bB=q;bC=bE}}while(0);do{if(bB>>>0<bC>>>0){bv=bB+1|0;c[z>>2]=bv;bF=bv;bG=bC}else{if((c[x>>2]|0)==0){bF=bB;bG=bC;break}bv=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((bv|0)==0){c[x>>2]=0;bw=(c[bs>>2]|0)-1|0;c[z>>2]=bw;a[bw]=0;bH=c[z>>2]|0;bI=c[bs>>2]|0}else{c[z>>2]=bd;bw=e+40+bv|0;c[bs>>2]=bw;bH=bd;bI=bw}bw=bH+1|0;c[z>>2]=bw;bF=bw;bG=bI}}while(0);do{if(bF>>>0<bG>>>0){bw=bF+1|0;c[z>>2]=bw;bJ=bw;bK=bG}else{if((c[x>>2]|0)==0){bJ=bF;bK=bG;break}bw=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((bw|0)==0){c[x>>2]=0;bv=(c[bs>>2]|0)-1|0;c[z>>2]=bv;a[bv]=0;bL=c[z>>2]|0;bM=c[bs>>2]|0}else{c[z>>2]=bd;bv=e+40+bw|0;c[bs>>2]=bv;bL=bd;bM=bv}bv=bL+1|0;c[z>>2]=bv;bJ=bv;bK=bM}}while(0);do{if(bJ>>>0<bK>>>0){bv=bJ+1|0;c[z>>2]=bv;bN=bv;bO=bK}else{if((c[x>>2]|0)==0){bN=bJ;bO=bK;break}bv=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((bv|0)==0){c[x>>2]=0;bw=(c[bs>>2]|0)-1|0;c[z>>2]=bw;a[bw]=0;bP=c[z>>2]|0;bQ=c[bs>>2]|0}else{c[z>>2]=bd;bw=e+40+bv|0;c[bs>>2]=bw;bP=bd;bQ=bw}bw=bP+1|0;c[z>>2]=bw;bN=bw;bO=bQ}}while(0);do{if(bN>>>0<bO>>>0){bw=bN+1|0;c[z>>2]=bw;bR=bw;bS=bO}else{if((c[x>>2]|0)==0){bR=bN;bS=bO;break}bw=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((bw|0)==0){c[x>>2]=0;bv=(c[bs>>2]|0)-1|0;c[z>>2]=bv;a[bv]=0;bT=c[z>>2]|0;bU=c[bs>>2]|0}else{c[z>>2]=bd;bv=e+40+bw|0;c[bs>>2]=bv;bT=bd;bU=bv}bv=bT+1|0;c[z>>2]=bv;bR=bv;bS=bU}}while(0);do{if(bR>>>0<bS>>>0){bv=bR+1|0;c[z>>2]=bv;bV=bv;bW=bS}else{if((c[x>>2]|0)==0){bV=bR;bW=bS;break}bv=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((bv|0)==0){c[x>>2]=0;bw=(c[bs>>2]|0)-1|0;c[z>>2]=bw;a[bw]=0;bX=c[z>>2]|0;bY=c[bs>>2]|0}else{c[z>>2]=bd;bw=e+40+bv|0;c[bs>>2]=bw;bX=bd;bY=bw}bw=bX+1|0;c[z>>2]=bw;bV=bw;bW=bY}}while(0);do{if(bV>>>0<bW>>>0){bw=bV+1|0;c[z>>2]=bw;bZ=bw;b_=bW}else{if((c[x>>2]|0)==0){bZ=bV;b_=bW;break}bw=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((bw|0)==0){c[x>>2]=0;bv=(c[bs>>2]|0)-1|0;c[z>>2]=bv;a[bv]=0;b$=c[z>>2]|0;b0=c[bs>>2]|0}else{c[z>>2]=bd;bv=e+40+bw|0;c[bs>>2]=bv;b$=bd;b0=bv}bv=b$+1|0;c[z>>2]=bv;bZ=bv;b_=b0}}while(0);do{if(bZ>>>0<b_>>>0){bv=bZ+1|0;c[z>>2]=bv;b1=bv;b2=b_}else{if((c[x>>2]|0)==0){b1=bZ;b2=b_;break}bv=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((bv|0)==0){c[x>>2]=0;bw=(c[bs>>2]|0)-1|0;c[z>>2]=bw;a[bw]=0;b3=c[z>>2]|0;b4=c[bs>>2]|0}else{c[z>>2]=bd;bw=e+40+bv|0;c[bs>>2]=bw;b3=bd;b4=bw}bw=b3+1|0;c[z>>2]=bw;b1=bw;b2=b4}}while(0);do{if(b1>>>0<b2>>>0){bw=b1+1|0;c[z>>2]=bw;b5=bw;b6=b2}else{if((c[x>>2]|0)==0){b5=b1;b6=b2;break}bw=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((bw|0)==0){c[x>>2]=0;bv=(c[bs>>2]|0)-1|0;c[z>>2]=bv;a[bv]=0;b7=c[z>>2]|0;b8=c[bs>>2]|0}else{c[z>>2]=bd;bv=e+40+bw|0;c[bs>>2]=bv;b7=bd;b8=bv}bv=b7+1|0;c[z>>2]=bv;b5=bv;b6=b8}}while(0);do{if(b5>>>0<b6>>>0){bv=b5+1|0;c[z>>2]=bv;b9=bv;ca=b6}else{if((c[x>>2]|0)==0){b9=b5;ca=b6;break}bv=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((bv|0)==0){c[x>>2]=0;bw=(c[bs>>2]|0)-1|0;c[z>>2]=bw;a[bw]=0;cb=c[z>>2]|0;cc=c[bs>>2]|0}else{c[z>>2]=bd;bw=e+40+bv|0;c[bs>>2]=bw;cb=bd;cc=bw}bw=cb+1|0;c[z>>2]=bw;b9=bw;ca=cc}}while(0);do{if(b9>>>0<ca>>>0){bw=b9+1|0;c[z>>2]=bw;cd=bw;ce=ca}else{if((c[x>>2]|0)==0){cd=b9;ce=ca;break}bw=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((bw|0)==0){c[x>>2]=0;bv=(c[bs>>2]|0)-1|0;c[z>>2]=bv;a[bv]=0;cf=c[z>>2]|0;cg=c[bs>>2]|0}else{c[z>>2]=bd;bv=e+40+bw|0;c[bs>>2]=bv;cf=bd;cg=bv}bv=cf+1|0;c[z>>2]=bv;cd=bv;ce=cg}}while(0);do{if(cd>>>0<ce>>>0){bv=cd+1|0;c[z>>2]=bv;ch=bv;ci=ce}else{if((c[x>>2]|0)==0){ch=cd;ci=ce;break}bv=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((bv|0)==0){c[x>>2]=0;bw=(c[bs>>2]|0)-1|0;c[z>>2]=bw;a[bw]=0;cj=c[z>>2]|0;ck=c[bs>>2]|0}else{c[z>>2]=bd;bw=e+40+bv|0;c[bs>>2]=bw;cj=bd;ck=bw}bw=cj+1|0;c[z>>2]=bw;ch=bw;ci=ck}}while(0);do{if(ch>>>0<ci>>>0){bw=ch+1|0;c[z>>2]=bw;cl=d[ch]|0;cm=bw;cn=ci}else{if((c[x>>2]|0)==0){cl=0;cm=ch;cn=ci;break}bw=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((bw|0)==0){c[x>>2]=0;bv=(c[bs>>2]|0)-1|0;c[z>>2]=bv;a[bv]=0;co=c[z>>2]|0;cp=c[bs>>2]|0}else{c[z>>2]=bd;bv=e+40+bw|0;c[bs>>2]=bv;co=bd;cp=bv}bv=co+1|0;c[z>>2]=bv;cl=d[co]|0;cm=bv;cn=cp}}while(0);do{if(cm>>>0<cn>>>0){bv=cm+1|0;c[z>>2]=bv;cq=d[cm]|0;cr=bv;cs=cn}else{if((c[x>>2]|0)==0){cq=0;cr=cm;cs=cn;break}bv=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((bv|0)==0){c[x>>2]=0;bw=(c[bs>>2]|0)-1|0;c[z>>2]=bw;a[bw]=0;ct=c[z>>2]|0;cu=c[bs>>2]|0}else{c[z>>2]=bd;bw=e+40+bv|0;c[bs>>2]=bw;ct=bd;cu=bw}bw=ct+1|0;c[z>>2]=bw;cq=d[ct]|0;cr=bw;cs=cu}}while(0);bw=cq<<8|cl;do{if(cr>>>0<cs>>>0){bv=cr+1|0;c[z>>2]=bv;cv=d[cr]|0;cw=bv;cx=cs}else{if((c[x>>2]|0)==0){cv=0;cw=cr;cx=cs;break}bv=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((bv|0)==0){c[x>>2]=0;q=(c[bs>>2]|0)-1|0;c[z>>2]=q;a[q]=0;cy=c[z>>2]|0;cz=c[bs>>2]|0}else{c[z>>2]=bd;q=e+40+bv|0;c[bs>>2]=q;cy=bd;cz=q}q=cy+1|0;c[z>>2]=q;cv=d[cy]|0;cw=q;cx=cz}}while(0);do{if(cw>>>0<cx>>>0){c[z>>2]=cw+1;cA=d[cw]|0}else{if((c[x>>2]|0)==0){cA=0;break}q=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((q|0)==0){c[x>>2]=0;bv=(c[bs>>2]|0)-1|0;c[z>>2]=bv;a[bv]=0;cB=c[z>>2]|0}else{c[z>>2]=bd;c[bs>>2]=e+40+q;cB=bd}c[z>>2]=cB+1;cA=d[cB]|0}}while(0);q=bw|(cA<<8|cv)<<16;if(!((q|0)==108|(q|0)==56|(q|0)==40|(q|0)==12)){break}c[z>>2]=c[w>>2];A=e0(e,f,h,j,k)|0;i=l;return A|0}}while(0);cv=c[w>>2]|0;c[z>>2]=cv;do{if(cv>>>0<(c[bs>>2]|0)>>>0){cC=cv;al=1024}else{if((c[x>>2]|0)==0){al=1057;break}cA=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((cA|0)==0){c[x>>2]=0;cB=(c[bs>>2]|0)-1|0;c[z>>2]=cB;a[cB]=0;cC=c[z>>2]|0;al=1024;break}else{c[z>>2]=bd;c[bs>>2]=e+40+cA;cC=bd;al=1024;break}}}while(0);L1324:do{if((al|0)==1024){cv=cC+1|0;c[z>>2]=cv;if((a[cC]|0)!=71){al=1057;break}do{if(cv>>>0<(c[bs>>2]|0)>>>0){cD=cv}else{if((c[x>>2]|0)==0){al=1057;break L1324}cA=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((cA|0)==0){c[x>>2]=0;cB=(c[bs>>2]|0)-1|0;c[z>>2]=cB;a[cB]=0;cD=c[z>>2]|0;break}else{c[z>>2]=bd;c[bs>>2]=e+40+cA;cD=bd;break}}}while(0);cv=cD+1|0;c[z>>2]=cv;if((a[cD]|0)!=73){al=1057;break}do{if(cv>>>0<(c[bs>>2]|0)>>>0){cE=cv}else{if((c[x>>2]|0)==0){al=1057;break L1324}bw=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((bw|0)==0){c[x>>2]=0;cA=(c[bs>>2]|0)-1|0;c[z>>2]=cA;a[cA]=0;cE=c[z>>2]|0;break}else{c[z>>2]=bd;c[bs>>2]=e+40+bw;cE=bd;break}}}while(0);cv=cE+1|0;c[z>>2]=cv;if((a[cE]|0)!=70){al=1057;break}do{if(cv>>>0<(c[bs>>2]|0)>>>0){cF=cv}else{if((c[x>>2]|0)==0){al=1057;break L1324}bw=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((bw|0)==0){c[x>>2]=0;cA=(c[bs>>2]|0)-1|0;c[z>>2]=cA;a[cA]=0;cF=c[z>>2]|0;break}else{c[z>>2]=bd;c[bs>>2]=e+40+bw;cF=bd;break}}}while(0);cv=cF+1|0;c[z>>2]=cv;if((a[cF]|0)!=56){al=1057;break}do{if(cv>>>0<(c[bs>>2]|0)>>>0){cG=cv}else{if((c[x>>2]|0)==0){al=1057;break L1324}bw=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((bw|0)==0){c[x>>2]=0;cA=(c[bs>>2]|0)-1|0;c[z>>2]=cA;a[cA]=0;cG=c[z>>2]|0;break}else{c[z>>2]=bd;c[bs>>2]=e+40+bw;cG=bd;break}}}while(0);cv=cG+1|0;c[z>>2]=cv;bw=d[cG]|0;if(!((bw|0)==57|(bw|0)==55)){al=1057;break}if(cv>>>0<(c[bs>>2]|0)>>>0){cH=cv;cI=cG+2|0}else{if((c[x>>2]|0)==0){cv=c[w>>2]|0;c[z>>2]=cv;cJ=cv;break}cv=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((cv|0)==0){c[x>>2]=0;bw=(c[bs>>2]|0)-1|0;c[z>>2]=bw;a[bw]=0;cK=c[z>>2]|0}else{c[z>>2]=bd;c[bs>>2]=e+40+cv;cK=bd}cH=cK;cI=cK+1|0}c[z>>2]=cI;cv=(a[cH]|0)==97;bw=c[w>>2]|0;c[z>>2]=bw;if(!cv){cJ=bw;break}oe(p|0,0,18508);bw=p+8|0;L1371:do{if((eR(e,p,j,0)|0)==0){cL=0}else{cv=p|0;cA=p+4|0;cB=ag(c[cv>>2]<<2,c[cA>>2]|0)|0;cw=n$(cB)|0;c[bw>>2]=cw;if((cw|0)==0){c[4668]=3032;cL=0;break}cx=c[p+16>>2]|0;cz=p+32+(cx<<2)|0;L1376:do{if((cB|0)>0){cy=p+32+(cx<<2)+2|0;cs=p+32+(cx<<2)+1|0;cr=p+32+(cx<<2)+3|0;cl=0;cq=cw;while(1){a[cq+cl|0]=a[cy]|0;a[cq+(cl|1)|0]=a[cs]|0;a[cq+(cl|2)|0]=a[cz]|0;a[cq+(cl|3)|0]=a[cr]|0;cu=cl+4|0;if((cu|0)>=(ag(c[cv>>2]<<2,c[cA>>2]|0)|0)){break L1376}cl=cu;cq=c[bw>>2]|0}}}while(0);cz=p+28|0;cw=p+24|0;cx=e+20|0;L1382:while(1){cB=c[z>>2]|0;do{if(cB>>>0<(c[bs>>2]|0)>>>0){cM=cB}else{if((c[x>>2]|0)==0){al=1293;break L1382}cq=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((cq|0)==0){c[x>>2]=0;cl=(c[bs>>2]|0)-1|0;c[z>>2]=cl;a[cl]=0;cM=c[z>>2]|0;break}else{c[z>>2]=bd;c[bs>>2]=e+40+cq;cM=bd;break}}}while(0);cN=cM+1|0;c[z>>2]=cN;cB=d[cM]|0;if((cB|0)==44){break}else if((cB|0)==59){cL=1;break L1371}else if((cB|0)!=33){al=1293;break}do{if(cN>>>0<(c[bs>>2]|0)>>>0){cO=cN;al=1242}else{if((c[x>>2]|0)==0){cP=cN;break}cB=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((cB|0)==0){c[x>>2]=0;cq=(c[bs>>2]|0)-1|0;c[z>>2]=cq;a[cq]=0;cO=c[z>>2]|0;al=1242;break}else{c[z>>2]=bd;c[bs>>2]=e+40+cB;cO=bd;al=1242;break}}}while(0);L1398:do{if((al|0)==1242){al=0;cB=cO+1|0;c[z>>2]=cB;if((a[cO]|0)!=-7){cP=cB;break}do{if(cB>>>0<(c[bs>>2]|0)>>>0){cQ=cB;al=1248}else{if((c[x>>2]|0)==0){cR=0;cS=cB;break}cq=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((cq|0)==0){c[x>>2]=0;cl=(c[bs>>2]|0)-1|0;c[z>>2]=cl;a[cl]=0;cQ=c[z>>2]|0;al=1248;break}else{c[z>>2]=bd;c[bs>>2]=e+40+cq;cQ=bd;al=1248;break}}}while(0);do{if((al|0)==1248){al=0;cB=cQ+1|0;c[z>>2]=cB;cq=a[cQ]|0;if(cq<<24>>24!=4){cR=cq&255;cS=cB;break}cq=c[bs>>2]|0;do{if(cB>>>0<cq>>>0){cl=cQ+2|0;c[z>>2]=cl;cT=d[cB]|0;cU=cl;cW=cq}else{if((c[x>>2]|0)==0){cT=0;cU=cB;cW=cq;break}cl=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((cl|0)==0){c[x>>2]=0;cr=(c[bs>>2]|0)-1|0;c[z>>2]=cr;a[cr]=0;cX=c[z>>2]|0;cY=c[bs>>2]|0}else{c[z>>2]=bd;cr=e+40+cl|0;c[bs>>2]=cr;cX=bd;cY=cr}cr=cX+1|0;c[z>>2]=cr;cT=d[cX]|0;cU=cr;cW=cY}}while(0);c[cz>>2]=cT;do{if(cU>>>0<cW>>>0){cq=cU+1|0;c[z>>2]=cq;c$=cq;c0=cW}else{if((c[x>>2]|0)==0){c$=cU;c0=cW;break}cq=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((cq|0)==0){c[x>>2]=0;cB=(c[bs>>2]|0)-1|0;c[z>>2]=cB;a[cB]=0;c1=c[z>>2]|0;c2=c[bs>>2]|0}else{c[z>>2]=bd;cB=e+40+cq|0;c[bs>>2]=cB;c1=bd;c2=cB}cB=c1+1|0;c[z>>2]=cB;c$=cB;c0=c2}}while(0);do{if(c$>>>0<c0>>>0){cB=c$+1|0;c[z>>2]=cB;c3=cB;c4=c0}else{if((c[x>>2]|0)==0){c3=c$;c4=c0;break}cB=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((cB|0)==0){c[x>>2]=0;cq=(c[bs>>2]|0)-1|0;c[z>>2]=cq;a[cq]=0;c5=c[z>>2]|0;c6=c[bs>>2]|0}else{c[z>>2]=bd;cq=e+40+cB|0;c[bs>>2]=cq;c5=bd;c6=cq}cq=c5+1|0;c[z>>2]=cq;c3=cq;c4=c6}}while(0);do{if(c3>>>0<c4>>>0){cq=c3+1|0;c[z>>2]=cq;c8=d[c3]|0;c9=cq}else{if((c[x>>2]|0)==0){c8=0;c9=c3;break}cq=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((cq|0)==0){c[x>>2]=0;cB=(c[bs>>2]|0)-1|0;c[z>>2]=cB;a[cB]=0;da=c[z>>2]|0}else{c[z>>2]=bd;c[bs>>2]=e+40+cq;da=bd}cq=da+1|0;c[z>>2]=cq;c8=d[da]|0;c9=cq}}while(0);c[cw>>2]=c8;cP=c9;break L1398}}while(0);do{if((c[v>>2]|0)!=0){cq=c[bs>>2]|0;cB=cq-cS|0;if((cB|0)>=(cR|0)){break}c[z>>2]=cq;cV[c[cx>>2]&255](c[br>>2]|0,cR-cB|0);continue L1382}}while(0);c[z>>2]=cS+cR;continue L1382}}while(0);L1453:while(1){do{if(cP>>>0<(c[bs>>2]|0)>>>0){db=cP}else{if((c[x>>2]|0)==0){continue L1382}cB=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((cB|0)==0){c[x>>2]=0;cq=(c[bs>>2]|0)-1|0;c[z>>2]=cq;a[cq]=0;db=c[z>>2]|0;break}else{c[z>>2]=bd;c[bs>>2]=e+40+cB;db=bd;break}}}while(0);cB=db+1|0;c[z>>2]=cB;cq=a[db]|0;cr=cq&255;if(cq<<24>>24==0){continue L1382}do{if((c[v>>2]|0)!=0){cq=c[bs>>2]|0;cl=cq-cB|0;if((cl|0)>=(cr|0)){break}c[z>>2]=cq;cV[c[cx>>2]&255](c[br>>2]|0,cr-cl|0);cP=c[z>>2]|0;continue L1453}}while(0);cB=db+(cr+1)|0;c[z>>2]=cB;cP=cB}}if((al|0)==1293){c[4668]=448;cL=0;break}cB=c[bs>>2]|0;do{if(cN>>>0<cB>>>0){cl=cM+2|0;c[z>>2]=cl;dc=d[cN]|0;dd=cl;de=cB}else{if((c[x>>2]|0)==0){dc=0;dd=cN;de=cB;break}cl=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((cl|0)==0){c[x>>2]=0;cq=(c[bs>>2]|0)-1|0;c[z>>2]=cq;a[cq]=0;df=c[z>>2]|0;dg=c[bs>>2]|0}else{c[z>>2]=bd;cq=e+40+cl|0;c[bs>>2]=cq;df=bd;dg=cq}cq=df+1|0;c[z>>2]=cq;dc=d[df]|0;dd=cq;de=dg}}while(0);do{if(dd>>>0<de>>>0){cB=dd+1|0;c[z>>2]=cB;dh=d[dd]|0;di=cB;dj=de}else{if((c[x>>2]|0)==0){dh=0;di=dd;dj=de;break}cB=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((cB|0)==0){c[x>>2]=0;cq=(c[bs>>2]|0)-1|0;c[z>>2]=cq;a[cq]=0;dk=c[z>>2]|0;dl=c[bs>>2]|0}else{c[z>>2]=bd;cq=e+40+cB|0;c[bs>>2]=cq;dk=bd;dl=cq}cq=dk+1|0;c[z>>2]=cq;dh=d[dk]|0;di=cq;dj=dl}}while(0);cq=dh<<8|dc;do{if(di>>>0<dj>>>0){cB=di+1|0;c[z>>2]=cB;dm=d[di]|0;dn=cB;dp=dj}else{if((c[x>>2]|0)==0){dm=0;dn=di;dp=dj;break}cB=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((cB|0)==0){c[x>>2]=0;cl=(c[bs>>2]|0)-1|0;c[z>>2]=cl;a[cl]=0;dq=c[z>>2]|0;dr=c[bs>>2]|0}else{c[z>>2]=bd;cl=e+40+cB|0;c[bs>>2]=cl;dq=bd;dr=cl}cl=dq+1|0;c[z>>2]=cl;dm=d[dq]|0;dn=cl;dp=dr}}while(0);do{if(dn>>>0<dp>>>0){cl=dn+1|0;c[z>>2]=cl;ds=d[dn]|0;dt=cl;du=dp}else{if((c[x>>2]|0)==0){ds=0;dt=dn;du=dp;break}cl=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((cl|0)==0){c[x>>2]=0;cB=(c[bs>>2]|0)-1|0;c[z>>2]=cB;a[cB]=0;dv=c[z>>2]|0;dw=c[bs>>2]|0}else{c[z>>2]=bd;cB=e+40+cl|0;c[bs>>2]=cB;dv=bd;dw=cB}cB=dv+1|0;c[z>>2]=cB;ds=d[dv]|0;dt=cB;du=dw}}while(0);cB=ds<<8|dm;do{if(dt>>>0<du>>>0){cl=dt+1|0;c[z>>2]=cl;dx=d[dt]|0;dy=cl;dz=du}else{if((c[x>>2]|0)==0){dx=0;dy=dt;dz=du;break}cl=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((cl|0)==0){c[x>>2]=0;cs=(c[bs>>2]|0)-1|0;c[z>>2]=cs;a[cs]=0;dA=c[z>>2]|0;dB=c[bs>>2]|0}else{c[z>>2]=bd;cs=e+40+cl|0;c[bs>>2]=cs;dA=bd;dB=cs}cs=dA+1|0;c[z>>2]=cs;dx=d[dA]|0;dy=cs;dz=dB}}while(0);do{if(dy>>>0<dz>>>0){cs=dy+1|0;c[z>>2]=cs;dC=d[dy]|0;dD=cs;dE=dz}else{if((c[x>>2]|0)==0){dC=0;dD=dy;dE=dz;break}cs=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((cs|0)==0){c[x>>2]=0;cl=(c[bs>>2]|0)-1|0;c[z>>2]=cl;a[cl]=0;dF=c[z>>2]|0;dG=c[bs>>2]|0}else{c[z>>2]=bd;cl=e+40+cs|0;c[bs>>2]=cl;dF=bd;dG=cl}cl=dF+1|0;c[z>>2]=cl;dC=d[dF]|0;dD=cl;dE=dG}}while(0);cl=dC<<8|dx;do{if(dD>>>0<dE>>>0){cs=dD+1|0;c[z>>2]=cs;dH=d[dD]|0;dI=cs;dJ=dE}else{if((c[x>>2]|0)==0){dH=0;dI=dD;dJ=dE;break}cs=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((cs|0)==0){c[x>>2]=0;cy=(c[bs>>2]|0)-1|0;c[z>>2]=cy;a[cy]=0;dK=c[z>>2]|0;dL=c[bs>>2]|0}else{c[z>>2]=bd;cy=e+40+cs|0;c[bs>>2]=cy;dK=bd;dL=cy}cy=dK+1|0;c[z>>2]=cy;dH=d[dK]|0;dI=cy;dJ=dL}}while(0);do{if(dI>>>0<dJ>>>0){cy=dI+1|0;c[z>>2]=cy;dM=d[dI]|0;dN=cy}else{if((c[x>>2]|0)==0){dM=0;dN=dI;break}cy=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((cy|0)==0){c[x>>2]=0;cs=(c[bs>>2]|0)-1|0;c[z>>2]=cs;a[cs]=0;dO=c[z>>2]|0}else{c[z>>2]=bd;c[bs>>2]=e+40+cy;dO=bd}cy=dO+1|0;c[z>>2]=cy;dM=d[dO]|0;dN=cy}}while(0);cy=c[cv>>2]|0;do{if((cl+cq|0)<=(cy|0)){cs=(dM<<8|dH)+cB|0;if((cs|0)>(c[cA>>2]|0)){break}cu=cy<<2;ct=p+18504|0;c[ct>>2]=cu;cn=cq<<2;c[p+18480>>2]=cn;cm=ag(cu,cB)|0;c[p+18484>>2]=cm;c[p+18488>>2]=(cl<<2)+cn;c[p+18492>>2]=ag(cs,cu)|0;c[p+18496>>2]=cn;c[p+18500>>2]=cm;do{if(dN>>>0<(c[bs>>2]|0)>>>0){dP=dN;al=1138}else{if((c[x>>2]|0)==0){cm=p+18476|0;c[cm>>2]=0;dQ=cm;dR=cu;dS=dN;al=1140;break}cm=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((cm|0)==0){c[x>>2]=0;cn=(c[bs>>2]|0)-1|0;c[z>>2]=cn;a[cn]=0;dP=c[z>>2]|0;al=1138;break}else{c[z>>2]=bd;c[bs>>2]=e+40+cm;dP=bd;al=1138;break}}}while(0);do{if((al|0)==1138){cu=dP+1|0;c[z>>2]=cu;cm=d[dP]|0;cn=p+18476|0;c[cn>>2]=cm;cs=c[ct>>2]|0;if((cm&64|0)==0){dQ=cn;dR=cs;dS=cu;al=1140;break}c[p+18472>>2]=cs<<3;c[p+18468>>2]=3;dT=cm;dU=cu}}while(0);if((al|0)==1140){c[p+18472>>2]=dR;c[p+18468>>2]=0;dT=c[dQ>>2]|0;dU=dS}if((dT&128|0)==0){if((c[p+12>>2]&128|0)==0){c[4668]=472;cL=0;break L1371}else{dV=0}do{a[p+32+(dV<<2)+3|0]=-1;dV=dV+1|0;}while((dV|0)<256);ct=c[cw>>2]|0;do{if((ct|0)>-1){if((c[cz>>2]&1|0)==0){break}a[p+32+(ct<<2)+3|0]=0}}while(0);c[p+18464>>2]=p+32;dW=dU}else{ct=2<<(dT&7);if((ct|0)>0){cu=((c[cw>>2]|0)==0&(c[cz>>2]&1|0)!=0)<<31>>31;cm=0;cs=dU;while(1){cn=c[bs>>2]|0;do{if(cs>>>0<cn>>>0){cp=cs+1|0;c[z>>2]=cp;dX=a[cs]|0;dY=cp;dZ=cn}else{if((c[x>>2]|0)==0){dX=0;dY=cs;dZ=cn;break}cp=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((cp|0)==0){c[x>>2]=0;co=(c[bs>>2]|0)-1|0;c[z>>2]=co;a[co]=0;d_=c[z>>2]|0;d$=c[bs>>2]|0}else{c[z>>2]=bd;co=e+40+cp|0;c[bs>>2]=co;d_=bd;d$=co}co=d_+1|0;c[z>>2]=co;dX=a[d_]|0;dY=co;dZ=d$}}while(0);a[p+1056+(cm<<2)+2|0]=dX;do{if(dY>>>0<dZ>>>0){cn=dY+1|0;c[z>>2]=cn;d0=a[dY]|0;d1=cn;d2=dZ}else{if((c[x>>2]|0)==0){d0=0;d1=dY;d2=dZ;break}cn=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((cn|0)==0){c[x>>2]=0;cr=(c[bs>>2]|0)-1|0;c[z>>2]=cr;a[cr]=0;d3=c[z>>2]|0;d4=c[bs>>2]|0}else{c[z>>2]=bd;cr=e+40+cn|0;c[bs>>2]=cr;d3=bd;d4=cr}cr=d3+1|0;c[z>>2]=cr;d0=a[d3]|0;d1=cr;d2=d4}}while(0);a[p+1056+(cm<<2)+1|0]=d0;do{if(d1>>>0<d2>>>0){cr=d1+1|0;c[z>>2]=cr;d5=a[d1]|0;d6=cr}else{if((c[x>>2]|0)==0){d5=0;d6=d1;break}cr=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((cr|0)==0){c[x>>2]=0;cn=(c[bs>>2]|0)-1|0;c[z>>2]=cn;a[cn]=0;d7=c[z>>2]|0}else{c[z>>2]=bd;c[bs>>2]=e+40+cr;d7=bd}cr=d7+1|0;c[z>>2]=cr;d5=a[d7]|0;d6=cr}}while(0);a[p+1056+(cm<<2)|0]=d5;a[p+1056+(cm<<2)+3|0]=cu;cr=cm+1|0;if((cr|0)<(ct|0)){cm=cr;cs=d6}else{d8=d6;break}}}else{d8=dU}c[p+18464>>2]=p+1056;dW=d8}do{if(dW>>>0<(c[bs>>2]|0)>>>0){c[z>>2]=dW+1;d9=a[dW]|0}else{if((c[x>>2]|0)==0){d9=0;break}cs=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((cs|0)==0){c[x>>2]=0;cm=(c[bs>>2]|0)-1|0;c[z>>2]=cm;a[cm]=0;ea=c[z>>2]|0}else{c[z>>2]=bd;c[bs>>2]=e+40+cs;ea=bd}c[z>>2]=ea+1;d9=a[ea]|0}}while(0);cs=d9&255;cm=1<<cs;if((cm|0)>0){ct=0;do{b[p+2080+(ct<<2)>>1]=-1;cu=ct&255;a[p+2080+(ct<<2)+2|0]=cu;a[p+2080+(ct<<2)+3|0]=cu;ct=ct+1|0;}while((ct|0)<(cm|0))}ct=cm+2|0;cu=cm+1|0;cr=0;cn=0;co=0;cp=0;L1617:while(1){ci=cr;ch=cn;ck=co;cj=-1;ce=ct;cd=cs;L1619:while(1){cg=cd+1|0;cf=(1<<cg)-1|0;ca=ci;b9=ch;cc=ck;cb=cj;b6=ce;while(1){if((b9|0)<(cg|0)){b5=cc;b8=b9;b7=ca;b2=c[z>>2]|0;while(1){if((b7|0)==0){do{if(b2>>>0<(c[bs>>2]|0)>>>0){eb=b2}else{if((c[x>>2]|0)==0){break L1617}b1=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((b1|0)==0){c[x>>2]=0;b4=(c[bs>>2]|0)-1|0;c[z>>2]=b4;a[b4]=0;eb=c[z>>2]|0;break}else{c[z>>2]=bd;c[bs>>2]=e+40+b1;eb=bd;break}}}while(0);b1=eb+1|0;c[z>>2]=b1;b4=a[eb]|0;if(b4<<24>>24==0){break L1617}ec=b4&255;ed=b1}else{ec=b7;ed=b2}b1=ec-1|0;do{if(ed>>>0<(c[bs>>2]|0)>>>0){b4=ed+1|0;c[z>>2]=b4;ee=d[ed]|0;ef=b4}else{if((c[x>>2]|0)==0){ee=0;ef=ed;break}b4=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((b4|0)==0){c[x>>2]=0;b3=(c[bs>>2]|0)-1|0;c[z>>2]=b3;a[b3]=0;eg=c[z>>2]|0}else{c[z>>2]=bd;c[bs>>2]=e+40+b4;eg=bd}b4=eg+1|0;c[z>>2]=b4;ee=d[eg]|0;ef=b4}}while(0);b4=ee<<b8|b5;b3=b8+8|0;if((b3|0)<(cg|0)){b5=b4;b8=b3;b7=b1;b2=ef}else{eh=b4;ei=b3;ej=b1;break}}}else{eh=cc;ei=b9;ej=ca}b2=eh&cf;b7=eh>>cg;b8=ei-cg|0;if((b2|0)==(cm|0)){cr=ej;cn=b8;co=b7;cp=1;continue L1617}if((b2|0)==(cu|0)){al=1206;break L1617}if((b2|0)>(b6|0)){al=1233;break L1617}if(!cp){al=1223;break L1617}if((cb|0)>-1){b5=b6+1|0;if((b5|0)>4096){al=1226;break L1617}b[p+2080+(b6<<2)>>1]=cb&65535;ad=a[p+2080+(cb<<2)+2|0]|0;a[p+2080+(b6<<2)+2|0]=ad;if((b2|0)==(b5|0)){ek=ad}else{ek=a[p+2080+(b2<<2)+2|0]|0}a[p+2080+(b6<<2)+3|0]=ek;el=b5}else{if((b2|0)==(b6|0)){al=1231;break L1617}else{el=b6}}e$(p,b2&65535);if((el&cf|0)==0&(el|0)<4096){ci=ej;ch=b8;ck=b7;cj=b2;ce=el;cd=cg;continue L1619}else{ca=ej;b9=b8;cc=b7;cb=b2;b6=el}}}}L1660:do{if((al|0)==1206){do{if((c[v>>2]|0)==0){em=c[z>>2]|0;al=1210}else{cp=c[bs>>2]|0;cu=c[z>>2]|0;co=cp-cu|0;if((co|0)>=(ej|0)){em=cu;al=1210;break}c[z>>2]=cp;cV[c[cx>>2]&255](c[br>>2]|0,ej-co|0)}}while(0);if((al|0)==1210){c[z>>2]=em+ej}L1668:while(1){co=c[z>>2]|0;do{if(co>>>0<(c[bs>>2]|0)>>>0){en=co}else{if((c[x>>2]|0)==0){break L1660}cp=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((cp|0)==0){c[x>>2]=0;cu=(c[bs>>2]|0)-1|0;c[z>>2]=cu;a[cu]=0;en=c[z>>2]|0;break}else{c[z>>2]=bd;c[bs>>2]=e+40+cp;en=bd;break}}}while(0);co=en+1|0;c[z>>2]=co;cp=a[en]|0;cu=cp&255;if(cp<<24>>24==0){break L1660}do{if((c[v>>2]|0)!=0){cp=c[bs>>2]|0;cn=cp-co|0;if((cn|0)>=(cu|0)){break}c[z>>2]=cp;cV[c[cx>>2]&255](c[br>>2]|0,cu-cn|0);continue L1668}}while(0);c[z>>2]=en+(cu+1)}}else if((al|0)==1223){c[4668]=400;cL=0;break L1371}else if((al|0)==1226){c[4668]=368;cL=0;break L1371}else if((al|0)==1231){c[4668]=296;cL=0;break L1371}else if((al|0)==1233){c[4668]=296;cL=0;break L1371}}while(0);co=c[bw>>2]|0;if((co|0)==0){cL=0;break L1371}if((k|0)==4|(k|0)==0){cL=co;break L1371}cL=eZ(co,4,k,c[cv>>2]|0,c[cA>>2]|0)|0;break L1371}}while(0);c[4668]=504;cL=0}}while(0);bw=(cL|0)==1?0:cL;if((bw|0)==0){A=0;i=l;return A|0}c[f>>2]=c[p>>2];c[h>>2]=c[p+4>>2];A=bw;i=l;return A|0}}while(0);if((al|0)==1057){p=c[w>>2]|0;c[z>>2]=p;cJ=p}p=c[bs>>2]|0;do{if(cJ>>>0<p>>>0){cL=cJ+1|0;c[z>>2]=cL;eo=d[cJ]|0;ep=cL;eq=p}else{if((c[x>>2]|0)==0){eo=0;ep=cJ;eq=p;break}cL=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((cL|0)==0){c[x>>2]=0;en=(c[bs>>2]|0)-1|0;c[z>>2]=en;a[en]=0;er=c[z>>2]|0;es=c[bs>>2]|0}else{c[z>>2]=bd;en=e+40+cL|0;c[bs>>2]=en;er=bd;es=en}en=er+1|0;c[z>>2]=en;eo=d[er]|0;ep=en;eq=es}}while(0);es=eo<<8;do{if(ep>>>0<eq>>>0){eo=ep+1|0;c[z>>2]=eo;et=d[ep]|0;eu=eo;ev=eq}else{if((c[x>>2]|0)==0){et=0;eu=ep;ev=eq;break}eo=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((eo|0)==0){c[x>>2]=0;er=(c[bs>>2]|0)-1|0;c[z>>2]=er;a[er]=0;ew=c[z>>2]|0;ex=c[bs>>2]|0}else{c[z>>2]=bd;er=e+40+eo|0;c[bs>>2]=er;ew=bd;ex=er}er=ew+1|0;c[z>>2]=er;et=d[ew]|0;eu=er;ev=ex}}while(0);ex=(et|es)<<16;do{if(eu>>>0<ev>>>0){es=eu+1|0;c[z>>2]=es;ey=d[eu]|0;ez=es;eA=ev}else{if((c[x>>2]|0)==0){ey=0;ez=eu;eA=ev;break}es=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((es|0)==0){c[x>>2]=0;et=(c[bs>>2]|0)-1|0;c[z>>2]=et;a[et]=0;eB=c[z>>2]|0;eC=c[bs>>2]|0}else{c[z>>2]=bd;et=e+40+es|0;c[bs>>2]=et;eB=bd;eC=et}et=eB+1|0;c[z>>2]=et;ey=d[eB]|0;ez=et;eA=eC}}while(0);eC=ey<<8;do{if(ez>>>0<eA>>>0){c[z>>2]=ez+1;eD=d[ez]|0}else{if((c[x>>2]|0)==0){eD=0;break}ey=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((ey|0)==0){c[x>>2]=0;eB=(c[bs>>2]|0)-1|0;c[z>>2]=eB;a[eB]=0;eE=c[z>>2]|0}else{c[z>>2]=bd;c[bs>>2]=e+40+ey;eE=bd}c[z>>2]=eE+1;eD=d[eE]|0}}while(0);eE=c[w>>2]|0;c[z>>2]=eE;if((eC|ex|eD|0)==943870035){eD=c[bs>>2]|0;do{if(eE>>>0<eD>>>0){ex=eE+1|0;c[z>>2]=ex;eF=d[eE]|0;eG=ex;eH=eD}else{if((c[x>>2]|0)==0){eF=0;eG=eE;eH=eD;break}ex=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((ex|0)==0){c[x>>2]=0;eC=(c[bs>>2]|0)-1|0;c[z>>2]=eC;a[eC]=0;eI=c[z>>2]|0;eJ=c[bs>>2]|0}else{c[z>>2]=bd;eC=e+40+ex|0;c[bs>>2]=eC;eI=bd;eJ=eC}eC=eI+1|0;c[z>>2]=eC;eF=d[eI]|0;eG=eC;eH=eJ}}while(0);eJ=eF<<8;do{if(eG>>>0<eH>>>0){eF=eG+1|0;c[z>>2]=eF;eK=d[eG]|0;eM=eF;eN=eH}else{if((c[x>>2]|0)==0){eK=0;eM=eG;eN=eH;break}eF=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((eF|0)==0){c[x>>2]=0;eI=(c[bs>>2]|0)-1|0;c[z>>2]=eI;a[eI]=0;eO=c[z>>2]|0;eP=c[bs>>2]|0}else{c[z>>2]=bd;eI=e+40+eF|0;c[bs>>2]=eI;eO=bd;eP=eI}eI=eO+1|0;c[z>>2]=eI;eK=d[eO]|0;eM=eI;eN=eP}}while(0);eP=(eK|eJ)<<16;do{if(eM>>>0<eN>>>0){eJ=eM+1|0;c[z>>2]=eJ;eQ=d[eM]|0;eT=eJ;eW=eN}else{if((c[x>>2]|0)==0){eQ=0;eT=eM;eW=eN;break}eJ=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((eJ|0)==0){c[x>>2]=0;eK=(c[bs>>2]|0)-1|0;c[z>>2]=eK;a[eK]=0;eX=c[z>>2]|0;eY=c[bs>>2]|0}else{c[z>>2]=bd;eK=e+40+eJ|0;c[bs>>2]=eK;eX=bd;eY=eK}eK=eX+1|0;c[z>>2]=eK;eQ=d[eX]|0;eT=eK;eW=eY}}while(0);eY=eQ<<8;do{if(eT>>>0<eW>>>0){eQ=eT+1|0;c[z>>2]=eQ;e1=d[eT]|0;e2=eQ}else{if((c[x>>2]|0)==0){e1=0;e2=eT;break}eQ=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((eQ|0)==0){c[x>>2]=0;eX=(c[bs>>2]|0)-1|0;c[z>>2]=eX;a[eX]=0;e3=c[z>>2]|0}else{c[z>>2]=bd;c[bs>>2]=e+40+eQ;e3=bd}eQ=e3+1|0;c[z>>2]=eQ;e1=d[e3]|0;e2=eQ}}while(0);if((eY|eP|e1|0)!=943870035){c[4668]=664;A=0;i=l;return A|0}e1=c[bs>>2]|0;do{if(e2>>>0<e1>>>0){eP=e2+1|0;c[z>>2]=eP;e4=d[e2]|0;e5=eP;e8=e1}else{if((c[x>>2]|0)==0){e4=0;e5=e2;e8=e1;break}eP=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((eP|0)==0){c[x>>2]=0;eY=(c[bs>>2]|0)-1|0;c[z>>2]=eY;a[eY]=0;e9=c[z>>2]|0;fa=c[bs>>2]|0}else{c[z>>2]=bd;eY=e+40+eP|0;c[bs>>2]=eY;e9=bd;fa=eY}eY=e9+1|0;c[z>>2]=eY;e4=d[e9]|0;e5=eY;e8=fa}}while(0);fa=e4<<8;do{if(e5>>>0<e8>>>0){e4=e5+1|0;c[z>>2]=e4;fb=d[e5]|0;fc=e4}else{if((c[x>>2]|0)==0){fb=0;fc=e5;break}e4=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((e4|0)==0){c[x>>2]=0;e9=(c[bs>>2]|0)-1|0;c[z>>2]=e9;a[e9]=0;fd=c[z>>2]|0}else{c[z>>2]=bd;c[bs>>2]=e+40+e4;fd=bd}e4=fd+1|0;c[z>>2]=e4;fb=d[fd]|0;fc=e4}}while(0);if((fb|fa|0)!=1){c[4668]=640;A=0;i=l;return A|0}do{if((c[v>>2]|0)==0){al=1374}else{fa=c[bs>>2]|0;fb=fa-fc|0;if((fb|0)>=6){al=1374;break}c[z>>2]=fa;cV[c[e+20>>2]&255](c[br>>2]|0,6-fb|0);fe=c[z>>2]|0}}while(0);if((al|0)==1374){fb=fc+6|0;c[z>>2]=fb;fe=fb}fb=c[bs>>2]|0;do{if(fe>>>0<fb>>>0){fc=fe+1|0;c[z>>2]=fc;ff=d[fe]|0;fg=fc;fh=fb}else{if((c[x>>2]|0)==0){ff=0;fg=fe;fh=fb;break}fc=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((fc|0)==0){c[x>>2]=0;fa=(c[bs>>2]|0)-1|0;c[z>>2]=fa;a[fa]=0;fi=c[z>>2]|0;fj=c[bs>>2]|0}else{c[z>>2]=bd;fa=e+40+fc|0;c[bs>>2]=fa;fi=bd;fj=fa}fa=fi+1|0;c[z>>2]=fa;ff=d[fi]|0;fg=fa;fh=fj}}while(0);fj=ff<<8;do{if(fg>>>0<fh>>>0){ff=fg+1|0;c[z>>2]=ff;fk=d[fg]|0;fl=ff}else{if((c[x>>2]|0)==0){fk=0;fl=fg;break}ff=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((ff|0)==0){c[x>>2]=0;fi=(c[bs>>2]|0)-1|0;c[z>>2]=fi;a[fi]=0;fm=c[z>>2]|0}else{c[z>>2]=bd;c[bs>>2]=e+40+ff;fm=bd}ff=fm+1|0;c[z>>2]=ff;fk=d[fm]|0;fl=ff}}while(0);fm=fk|fj;if(fm>>>0>16>>>0){c[4668]=600;A=0;i=l;return A|0}fj=c[bs>>2]|0;do{if(fl>>>0<fj>>>0){fk=fl+1|0;c[z>>2]=fk;fn=d[fl]|0;fo=fk;fp=fj}else{if((c[x>>2]|0)==0){fn=0;fo=fl;fp=fj;break}fk=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((fk|0)==0){c[x>>2]=0;fg=(c[bs>>2]|0)-1|0;c[z>>2]=fg;a[fg]=0;fq=c[z>>2]|0;fr=c[bs>>2]|0}else{c[z>>2]=bd;fg=e+40+fk|0;c[bs>>2]=fg;fq=bd;fr=fg}fg=fq+1|0;c[z>>2]=fg;fn=d[fq]|0;fo=fg;fp=fr}}while(0);fr=fn<<8;do{if(fo>>>0<fp>>>0){fn=fo+1|0;c[z>>2]=fn;fs=d[fo]|0;ft=fn;fu=fp}else{if((c[x>>2]|0)==0){fs=0;ft=fo;fu=fp;break}fn=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((fn|0)==0){c[x>>2]=0;fq=(c[bs>>2]|0)-1|0;c[z>>2]=fq;a[fq]=0;fv=c[z>>2]|0;fw=c[bs>>2]|0}else{c[z>>2]=bd;fq=e+40+fn|0;c[bs>>2]=fq;fv=bd;fw=fq}fq=fv+1|0;c[z>>2]=fq;fs=d[fv]|0;ft=fq;fu=fw}}while(0);fw=(fs|fr)<<16;do{if(ft>>>0<fu>>>0){fr=ft+1|0;c[z>>2]=fr;fx=d[ft]|0;fy=fr;fz=fu}else{if((c[x>>2]|0)==0){fx=0;fy=ft;fz=fu;break}fr=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((fr|0)==0){c[x>>2]=0;fs=(c[bs>>2]|0)-1|0;c[z>>2]=fs;a[fs]=0;fA=c[z>>2]|0;fB=c[bs>>2]|0}else{c[z>>2]=bd;fs=e+40+fr|0;c[bs>>2]=fs;fA=bd;fB=fs}fs=fA+1|0;c[z>>2]=fs;fx=d[fA]|0;fy=fs;fz=fB}}while(0);fB=fx<<8;do{if(fy>>>0<fz>>>0){fx=fy+1|0;c[z>>2]=fx;fC=d[fy]|0;fD=fx;fE=fz}else{if((c[x>>2]|0)==0){fC=0;fD=fy;fE=fz;break}fx=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((fx|0)==0){c[x>>2]=0;fA=(c[bs>>2]|0)-1|0;c[z>>2]=fA;a[fA]=0;fF=c[z>>2]|0;fG=c[bs>>2]|0}else{c[z>>2]=bd;fA=e+40+fx|0;c[bs>>2]=fA;fF=bd;fG=fA}fA=fF+1|0;c[z>>2]=fA;fC=d[fF]|0;fD=fA;fE=fG}}while(0);fG=fB|fw|fC;do{if(fD>>>0<fE>>>0){fC=fD+1|0;c[z>>2]=fC;fH=d[fD]|0;fI=fC;fJ=fE}else{if((c[x>>2]|0)==0){fH=0;fI=fD;fJ=fE;break}fC=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((fC|0)==0){c[x>>2]=0;fw=(c[bs>>2]|0)-1|0;c[z>>2]=fw;a[fw]=0;fK=c[z>>2]|0;fL=c[bs>>2]|0}else{c[z>>2]=bd;fw=e+40+fC|0;c[bs>>2]=fw;fK=bd;fL=fw}fw=fK+1|0;c[z>>2]=fw;fH=d[fK]|0;fI=fw;fJ=fL}}while(0);fL=fH<<8;do{if(fI>>>0<fJ>>>0){fH=fI+1|0;c[z>>2]=fH;fM=d[fI]|0;fN=fH;fO=fJ}else{if((c[x>>2]|0)==0){fM=0;fN=fI;fO=fJ;break}fH=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((fH|0)==0){c[x>>2]=0;fK=(c[bs>>2]|0)-1|0;c[z>>2]=fK;a[fK]=0;fP=c[z>>2]|0;fQ=c[bs>>2]|0}else{c[z>>2]=bd;fK=e+40+fH|0;c[bs>>2]=fK;fP=bd;fQ=fK}fK=fP+1|0;c[z>>2]=fK;fM=d[fP]|0;fN=fK;fO=fQ}}while(0);fQ=(fM|fL)<<16;do{if(fN>>>0<fO>>>0){fL=fN+1|0;c[z>>2]=fL;fR=d[fN]|0;fS=fL;fT=fO}else{if((c[x>>2]|0)==0){fR=0;fS=fN;fT=fO;break}fL=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((fL|0)==0){c[x>>2]=0;fM=(c[bs>>2]|0)-1|0;c[z>>2]=fM;a[fM]=0;fU=c[z>>2]|0;fV=c[bs>>2]|0}else{c[z>>2]=bd;fM=e+40+fL|0;c[bs>>2]=fM;fU=bd;fV=fM}fM=fU+1|0;c[z>>2]=fM;fR=d[fU]|0;fS=fM;fT=fV}}while(0);fV=fR<<8;do{if(fS>>>0<fT>>>0){fR=fS+1|0;c[z>>2]=fR;fW=d[fS]|0;fX=fR;fY=fT}else{if((c[x>>2]|0)==0){fW=0;fX=fS;fY=fT;break}fR=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((fR|0)==0){c[x>>2]=0;fU=(c[bs>>2]|0)-1|0;c[z>>2]=fU;a[fU]=0;fZ=c[z>>2]|0;f_=c[bs>>2]|0}else{c[z>>2]=bd;fU=e+40+fR|0;c[bs>>2]=fU;fZ=bd;f_=fU}fU=fZ+1|0;c[z>>2]=fU;fW=d[fZ]|0;fX=fU;fY=f_}}while(0);f_=fV|fQ|fW;do{if(fX>>>0<fY>>>0){fW=fX+1|0;c[z>>2]=fW;f$=d[fX]|0;f0=fW;f1=fY}else{if((c[x>>2]|0)==0){f$=0;f0=fX;f1=fY;break}fW=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((fW|0)==0){c[x>>2]=0;fQ=(c[bs>>2]|0)-1|0;c[z>>2]=fQ;a[fQ]=0;f2=c[z>>2]|0;f3=c[bs>>2]|0}else{c[z>>2]=bd;fQ=e+40+fW|0;c[bs>>2]=fQ;f2=bd;f3=fQ}fQ=f2+1|0;c[z>>2]=fQ;f$=d[f2]|0;f0=fQ;f1=f3}}while(0);f3=f$<<8;do{if(f0>>>0<f1>>>0){f$=f0+1|0;c[z>>2]=f$;f4=d[f0]|0;f5=f$}else{if((c[x>>2]|0)==0){f4=0;f5=f0;break}f$=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((f$|0)==0){c[x>>2]=0;f2=(c[bs>>2]|0)-1|0;c[z>>2]=f2;a[f2]=0;f6=c[z>>2]|0}else{c[z>>2]=bd;c[bs>>2]=e+40+f$;f6=bd}f$=f6+1|0;c[z>>2]=f$;f4=d[f6]|0;f5=f$}}while(0);if((f4|f3|0)!=8){c[4668]=568;A=0;i=l;return A|0}f3=c[bs>>2]|0;do{if(f5>>>0<f3>>>0){f4=f5+1|0;c[z>>2]=f4;f7=d[f5]|0;f8=f4;f9=f3}else{if((c[x>>2]|0)==0){f7=0;f8=f5;f9=f3;break}f4=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((f4|0)==0){c[x>>2]=0;f6=(c[bs>>2]|0)-1|0;c[z>>2]=f6;a[f6]=0;ga=c[z>>2]|0;gb=c[bs>>2]|0}else{c[z>>2]=bd;f6=e+40+f4|0;c[bs>>2]=f6;ga=bd;gb=f6}f6=ga+1|0;c[z>>2]=f6;f7=d[ga]|0;f8=f6;f9=gb}}while(0);gb=f7<<8;do{if(f8>>>0<f9>>>0){f7=f8+1|0;c[z>>2]=f7;gc=d[f8]|0;gd=f7}else{if((c[x>>2]|0)==0){gc=0;gd=f8;break}f7=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((f7|0)==0){c[x>>2]=0;ga=(c[bs>>2]|0)-1|0;c[z>>2]=ga;a[ga]=0;ge=c[z>>2]|0}else{c[z>>2]=bd;c[bs>>2]=e+40+f7;ge=bd}f7=ge+1|0;c[z>>2]=f7;gc=d[ge]|0;gd=f7}}while(0);if((gc|gb|0)!=3){c[4668]=536;A=0;i=l;return A|0}gb=c[bs>>2]|0;do{if(gd>>>0<gb>>>0){gc=gd+1|0;c[z>>2]=gc;gf=d[gd]|0;gg=gc;gh=gb}else{if((c[x>>2]|0)==0){gf=0;gg=gd;gh=gb;break}gc=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((gc|0)==0){c[x>>2]=0;ge=(c[bs>>2]|0)-1|0;c[z>>2]=ge;a[ge]=0;gi=c[z>>2]|0;gj=c[bs>>2]|0}else{c[z>>2]=bd;ge=e+40+gc|0;c[bs>>2]=ge;gi=bd;gj=ge}ge=gi+1|0;c[z>>2]=ge;gf=d[gi]|0;gg=ge;gh=gj}}while(0);gj=gf<<8;do{if(gg>>>0<gh>>>0){gf=gg+1|0;c[z>>2]=gf;gk=d[gg]|0;gl=gf;gm=gh}else{if((c[x>>2]|0)==0){gk=0;gl=gg;gm=gh;break}gf=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((gf|0)==0){c[x>>2]=0;gi=(c[bs>>2]|0)-1|0;c[z>>2]=gi;a[gi]=0;gn=c[z>>2]|0;go=c[bs>>2]|0}else{c[z>>2]=bd;gi=e+40+gf|0;c[bs>>2]=gi;gn=bd;go=gi}gi=gn+1|0;c[z>>2]=gi;gk=d[gn]|0;gl=gi;gm=go}}while(0);go=(gk|gj)<<16;do{if(gl>>>0<gm>>>0){gj=gl+1|0;c[z>>2]=gj;gp=d[gl]|0;gq=gj;gr=gm}else{if((c[x>>2]|0)==0){gp=0;gq=gl;gr=gm;break}gj=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((gj|0)==0){c[x>>2]=0;gk=(c[bs>>2]|0)-1|0;c[z>>2]=gk;a[gk]=0;gs=c[z>>2]|0;gt=c[bs>>2]|0}else{c[z>>2]=bd;gk=e+40+gj|0;c[bs>>2]=gk;gs=bd;gt=gk}gk=gs+1|0;c[z>>2]=gk;gp=d[gs]|0;gq=gk;gr=gt}}while(0);gt=gp<<8;do{if(gq>>>0<gr>>>0){gp=gq+1|0;c[z>>2]=gp;gu=d[gq]|0;gv=gp}else{if((c[x>>2]|0)==0){gu=0;gv=gq;break}gp=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((gp|0)==0){c[x>>2]=0;gs=(c[bs>>2]|0)-1|0;c[z>>2]=gs;a[gs]=0;gw=c[z>>2]|0}else{c[z>>2]=bd;c[bs>>2]=e+40+gp;gw=bd}gp=gw+1|0;c[z>>2]=gp;gu=d[gw]|0;gv=gp}}while(0);gw=gt|go|gu;do{if((c[v>>2]|0)==0){al=1510}else{gu=c[bs>>2]|0;go=gu-gv|0;if((go|0)>=(gw|0)){al=1510;break}c[z>>2]=gu;cV[c[e+20>>2]&255](c[br>>2]|0,gw-go|0);gx=c[z>>2]|0}}while(0);if((al|0)==1510){go=gv+gw|0;c[z>>2]=go;gx=go}go=c[bs>>2]|0;do{if(gx>>>0<go>>>0){gw=gx+1|0;c[z>>2]=gw;gy=d[gx]|0;gz=gw;gA=go}else{if((c[x>>2]|0)==0){gy=0;gz=gx;gA=go;break}gw=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((gw|0)==0){c[x>>2]=0;gv=(c[bs>>2]|0)-1|0;c[z>>2]=gv;a[gv]=0;gB=c[z>>2]|0;gC=c[bs>>2]|0}else{c[z>>2]=bd;gv=e+40+gw|0;c[bs>>2]=gv;gB=bd;gC=gv}gv=gB+1|0;c[z>>2]=gv;gy=d[gB]|0;gz=gv;gA=gC}}while(0);gC=gy<<8;do{if(gz>>>0<gA>>>0){gy=gz+1|0;c[z>>2]=gy;gD=d[gz]|0;gE=gy;gF=gA}else{if((c[x>>2]|0)==0){gD=0;gE=gz;gF=gA;break}gy=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((gy|0)==0){c[x>>2]=0;gB=(c[bs>>2]|0)-1|0;c[z>>2]=gB;a[gB]=0;gG=c[z>>2]|0;gH=c[bs>>2]|0}else{c[z>>2]=bd;gB=e+40+gy|0;c[bs>>2]=gB;gG=bd;gH=gB}gB=gG+1|0;c[z>>2]=gB;gD=d[gG]|0;gE=gB;gF=gH}}while(0);gH=(gD|gC)<<16;do{if(gE>>>0<gF>>>0){gC=gE+1|0;c[z>>2]=gC;gI=d[gE]|0;gJ=gC;gK=gF}else{if((c[x>>2]|0)==0){gI=0;gJ=gE;gK=gF;break}gC=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((gC|0)==0){c[x>>2]=0;gD=(c[bs>>2]|0)-1|0;c[z>>2]=gD;a[gD]=0;gL=c[z>>2]|0;gM=c[bs>>2]|0}else{c[z>>2]=bd;gD=e+40+gC|0;c[bs>>2]=gD;gL=bd;gM=gD}gD=gL+1|0;c[z>>2]=gD;gI=d[gL]|0;gJ=gD;gK=gM}}while(0);gM=gI<<8;do{if(gJ>>>0<gK>>>0){gI=gJ+1|0;c[z>>2]=gI;gN=d[gJ]|0;gO=gI}else{if((c[x>>2]|0)==0){gN=0;gO=gJ;break}gI=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((gI|0)==0){c[x>>2]=0;gL=(c[bs>>2]|0)-1|0;c[z>>2]=gL;a[gL]=0;gP=c[z>>2]|0}else{c[z>>2]=bd;c[bs>>2]=e+40+gI;gP=bd}gI=gP+1|0;c[z>>2]=gI;gN=d[gP]|0;gO=gI}}while(0);gP=gM|gH|gN;do{if((c[v>>2]|0)==0){al=1542}else{gN=c[bs>>2]|0;gH=gN-gO|0;if((gH|0)>=(gP|0)){al=1542;break}c[z>>2]=gN;cV[c[e+20>>2]&255](c[br>>2]|0,gP-gH|0);gQ=c[z>>2]|0}}while(0);if((al|0)==1542){gH=gO+gP|0;c[z>>2]=gH;gQ=gH}gH=c[bs>>2]|0;do{if(gQ>>>0<gH>>>0){gP=gQ+1|0;c[z>>2]=gP;gR=d[gQ]|0;gS=gP;gT=gH}else{if((c[x>>2]|0)==0){gR=0;gS=gQ;gT=gH;break}gP=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((gP|0)==0){c[x>>2]=0;gO=(c[bs>>2]|0)-1|0;c[z>>2]=gO;a[gO]=0;gU=c[z>>2]|0;gV=c[bs>>2]|0}else{c[z>>2]=bd;gO=e+40+gP|0;c[bs>>2]=gO;gU=bd;gV=gO}gO=gU+1|0;c[z>>2]=gO;gR=d[gU]|0;gS=gO;gT=gV}}while(0);gV=gR<<8;do{if(gS>>>0<gT>>>0){gR=gS+1|0;c[z>>2]=gR;gW=d[gS]|0;gX=gR;gY=gT}else{if((c[x>>2]|0)==0){gW=0;gX=gS;gY=gT;break}gR=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((gR|0)==0){c[x>>2]=0;gU=(c[bs>>2]|0)-1|0;c[z>>2]=gU;a[gU]=0;gZ=c[z>>2]|0;g_=c[bs>>2]|0}else{c[z>>2]=bd;gU=e+40+gR|0;c[bs>>2]=gU;gZ=bd;g_=gU}gU=gZ+1|0;c[z>>2]=gU;gW=d[gZ]|0;gX=gU;gY=g_}}while(0);g_=(gW|gV)<<16;do{if(gX>>>0<gY>>>0){gV=gX+1|0;c[z>>2]=gV;g$=d[gX]|0;g0=gV;g1=gY}else{if((c[x>>2]|0)==0){g$=0;g0=gX;g1=gY;break}gV=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((gV|0)==0){c[x>>2]=0;gW=(c[bs>>2]|0)-1|0;c[z>>2]=gW;a[gW]=0;g2=c[z>>2]|0;g3=c[bs>>2]|0}else{c[z>>2]=bd;gW=e+40+gV|0;c[bs>>2]=gW;g2=bd;g3=gW}gW=g2+1|0;c[z>>2]=gW;g$=d[g2]|0;g0=gW;g1=g3}}while(0);g3=g$<<8;do{if(g0>>>0<g1>>>0){g$=g0+1|0;c[z>>2]=g$;g4=d[g0]|0;g5=g$}else{if((c[x>>2]|0)==0){g4=0;g5=g0;break}g$=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((g$|0)==0){c[x>>2]=0;g2=(c[bs>>2]|0)-1|0;c[z>>2]=g2;a[g2]=0;g6=c[z>>2]|0}else{c[z>>2]=bd;c[bs>>2]=e+40+g$;g6=bd}g$=g6+1|0;c[z>>2]=g$;g4=d[g6]|0;g5=g$}}while(0);g6=g3|g_|g4;do{if((c[v>>2]|0)==0){al=1574}else{g4=c[bs>>2]|0;g_=g4-g5|0;if((g_|0)>=(g6|0)){al=1574;break}c[z>>2]=g4;cV[c[e+20>>2]&255](c[br>>2]|0,g6-g_|0);g7=c[z>>2]|0}}while(0);if((al|0)==1574){g_=g5+g6|0;c[z>>2]=g_;g7=g_}g_=c[bs>>2]|0;do{if(g7>>>0<g_>>>0){g6=g7+1|0;c[z>>2]=g6;g8=d[g7]|0;g9=g6;ha=g_}else{if((c[x>>2]|0)==0){g8=0;g9=g7;ha=g_;break}g6=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((g6|0)==0){c[x>>2]=0;g5=(c[bs>>2]|0)-1|0;c[z>>2]=g5;a[g5]=0;hb=c[z>>2]|0;hc=c[bs>>2]|0}else{c[z>>2]=bd;g5=e+40+g6|0;c[bs>>2]=g5;hb=bd;hc=g5}g5=hb+1|0;c[z>>2]=g5;g8=d[hb]|0;g9=g5;ha=hc}}while(0);hc=g8<<8;do{if(g9>>>0<ha>>>0){g8=g9+1|0;c[z>>2]=g8;hd=d[g9]|0;he=g8}else{if((c[x>>2]|0)==0){hd=0;he=g9;break}g8=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((g8|0)==0){c[x>>2]=0;hb=(c[bs>>2]|0)-1|0;c[z>>2]=hb;a[hb]=0;hf=c[z>>2]|0}else{c[z>>2]=bd;c[bs>>2]=e+40+g8;hf=bd}g8=hf+1|0;c[z>>2]=g8;hd=d[hf]|0;he=g8}}while(0);hf=hd|hc;if(hf>>>0>1>>>0){c[4668]=912;A=0;i=l;return A|0}hc=n$(ag(fG<<2,f_)|0)|0;if((hc|0)==0){c[4668]=3032;A=0;i=l;return A|0}hd=ag(f_,fG)|0;if((hf|0)==0){hf=(hd|0)>0;g9=0;do{ha=hc+g9|0;L2098:do{if((g9|0)>(fm|0)){if(!hf){break}g8=((g9|0)==3)<<31>>31;hb=0;g_=ha;while(1){a[g_]=g8;g7=hb+1|0;if((g7|0)<(hd|0)){hb=g7;g_=g_+4|0}else{break}}}else{if(hf){hg=1;hh=ha}else{break}while(1){g_=c[z>>2]|0;do{if(g_>>>0<(c[bs>>2]|0)>>>0){c[z>>2]=g_+1;hi=a[g_]|0}else{if((c[x>>2]|0)==0){hi=0;break}hb=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((hb|0)==0){c[x>>2]=0;g8=(c[bs>>2]|0)-1|0;c[z>>2]=g8;a[g8]=0;hj=c[z>>2]|0}else{c[z>>2]=bd;c[bs>>2]=e+40+hb;hj=bd}c[z>>2]=hj+1;hi=a[hj]|0}}while(0);a[hh]=hi;if((hg|0)>=(hd|0)){break L2098}hg=hg+1|0;hh=hh+4|0}}}while(0);g9=g9+1|0;}while((g9|0)<4)}else{g9=ag(fG,fm<<1)|0;do{if((c[v>>2]|0)==0){al=1598}else{hh=c[bs>>2]|0;hg=hh-he|0;if((hg|0)>=(g9|0)){al=1598;break}c[z>>2]=hh;cV[c[e+20>>2]&255](c[br>>2]|0,g9-hg|0)}}while(0);if((al|0)==1598){c[z>>2]=he+g9}g9=(hd|0)>0;he=0;do{hg=hc+he|0;L2126:do{if((he|0)<(fm|0)){hh=hg;hi=0;while(1){hj=(hi|0)<(hd|0);L2133:while(1){if(!hj){break L2126}hf=c[z>>2]|0;do{if(hf>>>0<(c[bs>>2]|0)>>>0){hk=hf}else{if((c[x>>2]|0)==0){hl=0;hm=hf;al=1616;break L2133}ha=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((ha|0)==0){c[x>>2]=0;g_=(c[bs>>2]|0)-1|0;c[z>>2]=g_;a[g_]=0;hk=c[z>>2]|0;break}else{c[z>>2]=bd;c[bs>>2]=e+40+ha;hk=bd;break}}}while(0);hn=hk+1|0;c[z>>2]=hn;ho=a[hk]|0;hp=ho&255;if(ho<<24>>24!=-128){al=1615;break}}do{if((al|0)==1615){al=0;if(ho<<24>>24>-1){hl=hp;hm=hn;al=1616;break}hj=257-hp|0;do{if(hn>>>0<(c[bs>>2]|0)>>>0){c[z>>2]=hk+2;hq=a[hn]|0}else{if((c[x>>2]|0)==0){hq=0;break}hf=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((hf|0)==0){c[x>>2]=0;ha=(c[bs>>2]|0)-1|0;c[z>>2]=ha;a[ha]=0;hr=c[z>>2]|0}else{c[z>>2]=bd;c[bs>>2]=e+40+hf;hr=bd}c[z>>2]=hr+1;hq=a[hr]|0}}while(0);hf=hj;ha=hh;while(1){a[ha]=hq;g_=hf-1|0;if((g_|0)==0){break}else{hf=g_;ha=ha+4|0}}hs=hj;ht=(hp*-4|0)+1028|0}}while(0);if((al|0)==1616){al=0;ha=hl+1|0;hf=ha;g_=hh;hb=hm;while(1){do{if(hb>>>0<(c[bs>>2]|0)>>>0){c[z>>2]=hb+1;hu=a[hb]|0}else{if((c[x>>2]|0)==0){hu=0;break}g8=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((g8|0)==0){c[x>>2]=0;g7=(c[bs>>2]|0)-1|0;c[z>>2]=g7;a[g7]=0;hv=c[z>>2]|0}else{c[z>>2]=bd;c[bs>>2]=e+40+g8;hv=bd}c[z>>2]=hv+1;hu=a[hv]|0}}while(0);a[g_]=hu;hj=hf-1|0;if((hj|0)==0){break}hf=hj;g_=g_+4|0;hb=c[z>>2]|0}hs=ha;ht=(hl<<2)+4|0}hh=hh+ht|0;hi=hs+hi|0}}else{if(!g9){break}hi=((he|0)==3)<<31>>31;hh=0;hb=hg;while(1){a[hb]=hi;g_=hh+1|0;if((g_|0)<(hd|0)){hh=g_;hb=hb+4|0}else{break}}}}while(0);he=he+1|0;}while((he|0)<4)}do{if((k|0)==4|(k|0)==0){hw=hc}else{he=eZ(hc,4,k,f_,fG)|0;if((he|0)==0){A=0}else{hw=he;break}i=l;return A|0}}while(0);if((j|0)!=0){c[j>>2]=fm}c[h>>2]=fG;c[f>>2]=f_;A=hw;i=l;return A|0}else{hx=0;hy=eE}while(1){if((hx|0)>=4){hz=1;hA=hy;al=1665;break}do{if(hy>>>0<(c[bs>>2]|0)>>>0){eE=hy+1|0;c[z>>2]=eE;hB=d[hy]|0;hC=eE}else{if((c[x>>2]|0)==0){hB=0;hC=hy;break}eE=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((eE|0)==0){c[x>>2]=0;hw=(c[bs>>2]|0)-1|0;c[z>>2]=hw;a[hw]=0;hD=c[z>>2]|0}else{c[z>>2]=bd;c[bs>>2]=e+40+eE;hD=bd}eE=hD+1|0;c[z>>2]=eE;hB=d[hD]|0;hC=eE}}while(0);if((hB|0)==(d[712+hx|0]|0)){hx=hx+1|0;hy=hC}else{break}}L2196:do{if((al|0)==1665){while(1){al=0;do{if(hA>>>0<(c[bs>>2]|0)>>>0){hC=hA+1|0;c[z>>2]=hC;hE=hC}else{if((c[x>>2]|0)==0){hE=hA;break}hC=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((hC|0)==0){c[x>>2]=0;hy=(c[bs>>2]|0)-1|0;c[z>>2]=hy;a[hy]=0;hF=c[z>>2]|0}else{c[z>>2]=bd;c[bs>>2]=e+40+hC;hF=bd}hC=hF+1|0;c[z>>2]=hC;hE=hC}}while(0);if((hz|0)>=84){hG=0;hH=hE;break}hz=hz+1|0;hA=hE;al=1665}while(1){if((hG|0)>=4){break}do{if(hH>>>0<(c[bs>>2]|0)>>>0){hC=hH+1|0;c[z>>2]=hC;hI=d[hH]|0;hJ=hC}else{if((c[x>>2]|0)==0){hI=0;hJ=hH;break}hC=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((hC|0)==0){c[x>>2]=0;hy=(c[bs>>2]|0)-1|0;c[z>>2]=hy;a[hy]=0;hK=c[z>>2]|0}else{c[z>>2]=bd;c[bs>>2]=e+40+hC;hK=bd}hC=hK+1|0;c[z>>2]=hC;hI=d[hK]|0;hJ=hC}}while(0);if((hI|0)==(d[688+hG|0]|0)){hG=hG+1|0;hH=hJ}else{break L2196}}hC=c[w>>2]|0;c[z>>2]=hC;hy=c[bs>>2]|0;hx=0;hB=hC;hD=hC>>>0<hy>>>0;hC=hy;while(1){do{if(hD){hy=hB+1|0;c[z>>2]=hy;hL=hy;hM=hC}else{if((c[x>>2]|0)==0){hL=hB;hM=hC;break}hy=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((hy|0)==0){c[x>>2]=0;eE=(c[bs>>2]|0)-1|0;c[z>>2]=eE;a[eE]=0;hN=c[z>>2]|0;hO=c[bs>>2]|0}else{c[z>>2]=bd;eE=e+40+hy|0;c[bs>>2]=eE;hN=bd;hO=eE}eE=hN+1|0;c[z>>2]=eE;hL=eE;hM=hO}}while(0);eE=hx+1|0;hP=hL>>>0<hM>>>0;if((eE|0)<92){hx=eE;hB=hL;hD=hP;hC=hM}else{break}}do{if(hP){hC=hL+1|0;c[z>>2]=hC;hQ=d[hL]|0;hR=hC;hS=hM}else{if((c[x>>2]|0)==0){hQ=0;hR=hL;hS=hM;break}hC=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((hC|0)==0){c[x>>2]=0;hD=(c[bs>>2]|0)-1|0;c[z>>2]=hD;a[hD]=0;hT=c[z>>2]|0;hU=c[bs>>2]|0}else{c[z>>2]=bd;hD=e+40+hC|0;c[bs>>2]=hD;hT=bd;hU=hD}hD=hT+1|0;c[z>>2]=hD;hQ=d[hT]|0;hR=hD;hS=hU}}while(0);hD=hQ<<8;do{if(hR>>>0<hS>>>0){hC=hR+1|0;c[z>>2]=hC;hV=d[hR]|0;hW=hC;hX=hS}else{if((c[x>>2]|0)==0){hV=0;hW=hR;hX=hS;break}hC=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((hC|0)==0){c[x>>2]=0;hB=(c[bs>>2]|0)-1|0;c[z>>2]=hB;a[hB]=0;hY=c[z>>2]|0;hZ=c[bs>>2]|0}else{c[z>>2]=bd;hB=e+40+hC|0;c[bs>>2]=hB;hY=bd;hZ=hB}hB=hY+1|0;c[z>>2]=hB;hV=d[hY]|0;hW=hB;hX=hZ}}while(0);hB=hV|hD;do{if(hW>>>0<hX>>>0){hC=hW+1|0;c[z>>2]=hC;h_=d[hW]|0;h$=hC;h0=hX}else{if((c[x>>2]|0)==0){h_=0;h$=hW;h0=hX;break}hC=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((hC|0)==0){c[x>>2]=0;hx=(c[bs>>2]|0)-1|0;c[z>>2]=hx;a[hx]=0;h1=c[z>>2]|0;h2=c[bs>>2]|0}else{c[z>>2]=bd;hx=e+40+hC|0;c[bs>>2]=hx;h1=bd;h2=hx}hx=h1+1|0;c[z>>2]=hx;h_=d[h1]|0;h$=hx;h0=h2}}while(0);hD=h_<<8;do{if(h$>>>0<h0>>>0){hx=h$+1|0;c[z>>2]=hx;h3=d[h$]|0;h4=hx}else{if((c[x>>2]|0)==0){h3=0;h4=h$;break}hx=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((hx|0)==0){c[x>>2]=0;hC=(c[bs>>2]|0)-1|0;c[z>>2]=hC;a[hC]=0;h5=c[z>>2]|0}else{c[z>>2]=bd;c[bs>>2]=e+40+hx;h5=bd}hx=h5+1|0;c[z>>2]=hx;h3=d[h5]|0;h4=hx}}while(0);hx=h3|hD;do{if((c[v>>2]|0)==0){h6=h4;al=1724}else{if((cZ[c[e+24>>2]&255](c[br>>2]|0)|0)==0){break}if((c[x>>2]|0)==0){al=1725;break}h6=c[z>>2]|0;al=1724}}while(0);if((al|0)==1724){if(h6>>>0>=(c[bs>>2]|0)>>>0){al=1725}}if((al|0)==1725){c[4668]=848;A=0;i=l;return A|0}if((268435456/(hB>>>0)|0)>>>0<hx>>>0){c[4668]=4024;A=0;i=l;return A|0}hD=c[z>>2]|0;hC=c[bs>>2]|0;do{if(hD>>>0<hC>>>0){eE=hD+1|0;c[z>>2]=eE;h7=eE;h8=hC}else{if((c[x>>2]|0)==0){h7=hD;h8=hC;break}eE=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((eE|0)==0){c[x>>2]=0;hy=(c[bs>>2]|0)-1|0;c[z>>2]=hy;a[hy]=0;h9=c[z>>2]|0;ia=c[bs>>2]|0}else{c[z>>2]=bd;hy=e+40+eE|0;c[bs>>2]=hy;h9=bd;ia=hy}hy=h9+1|0;c[z>>2]=hy;h7=hy;h8=ia}}while(0);do{if(h7>>>0<h8>>>0){hC=h7+1|0;c[z>>2]=hC;ib=hC;ic=h8}else{if((c[x>>2]|0)==0){ib=h7;ic=h8;break}hC=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((hC|0)==0){c[x>>2]=0;hD=(c[bs>>2]|0)-1|0;c[z>>2]=hD;a[hD]=0;id=c[z>>2]|0;ie=c[bs>>2]|0}else{c[z>>2]=bd;hD=e+40+hC|0;c[bs>>2]=hD;id=bd;ie=hD}hD=id+1|0;c[z>>2]=hD;ib=hD;ic=ie}}while(0);do{if(ib>>>0<ic>>>0){hD=ib+1|0;c[z>>2]=hD;ig=hD;ih=ic}else{if((c[x>>2]|0)==0){ig=ib;ih=ic;break}hD=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((hD|0)==0){c[x>>2]=0;hC=(c[bs>>2]|0)-1|0;c[z>>2]=hC;a[hC]=0;ii=c[z>>2]|0;ij=c[bs>>2]|0}else{c[z>>2]=bd;hC=e+40+hD|0;c[bs>>2]=hC;ii=bd;ij=hC}hC=ii+1|0;c[z>>2]=hC;ig=hC;ih=ij}}while(0);do{if(ig>>>0<ih>>>0){hC=ig+1|0;c[z>>2]=hC;ik=hC;il=ih}else{if((c[x>>2]|0)==0){ik=ig;il=ih;break}hC=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((hC|0)==0){c[x>>2]=0;hD=(c[bs>>2]|0)-1|0;c[z>>2]=hD;a[hD]=0;im=c[z>>2]|0;io=c[bs>>2]|0}else{c[z>>2]=bd;hD=e+40+hC|0;c[bs>>2]=hD;im=bd;io=hD}hD=im+1|0;c[z>>2]=hD;ik=hD;il=io}}while(0);do{if(ik>>>0<il>>>0){hD=ik+1|0;c[z>>2]=hD;ip=hD;iq=il}else{if((c[x>>2]|0)==0){ip=ik;iq=il;break}hD=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((hD|0)==0){c[x>>2]=0;hC=(c[bs>>2]|0)-1|0;c[z>>2]=hC;a[hC]=0;ir=c[z>>2]|0;is=c[bs>>2]|0}else{c[z>>2]=bd;hC=e+40+hD|0;c[bs>>2]=hC;ir=bd;is=hC}hC=ir+1|0;c[z>>2]=hC;ip=hC;iq=is}}while(0);do{if(ip>>>0<iq>>>0){hC=ip+1|0;c[z>>2]=hC;it=hC;iu=iq}else{if((c[x>>2]|0)==0){it=ip;iu=iq;break}hC=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((hC|0)==0){c[x>>2]=0;hD=(c[bs>>2]|0)-1|0;c[z>>2]=hD;a[hD]=0;iv=c[z>>2]|0;iw=c[bs>>2]|0}else{c[z>>2]=bd;hD=e+40+hC|0;c[bs>>2]=hD;iv=bd;iw=hD}hD=iv+1|0;c[z>>2]=hD;it=hD;iu=iw}}while(0);do{if(it>>>0<iu>>>0){hD=it+1|0;c[z>>2]=hD;ix=hD;iy=iu}else{if((c[x>>2]|0)==0){ix=it;iy=iu;break}hD=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((hD|0)==0){c[x>>2]=0;hC=(c[bs>>2]|0)-1|0;c[z>>2]=hC;a[hC]=0;iz=c[z>>2]|0;iA=c[bs>>2]|0}else{c[z>>2]=bd;hC=e+40+hD|0;c[bs>>2]=hC;iz=bd;iA=hC}hC=iz+1|0;c[z>>2]=hC;ix=hC;iy=iA}}while(0);do{if(ix>>>0<iy>>>0){c[z>>2]=ix+1}else{if((c[x>>2]|0)==0){break}hC=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((hC|0)==0){c[x>>2]=0;hD=(c[bs>>2]|0)-1|0;c[z>>2]=hD;a[hD]=0;iB=c[z>>2]|0}else{c[z>>2]=bd;c[bs>>2]=e+40+hC;iB=bd}c[z>>2]=iB+1}}while(0);hC=hB<<2;hD=ag(hx,hC)|0;hy=n$(hD)|0;oe(hy|0,-1|0,hD|0);hD=n|0;eE=o|0;hw=e+24|0;f_=0;fG=0;L2356:while(1){if((fG|0)==10){al=1786;break}iC=fG+1|0;fm=c[z>>2]|0;hc=c[bs>>2]|0;do{if(fm>>>0<hc>>>0){he=fm+1|0;c[z>>2]=he;iD=d[fm]|0;iE=he;iF=hc}else{if((c[x>>2]|0)==0){iD=0;iE=fm;iF=hc;break}he=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((he|0)==0){c[x>>2]=0;hd=(c[bs>>2]|0)-1|0;c[z>>2]=hd;a[hd]=0;iG=c[z>>2]|0;iH=c[bs>>2]|0}else{c[z>>2]=bd;hd=e+40+he|0;c[bs>>2]=hd;iG=bd;iH=hd}hd=iG+1|0;c[z>>2]=hd;iD=d[iG]|0;iE=hd;iF=iH}}while(0);do{if(iE>>>0<iF>>>0){hc=iE+1|0;c[z>>2]=hc;iI=a[iE]|0;iJ=hc;iK=iF}else{if((c[x>>2]|0)==0){iI=0;iJ=iE;iK=iF;break}hc=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((hc|0)==0){c[x>>2]=0;fm=(c[bs>>2]|0)-1|0;c[z>>2]=fm;a[fm]=0;iL=c[z>>2]|0;iM=c[bs>>2]|0}else{c[z>>2]=bd;fm=e+40+hc|0;c[bs>>2]=fm;iL=bd;iM=fm}fm=iL+1|0;c[z>>2]=fm;iI=a[iL]|0;iJ=fm;iK=iM}}while(0);a[m+(fG*3|0)|0]=iI;do{if(iJ>>>0<iK>>>0){fm=iJ+1|0;c[z>>2]=fm;iN=a[iJ]|0;iO=fm;iP=iK}else{if((c[x>>2]|0)==0){iN=0;iO=iJ;iP=iK;break}fm=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((fm|0)==0){c[x>>2]=0;hc=(c[bs>>2]|0)-1|0;c[z>>2]=hc;a[hc]=0;iQ=c[z>>2]|0;iR=c[bs>>2]|0}else{c[z>>2]=bd;hc=e+40+fm|0;c[bs>>2]=hc;iQ=bd;iR=hc}hc=iQ+1|0;c[z>>2]=hc;iN=a[iQ]|0;iO=hc;iP=iR}}while(0);a[m+(fG*3|0)+1|0]=iN;do{if(iO>>>0<iP>>>0){hc=iO+1|0;c[z>>2]=hc;iS=a[iO]|0;iT=hc}else{if((c[x>>2]|0)==0){iS=0;iT=iO;break}hc=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((hc|0)==0){c[x>>2]=0;fm=(c[bs>>2]|0)-1|0;c[z>>2]=fm;a[fm]=0;iU=c[z>>2]|0}else{c[z>>2]=bd;c[bs>>2]=e+40+hc;iU=bd}hc=iU+1|0;c[z>>2]=hc;iS=a[iU]|0;iT=hc}}while(0);a[m+(fG*3|0)+2|0]=iS;iV=iS&255|f_;do{if((c[v>>2]|0)==0){iW=iT;al=1819}else{if((cZ[c[hw>>2]&255](c[br>>2]|0)|0)==0){break}if((c[x>>2]|0)==0){al=1820;break L2356}iW=c[z>>2]|0;al=1819}}while(0);if((al|0)==1819){al=0;if(iW>>>0>=(c[bs>>2]|0)>>>0){al=1820;break}}if(iI<<24>>24!=8){al=1822;break}if((iD|0)==0){al=1824;break}else{f_=iV;fG=iC}}L2403:do{if((al|0)==1786){c[4668]=736;iX=0}else if((al|0)==1820){c[4668]=848;iX=0}else if((al|0)==1822){c[4668]=736;iX=0}else if((al|0)==1824){c[j>>2]=(iV>>>4&1)+3;if((hx|0)==0){iX=hy;break}fG=(iC|0)>0;f_=(hB|0)!=0;hc=o+3|0;fm=o+2|0;hd=o+1|0;he=n+3|0;g9=n+2|0;hs=n+1|0;ht=0;L2409:while(1){if(fG){hl=hy+(ag(ht,hC)|0)|0;hu=0;do{hv=d[m+(hu*3|0)+1|0]|0;do{if((hv|0)==0){if(!f_){break}hm=d[m+(hu*3|0)+2|0]|0;hp=hl;hq=0;while(1){if((e_(e,hm,hp)|0)==0){iX=0;break L2403}hr=hq+1|0;if((hr|0)<(hB|0)){hp=hp+4|0;hq=hr}else{break}}}else if((hv|0)==1){if(!f_){break}hq=m+(hu*3|0)+2|0;hp=hl;hm=hB;while(1){cu=c[z>>2]|0;do{if(cu>>>0<(c[bs>>2]|0)>>>0){hr=cu+1|0;c[z>>2]=hr;iY=a[cu]|0;iZ=hr}else{if((c[x>>2]|0)==0){iY=0;iZ=cu;break}hr=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((hr|0)==0){c[x>>2]=0;hn=(c[bs>>2]|0)-1|0;c[z>>2]=hn;a[hn]=0;i_=c[z>>2]|0}else{c[z>>2]=bd;c[bs>>2]=e+40+hr;i_=bd}hr=i_+1|0;c[z>>2]=hr;iY=a[i_]|0;iZ=hr}}while(0);do{if((c[v>>2]|0)==0){i$=iZ;al=1849}else{if((cZ[c[hw>>2]&255](c[br>>2]|0)|0)==0){break}if((c[x>>2]|0)==0){al=1850;break L2409}i$=c[z>>2]|0;al=1849}}while(0);if((al|0)==1849){al=0;if(i$>>>0>=(c[bs>>2]|0)>>>0){al=1850;break L2409}}cu=a[hq]|0;if((e_(e,cu&255,hD)|0)==0){iX=0;break L2403}hr=(iY&255|0)>(hm|0)?hm&255:iY;hn=hr&255;if(hr<<24>>24==0){i0=hp}else{hk=hp;ho=1;hg=cu;while(1){cu=hg&255;if((cu&128|0)!=0){a[hk]=a[hD]|0}if((cu&64|0)!=0){a[hk+1|0]=a[hs]|0}if((cu&32|0)!=0){a[hk+2|0]=a[g9]|0}if((cu&16|0)!=0){a[hk+3|0]=a[he]|0}if((ho|0)>=(hn|0)){break}hk=hk+4|0;ho=ho+1|0;hg=a[hq]|0}i0=hp+((hr&255)>>>0>1>>>0?hn<<2:4)|0}hg=hm-hn|0;if((hg|0)>0){hp=i0;hm=hg}else{break}}}else if((hv|0)==2){if(!f_){break}hm=m+(hu*3|0)+2|0;hp=hl;hq=hB;while(1){hg=c[z>>2]|0;do{if(hg>>>0<(c[bs>>2]|0)>>>0){ho=hg+1|0;c[z>>2]=ho;i1=d[hg]|0;i2=ho}else{if((c[x>>2]|0)==0){i1=0;i2=hg;break}ho=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((ho|0)==0){c[x>>2]=0;hk=(c[bs>>2]|0)-1|0;c[z>>2]=hk;a[hk]=0;i3=c[z>>2]|0}else{c[z>>2]=bd;c[bs>>2]=e+40+ho;i3=bd}ho=i3+1|0;c[z>>2]=ho;i1=d[i3]|0;i2=ho}}while(0);do{if((c[v>>2]|0)==0){i4=i2;al=1876}else{if((cZ[c[hw>>2]&255](c[br>>2]|0)|0)==0){break}if((c[x>>2]|0)==0){al=1877;break L2409}i4=c[z>>2]|0;al=1876}}while(0);if((al|0)==1876){al=0;if(i4>>>0>=(c[bs>>2]|0)>>>0){al=1877;break L2409}}do{if(i1>>>0>127>>>0){if((i1|0)==128){hg=c[z>>2]|0;hn=c[bs>>2]|0;do{if(hg>>>0<hn>>>0){hr=hg+1|0;c[z>>2]=hr;i5=d[hg]|0;i6=hr;i7=hn}else{if((c[x>>2]|0)==0){i5=0;i6=hg;i7=hn;break}hr=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((hr|0)==0){c[x>>2]=0;ho=(c[bs>>2]|0)-1|0;c[z>>2]=ho;a[ho]=0;i8=c[z>>2]|0;i9=c[bs>>2]|0}else{c[z>>2]=bd;ho=e+40+hr|0;c[bs>>2]=ho;i8=bd;i9=ho}ho=i8+1|0;c[z>>2]=ho;i5=d[i8]|0;i6=ho;i7=i9}}while(0);hn=i5<<8;do{if(i6>>>0<i7>>>0){c[z>>2]=i6+1;ja=d[i6]|0}else{if((c[x>>2]|0)==0){ja=0;break}hg=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((hg|0)==0){c[x>>2]=0;b1=(c[bs>>2]|0)-1|0;c[z>>2]=b1;a[b1]=0;jb=c[z>>2]|0}else{c[z>>2]=bd;c[bs>>2]=e+40+hg;jb=bd}c[z>>2]=jb+1;ja=d[jb]|0}}while(0);jc=ja|hn}else{jc=i1-127|0}if((jc|0)>(hq|0)){al=1897;break L2409}hg=a[hm]|0;if((e_(e,hg&255,eE)|0)==0){iX=0;break L2403}if((jc|0)>0){jd=hp;je=1;jf=hg}else{jg=jc;jh=hp;break}while(1){hg=jf&255;if((hg&128|0)!=0){a[jd]=a[eE]|0}if((hg&64|0)!=0){a[jd+1|0]=a[hd]|0}if((hg&32|0)!=0){a[jd+2|0]=a[fm]|0}if((hg&16|0)!=0){a[jd+3|0]=a[hc]|0}if((je|0)>=(jc|0)){break}jd=jd+4|0;je=je+1|0;jf=a[hm]|0}jg=jc;jh=hp+(jc<<2)|0}else{hn=i1+1|0;if((hn|0)>(hq|0)){al=1912;break L2409}hg=d[hm]|0;b1=hp;ho=0;while(1){if((e_(e,hg,b1)|0)==0){iX=0;break L2403}hr=ho+1|0;hk=b1+4|0;if((hr|0)<(hn|0)){b1=hk;ho=hr}else{jg=hn;jh=hk;break}}}}while(0);hn=hq-jg|0;if((hn|0)>0){hp=jh;hq=hn}else{break}}}else{al=1835;break L2409}}while(0);hu=hu+1|0;}while((hu|0)<(iC|0))}hu=ht+1|0;if((hu|0)<(hx|0)){ht=hu}else{iX=hy;break L2403}}if((al|0)==1835){c[4668]=736;iX=0;break}else if((al|0)==1850){c[4668]=848;iX=0;break}else if((al|0)==1877){c[4668]=848;iX=0;break}else if((al|0)==1897){c[4668]=848;iX=0;break}else if((al|0)==1912){c[4668]=848;iX=0;break}}}while(0);if((iX|0)==0){n0(hy);ji=0}else{ji=hy}c[f>>2]=hB;c[h>>2]=hx;if((k|0)==0){jj=c[j>>2]|0}else{jj=k}A=eZ(ji,4,jj,hB,hx)|0;i=l;return A|0}}while(0);jj=c[w>>2]|0;c[z>>2]=jj;ji=0;iX=jj;while(1){if((ji|0)==11){al=1934;break}jj=1640+ji|0;do{if(iX>>>0<(c[bs>>2]|0)>>>0){iC=iX+1|0;c[z>>2]=iC;jk=d[iX]|0;jl=iC}else{if((c[x>>2]|0)==0){jk=0;jl=iX;break}iC=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((iC|0)==0){c[x>>2]=0;jh=(c[bs>>2]|0)-1|0;c[z>>2]=jh;a[jh]=0;jm=c[z>>2]|0}else{c[z>>2]=bd;c[bs>>2]=e+40+iC;jm=bd}iC=jm+1|0;c[z>>2]=iC;jk=d[jm]|0;jl=iC}}while(0);if((jk|0)==(a[jj]|0)){ji=ji+1|0;iX=jl}else{break}}if((al|0)==1934){c[z>>2]=c[w>>2];jl=eL(e,f,h,j,k)|0;if((k|0)==0){jn=c[j>>2]|0}else{jn=k}iX=ag(c[h>>2]|0,c[f>>2]|0)|0;ji=n$(ag(jn,iX)|0)|0;if((ji|0)==0){n0(jl);c[4668]=3032;A=0;i=l;return A|0}jk=jn-1+(jn&1)|0;if((iX|0)>0){jm=(jk|0)>0;jo=+g[3562];jp=+g[3564];hx=0;do{if(jm){hB=ag(hx,jn)|0;hy=0;while(1){iC=hy+hB|0;jq=+X(+(jo*+g[jl+(iC<<2)>>2]),+jp)*255.0+.5;jr=jq<0.0?0.0:jq;a[ji+iC|0]=jr>255.0?-1:~~jr&255;iC=hy+1|0;if((iC|0)<(jk|0)){hy=iC}else{js=jk;break}}}else{js=0}if((js|0)<(jn|0)){hy=js+(ag(hx,jn)|0)|0;jr=+g[jl+(hy<<2)>>2]*255.0+.5;jq=jr<0.0?0.0:jr;a[ji+hy|0]=jq>255.0?-1:~~jq&255}hx=hx+1|0;}while((hx|0)<(iX|0))}n0(jl);A=ji;i=l;return A|0}ji=c[w>>2]|0;c[z>>2]=ji;jl=c[bs>>2]|0;do{if(ji>>>0<jl>>>0){iX=ji+1|0;c[z>>2]=iX;jt=iX;ju=jl}else{if((c[x>>2]|0)==0){jt=ji;ju=jl;break}iX=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((iX|0)==0){c[x>>2]=0;hx=(c[bs>>2]|0)-1|0;c[z>>2]=hx;a[hx]=0;jv=c[z>>2]|0;jw=c[bs>>2]|0}else{c[z>>2]=bd;hx=e+40+iX|0;c[bs>>2]=hx;jv=bd;jw=hx}hx=jv+1|0;c[z>>2]=hx;jt=hx;ju=jw}}while(0);do{if(jt>>>0<ju>>>0){jx=jt;al=1959}else{if((c[x>>2]|0)==0){jy=jt;jz=ju;al=1961;break}jw=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((jw|0)==0){c[x>>2]=0;jv=(c[bs>>2]|0)-1|0;c[z>>2]=jv;a[jv]=0;jx=c[z>>2]|0;al=1959;break}else{c[z>>2]=bd;c[bs>>2]=e+40+jw;jx=bd;al=1959;break}}}while(0);do{if((al|0)==1959){ju=jx+1|0;c[z>>2]=ju;if((d[jx]|0)>>>0>1>>>0){break}jy=ju;jz=c[bs>>2]|0;al=1961}}while(0);L2599:do{if((al|0)==1961){do{if(jy>>>0<jz>>>0){jx=jy+1|0;c[z>>2]=jx;jA=a[jy]|0;jB=jx}else{if((c[x>>2]|0)==0){jA=0;jB=jy;break}jx=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((jx|0)==0){c[x>>2]=0;ju=(c[bs>>2]|0)-1|0;c[z>>2]=ju;a[ju]=0;jC=c[z>>2]|0}else{c[z>>2]=bd;c[bs>>2]=e+40+jx;jC=bd}jx=jC+1|0;c[z>>2]=jx;jA=a[jC]|0;jB=jx}}while(0);if((jA-1&255)>>>0>1>>>0&jA<<24>>24!=3&jA<<24>>24!=9&jA<<24>>24!=10&jA<<24>>24!=11){break}jx=c[bs>>2]|0;do{if(jB>>>0<jx>>>0){ju=jB+1|0;c[z>>2]=ju;jD=ju;jE=jx}else{if((c[x>>2]|0)==0){jD=jB;jE=jx;break}ju=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((ju|0)==0){c[x>>2]=0;jt=(c[bs>>2]|0)-1|0;c[z>>2]=jt;a[jt]=0;jF=c[z>>2]|0;jG=c[bs>>2]|0}else{c[z>>2]=bd;jt=e+40+ju|0;c[bs>>2]=jt;jF=bd;jG=jt}jt=jF+1|0;c[z>>2]=jt;jD=jt;jE=jG}}while(0);do{if(jD>>>0<jE>>>0){jx=jD+1|0;c[z>>2]=jx;jH=jx;jI=jE}else{if((c[x>>2]|0)==0){jH=jD;jI=jE;break}jx=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((jx|0)==0){c[x>>2]=0;jt=(c[bs>>2]|0)-1|0;c[z>>2]=jt;a[jt]=0;jJ=c[z>>2]|0;jK=c[bs>>2]|0}else{c[z>>2]=bd;jt=e+40+jx|0;c[bs>>2]=jt;jJ=bd;jK=jt}jt=jJ+1|0;c[z>>2]=jt;jH=jt;jI=jK}}while(0);do{if(jH>>>0<jI>>>0){jt=jH+1|0;c[z>>2]=jt;jL=jt;jM=jI}else{if((c[x>>2]|0)==0){jL=jH;jM=jI;break}jt=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((jt|0)==0){c[x>>2]=0;jx=(c[bs>>2]|0)-1|0;c[z>>2]=jx;a[jx]=0;jN=c[z>>2]|0;jO=c[bs>>2]|0}else{c[z>>2]=bd;jx=e+40+jt|0;c[bs>>2]=jx;jN=bd;jO=jx}jx=jN+1|0;c[z>>2]=jx;jL=jx;jM=jO}}while(0);do{if(jL>>>0<jM>>>0){jx=jL+1|0;c[z>>2]=jx;jP=jx;jQ=jM}else{if((c[x>>2]|0)==0){jP=jL;jQ=jM;break}jx=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((jx|0)==0){c[x>>2]=0;jt=(c[bs>>2]|0)-1|0;c[z>>2]=jt;a[jt]=0;jR=c[z>>2]|0;jS=c[bs>>2]|0}else{c[z>>2]=bd;jt=e+40+jx|0;c[bs>>2]=jt;jR=bd;jS=jt}jt=jR+1|0;c[z>>2]=jt;jP=jt;jQ=jS}}while(0);do{if(jP>>>0<jQ>>>0){jt=jP+1|0;c[z>>2]=jt;jT=jt;jU=jQ}else{if((c[x>>2]|0)==0){jT=jP;jU=jQ;break}jt=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((jt|0)==0){c[x>>2]=0;jx=(c[bs>>2]|0)-1|0;c[z>>2]=jx;a[jx]=0;jV=c[z>>2]|0;jW=c[bs>>2]|0}else{c[z>>2]=bd;jx=e+40+jt|0;c[bs>>2]=jx;jV=bd;jW=jx}jx=jV+1|0;c[z>>2]=jx;jT=jx;jU=jW}}while(0);do{if(jT>>>0<jU>>>0){jx=jT+1|0;c[z>>2]=jx;jX=jx;jY=jU}else{if((c[x>>2]|0)==0){jX=jT;jY=jU;break}jx=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((jx|0)==0){c[x>>2]=0;jt=(c[bs>>2]|0)-1|0;c[z>>2]=jt;a[jt]=0;jZ=c[z>>2]|0;j_=c[bs>>2]|0}else{c[z>>2]=bd;jt=e+40+jx|0;c[bs>>2]=jt;jZ=bd;j_=jt}jt=jZ+1|0;c[z>>2]=jt;jX=jt;jY=j_}}while(0);do{if(jX>>>0<jY>>>0){jt=jX+1|0;c[z>>2]=jt;j$=jt;j0=jY}else{if((c[x>>2]|0)==0){j$=jX;j0=jY;break}jt=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((jt|0)==0){c[x>>2]=0;jx=(c[bs>>2]|0)-1|0;c[z>>2]=jx;a[jx]=0;j1=c[z>>2]|0;j2=c[bs>>2]|0}else{c[z>>2]=bd;jx=e+40+jt|0;c[bs>>2]=jx;j1=bd;j2=jx}jx=j1+1|0;c[z>>2]=jx;j$=jx;j0=j2}}while(0);do{if(j$>>>0<j0>>>0){jx=j$+1|0;c[z>>2]=jx;j3=jx;j4=j0}else{if((c[x>>2]|0)==0){j3=j$;j4=j0;break}jx=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((jx|0)==0){c[x>>2]=0;jt=(c[bs>>2]|0)-1|0;c[z>>2]=jt;a[jt]=0;j5=c[z>>2]|0;j6=c[bs>>2]|0}else{c[z>>2]=bd;jt=e+40+jx|0;c[bs>>2]=jt;j5=bd;j6=jt}jt=j5+1|0;c[z>>2]=jt;j3=jt;j4=j6}}while(0);do{if(j3>>>0<j4>>>0){jt=j3+1|0;c[z>>2]=jt;j7=jt;j8=j4}else{if((c[x>>2]|0)==0){j7=j3;j8=j4;break}jt=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((jt|0)==0){c[x>>2]=0;jx=(c[bs>>2]|0)-1|0;c[z>>2]=jx;a[jx]=0;j9=c[z>>2]|0;ka=c[bs>>2]|0}else{c[z>>2]=bd;jx=e+40+jt|0;c[bs>>2]=jx;j9=bd;ka=jx}jx=j9+1|0;c[z>>2]=jx;j7=jx;j8=ka}}while(0);do{if(j7>>>0<j8>>>0){jx=j7+1|0;c[z>>2]=jx;kb=d[j7]|0;kc=jx;kd=j8}else{if((c[x>>2]|0)==0){kb=0;kc=j7;kd=j8;break}jx=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((jx|0)==0){c[x>>2]=0;jt=(c[bs>>2]|0)-1|0;c[z>>2]=jt;a[jt]=0;ke=c[z>>2]|0;kf=c[bs>>2]|0}else{c[z>>2]=bd;jt=e+40+jx|0;c[bs>>2]=jt;ke=bd;kf=jt}jt=ke+1|0;c[z>>2]=jt;kb=d[ke]|0;kc=jt;kd=kf}}while(0);jt=kb<<8;do{if(kc>>>0<kd>>>0){jx=kc+1|0;c[z>>2]=jx;kg=d[kc]|0;kh=jx}else{if((c[x>>2]|0)==0){kg=0;kh=kc;break}jx=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((jx|0)==0){c[x>>2]=0;ju=(c[bs>>2]|0)-1|0;c[z>>2]=ju;a[ju]=0;ki=c[z>>2]|0}else{c[z>>2]=bd;c[bs>>2]=e+40+jx;ki=bd}jx=ki+1|0;c[z>>2]=jx;kg=d[ki]|0;kh=jx}}while(0);if((kg|jt|0)==0){break}jx=c[bs>>2]|0;do{if(kh>>>0<jx>>>0){ju=kh+1|0;c[z>>2]=ju;kj=d[kh]|0;kk=ju;kl=jx}else{if((c[x>>2]|0)==0){kj=0;kk=kh;kl=jx;break}ju=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((ju|0)==0){c[x>>2]=0;jw=(c[bs>>2]|0)-1|0;c[z>>2]=jw;a[jw]=0;km=c[z>>2]|0;kn=c[bs>>2]|0}else{c[z>>2]=bd;jw=e+40+ju|0;c[bs>>2]=jw;km=bd;kn=jw}jw=km+1|0;c[z>>2]=jw;kj=d[km]|0;kk=jw;kl=kn}}while(0);jx=kj<<8;do{if(kk>>>0<kl>>>0){jt=kk+1|0;c[z>>2]=jt;ko=d[kk]|0;kp=jt}else{if((c[x>>2]|0)==0){ko=0;kp=kk;break}jt=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((jt|0)==0){c[x>>2]=0;jw=(c[bs>>2]|0)-1|0;c[z>>2]=jw;a[jw]=0;kq=c[z>>2]|0}else{c[z>>2]=bd;c[bs>>2]=e+40+jt;kq=bd}jt=kq+1|0;c[z>>2]=jt;ko=d[kq]|0;kp=jt}}while(0);if((ko|jx|0)==0){break}do{if(kp>>>0<(c[bs>>2]|0)>>>0){kr=kp}else{if((c[x>>2]|0)==0){break L2599}jt=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((jt|0)==0){c[x>>2]=0;jw=(c[bs>>2]|0)-1|0;c[z>>2]=jw;a[jw]=0;kr=c[z>>2]|0;break}else{c[z>>2]=bd;c[bs>>2]=e+40+jt;kr=bd;break}}}while(0);c[z>>2]=kr+1;jx=d[kr]|0;if(!((jx|0)==32|(jx|0)==24|(jx|0)==16|(jx|0)==8)){break}jx=c[w>>2]|0;c[z>>2]=jx;jt=n|0;jw=c[bs>>2]|0;do{if(jx>>>0<jw>>>0){ju=jx+1|0;c[z>>2]=ju;ks=a[jx]|0;kt=ju;ku=jw}else{if((c[x>>2]|0)==0){ks=0;kt=jx;ku=jw;break}ju=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((ju|0)==0){c[x>>2]=0;jv=(c[bs>>2]|0)-1|0;c[z>>2]=jv;a[jv]=0;kv=c[z>>2]|0;kw=c[bs>>2]|0}else{c[z>>2]=bd;jv=e+40+ju|0;c[bs>>2]=jv;kv=bd;kw=jv}jv=kv+1|0;c[z>>2]=jv;ks=a[kv]|0;kt=jv;ku=kw}}while(0);jw=ks&255;do{if(kt>>>0<ku>>>0){jx=kt+1|0;c[z>>2]=jx;kx=a[kt]|0;ky=jx;kz=ku}else{if((c[x>>2]|0)==0){kx=0;ky=kt;kz=ku;break}jx=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((jx|0)==0){c[x>>2]=0;jv=(c[bs>>2]|0)-1|0;c[z>>2]=jv;a[jv]=0;kA=c[z>>2]|0;kB=c[bs>>2]|0}else{c[z>>2]=bd;jv=e+40+jx|0;c[bs>>2]=jv;kA=bd;kB=jv}jv=kA+1|0;c[z>>2]=jv;kx=a[kA]|0;ky=jv;kz=kB}}while(0);do{if(ky>>>0<kz>>>0){jv=ky+1|0;c[z>>2]=jv;kC=a[ky]|0;kD=jv;kE=kz}else{if((c[x>>2]|0)==0){kC=0;kD=ky;kE=kz;break}jv=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((jv|0)==0){c[x>>2]=0;jx=(c[bs>>2]|0)-1|0;c[z>>2]=jx;a[jx]=0;kF=c[z>>2]|0;kG=c[bs>>2]|0}else{c[z>>2]=bd;jx=e+40+jv|0;c[bs>>2]=jx;kF=bd;kG=jx}jx=kF+1|0;c[z>>2]=jx;kC=a[kF]|0;kD=jx;kE=kG}}while(0);jx=kC&255;do{if(kD>>>0<kE>>>0){jv=kD+1|0;c[z>>2]=jv;kH=d[kD]|0;kI=jv;kJ=kE}else{if((c[x>>2]|0)==0){kH=0;kI=kD;kJ=kE;break}jv=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((jv|0)==0){c[x>>2]=0;ju=(c[bs>>2]|0)-1|0;c[z>>2]=ju;a[ju]=0;kK=c[z>>2]|0;kL=c[bs>>2]|0}else{c[z>>2]=bd;ju=e+40+jv|0;c[bs>>2]=ju;kK=bd;kL=ju}ju=kK+1|0;c[z>>2]=ju;kH=d[kK]|0;kI=ju;kJ=kL}}while(0);do{if(kI>>>0<kJ>>>0){ju=kI+1|0;c[z>>2]=ju;kM=d[kI]|0;kN=ju;kO=kJ}else{if((c[x>>2]|0)==0){kM=0;kN=kI;kO=kJ;break}ju=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((ju|0)==0){c[x>>2]=0;jv=(c[bs>>2]|0)-1|0;c[z>>2]=jv;a[jv]=0;kP=c[z>>2]|0;kQ=c[bs>>2]|0}else{c[z>>2]=bd;jv=e+40+ju|0;c[bs>>2]=jv;kP=bd;kQ=jv}jv=kP+1|0;c[z>>2]=jv;kM=d[kP]|0;kN=jv;kO=kQ}}while(0);jv=kM<<8|kH;do{if(kN>>>0<kO>>>0){ju=kN+1|0;c[z>>2]=ju;kR=d[kN]|0;kS=ju;kT=kO}else{if((c[x>>2]|0)==0){kR=0;kS=kN;kT=kO;break}ju=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((ju|0)==0){c[x>>2]=0;jl=(c[bs>>2]|0)-1|0;c[z>>2]=jl;a[jl]=0;kU=c[z>>2]|0;kV=c[bs>>2]|0}else{c[z>>2]=bd;jl=e+40+ju|0;c[bs>>2]=jl;kU=bd;kV=jl}jl=kU+1|0;c[z>>2]=jl;kR=d[kU]|0;kS=jl;kT=kV}}while(0);do{if(kS>>>0<kT>>>0){jl=kS+1|0;c[z>>2]=jl;kW=d[kS]|0;kX=jl;kY=kT}else{if((c[x>>2]|0)==0){kW=0;kX=kS;kY=kT;break}jl=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((jl|0)==0){c[x>>2]=0;ju=(c[bs>>2]|0)-1|0;c[z>>2]=ju;a[ju]=0;kZ=c[z>>2]|0;k_=c[bs>>2]|0}else{c[z>>2]=bd;ju=e+40+jl|0;c[bs>>2]=ju;kZ=bd;k_=ju}ju=kZ+1|0;c[z>>2]=ju;kW=d[kZ]|0;kX=ju;kY=k_}}while(0);ju=kW<<8|kR;do{if(kX>>>0<kY>>>0){jl=kX+1|0;c[z>>2]=jl;k$=a[kX]|0;k0=jl;k1=kY}else{if((c[x>>2]|0)==0){k$=0;k0=kX;k1=kY;break}jl=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((jl|0)==0){c[x>>2]=0;ji=(c[bs>>2]|0)-1|0;c[z>>2]=ji;a[ji]=0;k2=c[z>>2]|0;k3=c[bs>>2]|0}else{c[z>>2]=bd;ji=e+40+jl|0;c[bs>>2]=ji;k2=bd;k3=ji}ji=k2+1|0;c[z>>2]=ji;k$=a[k2]|0;k0=ji;k1=k3}}while(0);ji=k$&255;do{if(k0>>>0<k1>>>0){jl=k0+1|0;c[z>>2]=jl;k4=jl;k5=k1}else{if((c[x>>2]|0)==0){k4=k0;k5=k1;break}jl=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((jl|0)==0){c[x>>2]=0;hx=(c[bs>>2]|0)-1|0;c[z>>2]=hx;a[hx]=0;k6=c[z>>2]|0;k7=c[bs>>2]|0}else{c[z>>2]=bd;hx=e+40+jl|0;c[bs>>2]=hx;k6=bd;k7=hx}hx=k6+1|0;c[z>>2]=hx;k4=hx;k5=k7}}while(0);do{if(k4>>>0<k5>>>0){hx=k4+1|0;c[z>>2]=hx;k8=hx;k9=k5}else{if((c[x>>2]|0)==0){k8=k4;k9=k5;break}hx=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((hx|0)==0){c[x>>2]=0;jl=(c[bs>>2]|0)-1|0;c[z>>2]=jl;a[jl]=0;la=c[z>>2]|0;lb=c[bs>>2]|0}else{c[z>>2]=bd;jl=e+40+hx|0;c[bs>>2]=jl;la=bd;lb=jl}jl=la+1|0;c[z>>2]=jl;k8=jl;k9=lb}}while(0);do{if(k8>>>0<k9>>>0){jl=k8+1|0;c[z>>2]=jl;lc=jl;ld=k9}else{if((c[x>>2]|0)==0){lc=k8;ld=k9;break}jl=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((jl|0)==0){c[x>>2]=0;hx=(c[bs>>2]|0)-1|0;c[z>>2]=hx;a[hx]=0;le=c[z>>2]|0;lf=c[bs>>2]|0}else{c[z>>2]=bd;hx=e+40+jl|0;c[bs>>2]=hx;le=bd;lf=hx}hx=le+1|0;c[z>>2]=hx;lc=hx;ld=lf}}while(0);do{if(lc>>>0<ld>>>0){hx=lc+1|0;c[z>>2]=hx;lg=hx;lh=ld}else{if((c[x>>2]|0)==0){lg=lc;lh=ld;break}hx=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((hx|0)==0){c[x>>2]=0;jl=(c[bs>>2]|0)-1|0;c[z>>2]=jl;a[jl]=0;li=c[z>>2]|0;lj=c[bs>>2]|0}else{c[z>>2]=bd;jl=e+40+hx|0;c[bs>>2]=jl;li=bd;lj=jl}jl=li+1|0;c[z>>2]=jl;lg=jl;lh=lj}}while(0);do{if(lg>>>0<lh>>>0){jl=lg+1|0;c[z>>2]=jl;lk=d[lg]|0;ll=jl;lm=lh}else{if((c[x>>2]|0)==0){lk=0;ll=lg;lm=lh;break}jl=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((jl|0)==0){c[x>>2]=0;hx=(c[bs>>2]|0)-1|0;c[z>>2]=hx;a[hx]=0;ln=c[z>>2]|0;lo=c[bs>>2]|0}else{c[z>>2]=bd;hx=e+40+jl|0;c[bs>>2]=hx;ln=bd;lo=hx}hx=ln+1|0;c[z>>2]=hx;lk=d[ln]|0;ll=hx;lm=lo}}while(0);do{if(ll>>>0<lm>>>0){hx=ll+1|0;c[z>>2]=hx;lp=d[ll]|0;lq=hx;lr=lm}else{if((c[x>>2]|0)==0){lp=0;lq=ll;lr=lm;break}hx=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((hx|0)==0){c[x>>2]=0;jl=(c[bs>>2]|0)-1|0;c[z>>2]=jl;a[jl]=0;ls=c[z>>2]|0;lt=c[bs>>2]|0}else{c[z>>2]=bd;jl=e+40+hx|0;c[bs>>2]=jl;ls=bd;lt=jl}jl=ls+1|0;c[z>>2]=jl;lp=d[ls]|0;lq=jl;lr=lt}}while(0);jl=lp<<8|lk;do{if(lq>>>0<lr>>>0){hx=lq+1|0;c[z>>2]=hx;lu=d[lq]|0;lv=hx;lw=lr}else{if((c[x>>2]|0)==0){lu=0;lv=lq;lw=lr;break}hx=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((hx|0)==0){c[x>>2]=0;iX=(c[bs>>2]|0)-1|0;c[z>>2]=iX;a[iX]=0;lx=c[z>>2]|0;ly=c[bs>>2]|0}else{c[z>>2]=bd;iX=e+40+hx|0;c[bs>>2]=iX;lx=bd;ly=iX}iX=lx+1|0;c[z>>2]=iX;lu=d[lx]|0;lv=iX;lw=ly}}while(0);do{if(lv>>>0<lw>>>0){iX=lv+1|0;c[z>>2]=iX;lz=d[lv]|0;lA=iX;lB=lw}else{if((c[x>>2]|0)==0){lz=0;lA=lv;lB=lw;break}iX=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((iX|0)==0){c[x>>2]=0;hx=(c[bs>>2]|0)-1|0;c[z>>2]=hx;a[hx]=0;lC=c[z>>2]|0;lD=c[bs>>2]|0}else{c[z>>2]=bd;hx=e+40+iX|0;c[bs>>2]=hx;lC=bd;lD=hx}hx=lC+1|0;c[z>>2]=hx;lz=d[lC]|0;lA=hx;lB=lD}}while(0);hx=lz<<8|lu;do{if(lA>>>0<lB>>>0){iX=lA+1|0;c[z>>2]=iX;lE=a[lA]|0;lF=iX;lG=lB}else{if((c[x>>2]|0)==0){lE=0;lF=lA;lG=lB;break}iX=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((iX|0)==0){c[x>>2]=0;jn=(c[bs>>2]|0)-1|0;c[z>>2]=jn;a[jn]=0;lH=c[z>>2]|0;lI=c[bs>>2]|0}else{c[z>>2]=bd;jn=e+40+iX|0;c[bs>>2]=jn;lH=bd;lI=jn}jn=lH+1|0;c[z>>2]=jn;lE=a[lH]|0;lF=jn;lG=lI}}while(0);jn=lE&255;do{if(lF>>>0<lG>>>0){c[z>>2]=lF+1;lJ=a[lF]|0}else{if((c[x>>2]|0)==0){lJ=0;break}iX=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((iX|0)==0){c[x>>2]=0;js=(c[bs>>2]|0)-1|0;c[z>>2]=js;a[js]=0;lK=c[z>>2]|0}else{c[z>>2]=bd;c[bs>>2]=e+40+iX;lK=bd}c[z>>2]=lK+1;lJ=a[lK]|0}}while(0);iX=(kC&255)>>>0>7>>>0;if((jl|0)==0|(hx|0)==0){A=0;i=l;return A|0}if(((iX?jx-8|0:jx)-1|0)>>>0>2>>>0){A=0;i=l;return A|0}if(!((lE<<24>>24|0)==32|(lE<<24>>24|0)==24|(lE<<24>>24|0)==16|(lE<<24>>24|0)==8)){A=0;i=l;return A|0}js=kx<<24>>24!=0;jk=js?ji:jn;c[f>>2]=jl;c[h>>2]=hx;jm=jk>>>3;hy=(k-1|0)>>>0>3>>>0?jm:k;c[j>>2]=jm;hB=ag(hx,jl)|0;jj=n$(ag(hy,hB)|0)|0;if((jj|0)==0){c[4668]=3032;A=0;i=l;return A|0}do{if((c[v>>2]|0)==0){lL=c[z>>2]|0;al=2203}else{iC=c[bs>>2]|0;jh=c[z>>2]|0;jg=iC-jh|0;if((jg|0)>=(jw|0)){lL=jh;al=2203;break}c[z>>2]=iC;cV[c[e+20>>2]&255](c[br>>2]|0,jw-jg|0)}}while(0);if((al|0)==2203){c[z>>2]=lL+jw}L2920:do{if(js){do{if((c[v>>2]|0)==0){lM=c[z>>2]|0;al=2209}else{jn=c[bs>>2]|0;jx=c[z>>2]|0;jg=jn-jx|0;if((jg|0)>=(jv|0)){lM=jx;al=2209;break}c[z>>2]=jn;cV[c[e+20>>2]&255](c[br>>2]|0,jv-jg|0)}}while(0);if((al|0)==2209){c[z>>2]=lM+jv}jg=(ag(ji,ju)|0)>>>3;jn=n$(jg)|0;if((jn|0)==0){c[4668]=3032;A=0;i=l;return A|0}jx=c[v>>2]|0;do{if((jx|0)==0){lN=c[z>>2]|0;lO=c[bs>>2]|0;al=2215}else{iC=c[bs>>2]|0;jh=c[z>>2]|0;i1=iC-jh|0;if((i1|0)>=(jg|0)){lN=jh;lO=iC;al=2215;break}of(jn|0,jh|0,i1)|0;jh=jg-i1|0;iC=(c_[jx&63](c[br>>2]|0,jn+i1|0,jh)|0)==(jh|0);c[z>>2]=c[bs>>2];if(iC){lP=jn;break L2920}}}while(0);do{if((al|0)==2215){jx=lN+jg|0;if(jx>>>0>lO>>>0){break}of(jn|0,lN|0,jg)|0;c[z>>2]=jx;lP=jn;break L2920}}while(0);n0(jj);n0(jn);c[4668]=880;A=0;i=l;return A|0}else{lP=0}}while(0);if((hB|0)!=0){ji=(jk|0)==0;jv=n+1|0;jw=n+2|0;jg=n+3|0;jx=0;iC=0;jh=0;i1=0;jc=0;jf=0;je=0;jd=1;while(1){do{if(iX){if((jf|0)!=0){if((jd|0)==0&(je|0)!=0){lQ=jc;lR=i1;lS=jh;lT=iC;lU=jf;lV=je;break}else{lW=jf;lX=je;al=2232;break}}ja=c[z>>2]|0;do{if(ja>>>0<(c[bs>>2]|0)>>>0){c[z>>2]=ja+1;lY=a[ja]|0}else{if((c[x>>2]|0)==0){lY=0;break}jb=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((jb|0)==0){c[x>>2]=0;i6=(c[bs>>2]|0)-1|0;c[z>>2]=i6;a[i6]=0;lZ=c[z>>2]|0}else{c[z>>2]=bd;c[bs>>2]=e+40+jb;lZ=bd}c[z>>2]=lZ+1;lY=a[lZ]|0}}while(0);ja=lY&255;lW=(ja&127)+1|0;lX=ja>>>7;al=2232}else{lW=jf;lX=je;al=2232}}while(0);do{if((al|0)==2232){al=0;if(js){jn=c[z>>2]|0;do{if(jn>>>0<(c[bs>>2]|0)>>>0){c[z>>2]=jn+1;l_=a[jn]|0}else{if((c[x>>2]|0)==0){l_=0;break}ja=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((ja|0)==0){c[x>>2]=0;jb=(c[bs>>2]|0)-1|0;c[z>>2]=jb;a[jb]=0;l$=c[z>>2]|0}else{c[z>>2]=bd;c[bs>>2]=e+40+ja;l$=bd}c[z>>2]=l$+1;l_=a[l$]|0}}while(0);jn=l_&255;ja=ag(jn>>>0<ju>>>0?jn:0,jm)|0;if(ji){lQ=jc;lR=i1;lS=jh;lT=iC;lU=lW;lV=lX;break}else{l0=0}do{a[n+l0|0]=a[lP+(l0+ja)|0]|0;l0=l0+1|0;}while((l0<<3|0)<(jk|0))}else{if(ji){lQ=jc;lR=i1;lS=jh;lT=iC;lU=lW;lV=lX;break}ja=0;jn=c[z>>2]|0;while(1){do{if(jn>>>0<(c[bs>>2]|0)>>>0){jb=jn+1|0;c[z>>2]=jb;l1=a[jn]|0;l2=jb}else{if((c[x>>2]|0)==0){l1=0;l2=jn;break}jb=c_[c[v>>2]&63](c[br>>2]|0,bd,c[bh>>2]|0)|0;if((jb|0)==0){c[x>>2]=0;i6=(c[bs>>2]|0)-1|0;c[z>>2]=i6;a[i6]=0;l3=c[z>>2]|0}else{c[z>>2]=bd;c[bs>>2]=e+40+jb;l3=bd}jb=l3+1|0;c[z>>2]=jb;l1=a[l3]|0;l2=jb}}while(0);a[n+ja|0]=l1;jb=ja+1|0;if((jb<<3|0)<(jk|0)){ja=jb;jn=l2}else{break}}}if((jk|0)==8){jn=a[jt]|0;lQ=jn;lR=jn;lS=jn;lT=-1;lU=lW;lV=lX;break}else if((jk|0)==16){jn=a[jt]|0;lQ=jn;lR=jn;lS=jn;lT=a[jv]|0;lU=lW;lV=lX;break}else if((jk|0)==24){lQ=a[jw]|0;lR=a[jv]|0;lS=a[jt]|0;lT=-1;lU=lW;lV=lX;break}else if((jk|0)==32){lQ=a[jw]|0;lR=a[jv]|0;lS=a[jt]|0;lT=a[jg]|0;lU=lW;lV=lX;break}else{lQ=jc;lR=i1;lS=jh;lT=iC;lU=lW;lV=lX;break}}}while(0);if((hy|0)==1){a[jj+jx|0]=(((lR&255)*150|0)+((lS&255)*29|0)+((lQ&255)*77|0)|0)>>>8&255}else if((hy|0)==2){jn=jx<<1;a[jj+jn|0]=(((lR&255)*150|0)+((lS&255)*29|0)+((lQ&255)*77|0)|0)>>>8&255;a[jj+(jn|1)|0]=lT}else if((hy|0)==3){jn=jx*3|0;a[jj+jn|0]=lQ;a[jj+(jn+1)|0]=lR;a[jj+(jn+2)|0]=lS}else if((hy|0)==4){jn=jx<<2;a[jj+jn|0]=lQ;a[jj+(jn|1)|0]=lR;a[jj+(jn|2)|0]=lS;a[jj+(jn|3)|0]=lT}jn=jx+1|0;if((jn|0)<(hB|0)){jx=jn;iC=lT;jh=lS;i1=lR;jc=lQ;jf=lU-1|0;je=lV;jd=0}else{break}}}if((lJ&32)==0){jd=ag(hy,jl)|0;je=hx-1|0;jf=(jd|0)>0;jc=0;do{if(jf){i1=jd;jh=ag(jc,jd)|0;iC=ag(je-jc|0,jd)|0;while(1){jx=jj+jh|0;hB=a[jx]|0;jg=jj+iC|0;a[jx]=a[jg]|0;a[jg]=hB;hB=i1-1|0;if((hB|0)>0){i1=hB;jh=jh+1|0;iC=iC+1|0}else{break}}}jc=jc+1|0;}while((jc<<1|0)<(hx|0))}if((lP|0)==0){A=jj;i=l;return A|0}n0(lP);A=jj;i=l;return A|0}}while(0);c[z>>2]=c[w>>2];c[4668]=2936;A=0;i=l;return A|0}function eL(b,e,f,h,j){b=b|0;e=e|0;f=f|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0.0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0;k=i;i=i+1040|0;l=k+1024|0;m=k+1032|0;n=k|0;o=m;if((a8(eP(b,n)|0,2320)|0)!=0){c[4668]=1784;p=0;i=k;return p|0}q=eP(b,n)|0;c[l>>2]=q;do{if((a[q]|0)!=0){r=0;s=q;do{t=(a8(s|0,2104)|0)==0;r=t?1:r;s=eP(b,n)|0;c[l>>2]=s;}while((a[s]|0)!=0);if((r|0)==0){break}s=eP(b,n)|0;c[l>>2]=s;if((a9(s|0,1632,3)|0)!=0){c[4668]=1720;p=0;i=k;return p|0}t=s+3|0;c[l>>2]=t;s=aR(t|0,l|0,10)|0;t=c[l>>2]|0;if((a[t]|0)==32){u=t;do{u=u+1|0;}while((a[u]|0)==32);c[l>>2]=u;v=u}else{v=t}if((a9(v|0,1536,3)|0)!=0){c[4668]=1720;p=0;i=k;return p|0}r=v+3|0;c[l>>2]=r;w=aR(r|0,0,10)|0;c[e>>2]=w;c[f>>2]=s;c[h>>2]=3;r=(j|0)==0?3:j;x=n$(ag(ag(r<<2,s)|0,w)|0)|0;y=x;L3042:do{if((w-8|0)>>>0>32759>>>0){z=0;A=2325}else{L3044:do{if((s|0)>0){B=b+168|0;C=b+172|0;D=w<<2;E=(w|0)>0;F=b+32|0;G=b+16|0;H=b+28|0;I=b+40|0;J=b+36|0;K=(r|0)<3;L=0;M=0;while(1){N=c[B>>2]|0;O=c[C>>2]|0;do{if(N>>>0<O>>>0){P=N+1|0;c[B>>2]=P;Q=d[N]|0;R=P;S=O}else{if((c[F>>2]|0)==0){Q=0;R=N;S=O;break}P=c_[c[G>>2]&63](c[H>>2]|0,I,c[J>>2]|0)|0;if((P|0)==0){c[F>>2]=0;T=(c[C>>2]|0)-1|0;c[B>>2]=T;a[T]=0;U=c[B>>2]|0;V=c[C>>2]|0}else{c[B>>2]=I;T=b+40+P|0;c[C>>2]=T;U=I;V=T}T=U+1|0;c[B>>2]=T;Q=d[U]|0;R=T;S=V}}while(0);do{if(R>>>0<S>>>0){O=R+1|0;c[B>>2]=O;W=d[R]|0;X=O;Y=S}else{if((c[F>>2]|0)==0){W=0;X=R;Y=S;break}O=c_[c[G>>2]&63](c[H>>2]|0,I,c[J>>2]|0)|0;if((O|0)==0){c[F>>2]=0;N=(c[C>>2]|0)-1|0;c[B>>2]=N;a[N]=0;Z=c[B>>2]|0;_=c[C>>2]|0}else{c[B>>2]=I;N=b+40+O|0;c[C>>2]=N;Z=I;_=N}N=Z+1|0;c[B>>2]=N;W=d[Z]|0;X=N;Y=_}}while(0);do{if(X>>>0<Y>>>0){N=X+1|0;c[B>>2]=N;$=d[X]|0;aa=N}else{if((c[F>>2]|0)==0){$=0;aa=X;break}N=c_[c[G>>2]&63](c[H>>2]|0,I,c[J>>2]|0)|0;if((N|0)==0){c[F>>2]=0;O=(c[C>>2]|0)-1|0;c[B>>2]=O;a[O]=0;ab=c[B>>2]|0}else{c[B>>2]=I;c[C>>2]=b+40+N;ab=I}N=ab+1|0;c[B>>2]=N;$=d[ab]|0;aa=N}}while(0);if(!((Q|0)==2&(W|0)==2)){ac=Q;ad=W;break}if(($&128|0)!=0){ac=2;ad=2;break}N=$<<8;do{if(aa>>>0<(c[C>>2]|0)>>>0){c[B>>2]=aa+1;ae=d[aa]|0}else{if((c[F>>2]|0)==0){ae=0;break}O=c_[c[G>>2]&63](c[H>>2]|0,I,c[J>>2]|0)|0;if((O|0)==0){c[F>>2]=0;T=(c[C>>2]|0)-1|0;c[B>>2]=T;a[T]=0;af=c[B>>2]|0}else{c[B>>2]=I;c[C>>2]=b+40+O;af=I}c[B>>2]=af+1;ae=d[af]|0}}while(0);if((ae|N|0)!=(w|0)){A=2397;break}if((L|0)==0){ah=n$(D)|0}else{ah=L}O=0;do{if(E){T=0;while(1){P=c[B>>2]|0;do{if(P>>>0<(c[C>>2]|0)>>>0){ai=P;A=2412}else{if((c[F>>2]|0)==0){aj=T;break}ak=c_[c[G>>2]&63](c[H>>2]|0,I,c[J>>2]|0)|0;if((ak|0)==0){c[F>>2]=0;al=(c[C>>2]|0)-1|0;c[B>>2]=al;a[al]=0;ai=c[B>>2]|0;A=2412;break}else{c[B>>2]=I;c[C>>2]=b+40+ak;ai=I;A=2412;break}}}while(0);L3101:do{if((A|0)==2412){A=0;P=ai+1|0;c[B>>2]=P;ak=a[ai]|0;al=ak&255;if((ak&255)>>>0>128>>>0){do{if(P>>>0<(c[C>>2]|0)>>>0){c[B>>2]=ai+2;am=a[P]|0}else{if((c[F>>2]|0)==0){am=0;break}an=c_[c[G>>2]&63](c[H>>2]|0,I,c[J>>2]|0)|0;if((an|0)==0){c[F>>2]=0;ao=(c[C>>2]|0)-1|0;c[B>>2]=ao;a[ao]=0;ap=c[B>>2]|0}else{c[B>>2]=I;c[C>>2]=b+40+an;ap=I}c[B>>2]=ap+1;if(ak<<24>>24==-128){aj=T;break L3101}else{am=a[ap]|0}}}while(0);an=(ak^-128)&255;ao=an>>>0>1>>>0;aq=T;ar=0;while(1){a[ah+((aq<<2)+O)|0]=am;as=ar+1|0;if((as|0)<(an|0)){aq=aq+1|0;ar=as}else{break}}aj=(ao?an:1)+T|0;break}if(ak<<24>>24==0){aj=T;break}ar=al>>>0>1>>>0;aq=T;as=1;at=P;while(1){do{if(at>>>0<(c[C>>2]|0)>>>0){c[B>>2]=at+1;au=a[at]|0}else{if((c[F>>2]|0)==0){au=0;break}av=c_[c[G>>2]&63](c[H>>2]|0,I,c[J>>2]|0)|0;if((av|0)==0){c[F>>2]=0;aw=(c[C>>2]|0)-1|0;c[B>>2]=aw;a[aw]=0;ax=c[B>>2]|0}else{c[B>>2]=I;c[C>>2]=b+40+av;ax=I}c[B>>2]=ax+1;au=a[ax]|0}}while(0);a[ah+((aq<<2)+O)|0]=au;if((as|0)>=(al|0)){break}aq=aq+1|0;as=as+1|0;at=c[B>>2]|0}aj=(ar?al:1)+T|0}}while(0);if((aj|0)<(w|0)){T=aj}else{break}}}O=O+1|0;}while((O|0)<4);if(E){O=ag(M,w)|0;N=0;do{T=ag(N+O|0,r)|0;at=y+(T<<2)|0;as=N<<2;aq=a[ah+(as|3)|0]|0;do{if(aq<<24>>24==0){if((r|0)==4){g[y+(T+3<<2)>>2]=1.0;A=2443}else if((r|0)==3){A=2443}else if((r|0)==2){g[y+(T+1<<2)>>2]=1.0;A=2445}else if((r|0)==1){A=2445}else{break}if((A|0)==2443){A=0;g[y+(T+2<<2)>>2]=0.0;g[y+(T+1<<2)>>2]=0.0;g[at>>2]=0.0;break}else if((A|0)==2445){A=0;g[at>>2]=0.0;break}}else{ay=+bM(+1.0,(aq&255)-136|0);P=d[ah+as|0]|0;if(K){g[at>>2]=ay*+((d[ah+(as|1)|0]|0)+P+(d[ah+(as|2)|0]|0)|0)/3.0}else{g[at>>2]=ay*+(P|0);g[y+(T+1<<2)>>2]=ay*+(d[ah+(as|1)|0]|0);g[y+(T+2<<2)>>2]=ay*+(d[ah+(as|2)|0]|0)}if((r|0)==2){g[y+(T+1<<2)>>2]=1.0;break}else if((r|0)==4){g[y+(T+3<<2)>>2]=1.0;break}else{break}}}while(0);N=N+1|0;}while((N|0)<(w|0))}N=M+1|0;if((N|0)<(s|0)){L=ah;M=N}else{az=ah;break L3044}}if((A|0)==2397){n0(x);n0(L);c[4668]=1688;p=0;i=k;return p|0}do{if(aa>>>0<(c[C>>2]|0)>>>0){aA=aa;A=2376}else{if((c[F>>2]|0)==0){A=2383;break}M=c_[c[G>>2]&63](c[H>>2]|0,I,c[J>>2]|0)|0;if((M|0)==0){c[F>>2]=0;E=(c[C>>2]|0)-1|0;c[B>>2]=E;a[E]=0;aA=c[B>>2]|0;A=2376;break}else{c[B>>2]=I;c[C>>2]=b+40+M;aA=I;A=2376;break}}}while(0);do{if((A|0)==2376){c[B>>2]=aA+1;I=a[aA]|0;if(I<<24>>24==0){A=2383;break}ay=+bM(+1.0,(I&255)-136|0);if(K){g[y>>2]=+(ad+$+ac|0)*ay/3.0}else{g[y>>2]=+(ac|0)*ay;g[x+4>>2]=+(ad|0)*ay;g[x+8>>2]=+($|0)*ay}if((r|0)==4){g[x+12>>2]=1.0;break}else if((r|0)==2){g[x+4>>2]=1.0;break}else{break}}}while(0);do{if((A|0)==2383){if((r|0)==4){g[x+12>>2]=1.0;A=2385}else if((r|0)==3){A=2385}else if((r|0)==2){g[x+4>>2]=1.0;A=2387}else if((r|0)==1){A=2387}else{break}if((A|0)==2385){g[x+8>>2]=0.0;g[x+4>>2]=0.0;g[y>>2]=0.0;break}else if((A|0)==2387){g[y>>2]=0.0;break}}}while(0);n0(L);aB=0;aC=1;aD=G;A=2328;break L3042}else{az=0}}while(0);n0(az);p=y;i=k;return p|0}}while(0);while(1){if((A|0)==2328){A=0;x=c[aD>>2]|0;do{if((x|0)==0){aE=c[b+168>>2]|0;aF=c[b+172>>2]|0;A=2332}else{t=b+172|0;u=c[t>>2]|0;K=b+168|0;B=c[K>>2]|0;I=u-B|0;if((I|0)>=4){aE=B;aF=u;A=2332;break}of(o|0,B|0,I)|0;B=c[b+28>>2]|0;u=o+I|0;C=4-I|0;c_[x&63](B,u,C)|0;c[K>>2]=c[t>>2]}}while(0);do{if((A|0)==2332){A=0;x=aE+4|0;if(x>>>0>aF>>>0){break}t=aE;c[m>>2]=d[t]|d[t+1|0]<<8|d[t+2|0]<<16|d[t+3|0]<<24;c[b+168>>2]=x}}while(0);x=ag((ag(aB,w)|0)+aC|0,r)|0;t=y+(x<<2)|0;K=a[o+3|0]|0;do{if(K<<24>>24==0){if((r|0)==3){A=2343}else if((r|0)==2){g[y+(x+1<<2)>>2]=1.0;A=2345}else if((r|0)==4){g[y+(x+3<<2)>>2]=1.0;A=2343}else if((r|0)==1){A=2345}else{break}if((A|0)==2343){A=0;g[y+(x+2<<2)>>2]=0.0;g[y+(x+1<<2)>>2]=0.0;g[t>>2]=0.0;break}else if((A|0)==2345){A=0;g[t>>2]=0.0;break}}else{ay=+bM(+1.0,(K&255)-136|0);C=d[o]|0;if((r|0)<3){g[t>>2]=ay*+((d[o+1|0]|0)+C+(d[o+2|0]|0)|0)/3.0}else{g[t>>2]=ay*+(C|0);g[y+(x+1<<2)>>2]=ay*+(d[o+1|0]|0);g[y+(x+2<<2)>>2]=ay*+(d[o+2|0]|0)}if((r|0)==2){g[y+(x+1<<2)>>2]=1.0;break}else if((r|0)==4){g[y+(x+3<<2)>>2]=1.0;break}else{break}}}while(0);aG=aB;aH=aC+1|0}else if((A|0)==2325){A=0;if((z|0)<(s|0)){aG=z;aH=0}else{p=y;break}}if((aH|0)<(w|0)){aB=aG;aC=aH;aD=b+16|0;A=2328;continue}else{z=aG+1|0;A=2325;continue}}i=k;return p|0}}while(0);c[4668]=1752;p=0;i=k;return p|0}function eM(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aK=0,aL=0,aM=0,aN=0,aO=0,aP=0,aQ=0,aR=0,aS=0,aT=0;j=i;i=i+2512|0;k=j|0;l=j+2024|0;m=j+2480|0;n=j+2504|0;o=b+20|0;c[o>>2]=e;p=b+16|0;c[p>>2]=e;q=b+24|0;c[q>>2]=e+f;f=b+28|0;c[f>>2]=g;g=b|0;do{if((h|0)==0){r=b+4|0}else{e=c[g>>2]|0;s=b+4|0;t=c[s>>2]|0;if(e>>>0<t>>>0){u=e+1|0;c[g>>2]=u;v=d[e]|0;w=u}else{v=0;w=e}if(w>>>0<t>>>0){c[g>>2]=w+1;x=d[w]|0}else{x=0}if((((x|v<<8)>>>0)%31|0|0)!=0){c[4668]=976;y=0;i=j;return y|0}if((x&32|0)!=0){c[4668]=944;y=0;i=j;return y|0}if((v&15|0)==8){r=s;break}c[4668]=912;y=0;i=j;return y|0}}while(0);v=b+8|0;c[v>>2]=0;x=b+12|0;c[x>>2]=0;w=l|0;h=m|0;s=b+32|0;t=b+2052|0;e=n|0;u=n+1|0;z=n+3|0;A=n+2|0;B=0;D=0;L3245:while(1){if((B|0)<1){E=D;F=B;while(1){if(E>>>0>=1<<F>>>0){G=2472;break L3245}H=c[g>>2]|0;if(H>>>0<(c[r>>2]|0)>>>0){c[g>>2]=H+1;I=d[H]|0}else{I=0}H=I<<F|E;c[x>>2]=H;J=F+8|0;c[v>>2]=J;if((J|0)<25){E=H;F=J}else{K=J;L=H;break}}}else{K=B;L=D}F=L&1;E=L>>>1;c[x>>2]=E;H=K-1|0;c[v>>2]=H;if((H|0)<2){J=E;M=H;while(1){if(J>>>0>=1<<M>>>0){G=2478;break L3245}N=c[g>>2]|0;if(N>>>0<(c[r>>2]|0)>>>0){c[g>>2]=N+1;O=d[N]|0}else{O=0}N=O<<M|J;c[x>>2]=N;P=M+8|0;c[v>>2]=P;if((P|0)<25){J=N;M=P}else{Q=P;R=N;break}}}else{Q=H;R=E}M=R&3;J=R>>>2;c[x>>2]=J;N=Q-2|0;c[v>>2]=N;if((M|0)==3){y=0;G=2642;break}else if((M|0)==0){P=N&7;if((P|0)==0){S=N;T=J}else{if((N|0)<(P|0)){U=J;V=N;while(1){if(U>>>0>=1<<V>>>0){G=2486;break L3245}W=c[g>>2]|0;if(W>>>0<(c[r>>2]|0)>>>0){c[g>>2]=W+1;X=d[W]|0}else{X=0}W=X<<V|U;c[x>>2]=W;Y=V+8|0;c[v>>2]=Y;if((Y|0)<25){U=W;V=Y}else{Z=Y;_=W;break}}}else{Z=N;_=J}V=_>>>(P>>>0);c[x>>2]=V;U=Z-P|0;c[v>>2]=U;S=U;T=V}if((S|0)>0){V=7-S|0;U=(((V|0)>-1?V:-1)+S|0)>>>3;V=0;E=T;H=S;while(1){a[n+V|0]=E&255;$=E>>>8;W=H-8|0;if((W|0)>0){V=V+1|0;E=$;H=W}else{break}}H=S-8-(U<<3)|0;c[x>>2]=$;c[v>>2]=H;aa=H;ab=U+1|0}else{aa=S;ab=0}if((aa|0)!=0){G=2498;break}if((ab|0)<4){H=c[r>>2]|0;E=ab;V=c[g>>2]|0;while(1){if(V>>>0<H>>>0){P=V+1|0;c[g>>2]=P;ac=a[V]|0;ad=P}else{ac=0;ad=V}P=E+1|0;a[n+E|0]=ac;if((P|0)<4){E=P;V=ad}else{break}}}V=d[u]<<8|d[e];if((d[z]<<8|d[A]|0)!=(V^65535|0)){G=2503;break}E=c[g>>2]|0;if((E+V|0)>>>0>(c[r>>2]|0)>>>0){G=2505;break}H=c[p>>2]|0;U=c[q>>2]|0;if((H+V|0)>>>0>U>>>0){if((c[f>>2]|0)==0){G=2508;break}P=c[o>>2]|0;W=P;Y=H-W|0;ae=Y+V|0;af=U-W|0;while(1){if((ae|0)>(af|0)){af=af<<1}else{break}}ae=n1(P,af)|0;if((ae|0)==0){G=2512;break}c[o>>2]=ae;W=ae+Y|0;c[p>>2]=W;c[q>>2]=ae+af;ag=W;ah=c[g>>2]|0}else{ag=H;ah=E}of(ag|0,ah|0,V)|0;c[g>>2]=(c[g>>2]|0)+V;c[p>>2]=(c[p>>2]|0)+V}else if((M|0)==1){if((a[18671]|0)==0){oe(18680,8,144);oe(18824,9,112);oe(18936,7,24);W=18960;ae=W|0;C=134744072;a[ae]=C&255;C=C>>8;a[ae+1|0]=C&255;C=C>>8;a[ae+2|0]=C&255;C=C>>8;a[ae+3|0]=C&255;ae=W+4|0;C=134744072;a[ae]=C&255;C=C>>8;a[ae+1|0]=C&255;C=C>>8;a[ae+2|0]=C&255;C=C>>8;a[ae+3|0]=C&255;oe(18640,5,32)}if((eX(s,18680,288)|0)==0){y=0;G=2647;break}if((eX(t,18640,32)|0)==0){y=0;G=2648;break}else{G=2579}}else{if((N|0)<5){ae=J;W=N;while(1){if(ae>>>0>=1<<W>>>0){G=2521;break L3245}U=c[g>>2]|0;if(U>>>0<(c[r>>2]|0)>>>0){c[g>>2]=U+1;ai=d[U]|0}else{ai=0}U=ai<<W|ae;c[x>>2]=U;aj=W+8|0;c[v>>2]=aj;if((aj|0)<25){ae=U;W=aj}else{ak=aj;al=U;break}}}else{ak=N;al=J}W=al>>>5;c[x>>2]=W;ae=ak-5|0;c[v>>2]=ae;M=(al&31)+257|0;if((ae|0)<5){V=W;E=ae;while(1){if(V>>>0>=1<<E>>>0){G=2527;break L3245}H=c[g>>2]|0;if(H>>>0<(c[r>>2]|0)>>>0){c[g>>2]=H+1;am=d[H]|0}else{am=0}H=am<<E|V;c[x>>2]=H;af=E+8|0;c[v>>2]=af;if((af|0)<25){V=H;E=af}else{an=af;ao=H;break}}}else{an=ae;ao=W}E=ao>>>5;c[x>>2]=E;V=an-5|0;c[v>>2]=V;J=(ao&31)+1|0;if((V|0)<4){N=E;H=V;while(1){if(N>>>0>=1<<H>>>0){G=2533;break L3245}af=c[g>>2]|0;if(af>>>0<(c[r>>2]|0)>>>0){c[g>>2]=af+1;ap=d[af]|0}else{ap=0}af=ap<<H|N;c[x>>2]=af;Y=H+8|0;c[v>>2]=Y;if((Y|0)<25){N=af;H=Y}else{aq=Y;ar=af;break}}}else{aq=V;ar=E}H=ar>>>4;c[x>>2]=H;N=aq-4|0;c[v>>2]=N;W=(ar&15)+4|0;oe(h|0,0,19);ae=0;af=N;N=H;do{if((af|0)<3){H=N;Y=af;while(1){if(H>>>0>=1<<Y>>>0){G=2540;break L3245}P=c[g>>2]|0;if(P>>>0<(c[r>>2]|0)>>>0){c[g>>2]=P+1;as=d[P]|0}else{as=0}P=as<<Y|H;c[x>>2]=P;U=Y+8|0;c[v>>2]=U;if((U|0)<25){H=P;Y=U}else{at=U;au=P;break}}}else{at=af;au=N}N=au>>>3;c[x>>2]=N;af=at-3|0;c[v>>2]=af;a[m+(d[5128+ae|0]|0)|0]=au&7;ae=ae+1|0;}while((ae|0)<(W|0));if((eX(k,h,19)|0)==0){y=0;G=2628;break}W=J+M|0;if((W|0)>0){ae=0;while(1){af=eY(b,k)|0;if(af>>>0>=19>>>0){G=2548;break L3245}do{if((af|0)<16){a[l+ae|0]=af&255;av=ae+1|0}else{if((af|0)==17){N=c[v>>2]|0;E=c[x>>2]|0;if((N|0)<3){V=E;Y=N;while(1){if(V>>>0>=1<<Y>>>0){G=2562;break L3245}H=c[g>>2]|0;if(H>>>0<(c[r>>2]|0)>>>0){c[g>>2]=H+1;aw=d[H]|0}else{aw=0}H=aw<<Y|V;c[x>>2]=H;P=Y+8|0;c[v>>2]=P;if((P|0)<25){V=H;Y=P}else{ax=P;ay=H;break}}}else{ax=N;ay=E}c[x>>2]=ay>>>3;c[v>>2]=ax-3;Y=(ay&7)+3|0;oe(l+ae|0,0,Y|0);av=Y+ae|0;break}else if((af|0)==16){Y=c[v>>2]|0;V=c[x>>2]|0;if((Y|0)<2){H=V;P=Y;while(1){if(H>>>0>=1<<P>>>0){G=2554;break L3245}U=c[g>>2]|0;if(U>>>0<(c[r>>2]|0)>>>0){c[g>>2]=U+1;az=d[U]|0}else{az=0}U=az<<P|H;c[x>>2]=U;aj=P+8|0;c[v>>2]=aj;if((aj|0)<25){H=U;P=aj}else{aA=aj;aB=U;break}}}else{aA=Y;aB=V}c[x>>2]=aB>>>2;c[v>>2]=aA-2;P=(aB&3)+3|0;oe(l+ae|0,a[l+(ae-1)|0]|0,P|0);av=P+ae|0;break}else if((af|0)==18){P=c[v>>2]|0;H=c[x>>2]|0;if((P|0)<7){E=H;N=P;while(1){if(E>>>0>=1<<N>>>0){G=2570;break L3245}U=c[g>>2]|0;if(U>>>0<(c[r>>2]|0)>>>0){c[g>>2]=U+1;aC=d[U]|0}else{aC=0}U=aC<<N|E;c[x>>2]=U;aj=N+8|0;c[v>>2]=aj;if((aj|0)<25){E=U;N=aj}else{aD=aj;aE=U;break}}}else{aD=P;aE=H}c[x>>2]=aE>>>7;c[v>>2]=aD-7;N=(aE&127)+11|0;oe(l+ae|0,0,N|0);av=N+ae|0;break}else{G=2567;break L3245}}}while(0);if((av|0)<(W|0)){ae=av}else{aF=av;break}}}else{aF=0}if((aF|0)!=(W|0)){G=2576;break}if((eX(s,w,M)|0)==0){y=0;G=2631;break}if((eX(t,l+M|0,J)|0)==0){y=0;G=2632;break}else{G=2579}}L3382:do{if((G|0)==2579){L3383:while(1){G=0;ae=eY(b,s)|0;if((ae|0)<256){if((ae|0)<0){G=2581;break L3245}af=c[p>>2]|0;N=c[q>>2]|0;if(af>>>0<N>>>0){aG=af}else{if((c[f>>2]|0)==0){G=2584;break L3245}E=c[o>>2]|0;V=E;Y=af-V|0;af=Y+1|0;U=N-V|0;while(1){if((af|0)>(U|0)){U=U<<1}else{break}}af=n1(E,U)|0;if((af|0)==0){G=2588;break L3245}c[o>>2]=af;H=af+Y|0;c[p>>2]=H;c[q>>2]=af+U;aG=H}c[p>>2]=aG+1;a[aG]=ae&255;G=2579;continue}if((ae|0)==256){break L3382}H=ae-257|0;af=c[14120+(H<<2)>>2]|0;if((ae-265|0)>>>0<20>>>0){P=c[13992+(H<<2)>>2]|0;H=c[v>>2]|0;V=c[x>>2]|0;if((H|0)<(P|0)){N=V;aj=H;while(1){if(N>>>0>=1<<aj>>>0){G=2595;break L3245}aH=c[g>>2]|0;if(aH>>>0<(c[r>>2]|0)>>>0){c[g>>2]=aH+1;aI=d[aH]|0}else{aI=0}aH=aI<<aj|N;c[x>>2]=aH;aJ=aj+8|0;c[v>>2]=aJ;if((aJ|0)<25){N=aH;aj=aJ}else{aK=aJ;aL=aH;break}}}else{aK=H;aL=V}c[x>>2]=aL>>>(P>>>0);c[v>>2]=aK-P;aM=(aL&(1<<P)-1)+af|0}else{aM=af}aj=eY(b,t)|0;if((aj|0)<0){G=2601;break L3245}N=c[13688+(aj<<2)>>2]|0;if((aj-4|0)>>>0<26>>>0){ae=c[14264+(aj<<2)>>2]|0;aj=c[v>>2]|0;U=c[x>>2]|0;if((aj|0)<(ae|0)){Y=U;E=aj;while(1){if(Y>>>0>=1<<E>>>0){G=2605;break L3245}aH=c[g>>2]|0;if(aH>>>0<(c[r>>2]|0)>>>0){c[g>>2]=aH+1;aN=d[aH]|0}else{aN=0}aH=aN<<E|Y;c[x>>2]=aH;aJ=E+8|0;c[v>>2]=aJ;if((aJ|0)<25){Y=aH;E=aJ}else{aO=aJ;aP=aH;break}}}else{aO=aj;aP=U}c[x>>2]=aP>>>(ae>>>0);c[v>>2]=aO-ae;aQ=(aP&(1<<ae)-1)+N|0}else{aQ=N}E=c[p>>2]|0;Y=c[o>>2]|0;af=Y;P=E-af|0;if((P|0)<(aQ|0)){G=2611;break L3245}V=c[q>>2]|0;if((E+aM|0)>>>0>V>>>0){if((c[f>>2]|0)==0){G=2614;break L3245}H=P+aM|0;aH=V-af|0;while(1){if((H|0)>(aH|0)){aH=aH<<1}else{break}}H=n1(Y,aH)|0;if((H|0)==0){G=2618;break L3245}c[o>>2]=H;N=H+P|0;c[p>>2]=N;c[q>>2]=H+aH;aR=N}else{aR=E}if((aM|0)==0){G=2579;continue}N=aR+(-aQ|0)|0;H=aM-1|0;ae=a[N]|0;c[p>>2]=aR+1;a[aR]=ae;if((H|0)==0){G=2579;continue}else{aS=N;aT=H}while(1){H=aS+1|0;N=c[p>>2]|0;ae=aT-1|0;U=a[H]|0;c[p>>2]=N+1;a[N]=U;if((ae|0)==0){G=2579;continue L3383}else{aS=H;aT=ae}}}}}while(0);if((c[3598]|0)==0){if((F|0)!=0){y=1;G=2634;break}}else{if(!(((c[p>>2]|0)-(c[o>>2]|0)|0)<65537&(F|0)==0)){y=1;G=2633;break}}B=c[v>>2]|0;D=c[x>>2]|0}if((G|0)==2588){c[4668]=3032;y=0;i=j;return y|0}else if((G|0)==2576){c[4668]=1216;y=0;i=j;return y|0}else if((G|0)==2540){cm(1368,2848,2064,4456);return 0}else if((G|0)==2562){cm(1368,2848,2064,4456);return 0}else if((G|0)==2527){cm(1368,2848,2064,4456);return 0}else if((G|0)==2554){cm(1368,2848,2064,4456);return 0}else if((G|0)==2570){cm(1368,2848,2064,4456);return 0}else if((G|0)==2595){cm(1368,2848,2064,4456);return 0}else if((G|0)==2628){i=j;return y|0}else if((G|0)==2631){i=j;return y|0}else if((G|0)==2632){i=j;return y|0}else if((G|0)==2633){i=j;return y|0}else if((G|0)==2634){i=j;return y|0}else if((G|0)==2601){c[4668]=1568;y=0;i=j;return y|0}else if((G|0)==2611){c[4668]=1520;y=0;i=j;return y|0}else if((G|0)==2614){c[4668]=1472;y=0;i=j;return y|0}else if((G|0)==2618){c[4668]=3032;y=0;i=j;return y|0}else if((G|0)==2548){cm(1312,2848,2189,4528);return 0}else if((G|0)==2642){i=j;return y|0}else if((G|0)==2647){i=j;return y|0}else if((G|0)==2648){i=j;return y|0}else if((G|0)==2472){cm(1368,2848,2064,4456);return 0}else if((G|0)==2478){cm(1368,2848,2064,4456);return 0}else if((G|0)==2486){cm(1368,2848,2064,4456);return 0}else if((G|0)==2498){cm(1088,2848,2228,4496);return 0}else if((G|0)==2503){c[4668]=1048;y=0;i=j;return y|0}else if((G|0)==2505){c[4668]=1008;y=0;i=j;return y|0}else if((G|0)==2508){c[4668]=1472;y=0;i=j;return y|0}else if((G|0)==2512){c[4668]=3032;y=0;i=j;return y|0}else if((G|0)==2521){cm(1368,2848,2064,4456);return 0}else if((G|0)==2581){c[4668]=1568;y=0;i=j;return y|0}else if((G|0)==2584){c[4668]=1472;y=0;i=j;return y|0}else if((G|0)==2533){cm(1368,2848,2064,4456);return 0}else if((G|0)==2605){cm(1368,2848,2064,4456);return 0}else if((G|0)==2567){cm(1264,2848,2203,4528);return 0}return 0}function eN(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;d=b+168|0;e=c[d>>2]|0;f=b+172|0;if(e>>>0<(c[f>>2]|0)>>>0){c[d>>2]=e+1;g=a[e]|0;return g|0}e=b+32|0;if((c[e>>2]|0)==0){g=0;return g|0}h=b+40|0;i=c_[c[b+16>>2]&63](c[b+28>>2]|0,h,c[b+36>>2]|0)|0;if((i|0)==0){c[e>>2]=0;e=(c[f>>2]|0)-1|0;c[d>>2]=e;a[e]=0;j=c[d>>2]|0}else{c[d>>2]=h;c[f>>2]=b+40+i;j=h}c[d>>2]=j+1;g=a[j]|0;return g|0}function eO(b){b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=b+168|0;f=c[e>>2]|0;g=b+172|0;if(f>>>0<(c[g>>2]|0)>>>0){c[e>>2]=f+1;h=d[f]|0;return h|0}f=b+32|0;if((c[f>>2]|0)==0){h=0;return h|0}i=b+40|0;j=c_[c[b+16>>2]&63](c[b+28>>2]|0,i,c[b+36>>2]|0)|0;if((j|0)==0){c[f>>2]=0;f=(c[g>>2]|0)-1|0;c[e>>2]=f;a[f]=0;k=c[e>>2]|0}else{c[e>>2]=i;c[g>>2]=b+40+j;k=i}c[e>>2]=k+1;h=d[k]|0;return h|0}function eP(b,c){b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0;d=(eO(b)|0)&255;L3513:do{if((eQ(b)|0)!=0|d<<24>>24==10){e=0}else{f=0;g=d;while(1){h=f+1|0;a[c+f|0]=g;if((h|0)==1023){break}i=(eO(b)|0)&255;if((eQ(b)|0)!=0|i<<24>>24==10){e=h;break L3513}else{f=h;g=i}}while(1){if((eQ(b)|0)!=0){e=1023;break L3513}if((eO(b)|0)==10){e=1023;break}}}}while(0);a[c+e|0]=0;return c|0}function eQ(a){a=a|0;var b=0;do{if((c[a+16>>2]|0)!=0){if((cZ[c[a+24>>2]&255](c[a+28>>2]|0)|0)==0){b=0;return b|0}if((c[a+32>>2]|0)==0){b=1}else{break}return b|0}}while(0);b=(c[a+168>>2]|0)>>>0>=(c[a+172>>2]|0)>>>0|0;return b|0}function eR(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0;h=b+168|0;i=c[h>>2]|0;j=b+172|0;do{if(i>>>0<(c[j>>2]|0)>>>0){k=i;l=2692}else{m=b+32|0;if((c[m>>2]|0)==0){break}n=b+40|0;o=c_[c[b+16>>2]&63](c[b+28>>2]|0,n,c[b+36>>2]|0)|0;if((o|0)==0){c[m>>2]=0;m=(c[j>>2]|0)-1|0;c[h>>2]=m;a[m]=0;k=c[h>>2]|0;l=2692;break}else{c[h>>2]=n;c[j>>2]=b+40+o;k=n;l=2692;break}}}while(0);L3537:do{if((l|0)==2692){i=k+1|0;c[h>>2]=i;if((a[k]|0)!=71){break}do{if(i>>>0<(c[j>>2]|0)>>>0){p=i}else{n=b+32|0;if((c[n>>2]|0)==0){break L3537}o=b+40|0;m=c_[c[b+16>>2]&63](c[b+28>>2]|0,o,c[b+36>>2]|0)|0;if((m|0)==0){c[n>>2]=0;n=(c[j>>2]|0)-1|0;c[h>>2]=n;a[n]=0;p=c[h>>2]|0;break}else{c[h>>2]=o;c[j>>2]=b+40+m;p=o;break}}}while(0);i=p+1|0;c[h>>2]=i;if((a[p]|0)!=73){break}do{if(i>>>0<(c[j>>2]|0)>>>0){q=i}else{o=b+32|0;if((c[o>>2]|0)==0){break L3537}m=b+40|0;n=c_[c[b+16>>2]&63](c[b+28>>2]|0,m,c[b+36>>2]|0)|0;if((n|0)==0){c[o>>2]=0;o=(c[j>>2]|0)-1|0;c[h>>2]=o;a[o]=0;q=c[h>>2]|0;break}else{c[h>>2]=m;c[j>>2]=b+40+n;q=m;break}}}while(0);i=q+1|0;c[h>>2]=i;if((a[q]|0)!=70){break}do{if(i>>>0<(c[j>>2]|0)>>>0){r=i}else{m=b+32|0;if((c[m>>2]|0)==0){break L3537}n=b+40|0;o=c_[c[b+16>>2]&63](c[b+28>>2]|0,n,c[b+36>>2]|0)|0;if((o|0)==0){c[m>>2]=0;m=(c[j>>2]|0)-1|0;c[h>>2]=m;a[m]=0;r=c[h>>2]|0;break}else{c[h>>2]=n;c[j>>2]=b+40+o;r=n;break}}}while(0);i=r+1|0;c[h>>2]=i;if((a[r]|0)!=56){break}do{if(i>>>0<(c[j>>2]|0)>>>0){s=i;l=2717}else{n=b+32|0;if((c[n>>2]|0)==0){break}o=b+40|0;m=c_[c[b+16>>2]&63](c[b+28>>2]|0,o,c[b+36>>2]|0)|0;if((m|0)==0){c[n>>2]=0;n=(c[j>>2]|0)-1|0;c[h>>2]=n;a[n]=0;s=c[h>>2]|0;l=2717;break}else{c[h>>2]=o;c[j>>2]=b+40+m;s=o;l=2717;break}}}while(0);do{if((l|0)==2717){i=s+1|0;c[h>>2]=i;o=a[s]|0;if(!((o<<24>>24|0)==55|(o<<24>>24|0)==57)){break}do{if(i>>>0<(c[j>>2]|0)>>>0){t=i;l=2724}else{o=b+32|0;if((c[o>>2]|0)==0){break}m=b+40|0;n=c_[c[b+16>>2]&63](c[b+28>>2]|0,m,c[b+36>>2]|0)|0;if((n|0)==0){c[o>>2]=0;o=(c[j>>2]|0)-1|0;c[h>>2]=o;a[o]=0;t=c[h>>2]|0;l=2724;break}else{c[h>>2]=m;c[j>>2]=b+40+n;t=m;l=2724;break}}}while(0);do{if((l|0)==2724){c[h>>2]=t+1;if((a[t]|0)!=97){break}c[4668]=14704;i=c[h>>2]|0;m=c[j>>2]|0;do{if(i>>>0<m>>>0){n=i+1|0;c[h>>2]=n;u=d[i]|0;v=n;w=m}else{n=b+32|0;if((c[n>>2]|0)==0){u=0;v=i;w=m;break}o=b+40|0;x=c_[c[b+16>>2]&63](c[b+28>>2]|0,o,c[b+36>>2]|0)|0;if((x|0)==0){c[n>>2]=0;n=(c[j>>2]|0)-1|0;c[h>>2]=n;a[n]=0;y=c[h>>2]|0;z=c[j>>2]|0}else{c[h>>2]=o;n=b+40+x|0;c[j>>2]=n;y=o;z=n}n=y+1|0;c[h>>2]=n;u=d[y]|0;v=n;w=z}}while(0);do{if(v>>>0<w>>>0){c[h>>2]=v+1;A=d[v]|0}else{m=b+32|0;if((c[m>>2]|0)==0){A=0;break}i=b+40|0;n=c_[c[b+16>>2]&63](c[b+28>>2]|0,i,c[b+36>>2]|0)|0;if((n|0)==0){c[m>>2]=0;m=(c[j>>2]|0)-1|0;c[h>>2]=m;a[m]=0;B=c[h>>2]|0}else{c[h>>2]=i;c[j>>2]=b+40+n;B=i}c[h>>2]=B+1;A=d[B]|0}}while(0);c[e>>2]=A<<8|u;i=c[h>>2]|0;n=c[j>>2]|0;do{if(i>>>0<n>>>0){m=i+1|0;c[h>>2]=m;C=d[i]|0;D=m;E=n}else{m=b+32|0;if((c[m>>2]|0)==0){C=0;D=i;E=n;break}o=b+40|0;x=c_[c[b+16>>2]&63](c[b+28>>2]|0,o,c[b+36>>2]|0)|0;if((x|0)==0){c[m>>2]=0;m=(c[j>>2]|0)-1|0;c[h>>2]=m;a[m]=0;F=c[h>>2]|0;G=c[j>>2]|0}else{c[h>>2]=o;m=b+40+x|0;c[j>>2]=m;F=o;G=m}m=F+1|0;c[h>>2]=m;C=d[F]|0;D=m;E=G}}while(0);do{if(D>>>0<E>>>0){c[h>>2]=D+1;H=d[D]|0}else{n=b+32|0;if((c[n>>2]|0)==0){H=0;break}i=b+40|0;m=c_[c[b+16>>2]&63](c[b+28>>2]|0,i,c[b+36>>2]|0)|0;if((m|0)==0){c[n>>2]=0;n=(c[j>>2]|0)-1|0;c[h>>2]=n;a[n]=0;I=c[h>>2]|0}else{c[h>>2]=i;c[j>>2]=b+40+m;I=i}c[h>>2]=I+1;H=d[I]|0}}while(0);c[e+4>>2]=H<<8|C;i=c[h>>2]|0;do{if(i>>>0<(c[j>>2]|0)>>>0){c[h>>2]=i+1;J=d[i]|0}else{m=b+32|0;if((c[m>>2]|0)==0){J=0;break}n=b+40|0;o=c_[c[b+16>>2]&63](c[b+28>>2]|0,n,c[b+36>>2]|0)|0;if((o|0)==0){c[m>>2]=0;m=(c[j>>2]|0)-1|0;c[h>>2]=m;a[m]=0;K=c[h>>2]|0}else{c[h>>2]=n;c[j>>2]=b+40+o;K=n}c[h>>2]=K+1;J=d[K]|0}}while(0);i=e+12|0;c[i>>2]=J;n=c[h>>2]|0;do{if(n>>>0<(c[j>>2]|0)>>>0){c[h>>2]=n+1;L=d[n]|0}else{o=b+32|0;if((c[o>>2]|0)==0){L=0;break}m=b+40|0;x=c_[c[b+16>>2]&63](c[b+28>>2]|0,m,c[b+36>>2]|0)|0;if((x|0)==0){c[o>>2]=0;o=(c[j>>2]|0)-1|0;c[h>>2]=o;a[o]=0;M=c[h>>2]|0}else{c[h>>2]=m;c[j>>2]=b+40+x;M=m}c[h>>2]=M+1;L=d[M]|0}}while(0);c[e+16>>2]=L;n=c[h>>2]|0;do{if(n>>>0<(c[j>>2]|0)>>>0){c[h>>2]=n+1;N=d[n]|0}else{m=b+32|0;if((c[m>>2]|0)==0){N=0;break}x=b+40|0;o=c_[c[b+16>>2]&63](c[b+28>>2]|0,x,c[b+36>>2]|0)|0;if((o|0)==0){c[m>>2]=0;m=(c[j>>2]|0)-1|0;c[h>>2]=m;a[m]=0;O=c[h>>2]|0}else{c[h>>2]=x;c[j>>2]=b+40+o;O=x}c[h>>2]=O+1;N=d[O]|0}}while(0);c[e+20>>2]=N;c[e+24>>2]=-1;if((f|0)!=0){c[f>>2]=4}if((g|0)!=0){P=1;return P|0}n=c[i>>2]|0;if((n&128|0)==0){P=1;return P|0}x=2<<(n&7);if((x|0)<=0){P=1;return P|0}n=b+32|0;o=b+16|0;m=b+28|0;Q=b+40|0;R=b+36|0;S=0;while(1){T=c[h>>2]|0;do{if(T>>>0<(c[j>>2]|0)>>>0){c[h>>2]=T+1;U=a[T]|0}else{if((c[n>>2]|0)==0){U=0;break}V=c_[c[o>>2]&63](c[m>>2]|0,Q,c[R>>2]|0)|0;if((V|0)==0){c[n>>2]=0;W=(c[j>>2]|0)-1|0;c[h>>2]=W;a[W]=0;X=c[h>>2]|0}else{c[h>>2]=Q;c[j>>2]=b+40+V;X=Q}c[h>>2]=X+1;U=a[X]|0}}while(0);a[e+32+(S<<2)+2|0]=U;T=c[h>>2]|0;do{if(T>>>0<(c[j>>2]|0)>>>0){c[h>>2]=T+1;Y=a[T]|0}else{if((c[n>>2]|0)==0){Y=0;break}V=c_[c[o>>2]&63](c[m>>2]|0,Q,c[R>>2]|0)|0;if((V|0)==0){c[n>>2]=0;W=(c[j>>2]|0)-1|0;c[h>>2]=W;a[W]=0;Z=c[h>>2]|0}else{c[h>>2]=Q;c[j>>2]=b+40+V;Z=Q}c[h>>2]=Z+1;Y=a[Z]|0}}while(0);a[e+32+(S<<2)+1|0]=Y;T=c[h>>2]|0;do{if(T>>>0<(c[j>>2]|0)>>>0){c[h>>2]=T+1;_=a[T]|0}else{if((c[n>>2]|0)==0){_=0;break}V=c_[c[o>>2]&63](c[m>>2]|0,Q,c[R>>2]|0)|0;if((V|0)==0){c[n>>2]=0;W=(c[j>>2]|0)-1|0;c[h>>2]=W;a[W]=0;$=c[h>>2]|0}else{c[h>>2]=Q;c[j>>2]=b+40+V;$=Q}c[h>>2]=$+1;_=a[$]|0}}while(0);a[e+32+(S<<2)|0]=_;a[e+32+(S<<2)+3|0]=0;T=S+1|0;if((T|0)<(x|0)){S=T}else{P=1;break}}return P|0}}while(0);c[4668]=1064;P=0;return P|0}}while(0);c[4668]=1064;P=0;return P|0}}while(0);c[4668]=1064;P=0;return P|0}function eS(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aK=0,aL=0,aM=0,aN=0,aO=0,aP=0,aQ=0,aR=0,aS=0,aT=0,aU=0,aV=0,aW=0,aX=0,aY=0,aZ=0,a_=0,a$=0,a0=0,a1=0,a2=0,a3=0,a4=0,a5=0,a6=0,a7=0,a8=0,a9=0,ba=0,bb=0,bc=0,bd=0,be=0,bf=0,bg=0,bh=0,bi=0,bj=0,bk=0,bl=0,bm=0,bn=0,bo=0,bp=0,bq=0,br=0,bs=0,bt=0,bu=0,bv=0,bw=0,bx=0,by=0,bz=0,bA=0,bB=0,bC=0,bD=0,bE=0,bF=0,bG=0,bH=0,bI=0,bJ=0,bK=0,bL=0,bM=0,bN=0,bO=0,bP=0,bQ=0,bR=0,bS=0,bT=0,bU=0,bV=0,bW=0,bX=0,bY=0,bZ=0,b_=0,b$=0,b0=0,b1=0,b2=0,b3=0,b4=0,b5=0,b6=0,b7=0,b8=0,b9=0,ca=0,cb=0,cc=0,cd=0,ce=0,cf=0,cg=0,ch=0,ci=0,cj=0,ck=0,cl=0,cn=0,co=0,cp=0,cq=0,cr=0,cs=0,ct=0,cu=0,cv=0,cw=0,cx=0,cy=0;g=i;i=i+5104|0;h=g|0;j=g+4072|0;k=g+5096|0;l=b|0;m=c[l>>2]|0;n=b+8|0;c[n>>2]=0;o=b+4|0;c[o>>2]=0;p=b+12|0;c[p>>2]=0;q=m+168|0;r=m+172|0;s=m+32|0;t=m+16|0;u=m+28|0;v=m+40|0;w=m+36|0;x=0;while(1){if((x|0)>=8){break}y=c[q>>2]|0;do{if(y>>>0<(c[r>>2]|0)>>>0){c[q>>2]=y+1;z=a[y]|0}else{if((c[s>>2]|0)==0){z=0;break}A=c_[c[t>>2]&63](c[u>>2]|0,v,c[w>>2]|0)|0;if((A|0)==0){c[s>>2]=0;B=(c[r>>2]|0)-1|0;c[q>>2]=B;a[B]=0;C=c[q>>2]|0}else{c[q>>2]=v;c[r>>2]=m+40+A;C=v}c[q>>2]=C+1;z=a[C]|0}}while(0);if(z<<24>>24==(a[5280+x|0]|0)){x=x+1|0}else{D=11;break}}if((D|0)==11){c[4668]=2536;E=0;i=g;return E|0}if((e|0)==1){E=1;i=g;return E|0}x=m+20|0;z=m|0;C=m+4|0;y=m+8|0;A=(e|0)==2;B=0;F=0;G=0;H=0;I=0;J=0;K=1;L=0;M=c[q>>2]|0;L20:while(1){N=c[r>>2]|0;do{if(M>>>0<N>>>0){O=M+1|0;c[q>>2]=O;P=d[M]|0;Q=O;R=N}else{if((c[s>>2]|0)==0){P=0;Q=M;R=N;break}O=c_[c[t>>2]&63](c[u>>2]|0,v,c[w>>2]|0)|0;if((O|0)==0){c[s>>2]=0;S=(c[r>>2]|0)-1|0;c[q>>2]=S;a[S]=0;T=c[q>>2]|0;U=c[r>>2]|0}else{c[q>>2]=v;S=m+40+O|0;c[r>>2]=S;T=v;U=S}S=T+1|0;c[q>>2]=S;P=d[T]|0;Q=S;R=U}}while(0);N=P<<8;do{if(Q>>>0<R>>>0){S=Q+1|0;c[q>>2]=S;V=d[Q]|0;W=S;X=R}else{if((c[s>>2]|0)==0){V=0;W=Q;X=R;break}S=c_[c[t>>2]&63](c[u>>2]|0,v,c[w>>2]|0)|0;if((S|0)==0){c[s>>2]=0;O=(c[r>>2]|0)-1|0;c[q>>2]=O;a[O]=0;Y=c[q>>2]|0;Z=c[r>>2]|0}else{c[q>>2]=v;O=m+40+S|0;c[r>>2]=O;Y=v;Z=O}O=Y+1|0;c[q>>2]=O;V=d[Y]|0;W=O;X=Z}}while(0);O=(V|N)<<16;do{if(W>>>0<X>>>0){S=W+1|0;c[q>>2]=S;_=d[W]|0;$=S;aa=X}else{if((c[s>>2]|0)==0){_=0;$=W;aa=X;break}S=c_[c[t>>2]&63](c[u>>2]|0,v,c[w>>2]|0)|0;if((S|0)==0){c[s>>2]=0;ab=(c[r>>2]|0)-1|0;c[q>>2]=ab;a[ab]=0;ac=c[q>>2]|0;ad=c[r>>2]|0}else{c[q>>2]=v;ab=m+40+S|0;c[r>>2]=ab;ac=v;ad=ab}ab=ac+1|0;c[q>>2]=ab;_=d[ac]|0;$=ab;aa=ad}}while(0);N=_<<8;do{if($>>>0<aa>>>0){ab=$+1|0;c[q>>2]=ab;ae=d[$]|0;af=ab;ah=aa}else{if((c[s>>2]|0)==0){ae=0;af=$;ah=aa;break}ab=c_[c[t>>2]&63](c[u>>2]|0,v,c[w>>2]|0)|0;if((ab|0)==0){c[s>>2]=0;S=(c[r>>2]|0)-1|0;c[q>>2]=S;a[S]=0;ai=c[q>>2]|0;aj=c[r>>2]|0}else{c[q>>2]=v;S=m+40+ab|0;c[r>>2]=S;ai=v;aj=S}S=ai+1|0;c[q>>2]=S;ae=d[ai]|0;af=S;ah=aj}}while(0);S=N|O|ae;do{if(af>>>0<ah>>>0){ab=af+1|0;c[q>>2]=ab;ak=d[af]|0;al=ab;am=ah}else{if((c[s>>2]|0)==0){ak=0;al=af;am=ah;break}ab=c_[c[t>>2]&63](c[u>>2]|0,v,c[w>>2]|0)|0;if((ab|0)==0){c[s>>2]=0;an=(c[r>>2]|0)-1|0;c[q>>2]=an;a[an]=0;ao=c[q>>2]|0;ap=c[r>>2]|0}else{c[q>>2]=v;an=m+40+ab|0;c[r>>2]=an;ao=v;ap=an}an=ao+1|0;c[q>>2]=an;ak=d[ao]|0;al=an;am=ap}}while(0);O=ak<<8;do{if(al>>>0<am>>>0){N=al+1|0;c[q>>2]=N;aq=d[al]|0;ar=N;as=am}else{if((c[s>>2]|0)==0){aq=0;ar=al;as=am;break}N=c_[c[t>>2]&63](c[u>>2]|0,v,c[w>>2]|0)|0;if((N|0)==0){c[s>>2]=0;an=(c[r>>2]|0)-1|0;c[q>>2]=an;a[an]=0;at=c[q>>2]|0;au=c[r>>2]|0}else{c[q>>2]=v;an=m+40+N|0;c[r>>2]=an;at=v;au=an}an=at+1|0;c[q>>2]=an;aq=d[at]|0;ar=an;as=au}}while(0);an=(aq|O)<<16;do{if(ar>>>0<as>>>0){N=ar+1|0;c[q>>2]=N;av=d[ar]|0;aw=N;ax=as}else{if((c[s>>2]|0)==0){av=0;aw=ar;ax=as;break}N=c_[c[t>>2]&63](c[u>>2]|0,v,c[w>>2]|0)|0;if((N|0)==0){c[s>>2]=0;ab=(c[r>>2]|0)-1|0;c[q>>2]=ab;a[ab]=0;ay=c[q>>2]|0;az=c[r>>2]|0}else{c[q>>2]=v;ab=m+40+N|0;c[r>>2]=ab;ay=v;az=ab}ab=ay+1|0;c[q>>2]=ab;av=d[ay]|0;aw=ab;ax=az}}while(0);O=av<<8;do{if(aw>>>0<ax>>>0){ab=aw+1|0;c[q>>2]=ab;aA=d[aw]|0;aB=ab}else{if((c[s>>2]|0)==0){aA=0;aB=aw;break}ab=c_[c[t>>2]&63](c[u>>2]|0,v,c[w>>2]|0)|0;if((ab|0)==0){c[s>>2]=0;N=(c[r>>2]|0)-1|0;c[q>>2]=N;a[N]=0;aC=c[q>>2]|0}else{c[q>>2]=v;c[r>>2]=m+40+ab;aC=v}ab=aC+1|0;c[q>>2]=ab;aA=d[aC]|0;aB=ab}}while(0);ab=O|an|aA;L94:do{if((ab|0)==1130840649){N=c[4658]|0;do{if((c[t>>2]|0)!=0){aD=c[r>>2]|0;aE=aD-aB|0;if((aE|0)>=(S|0)){break}c[q>>2]=aD;cV[c[x>>2]&255](c[u>>2]|0,S-aE|0);aF=B;aG=F;aH=G;aI=H;aJ=N;aK=J;aL=K;aM=L;break L94}}while(0);c[q>>2]=aB+S;aF=B;aG=F;aH=G;aI=H;aJ=N;aK=J;aL=K;aM=L}else if((ab|0)==1229472850){if((K|0)==0){D=76;break L20}if((S|0)!=13){D=78;break L20}aE=c[r>>2]|0;do{if(aB>>>0<aE>>>0){aD=aB+1|0;c[q>>2]=aD;aN=d[aB]|0;aO=aD;aP=aE}else{if((c[s>>2]|0)==0){aN=0;aO=aB;aP=aE;break}aD=c_[c[t>>2]&63](c[u>>2]|0,v,c[w>>2]|0)|0;if((aD|0)==0){c[s>>2]=0;aQ=(c[r>>2]|0)-1|0;c[q>>2]=aQ;a[aQ]=0;aR=c[q>>2]|0;aS=c[r>>2]|0}else{c[q>>2]=v;aQ=m+40+aD|0;c[r>>2]=aQ;aR=v;aS=aQ}aQ=aR+1|0;c[q>>2]=aQ;aN=d[aR]|0;aO=aQ;aP=aS}}while(0);aE=aN<<8;do{if(aO>>>0<aP>>>0){N=aO+1|0;c[q>>2]=N;aT=d[aO]|0;aU=N;aV=aP}else{if((c[s>>2]|0)==0){aT=0;aU=aO;aV=aP;break}N=c_[c[t>>2]&63](c[u>>2]|0,v,c[w>>2]|0)|0;if((N|0)==0){c[s>>2]=0;aQ=(c[r>>2]|0)-1|0;c[q>>2]=aQ;a[aQ]=0;aW=c[q>>2]|0;aX=c[r>>2]|0}else{c[q>>2]=v;aQ=m+40+N|0;c[r>>2]=aQ;aW=v;aX=aQ}aQ=aW+1|0;c[q>>2]=aQ;aT=d[aW]|0;aU=aQ;aV=aX}}while(0);aQ=(aT|aE)<<16;do{if(aU>>>0<aV>>>0){N=aU+1|0;c[q>>2]=N;aY=d[aU]|0;aZ=N;a_=aV}else{if((c[s>>2]|0)==0){aY=0;aZ=aU;a_=aV;break}N=c_[c[t>>2]&63](c[u>>2]|0,v,c[w>>2]|0)|0;if((N|0)==0){c[s>>2]=0;aD=(c[r>>2]|0)-1|0;c[q>>2]=aD;a[aD]=0;a$=c[q>>2]|0;a0=c[r>>2]|0}else{c[q>>2]=v;aD=m+40+N|0;c[r>>2]=aD;a$=v;a0=aD}aD=a$+1|0;c[q>>2]=aD;aY=d[a$]|0;aZ=aD;a_=a0}}while(0);aE=aY<<8;do{if(aZ>>>0<a_>>>0){aD=aZ+1|0;c[q>>2]=aD;a1=d[aZ]|0;a2=aD}else{if((c[s>>2]|0)==0){a1=0;a2=aZ;break}aD=c_[c[t>>2]&63](c[u>>2]|0,v,c[w>>2]|0)|0;if((aD|0)==0){c[s>>2]=0;N=(c[r>>2]|0)-1|0;c[q>>2]=N;a[N]=0;a3=c[q>>2]|0}else{c[q>>2]=v;c[r>>2]=m+40+aD;a3=v}aD=a3+1|0;c[q>>2]=aD;a1=d[a3]|0;a2=aD}}while(0);aD=aE|aQ|a1;c[z>>2]=aD;if(aD>>>0>16777216>>>0){D=108;break L20}aD=c[r>>2]|0;do{if(a2>>>0<aD>>>0){N=a2+1|0;c[q>>2]=N;a4=d[a2]|0;a5=N;a6=aD}else{if((c[s>>2]|0)==0){a4=0;a5=a2;a6=aD;break}N=c_[c[t>>2]&63](c[u>>2]|0,v,c[w>>2]|0)|0;if((N|0)==0){c[s>>2]=0;a7=(c[r>>2]|0)-1|0;c[q>>2]=a7;a[a7]=0;a8=c[q>>2]|0;a9=c[r>>2]|0}else{c[q>>2]=v;a7=m+40+N|0;c[r>>2]=a7;a8=v;a9=a7}a7=a8+1|0;c[q>>2]=a7;a4=d[a8]|0;a5=a7;a6=a9}}while(0);aD=a4<<8;do{if(a5>>>0<a6>>>0){aQ=a5+1|0;c[q>>2]=aQ;ba=d[a5]|0;bb=aQ;bc=a6}else{if((c[s>>2]|0)==0){ba=0;bb=a5;bc=a6;break}aQ=c_[c[t>>2]&63](c[u>>2]|0,v,c[w>>2]|0)|0;if((aQ|0)==0){c[s>>2]=0;aE=(c[r>>2]|0)-1|0;c[q>>2]=aE;a[aE]=0;bd=c[q>>2]|0;be=c[r>>2]|0}else{c[q>>2]=v;aE=m+40+aQ|0;c[r>>2]=aE;bd=v;be=aE}aE=bd+1|0;c[q>>2]=aE;ba=d[bd]|0;bb=aE;bc=be}}while(0);aE=(ba|aD)<<16;do{if(bb>>>0<bc>>>0){aQ=bb+1|0;c[q>>2]=aQ;bf=d[bb]|0;bg=aQ;bh=bc}else{if((c[s>>2]|0)==0){bf=0;bg=bb;bh=bc;break}aQ=c_[c[t>>2]&63](c[u>>2]|0,v,c[w>>2]|0)|0;if((aQ|0)==0){c[s>>2]=0;a7=(c[r>>2]|0)-1|0;c[q>>2]=a7;a[a7]=0;bi=c[q>>2]|0;bj=c[r>>2]|0}else{c[q>>2]=v;a7=m+40+aQ|0;c[r>>2]=a7;bi=v;bj=a7}a7=bi+1|0;c[q>>2]=a7;bf=d[bi]|0;bg=a7;bh=bj}}while(0);aD=bf<<8;do{if(bg>>>0<bh>>>0){a7=bg+1|0;c[q>>2]=a7;bk=d[bg]|0;bl=a7}else{if((c[s>>2]|0)==0){bk=0;bl=bg;break}a7=c_[c[t>>2]&63](c[u>>2]|0,v,c[w>>2]|0)|0;if((a7|0)==0){c[s>>2]=0;aQ=(c[r>>2]|0)-1|0;c[q>>2]=aQ;a[aQ]=0;bm=c[q>>2]|0}else{c[q>>2]=v;c[r>>2]=m+40+a7;bm=v}a7=bm+1|0;c[q>>2]=a7;bk=d[bm]|0;bl=a7}}while(0);a7=aD|aE|bk;c[C>>2]=a7;if(a7>>>0>16777216>>>0){D=138;break L20}do{if(bl>>>0<(c[r>>2]|0)>>>0){bn=bl}else{if((c[s>>2]|0)==0){D=145;break L20}a7=c_[c[t>>2]&63](c[u>>2]|0,v,c[w>>2]|0)|0;if((a7|0)==0){c[s>>2]=0;aQ=(c[r>>2]|0)-1|0;c[q>>2]=aQ;a[aQ]=0;bn=c[q>>2]|0;break}else{c[q>>2]=v;c[r>>2]=m+40+a7;bn=v;break}}}while(0);aE=bn+1|0;c[q>>2]=aE;if((a[bn]|0)!=8){D=145;break L20}do{if(aE>>>0<(c[r>>2]|0)>>>0){bo=aE;D=151}else{if((c[s>>2]|0)==0){bp=B;bq=0;br=aE;break}aD=c_[c[t>>2]&63](c[u>>2]|0,v,c[w>>2]|0)|0;if((aD|0)==0){c[s>>2]=0;a7=(c[r>>2]|0)-1|0;c[q>>2]=a7;a[a7]=0;bo=c[q>>2]|0;D=151;break}else{c[q>>2]=v;c[r>>2]=m+40+aD;bo=v;D=151;break}}}while(0);do{if((D|0)==151){D=0;aE=bo+1|0;c[q>>2]=aE;aD=a[bo]|0;a7=aD&255;if((aD&255)>>>0>6>>>0){D=152;break L20}if(aD<<24>>24==3){bp=3;bq=3;br=aE;break}if((a7&1|0)==0){bp=B;bq=a7;br=aE}else{D=155;break L20}}}while(0);aE=c[r>>2]|0;do{if(br>>>0<aE>>>0){bs=br;D=161}else{if((c[s>>2]|0)==0){bt=br;bu=aE;break}a7=c_[c[t>>2]&63](c[u>>2]|0,v,c[w>>2]|0)|0;if((a7|0)==0){c[s>>2]=0;aD=(c[r>>2]|0)-1|0;c[q>>2]=aD;a[aD]=0;bs=c[q>>2]|0;D=161;break}else{c[q>>2]=v;c[r>>2]=m+40+a7;bs=v;D=161;break}}}while(0);if((D|0)==161){D=0;aE=bs+1|0;c[q>>2]=aE;if((a[bs]|0)!=0){D=163;break L20}bt=aE;bu=c[r>>2]|0}do{if(bt>>>0<bu>>>0){bv=bt;D=169}else{if((c[s>>2]|0)==0){bw=bt;bx=bu;break}aE=c_[c[t>>2]&63](c[u>>2]|0,v,c[w>>2]|0)|0;if((aE|0)==0){c[s>>2]=0;a7=(c[r>>2]|0)-1|0;c[q>>2]=a7;a[a7]=0;bv=c[q>>2]|0;D=169;break}else{c[q>>2]=v;c[r>>2]=m+40+aE;bv=v;D=169;break}}}while(0);if((D|0)==169){D=0;aE=bv+1|0;c[q>>2]=aE;if((a[bv]|0)!=0){D=171;break L20}bw=aE;bx=c[r>>2]|0}do{if(bw>>>0<bx>>>0){by=bw;D=177}else{if((c[s>>2]|0)==0){bz=0;break}aE=c_[c[t>>2]&63](c[u>>2]|0,v,c[w>>2]|0)|0;if((aE|0)==0){c[s>>2]=0;a7=(c[r>>2]|0)-1|0;c[q>>2]=a7;a[a7]=0;by=c[q>>2]|0;D=177;break}else{c[q>>2]=v;c[r>>2]=m+40+aE;by=v;D=177;break}}}while(0);if((D|0)==177){D=0;c[q>>2]=by+1;aE=a[by]|0;if((aE&255)>>>0>1>>>0){D=179;break L20}bz=aE&255}aE=c[z>>2]|0;if((aE|0)==0){D=182;break L20}a7=c[C>>2]|0;if((a7|0)==0){D=182;break L20}if(bp<<24>>24!=0){c[y>>2]=1;if((1073741824/(aE>>>0)|0)>>>2>>>0<a7>>>0){D=188;break L20}else{aF=bp;aG=F;aH=G;aI=H;aJ=I;aK=bz;aL=0;aM=L;break}}aD=(bq&2|1)+(bq>>>2&1)|0;c[y>>2]=aD;if((((1073741824/(aE>>>0)|0)>>>0)/(aD>>>0)|0)>>>0<a7>>>0){D=185;break L20}if(A){E=1;D=394;break L20}else{aF=0;aG=F;aH=G;aI=H;aJ=I;aK=bz;aL=0;aM=L}}else if((ab|0)==1347179589){if((K|0)!=0){D=190;break L20}if(S>>>0>768>>>0){D=192;break L20}a7=(S>>>0)/3|0;if((a7*3|0|0)!=(S|0)){D=195;break L20}if(S>>>0>2>>>0){bA=0;bB=aB}else{aF=B;aG=F;aH=G;aI=H;aJ=I;aK=J;aL=0;aM=a7;break}while(1){aD=c[r>>2]|0;do{if(bB>>>0<aD>>>0){aE=bB+1|0;c[q>>2]=aE;bC=a[bB]|0;bD=aE;bE=aD}else{if((c[s>>2]|0)==0){bC=0;bD=bB;bE=aD;break}aE=c_[c[t>>2]&63](c[u>>2]|0,v,c[w>>2]|0)|0;if((aE|0)==0){c[s>>2]=0;aQ=(c[r>>2]|0)-1|0;c[q>>2]=aQ;a[aQ]=0;bF=c[q>>2]|0;bG=c[r>>2]|0}else{c[q>>2]=v;aQ=m+40+aE|0;c[r>>2]=aQ;bF=v;bG=aQ}aQ=bF+1|0;c[q>>2]=aQ;bC=a[bF]|0;bD=aQ;bE=bG}}while(0);aD=bA<<2;a[j+aD|0]=bC;do{if(bD>>>0<bE>>>0){aQ=bD+1|0;c[q>>2]=aQ;bH=a[bD]|0;bI=aQ;bJ=bE}else{if((c[s>>2]|0)==0){bH=0;bI=bD;bJ=bE;break}aQ=c_[c[t>>2]&63](c[u>>2]|0,v,c[w>>2]|0)|0;if((aQ|0)==0){c[s>>2]=0;aE=(c[r>>2]|0)-1|0;c[q>>2]=aE;a[aE]=0;bK=c[q>>2]|0;bL=c[r>>2]|0}else{c[q>>2]=v;aE=m+40+aQ|0;c[r>>2]=aE;bK=v;bL=aE}aE=bK+1|0;c[q>>2]=aE;bH=a[bK]|0;bI=aE;bJ=bL}}while(0);a[j+(aD|1)|0]=bH;do{if(bI>>>0<bJ>>>0){aE=bI+1|0;c[q>>2]=aE;bM=a[bI]|0;bN=aE}else{if((c[s>>2]|0)==0){bM=0;bN=bI;break}aE=c_[c[t>>2]&63](c[u>>2]|0,v,c[w>>2]|0)|0;if((aE|0)==0){c[s>>2]=0;aQ=(c[r>>2]|0)-1|0;c[q>>2]=aQ;a[aQ]=0;bO=c[q>>2]|0}else{c[q>>2]=v;c[r>>2]=m+40+aE;bO=v}aE=bO+1|0;c[q>>2]=aE;bM=a[bO]|0;bN=aE}}while(0);a[j+(aD|2)|0]=bM;a[j+(aD|3)|0]=-1;aE=bA+1|0;if(aE>>>0<a7>>>0){bA=aE;bB=bN}else{aF=B;aG=F;aH=G;aI=H;aJ=I;aK=J;aL=0;aM=a7;break}}}else if((ab|0)==1951551059){if((K|0)!=0){D=219;break L20}if((c[o>>2]|0)!=0){D=221;break L20}if(B<<24>>24!=0){if(A){D=224;break L20}if((L|0)==0){D=226;break L20}if(S>>>0>L>>>0){D=229;break L20}if((S|0)==0){aF=4;aG=F;aH=G;aI=H;aJ=I;aK=J;aL=0;aM=L;break}else{bP=0;bQ=aB}while(1){do{if(bQ>>>0<(c[r>>2]|0)>>>0){a7=bQ+1|0;c[q>>2]=a7;bR=a[bQ]|0;bS=a7}else{if((c[s>>2]|0)==0){bR=0;bS=bQ;break}a7=c_[c[t>>2]&63](c[u>>2]|0,v,c[w>>2]|0)|0;if((a7|0)==0){c[s>>2]=0;aE=(c[r>>2]|0)-1|0;c[q>>2]=aE;a[aE]=0;bT=c[q>>2]|0}else{c[q>>2]=v;c[r>>2]=m+40+a7;bT=v}a7=bT+1|0;c[q>>2]=a7;bR=a[bT]|0;bS=a7}}while(0);a[j+(bP<<2|3)|0]=bR;aD=bP+1|0;if(aD>>>0<S>>>0){bP=aD;bQ=bS}else{aF=4;aG=F;aH=G;aI=H;aJ=I;aK=J;aL=0;aM=L;break L94}}}aD=c[y>>2]|0;if((aD&1|0)==0){D=239;break L20}if((S|0)!=(aD<<1|0)){D=242;break L20}if((aD|0)>0){bU=0;bV=aB}else{aF=0;aG=1;aH=G;aI=H;aJ=I;aK=J;aL=0;aM=L;break}while(1){aD=c[r>>2]|0;do{if(bV>>>0<aD>>>0){a7=bV+1|0;c[q>>2]=a7;bW=a7;bX=aD}else{if((c[s>>2]|0)==0){bW=bV;bX=aD;break}a7=c_[c[t>>2]&63](c[u>>2]|0,v,c[w>>2]|0)|0;if((a7|0)==0){c[s>>2]=0;aE=(c[r>>2]|0)-1|0;c[q>>2]=aE;a[aE]=0;bY=c[q>>2]|0;bZ=c[r>>2]|0}else{c[q>>2]=v;aE=m+40+a7|0;c[r>>2]=aE;bY=v;bZ=aE}aE=bY+1|0;c[q>>2]=aE;bW=aE;bX=bZ}}while(0);do{if(bW>>>0<bX>>>0){aD=bW+1|0;c[q>>2]=aD;b_=a[bW]|0;b$=aD}else{if((c[s>>2]|0)==0){b_=0;b$=bW;break}aD=c_[c[t>>2]&63](c[u>>2]|0,v,c[w>>2]|0)|0;if((aD|0)==0){c[s>>2]=0;aE=(c[r>>2]|0)-1|0;c[q>>2]=aE;a[aE]=0;b0=c[q>>2]|0}else{c[q>>2]=v;c[r>>2]=m+40+aD;b0=v}aD=b0+1|0;c[q>>2]=aD;b_=a[b0]|0;b$=aD}}while(0);a[k+bU|0]=b_;aD=bU+1|0;if((aD|0)<(c[y>>2]|0)){bU=aD;bV=b$}else{aF=0;aG=1;aH=G;aI=H;aJ=I;aK=J;aL=0;aM=L;break}}}else if((ab|0)==1229209940){if((K|0)!=0){D=259;break L20}if(B<<24>>24!=0&(L|0)==0){D=261;break L20}if(A){D=263;break L20}aD=S+G|0;if(aD>>>0>H>>>0){if((H|0)==0){b1=S>>>0>4096>>>0?S:4096}else{b1=H}while(1){if(aD>>>0>b1>>>0){b1=b1<<1}else{break}}aE=n1(c[o>>2]|0,b1)|0;if((aE|0)==0){D=270;break L20}c[o>>2]=aE;b2=b1;b3=aE}else{b2=H;b3=c[o>>2]|0}aE=b3+G|0;do{if((c[t>>2]|0)==0){b4=c[q>>2]|0;b5=c[r>>2]|0}else{a7=c[r>>2]|0;aQ=c[q>>2]|0;N=a7-aQ|0;if((N|0)>=(S|0)){b4=aQ;b5=a7;break}of(aE|0,aQ|0,N)|0;aQ=S-N|0;a7=(c_[c[t>>2]&63](c[u>>2]|0,b3+(N+G)|0,aQ)|0)==(aQ|0);c[q>>2]=c[r>>2];if(a7){aF=B;aG=F;aH=aD;aI=b2;aJ=I;aK=J;aL=0;aM=L;break L94}else{D=278;break L20}}}while(0);if((b4+S|0)>>>0>b5>>>0){D=278;break L20}of(aE|0,b4|0,S)|0;c[q>>2]=(c[q>>2]|0)+S;aF=B;aG=F;aH=aD;aI=b2;aJ=I;aK=J;aL=0;aM=L}else if((ab|0)==1229278788){D=279;break L20}else{if((K|0)!=0){D=344;break L20}if((an&536870912|0)==0){D=346;break L20}do{if((c[t>>2]|0)!=0){a7=c[r>>2]|0;aQ=a7-aB|0;if((aQ|0)>=(S|0)){break}c[q>>2]=a7;cV[c[x>>2]&255](c[u>>2]|0,S-aQ|0);aF=B;aG=F;aH=G;aI=H;aJ=I;aK=J;aL=0;aM=L;break L94}}while(0);c[q>>2]=aB+S;aF=B;aG=F;aH=G;aI=H;aJ=I;aK=J;aL=0;aM=L}}while(0);S=c[q>>2]|0;an=c[r>>2]|0;do{if(S>>>0<an>>>0){ab=S+1|0;c[q>>2]=ab;b6=ab;b7=an}else{if((c[s>>2]|0)==0){b6=S;b7=an;break}ab=c_[c[t>>2]&63](c[u>>2]|0,v,c[w>>2]|0)|0;if((ab|0)==0){c[s>>2]=0;O=(c[r>>2]|0)-1|0;c[q>>2]=O;a[O]=0;b8=c[q>>2]|0;b9=c[r>>2]|0}else{c[q>>2]=v;O=m+40+ab|0;c[r>>2]=O;b8=v;b9=O}O=b8+1|0;c[q>>2]=O;b6=O;b7=b9}}while(0);do{if(b6>>>0<b7>>>0){an=b6+1|0;c[q>>2]=an;ca=an;cb=b7}else{if((c[s>>2]|0)==0){ca=b6;cb=b7;break}an=c_[c[t>>2]&63](c[u>>2]|0,v,c[w>>2]|0)|0;if((an|0)==0){c[s>>2]=0;S=(c[r>>2]|0)-1|0;c[q>>2]=S;a[S]=0;cc=c[q>>2]|0;cd=c[r>>2]|0}else{c[q>>2]=v;S=m+40+an|0;c[r>>2]=S;cc=v;cd=S}S=cc+1|0;c[q>>2]=S;ca=S;cb=cd}}while(0);do{if(ca>>>0<cb>>>0){S=ca+1|0;c[q>>2]=S;ce=S;cf=cb}else{if((c[s>>2]|0)==0){ce=ca;cf=cb;break}S=c_[c[t>>2]&63](c[u>>2]|0,v,c[w>>2]|0)|0;if((S|0)==0){c[s>>2]=0;an=(c[r>>2]|0)-1|0;c[q>>2]=an;a[an]=0;cg=c[q>>2]|0;ch=c[r>>2]|0}else{c[q>>2]=v;an=m+40+S|0;c[r>>2]=an;cg=v;ch=an}an=cg+1|0;c[q>>2]=an;ce=an;cf=ch}}while(0);if(ce>>>0<cf>>>0){an=ce+1|0;c[q>>2]=an;B=aF;F=aG;G=aH;H=aI;I=aJ;J=aK;K=aL;L=aM;M=an;continue}if((c[s>>2]|0)==0){B=aF;F=aG;G=aH;H=aI;I=aJ;J=aK;K=aL;L=aM;M=ce;continue}an=c_[c[t>>2]&63](c[u>>2]|0,v,c[w>>2]|0)|0;if((an|0)==0){c[s>>2]=0;S=(c[r>>2]|0)-1|0;c[q>>2]=S;a[S]=0;ci=c[q>>2]|0}else{c[q>>2]=v;c[r>>2]=m+40+an;ci=v}an=ci+1|0;c[q>>2]=an;B=aF;F=aG;G=aH;H=aI;I=aJ;J=aK;K=aL;L=aM;M=an}if((D|0)==76){c[4668]=136;E=0;i=g;return E|0}else if((D|0)==78){c[4668]=4416;E=0;i=g;return E|0}else if((D|0)==108){c[4668]=4024;E=0;i=g;return E|0}else if((D|0)==138){c[4668]=4024;E=0;i=g;return E|0}else if((D|0)==145){c[4668]=3744;E=0;i=g;return E|0}else if((D|0)==152){c[4668]=3632;E=0;i=g;return E|0}else if((D|0)==155){c[4668]=3632;E=0;i=g;return E|0}else if((D|0)==163){c[4668]=3552;E=0;i=g;return E|0}else if((D|0)==171){c[4668]=3512;E=0;i=g;return E|0}else if((D|0)==179){c[4668]=3264;E=0;i=g;return E|0}else if((D|0)==182){c[4668]=3240;E=0;i=g;return E|0}else if((D|0)==185){c[4668]=4024;E=0;i=g;return E|0}else if((D|0)==188){c[4668]=4024;E=0;i=g;return E|0}else if((D|0)==190){c[4668]=3200;E=0;i=g;return E|0}else if((D|0)==192){c[4668]=3184;E=0;i=g;return E|0}else if((D|0)==195){c[4668]=3184;E=0;i=g;return E|0}else if((D|0)==219){c[4668]=3200;E=0;i=g;return E|0}else if((D|0)==221){c[4668]=3144;E=0;i=g;return E|0}else if((D|0)==224){c[y>>2]=4;E=1;i=g;return E|0}else if((D|0)==226){c[4668]=3120;E=0;i=g;return E|0}else if((D|0)==229){c[4668]=3088;E=0;i=g;return E|0}else if((D|0)==239){c[4668]=3072;E=0;i=g;return E|0}else if((D|0)==242){c[4668]=3088;E=0;i=g;return E|0}else if((D|0)==259){c[4668]=3200;E=0;i=g;return E|0}else if((D|0)==261){c[4668]=3064;E=0;i=g;return E|0}else if((D|0)==263){c[y>>2]=B&255;E=1;i=g;return E|0}else if((D|0)==270){c[4668]=3032;E=0;i=g;return E|0}else if((D|0)==278){c[4668]=2984;E=0;i=g;return E|0}else if((D|0)==279){if((K|0)!=0){c[4668]=3200;E=0;i=g;return E|0}if((e|0)!=0){E=1;i=g;return E|0}e=c[o>>2]|0;if((e|0)==0){c[4668]=2976;E=0;i=g;return E|0}K=(I|0)!=0;I=n$(16384)|0;do{if((I|0)!=0){c[h>>2]=e;c[h+4>>2]=e+G;if((eM(h,I,16384,1,K&1^1)|0)==0){n0(c[h+20>>2]|0);break}M=c[h+20>>2]|0;aM=(c[h+16>>2]|0)-M|0;c[n>>2]=M;if((M|0)==0){E=0;i=g;return E|0}n0(c[o>>2]|0);c[o>>2]=0;M=c[y>>2]|0;L=M+1|0;aL=B<<24>>24==0;aK=F<<24>>24==0;aJ=m+12|0;aI=aK&((L|0)==(f|0)&(f|0)!=3&aL^1)?M:L;c[aJ>>2]=aI;L=c[n>>2]|0;do{if((J|0)==0){M=c[l>>2]|0;if((eT(b,L,aM,aI,c[M>>2]|0,c[M+4>>2]|0)|0)==0){E=0}else{break}i=g;return E|0}else{M=c[3598]|0;c[3598]=0;H=c[l>>2]|0;aH=n$(ag(ag(c[H>>2]|0,aI)|0,c[H+4>>2]|0)|0)|0;aG=0;aF=aM;q=L;ci=H;while(1){H=c[5184+(aG<<2)>>2]|0;v=c[5248+(aG<<2)>>2]|0;r=(((c[ci>>2]|0)-1-H+v|0)>>>0)/(v>>>0)|0;s=c[5152+(aG<<2)>>2]|0;w=c[5216+(aG<<2)>>2]|0;u=(((c[ci+4>>2]|0)-1-s+w|0)>>>0)/(w>>>0)|0;if((r|0)==0|(u|0)==0){cj=q;ck=aF}else{if((eT(b,q,aF,aI,r,u)|0)==0){break}if((u|0)>0){t=(r|0)>0;ce=0;do{if(t){cf=(ag(ce,w)|0)+s|0;ch=ag(ce,r)|0;cg=c[p>>2]|0;cb=c[l>>2]|0;ca=0;do{cd=aH+(ag((ag(ca,v)|0)+H+(ag(c[cb>>2]|0,cf)|0)|0,aI)|0)|0;cc=cg+(ag(ca+ch|0,aI)|0)|0;of(cd|0,cc|0,aI)|0;ca=ca+1|0;}while((ca|0)<(r|0))}ce=ce+1|0;}while((ce|0)<(u|0))}n0(c[p>>2]|0);ce=ag(u,(ag(r,aI)|0)+1|0)|0;cj=q+ce|0;ck=aF-ce|0}ce=aG+1|0;if((ce|0)>=7){D=303;break}aG=ce;aF=ck;q=cj;ci=c[l>>2]|0}if((D|0)==303){c[p>>2]=aH;c[3598]=M;break}n0(aH);E=0;i=g;return E|0}}while(0);L473:do{if(!aK){aI=k|0;L=c[aJ>>2]|0;aM=c[l>>2]|0;ci=c[p>>2]|0;q=ag(c[aM+4>>2]|0,c[aM>>2]|0)|0;if((L|0)==4){if((q|0)==0){break}aM=k+1|0;aF=k+2|0;aG=1;ce=ci;while(1){do{if((a[ce]|0)==(a[aI]|0)){if((a[ce+1|0]|0)!=(a[aM]|0)){break}if((a[ce+2|0]|0)!=(a[aF]|0)){break}a[ce+3|0]=0}}while(0);if(aG>>>0>=q>>>0){break L473}aG=aG+1|0;ce=ce+4|0}}else if((L|0)==2){if((q|0)==0){break}else{cl=1;cn=ci}while(1){a[cn+1|0]=((a[cn]|0)!=(a[aI]|0))<<31>>31;if(cl>>>0>=q>>>0){break L473}cl=cl+1|0;cn=cn+2|0}}else{cm(2816,2848,2586,4576);return 0}}}while(0);L492:do{if(K){if((c[aJ>>2]|0)<=2){break}aK=c[l>>2]|0;q=c[p>>2]|0;aI=c[aK+12>>2]|0;ci=ag(c[aK+4>>2]|0,c[aK>>2]|0)|0;if((aI|0)==3){if((ci|0)==0){break}else{co=q;cp=0}while(1){aK=a[co]|0;L=co+2|0;a[co]=a[L]|0;a[L]=aK;aK=cp+1|0;if(aK>>>0<ci>>>0){co=co+3|0;cp=aK}else{break}}}else if((aI|0)==4){aK=(ci|0)==0;if((c[4656]|0)==0){if(aK){break}else{cq=q;cr=0}while(1){L=a[cq]|0;ce=cq+2|0;a[cq]=a[ce]|0;a[ce]=L;L=cr+1|0;if(L>>>0<ci>>>0){cq=cq+4|0;cr=L}else{break L492}}}if(aK){break}else{cs=q;ct=0}while(1){aI=a[cs+3|0]|0;L=a[cs]|0;ce=cs+2|0;aG=a[ce]|0;if(aI<<24>>24==0){a[cs]=aG;cu=L}else{aF=aI&255;a[cs]=((((aG&255)*255|0)>>>0)/(aF>>>0)|0)&255;aG=cs+1|0;a[aG]=((((d[aG]|0)*255|0)>>>0)/(aF>>>0)|0)&255;cu=((((L&255)*255|0)>>>0)/(aF>>>0)|0)&255}a[ce]=cu;ce=ct+1|0;if(ce>>>0<ci>>>0){cs=cs+4|0;ct=ce}else{break}}}else{cm(2912,2848,2669,4632);return 0}}}while(0);if(!aL){ci=B&255;c[y>>2]=ci;q=(f|0)>2?f:ci;c[aJ>>2]=q;ci=c[l>>2]|0;aK=ag(c[ci+4>>2]|0,c[ci>>2]|0)|0;ci=c[p>>2]|0;ce=n$(ag(aK,q)|0)|0;if((ce|0)==0){c[4668]=3032;E=0;i=g;return E|0}aF=(aK|0)==0;do{if((q|0)==3){if(aF){break}else{cv=ce;cw=0}while(1){L=d[ci+cw|0]<<2;a[cv]=a[j+L|0]|0;a[cv+1|0]=a[j+(L|1)|0]|0;a[cv+2|0]=a[j+(L|2)|0]|0;L=cw+1|0;if(L>>>0<aK>>>0){cv=cv+3|0;cw=L}else{break}}}else{if(aF){break}else{cx=ce;cy=0}while(1){L=d[ci+cy|0]<<2;a[cx]=a[j+L|0]|0;a[cx+1|0]=a[j+(L|1)|0]|0;a[cx+2|0]=a[j+(L|2)|0]|0;a[cx+3|0]=a[j+(L|3)|0]|0;L=cy+1|0;if(L>>>0<aK>>>0){cx=cx+4|0;cy=L}else{break}}}}while(0);n0(c[p>>2]|0);c[p>>2]=ce}n0(c[n>>2]|0);c[n>>2]=0;E=1;i=g;return E|0}}while(0);c[n>>2]=0;E=0;i=g;return E|0}else if((D|0)==344){c[4668]=3200;E=0;i=g;return E|0}else if((D|0)==346){a[5288]=ak&255;a[5289]=aq&255;a[5290]=av&255;a[5291]=aA&255;c[4668]=5288;E=0;i=g;return E|0}else if((D|0)==394){i=g;return E|0}return 0}function eT(b,e,f,g,h,i){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0;j=c[b>>2]|0;k=ag(h,g)|0;l=c[j+8>>2]|0;m=(l|0)==(g|0);n=l+1|0;o=(n|0)==(g|0);if(!(m|o)){cm(2752,2848,2464,4552);return 0}p=(c[3598]|0)==0?i:1;i=n$(ag(k,p)|0)|0;q=b+12|0;c[q>>2]=i;if((i|0)==0){c[4668]=3032;r=0;return r|0}L544:do{if((c[3598]|0)==0){do{if((c[j>>2]|0)==(h|0)){if((c[j+4>>2]|0)!=(p|0)){break}if((ag(p,(ag(l,h)|0)+1|0)|0)==(f|0)){break L544}c[4668]=2688;r=0;return r|0}}while(0);if((ag(p,(ag(l,h)|0)+1|0)|0)>>>0<=f>>>0){break}c[4668]=2688;r=0;return r|0}}while(0);if((p|0)==0){r=1;return r|0}f=(l|0)>0;j=h-1|0;b=(j|0)==0;s=(ag(l,h)|0)+1|0;h=0;t=e;e=i;L558:while(1){i=ag(h,k)|0;u=i-k|0;v=a[t]|0;w=v&255;if((v&255)>>>0>4>>>0){x=436;break}if((h|0)==0){y=d[13984+w|0]|0}else{y=w}L564:do{if(f){if((y|0)==0){w=0;do{a[e+(w+i)|0]=a[t+(w+1)|0]|0;w=w+1|0;}while((w|0)<(l|0))}else if((y|0)==1){w=0;do{a[e+(w+i)|0]=a[t+(w+1)|0]|0;w=w+1|0;}while((w|0)<(l|0))}else{w=0;while(1){switch(y|0){case 6:{a[e+(w+i)|0]=a[t+(w+1)|0]|0;break};case 3:{a[e+(w+i)|0]=((d[e+(w+u)|0]|0)>>>1)+(a[t+(w+1)|0]|0)&255;break};case 4:{a[e+(w+i)|0]=(a[e+(w+u)|0]|0)+(a[t+(w+1)|0]|0)&255;break};case 5:{a[e+(w+i)|0]=a[t+(w+1)|0]|0;break};case 2:{a[e+(w+i)|0]=(a[e+(w+u)|0]|0)+(a[t+(w+1)|0]|0)&255;break};default:{}}w=w+1|0;if((w|0)>=(l|0)){break L564}}}}}while(0);L581:do{if(m){w=t+n|0;v=e+(i+g)|0;z=e+(u+g)|0;switch(y|0){case 0:{if(b){A=w;break L581}else{B=w;C=v;D=j}while(1){if(f){E=0;do{a[C+E|0]=a[B+E|0]|0;E=E+1|0;}while((E|0)<(g|0))}E=D-1|0;if((E|0)==0){break}else{B=B+g|0;C=C+g|0;D=E}}A=t+s|0;break L581;break};case 1:{if(b){A=w;break L581}else{F=w;G=v;H=j}while(1){if(f){E=0;do{a[G+E|0]=(a[G+(E-g)|0]|0)+(a[F+E|0]|0)&255;E=E+1|0;}while((E|0)<(g|0))}E=H-1|0;if((E|0)==0){break}else{F=F+g|0;G=G+g|0;H=E}}A=t+s|0;break L581;break};case 2:{if(b){A=w;break L581}else{I=w;J=v;K=z;L=j}while(1){if(f){E=0;do{a[J+E|0]=(a[K+E|0]|0)+(a[I+E|0]|0)&255;E=E+1|0;}while((E|0)<(g|0))}E=L-1|0;if((E|0)==0){break}else{I=I+g|0;J=J+g|0;K=K+g|0;L=E}}A=t+s|0;break L581;break};case 3:{if(b){A=w;break L581}else{M=w;N=v;O=z;P=j}while(1){if(f){E=0;do{a[N+E|0]=(((d[N+(E-g)|0]|0)+(d[O+E|0]|0)|0)>>>1)+(d[M+E|0]|0)&255;E=E+1|0;}while((E|0)<(g|0))}E=P-1|0;if((E|0)==0){break}else{M=M+g|0;N=N+g|0;O=O+g|0;P=E}}A=t+s|0;break L581;break};case 4:{if(b){A=w;break L581}else{Q=w;R=v;S=z;T=j}while(1){if(f){E=0;do{U=E-g|0;V=a[R+U|0]|0;W=V&255;X=a[S+E|0]|0;Y=X&255;Z=a[S+U|0]|0;U=Z&255;_=Y+W-U|0;$=_-W|0;W=($|0)>-1?$:-$|0;$=_-Y|0;Y=($|0)>-1?$:-$|0;$=_-U|0;U=($|0)>-1?$:-$|0;if((W|0)>(Y|0)|(W|0)>(U|0)){aa=(Y|0)>(U|0)?Z:X}else{aa=V}a[R+E|0]=aa+(a[Q+E|0]|0)&255;E=E+1|0;}while((E|0)<(g|0))}E=T-1|0;if((E|0)==0){break}else{Q=Q+g|0;R=R+g|0;S=S+g|0;T=E}}A=t+s|0;break L581;break};case 5:{if(b){A=w;break L581}else{ab=w;ac=v;ad=j}while(1){if(f){z=0;do{a[ac+z|0]=((d[ac+(z-g)|0]|0)>>>1)+(a[ab+z|0]|0)&255;z=z+1|0;}while((z|0)<(g|0))}z=ad-1|0;if((z|0)==0){break}else{ab=ab+g|0;ac=ac+g|0;ad=z}}A=t+s|0;break L581;break};case 6:{if(b){A=w;break L581}else{ae=w;af=v;ah=j}while(1){if(f){z=0;do{a[af+z|0]=(a[af+(z-g)|0]|0)+(a[ae+z|0]|0)&255;z=z+1|0;}while((z|0)<(g|0))}z=ah-1|0;if((z|0)==0){break}else{ae=ae+g|0;af=af+g|0;ah=z}}A=t+s|0;break L581;break};default:{A=w;break L581}}}else{a[e+(i+l)|0]=-1;v=t+n|0;z=e+(i+g)|0;E=e+(u+g)|0;if(!o){x=483;break L558}switch(y|0){case 0:{if(b){A=v;break L581}else{ai=v;aj=z;ak=j}while(1){if(f){V=0;do{a[aj+V|0]=a[ai+V|0]|0;V=V+1|0;}while((V|0)<(l|0))}a[aj+l|0]=-1;V=ak-1|0;if((V|0)==0){break}else{ai=ai+l|0;aj=aj+g|0;ak=V}}A=t+s|0;break L581;break};case 1:{if(b){A=v;break L581}else{al=v;am=z;an=j}while(1){if(f){w=0;do{a[am+w|0]=(a[am+(w-g)|0]|0)+(a[al+w|0]|0)&255;w=w+1|0;}while((w|0)<(l|0))}a[am+l|0]=-1;w=an-1|0;if((w|0)==0){break}else{al=al+l|0;am=am+g|0;an=w}}A=t+s|0;break L581;break};case 2:{if(b){A=v;break L581}else{ao=v;ap=z;aq=E;ar=j}while(1){if(f){w=0;do{a[ap+w|0]=(a[aq+w|0]|0)+(a[ao+w|0]|0)&255;w=w+1|0;}while((w|0)<(l|0))}a[ap+l|0]=-1;w=ar-1|0;if((w|0)==0){break}else{ao=ao+l|0;ap=ap+g|0;aq=aq+g|0;ar=w}}A=t+s|0;break L581;break};case 3:{if(b){A=v;break L581}else{as=v;at=z;au=E;av=j}while(1){if(f){w=0;do{a[at+w|0]=(((d[at+(w-g)|0]|0)+(d[au+w|0]|0)|0)>>>1)+(d[as+w|0]|0)&255;w=w+1|0;}while((w|0)<(l|0))}a[at+l|0]=-1;w=av-1|0;if((w|0)==0){break}else{as=as+l|0;at=at+g|0;au=au+g|0;av=w}}A=t+s|0;break L581;break};case 4:{if(b){A=v;break L581}else{aw=v;ax=z;ay=E;az=j}while(1){if(f){w=0;do{V=w-g|0;X=a[ax+V|0]|0;Z=X&255;U=a[ay+w|0]|0;Y=U&255;W=a[ay+V|0]|0;V=W&255;$=Y+Z-V|0;_=$-Z|0;Z=(_|0)>-1?_:-_|0;_=$-Y|0;Y=(_|0)>-1?_:-_|0;_=$-V|0;V=(_|0)>-1?_:-_|0;if((Z|0)>(Y|0)|(Z|0)>(V|0)){aA=(Y|0)>(V|0)?W:U}else{aA=X}a[ax+w|0]=aA+(a[aw+w|0]|0)&255;w=w+1|0;}while((w|0)<(l|0))}a[ax+l|0]=-1;w=az-1|0;if((w|0)==0){break}else{aw=aw+l|0;ax=ax+g|0;ay=ay+g|0;az=w}}A=t+s|0;break L581;break};case 5:{if(b){A=v;break L581}else{aB=v;aC=z;aD=j}while(1){if(f){E=0;do{a[aC+E|0]=((d[aC+(E-g)|0]|0)>>>1)+(a[aB+E|0]|0)&255;E=E+1|0;}while((E|0)<(l|0))}a[aC+l|0]=-1;E=aD-1|0;if((E|0)==0){break}else{aB=aB+l|0;aC=aC+g|0;aD=E}}A=t+s|0;break L581;break};case 6:{if(b){A=v;break L581}else{aE=v;aF=z;aG=j}while(1){if(f){E=0;do{a[aF+E|0]=(a[aF+(E-g)|0]|0)+(a[aE+E|0]|0)&255;E=E+1|0;}while((E|0)<(l|0))}a[aF+l|0]=-1;E=aG-1|0;if((E|0)==0){break}else{aE=aE+l|0;aF=aF+g|0;aG=E}}A=t+s|0;break L581;break};default:{A=v;break L581}}}}while(0);u=h+1|0;if(u>>>0>=p>>>0){r=1;x=533;break}h=u;t=A;e=c[q>>2]|0}if((x|0)==533){return r|0}else if((x|0)==436){c[4668]=2656;r=0;return r|0}else if((x|0)==483){cm(2576,2848,2517,4552);return 0}return 0}function eU(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0;f=b+13956|0;a[f]=-1;g=b|0;h=c[g>>2]|0;i=h+168|0;j=c[i>>2]|0;k=h+172|0;do{if(j>>>0<(c[k>>2]|0)>>>0){l=j;m=543}else{n=h+32|0;if((c[n>>2]|0)==0){break}o=h+40|0;p=c_[c[h+16>>2]&63](c[h+28>>2]|0,o,c[h+36>>2]|0)|0;if((p|0)==0){c[n>>2]=0;n=(c[k>>2]|0)-1|0;c[i>>2]=n;a[n]=0;l=c[i>>2]|0;m=543;break}else{c[i>>2]=o;c[k>>2]=h+40+p;l=o;m=543;break}}}while(0);L719:do{if((m|0)==543){c[i>>2]=l+1;if((a[l]|0)!=-1){break}while(1){h=c[g>>2]|0;k=h+168|0;j=c[k>>2]|0;o=h+172|0;do{if(j>>>0<(c[o>>2]|0)>>>0){q=j}else{p=h+32|0;if((c[p>>2]|0)==0){break L719}n=h+40|0;r=c_[c[h+16>>2]&63](c[h+28>>2]|0,n,c[h+36>>2]|0)|0;if((r|0)==0){c[p>>2]=0;p=(c[o>>2]|0)-1|0;c[k>>2]=p;a[p]=0;q=c[k>>2]|0;break}else{c[k>>2]=n;c[o>>2]=h+40+r;q=n;break}}}while(0);c[k>>2]=q+1;h=a[q]|0;if((h<<24>>24|0)==(-40|0)){break}else if((h<<24>>24|0)!=(-1|0)){break L719}}if((e|0)==1){s=1;return s|0}h=a[f]|0;L734:do{if(h<<24>>24==-1){o=c[g>>2]|0;j=o+168|0;n=c[j>>2]|0;r=o+172|0;do{if(n>>>0<(c[r>>2]|0)>>>0){t=n}else{p=o+32|0;if((c[p>>2]|0)==0){u=-1;m=568;break L734}v=o+40|0;w=c_[c[o+16>>2]&63](c[o+28>>2]|0,v,c[o+36>>2]|0)|0;if((w|0)==0){c[p>>2]=0;p=(c[r>>2]|0)-1|0;c[j>>2]=p;a[p]=0;t=c[j>>2]|0;break}else{c[j>>2]=v;c[r>>2]=o+40+w;t=v;break}}}while(0);c[j>>2]=t+1;if((a[t]|0)!=-1){u=-1;m=568;break}while(1){o=c[g>>2]|0;r=o+168|0;n=c[r>>2]|0;k=o+172|0;do{if(n>>>0<(c[k>>2]|0)>>>0){x=n}else{v=o+32|0;if((c[v>>2]|0)==0){u=0;m=568;break L734}w=o+40|0;p=c_[c[o+16>>2]&63](c[o+28>>2]|0,w,c[o+36>>2]|0)|0;if((p|0)==0){c[v>>2]=0;v=(c[k>>2]|0)-1|0;c[r>>2]=v;a[v]=0;x=c[r>>2]|0;break}else{c[r>>2]=w;c[k>>2]=o+40+p;x=w;break}}}while(0);c[r>>2]=x+1;o=a[x]|0;if(o<<24>>24!=-1){y=o;m=566;break}}}else{a[f]=-1;y=h;m=566}}while(0);if((m|0)==566){if((y+64&255)>>>0>1>>>0){u=y;m=568}}L755:do{if((m|0)==568){L756:while(1){m=0;if((eV(b,u&255)|0)==0){s=0;m=714;break}h=a[f]|0;L759:do{if(h<<24>>24==-1){j=c[g>>2]|0;o=j+168|0;k=c[o>>2]|0;n=j+172|0;do{if(k>>>0<(c[n>>2]|0)>>>0){z=k;m=575}else{w=j+32|0;if((c[w>>2]|0)==0){break}p=j+40|0;v=c_[c[j+16>>2]&63](c[j+28>>2]|0,p,c[j+36>>2]|0)|0;if((v|0)==0){c[w>>2]=0;w=(c[n>>2]|0)-1|0;c[o>>2]=w;a[w]=0;z=c[o>>2]|0;m=575;break}else{c[o>>2]=p;c[n>>2]=j+40+v;z=p;m=575;break}}}while(0);do{if((m|0)==575){m=0;c[o>>2]=z+1;if((a[z]|0)!=-1){break}while(1){j=c[g>>2]|0;n=j+168|0;k=c[n>>2]|0;p=j+172|0;do{if(k>>>0<(c[p>>2]|0)>>>0){A=k}else{v=j+32|0;if((c[v>>2]|0)==0){u=0;m=568;continue L756}w=j+40|0;B=c_[c[j+16>>2]&63](c[j+28>>2]|0,w,c[j+36>>2]|0)|0;if((B|0)==0){c[v>>2]=0;v=(c[p>>2]|0)-1|0;c[n>>2]=v;a[v]=0;A=c[n>>2]|0;break}else{c[n>>2]=w;c[p>>2]=j+40+B;A=w;break}}}while(0);c[n>>2]=A+1;j=a[A]|0;if(j<<24>>24!=-1){C=j;break L759}}}}while(0);L778:while(1){o=c[g>>2]|0;do{if((c[o+16>>2]|0)==0){m=586}else{if((cZ[c[o+24>>2]&255](c[o+28>>2]|0)|0)==0){break}if((c[o+32>>2]|0)==0){break L756}else{m=586}}}while(0);if((m|0)==586){m=0;if((c[o+168>>2]|0)>>>0>=(c[o+172>>2]|0)>>>0){break L756}}D=a[f]|0;if(D<<24>>24!=-1){m=589;break}j=c[g>>2]|0;p=j+168|0;k=c[p>>2]|0;w=j+172|0;do{if(k>>>0<(c[w>>2]|0)>>>0){E=k}else{B=j+32|0;if((c[B>>2]|0)==0){continue L778}v=j+40|0;F=c_[c[j+16>>2]&63](c[j+28>>2]|0,v,c[j+36>>2]|0)|0;if((F|0)==0){c[B>>2]=0;B=(c[w>>2]|0)-1|0;c[p>>2]=B;a[B]=0;E=c[p>>2]|0;break}else{c[p>>2]=v;c[w>>2]=j+40+F;E=v;break}}}while(0);c[p>>2]=E+1;if((a[E]|0)==-1){break}}if((m|0)==589){m=0;a[f]=-1;C=D;break}while(1){j=c[g>>2]|0;w=j+168|0;k=c[w>>2]|0;o=j+172|0;do{if(k>>>0<(c[o>>2]|0)>>>0){G=k}else{v=j+32|0;if((c[v>>2]|0)==0){u=0;m=568;continue L756}F=j+40|0;B=c_[c[j+16>>2]&63](c[j+28>>2]|0,F,c[j+36>>2]|0)|0;if((B|0)==0){c[v>>2]=0;v=(c[o>>2]|0)-1|0;c[w>>2]=v;a[v]=0;G=c[w>>2]|0;break}else{c[w>>2]=F;c[o>>2]=j+40+B;G=F;break}}}while(0);c[w>>2]=G+1;j=a[G]|0;if(j<<24>>24!=-1){C=j;break}}}else{a[f]=-1;C=h}}while(0);if((C+64&255)>>>0>1>>>0){u=C;m=568}else{break L755}}if((m|0)==714){return s|0}c[4668]=2400;s=0;return s|0}}while(0);h=c[g>>2]|0;r=h+168|0;j=c[r>>2]|0;o=h+172|0;k=c[o>>2]|0;do{if(j>>>0<k>>>0){p=j+1|0;c[r>>2]=p;H=d[j]|0;I=p;J=k}else{p=h+32|0;if((c[p>>2]|0)==0){H=0;I=j;J=k;break}F=h+40|0;B=c_[c[h+16>>2]&63](c[h+28>>2]|0,F,c[h+36>>2]|0)|0;if((B|0)==0){c[p>>2]=0;p=(c[o>>2]|0)-1|0;c[r>>2]=p;a[p]=0;K=c[r>>2]|0;L=c[o>>2]|0}else{c[r>>2]=F;p=h+40+B|0;c[o>>2]=p;K=F;L=p}p=K+1|0;c[r>>2]=p;H=d[K]|0;I=p;J=L}}while(0);k=H<<8;do{if(I>>>0<J>>>0){j=I+1|0;c[r>>2]=j;M=d[I]|0;N=j}else{j=h+32|0;if((c[j>>2]|0)==0){M=0;N=I;break}p=h+40|0;F=c_[c[h+16>>2]&63](c[h+28>>2]|0,p,c[h+36>>2]|0)|0;if((F|0)==0){c[j>>2]=0;j=(c[o>>2]|0)-1|0;c[r>>2]=j;a[j]=0;O=c[r>>2]|0}else{c[r>>2]=p;c[o>>2]=h+40+F;O=p}p=O+1|0;c[r>>2]=p;M=d[O]|0;N=p}}while(0);p=M|k;if(p>>>0<11>>>0){c[4668]=2336;s=0;return s|0}do{if(N>>>0<(c[o>>2]|0)>>>0){P=N;m=623}else{F=h+32|0;if((c[F>>2]|0)==0){break}j=h+40|0;B=c_[c[h+16>>2]&63](c[h+28>>2]|0,j,c[h+36>>2]|0)|0;if((B|0)==0){c[F>>2]=0;F=(c[o>>2]|0)-1|0;c[r>>2]=F;a[F]=0;P=c[r>>2]|0;m=623;break}else{c[r>>2]=j;c[o>>2]=h+40+B;P=j;m=623;break}}}while(0);do{if((m|0)==623){k=P+1|0;c[r>>2]=k;if((a[P]|0)!=8){break}j=c[o>>2]|0;do{if(k>>>0<j>>>0){B=P+2|0;c[r>>2]=B;Q=d[k]|0;R=B;S=j}else{B=h+32|0;if((c[B>>2]|0)==0){Q=0;R=k;S=j;break}F=h+40|0;v=c_[c[h+16>>2]&63](c[h+28>>2]|0,F,c[h+36>>2]|0)|0;if((v|0)==0){c[B>>2]=0;B=(c[o>>2]|0)-1|0;c[r>>2]=B;a[B]=0;T=c[r>>2]|0;U=c[o>>2]|0}else{c[r>>2]=F;B=h+40+v|0;c[o>>2]=B;T=F;U=B}B=T+1|0;c[r>>2]=B;Q=d[T]|0;R=B;S=U}}while(0);j=Q<<8;do{if(R>>>0<S>>>0){k=R+1|0;c[r>>2]=k;V=d[R]|0;W=k}else{k=h+32|0;if((c[k>>2]|0)==0){V=0;W=R;break}B=h+40|0;F=c_[c[h+16>>2]&63](c[h+28>>2]|0,B,c[h+36>>2]|0)|0;if((F|0)==0){c[k>>2]=0;k=(c[o>>2]|0)-1|0;c[r>>2]=k;a[k]=0;X=c[r>>2]|0}else{c[r>>2]=B;c[o>>2]=h+40+F;X=B}B=X+1|0;c[r>>2]=B;V=d[X]|0;W=B}}while(0);B=V|j;F=h+4|0;c[F>>2]=B;if((B|0)==0){c[4668]=2248;s=0;return s|0}B=c[o>>2]|0;do{if(W>>>0<B>>>0){k=W+1|0;c[r>>2]=k;Y=d[W]|0;Z=k;_=B}else{k=h+32|0;if((c[k>>2]|0)==0){Y=0;Z=W;_=B;break}v=h+40|0;$=c_[c[h+16>>2]&63](c[h+28>>2]|0,v,c[h+36>>2]|0)|0;if(($|0)==0){c[k>>2]=0;k=(c[o>>2]|0)-1|0;c[r>>2]=k;a[k]=0;aa=c[r>>2]|0;ab=c[o>>2]|0}else{c[r>>2]=v;k=h+40+$|0;c[o>>2]=k;aa=v;ab=k}k=aa+1|0;c[r>>2]=k;Y=d[aa]|0;Z=k;_=ab}}while(0);B=Y<<8;do{if(Z>>>0<_>>>0){j=Z+1|0;c[r>>2]=j;ac=d[Z]|0;ad=j}else{j=h+32|0;if((c[j>>2]|0)==0){ac=0;ad=Z;break}k=h+40|0;v=c_[c[h+16>>2]&63](c[h+28>>2]|0,k,c[h+36>>2]|0)|0;if((v|0)==0){c[j>>2]=0;j=(c[o>>2]|0)-1|0;c[r>>2]=j;a[j]=0;ae=c[r>>2]|0}else{c[r>>2]=k;c[o>>2]=h+40+v;ae=k}k=ae+1|0;c[r>>2]=k;ac=d[ae]|0;ad=k}}while(0);k=ac|B;v=h|0;c[v>>2]=k;if((k|0)==0){c[4668]=2240;s=0;return s|0}do{if(ad>>>0<(c[o>>2]|0)>>>0){af=ad;m=662}else{k=h+32|0;if((c[k>>2]|0)==0){break}j=h+40|0;$=c_[c[h+16>>2]&63](c[h+28>>2]|0,j,c[h+36>>2]|0)|0;if(($|0)==0){c[k>>2]=0;k=(c[o>>2]|0)-1|0;c[r>>2]=k;a[k]=0;af=c[r>>2]|0;m=662;break}else{c[r>>2]=j;c[o>>2]=h+40+$;af=j;m=662;break}}}while(0);do{if((m|0)==662){c[r>>2]=af+1;B=a[af]|0;j=B&255;if(!((j|0)==3|(j|0)==1)){break}$=h+8|0;c[$>>2]=j;if(B<<24>>24==0){ah=j}else{B=0;do{c[b+13724+(B*56|0)+44>>2]=0;c[b+13724+(B*56|0)+52>>2]=0;B=B+1|0;}while((B|0)<(j|0));ah=c[$>>2]|0}if((p|0)!=((ah*3|0)+8|0)){c[4668]=2336;s=0;return s|0}L905:do{if((ah|0)>0){j=h+32|0;B=h+16|0;k=h+28|0;ai=h+40|0;aj=h+36|0;ak=0;L907:while(1){al=c[r>>2]|0;do{if(al>>>0<(c[o>>2]|0)>>>0){c[r>>2]=al+1;am=d[al]|0}else{if((c[j>>2]|0)==0){am=0;break}an=c_[c[B>>2]&63](c[k>>2]|0,ai,c[aj>>2]|0)|0;if((an|0)==0){c[j>>2]=0;ao=(c[o>>2]|0)-1|0;c[r>>2]=ao;a[ao]=0;ap=c[r>>2]|0}else{c[r>>2]=ai;c[o>>2]=h+40+an;ap=ai}c[r>>2]=ap+1;am=d[ap]|0}}while(0);c[b+13724+(ak*56|0)>>2]=am;al=ak+1|0;if(!((am|0)==(al|0)|(am|0)==(ak|0))){m=679;break}w=c[r>>2]|0;do{if(w>>>0<(c[o>>2]|0)>>>0){aq=w}else{if((c[j>>2]|0)==0){m=682;break L907}an=c_[c[B>>2]&63](c[k>>2]|0,ai,c[aj>>2]|0)|0;if((an|0)==0){c[j>>2]=0;ao=(c[o>>2]|0)-1|0;c[r>>2]=ao;a[ao]=0;aq=c[r>>2]|0;break}else{c[r>>2]=ai;c[o>>2]=h+40+an;aq=ai;break}}}while(0);c[r>>2]=aq+1;w=a[aq]|0;an=w&255;ao=an>>>4;c[b+13724+(ak*56|0)+4>>2]=ao;if((ao|0)==0|(w&255)>>>0>79>>>0){break}w=an&15;c[b+13724+(ak*56|0)+8>>2]=w;if((w|0)==0|w>>>0>4>>>0){m=689;break}w=c[r>>2]|0;do{if(w>>>0<(c[o>>2]|0)>>>0){ar=w;m=696}else{if((c[j>>2]|0)==0){c[b+13724+(ak*56|0)+12>>2]=0;break}an=c_[c[B>>2]&63](c[k>>2]|0,ai,c[aj>>2]|0)|0;if((an|0)==0){c[j>>2]=0;ao=(c[o>>2]|0)-1|0;c[r>>2]=ao;a[ao]=0;ar=c[r>>2]|0;m=696;break}else{c[r>>2]=ai;c[o>>2]=h+40+an;ar=ai;m=696;break}}}while(0);if((m|0)==696){m=0;c[r>>2]=ar+1;w=a[ar]|0;c[b+13724+(ak*56|0)+12>>2]=w&255;if((w&255)>>>0>3>>>0){m=698;break}}w=c[$>>2]|0;if((al|0)<(w|0)){ak=al}else{as=w;break L905}}if((m|0)==679){c[4668]=2192;s=0;return s|0}else if((m|0)==682){c[b+13724+(ak*56|0)+4>>2]=0}else if((m|0)==689){c[4668]=2176;s=0;return s|0}else if((m|0)==698){c[4668]=2168;s=0;return s|0}c[4668]=2184;s=0;return s|0}else{as=ah}}while(0);if((e|0)!=0){s=1;return s|0}if((((1073741824/((c[v>>2]|0)>>>0)|0)>>>0)/(as>>>0)|0)>>>0<(c[F>>2]|0)>>>0){c[4668]=4024;s=0;return s|0}if((as|0)>0){ai=0;j=1;aj=1;while(1){k=c[b+13724+(ai*56|0)+4>>2]|0;B=(k|0)>(j|0)?k:j;k=c[b+13724+(ai*56|0)+8>>2]|0;w=(k|0)>(aj|0)?k:aj;k=ai+1|0;if((k|0)<(as|0)){ai=k;j=B;aj=w}else{at=B;au=w;break}}}else{at=1;au=1}c[b+13700>>2]=at;c[b+13704>>2]=au;aj=at<<3;c[b+13716>>2]=aj;j=au<<3;c[b+13720>>2]=j;ai=b+13708|0;c[ai>>2]=(((c[v>>2]|0)-1+aj|0)>>>0)/(aj>>>0)|0;aj=b+13712|0;c[aj>>2]=((j-1+(c[F>>2]|0)|0)>>>0)/(j>>>0)|0;if((c[$>>2]|0)<=0){s=1;return s|0}j=at-1|0;w=au-1|0;B=0;while(1){k=c[b+13724+(B*56|0)+4>>2]|0;c[b+13724+(B*56|0)+28>>2]=((j+(ag(k,c[v>>2]|0)|0)|0)>>>0)/(at>>>0)|0;an=c[b+13724+(B*56|0)+8>>2]|0;c[b+13724+(B*56|0)+32>>2]=((w+(ag(an,c[F>>2]|0)|0)|0)>>>0)/(au>>>0)|0;ao=ag(c[ai>>2]<<3,k)|0;c[b+13724+(B*56|0)+36>>2]=ao;k=ag(c[aj>>2]<<3,an)|0;c[b+13724+(B*56|0)+40>>2]=k;an=n$(ag(k,ao)|0|15)|0;c[b+13724+(B*56|0)+48>>2]=an;if((an|0)==0){break}c[b+13724+(B*56|0)+44>>2]=an+15&-16;c[b+13724+(B*56|0)+52>>2]=0;an=B+1|0;if((an|0)<(c[$>>2]|0)){B=an}else{s=1;m=730;break}}if((m|0)==730){return s|0}if((B|0)>0){$=B;do{$=$-1|0;n0(c[b+13724+($*56|0)+48>>2]|0);c[b+13724+($*56|0)+44>>2]=0;}while(($|0)>0)}c[4668]=3032;s=0;return s|0}}while(0);c[4668]=2216;s=0;return s|0}}while(0);c[4668]=2304;s=0;return s|0}}while(0);c[4668]=2440;s=0;return s|0}function eV(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0;f=i;i=i+64|0;g=f|0;switch(e|0){case 196:{h=b|0;j=c[h>>2]|0;k=j+168|0;l=c[k>>2]|0;m=j+172|0;n=c[m>>2]|0;do{if(l>>>0<n>>>0){o=l+1|0;c[k>>2]=o;p=d[l]|0;q=o;r=n}else{o=j+32|0;if((c[o>>2]|0)==0){p=0;q=l;r=n;break}s=j+40|0;t=c_[c[j+16>>2]&63](c[j+28>>2]|0,s,c[j+36>>2]|0)|0;if((t|0)==0){c[o>>2]=0;o=(c[m>>2]|0)-1|0;c[k>>2]=o;a[o]=0;u=c[k>>2]|0;v=c[m>>2]|0}else{c[k>>2]=s;o=j+40+t|0;c[m>>2]=o;u=s;v=o}o=u+1|0;c[k>>2]=o;p=d[u]|0;q=o;r=v}}while(0);v=p<<8;do{if(q>>>0<r>>>0){c[k>>2]=q+1;w=d[q]|0}else{p=j+32|0;if((c[p>>2]|0)==0){w=0;break}u=j+40|0;n=c_[c[j+16>>2]&63](c[j+28>>2]|0,u,c[j+36>>2]|0)|0;if((n|0)==0){c[p>>2]=0;p=(c[m>>2]|0)-1|0;c[k>>2]=p;a[p]=0;x=c[k>>2]|0}else{c[k>>2]=u;c[m>>2]=j+40+n;x=u}c[k>>2]=x+1;w=d[x]|0}}while(0);x=(w|v)-2|0;L1030:do{if((x|0)>0){v=g|0;w=x;while(1){k=c[h>>2]|0;j=k+168|0;m=c[j>>2]|0;q=k+172|0;do{if(m>>>0<(c[q>>2]|0)>>>0){c[j>>2]=m+1;y=d[m]|0}else{r=k+32|0;if((c[r>>2]|0)==0){y=0;break}u=k+40|0;n=c_[c[k+16>>2]&63](c[k+28>>2]|0,u,c[k+36>>2]|0)|0;if((n|0)==0){c[r>>2]=0;r=(c[q>>2]|0)-1|0;c[j>>2]=r;a[r]=0;z=c[j>>2]|0}else{c[j>>2]=u;c[q>>2]=k+40+n;z=u}c[j>>2]=z+1;y=d[z]|0}}while(0);j=y&15;if(y>>>0>31>>>0|j>>>0>3>>>0){A=824;break}else{B=0;C=0}do{k=c[h>>2]|0;q=k+168|0;m=c[q>>2]|0;u=k+172|0;do{if(m>>>0<(c[u>>2]|0)>>>0){c[q>>2]=m+1;D=d[m]|0}else{n=k+32|0;if((c[n>>2]|0)==0){D=0;break}r=k+40|0;p=c_[c[k+16>>2]&63](c[k+28>>2]|0,r,c[k+36>>2]|0)|0;if((p|0)==0){c[n>>2]=0;n=(c[u>>2]|0)-1|0;c[q>>2]=n;a[n]=0;E=c[q>>2]|0}else{c[q>>2]=r;c[u>>2]=k+40+p;E=r}c[q>>2]=E+1;D=d[E]|0}}while(0);c[g+(B<<2)>>2]=D;C=D+C|0;B=B+1|0;}while((B|0)<16);q=w-17|0;if((y&240|0)==0){if((eW(b+4+(j*1680|0)|0,v)|0)==0){F=0;A=875;break}G=b+4+(j*1680|0)+1024|0}else{if((eW(b+6724+(j*1680|0)|0,v)|0)==0){F=0;A=876;break}G=b+6724+(j*1680|0)+1024|0}if((C|0)>0){k=0;do{u=c[h>>2]|0;m=u+168|0;r=c[m>>2]|0;p=u+172|0;do{if(r>>>0<(c[p>>2]|0)>>>0){c[m>>2]=r+1;H=a[r]|0}else{n=u+32|0;if((c[n>>2]|0)==0){H=0;break}l=u+40|0;o=c_[c[u+16>>2]&63](c[u+28>>2]|0,l,c[u+36>>2]|0)|0;if((o|0)==0){c[n>>2]=0;n=(c[p>>2]|0)-1|0;c[m>>2]=n;a[n]=0;I=c[m>>2]|0}else{c[m>>2]=l;c[p>>2]=u+40+o;I=l}c[m>>2]=I+1;H=a[I]|0}}while(0);a[G+k|0]=H;k=k+1|0;}while((k|0)<(C|0))}k=q-C|0;if((k|0)>0){w=k}else{J=k;break L1030}}if((A|0)==875){i=f;return F|0}else if((A|0)==876){i=f;return F|0}else if((A|0)==824){c[4668]=2016;F=0;i=f;return F|0}}else{J=x}}while(0);F=(J|0)==0|0;i=f;return F|0};case 219:{J=b|0;x=c[J>>2]|0;C=x+168|0;H=c[C>>2]|0;G=x+172|0;I=c[G>>2]|0;do{if(H>>>0<I>>>0){h=H+1|0;c[C>>2]=h;K=d[H]|0;L=h;M=I}else{h=x+32|0;if((c[h>>2]|0)==0){K=0;L=H;M=I;break}y=x+40|0;B=c_[c[x+16>>2]&63](c[x+28>>2]|0,y,c[x+36>>2]|0)|0;if((B|0)==0){c[h>>2]=0;h=(c[G>>2]|0)-1|0;c[C>>2]=h;a[h]=0;N=c[C>>2]|0;O=c[G>>2]|0}else{c[C>>2]=y;h=x+40+B|0;c[G>>2]=h;N=y;O=h}h=N+1|0;c[C>>2]=h;K=d[N]|0;L=h;M=O}}while(0);O=K<<8;do{if(L>>>0<M>>>0){c[C>>2]=L+1;P=d[L]|0}else{K=x+32|0;if((c[K>>2]|0)==0){P=0;break}N=x+40|0;I=c_[c[x+16>>2]&63](c[x+28>>2]|0,N,c[x+36>>2]|0)|0;if((I|0)==0){c[K>>2]=0;K=(c[G>>2]|0)-1|0;c[C>>2]=K;a[K]=0;Q=c[C>>2]|0}else{c[C>>2]=N;c[G>>2]=x+40+I;Q=N}c[C>>2]=Q+1;P=d[Q]|0}}while(0);Q=(P|O)-2|0;L1100:do{if((Q|0)>0){O=Q;while(1){P=c[J>>2]|0;C=P+168|0;x=c[C>>2]|0;G=P+172|0;do{if(x>>>0<(c[G>>2]|0)>>>0){R=x;A=786}else{L=P+32|0;if((c[L>>2]|0)==0){S=0;break}M=P+40|0;N=c_[c[P+16>>2]&63](c[P+28>>2]|0,M,c[P+36>>2]|0)|0;if((N|0)==0){c[L>>2]=0;L=(c[G>>2]|0)-1|0;c[C>>2]=L;a[L]=0;R=c[C>>2]|0;A=786;break}else{c[C>>2]=M;c[G>>2]=P+40+N;R=M;A=786;break}}}while(0);if((A|0)==786){A=0;c[C>>2]=R+1;P=a[R]|0;G=P&15;if((P&255)>>>0>15>>>0){A=787;break}if(G>>>0>3>>>0){A=789;break}else{S=G}}G=0;do{P=c[J>>2]|0;x=P+168|0;q=c[x>>2]|0;M=P+172|0;do{if(q>>>0<(c[M>>2]|0)>>>0){c[x>>2]=q+1;T=a[q]|0}else{N=P+32|0;if((c[N>>2]|0)==0){T=0;break}L=P+40|0;I=c_[c[P+16>>2]&63](c[P+28>>2]|0,L,c[P+36>>2]|0)|0;if((I|0)==0){c[N>>2]=0;N=(c[M>>2]|0)-1|0;c[x>>2]=N;a[N]=0;U=c[x>>2]|0}else{c[x>>2]=L;c[M>>2]=P+40+I;U=L}c[x>>2]=U+1;T=a[U]|0}}while(0);a[(d[13816+G|0]|0)+(b+13444+(S<<6))|0]=T;G=G+1|0;}while((G|0)<64);G=O-65|0;if((G|0)>0){O=G}else{V=G;break L1100}}if((A|0)==787){c[4668]=2064;F=0;i=f;return F|0}else if((A|0)==789){c[4668]=2048;F=0;i=f;return F|0}}else{V=Q}}while(0);F=(V|0)==0|0;i=f;return F|0};case 255:{c[4668]=2152;F=0;i=f;return F|0};case 194:{c[4668]=2128;F=0;i=f;return F|0};case 221:{V=b|0;Q=c[V>>2]|0;A=Q+168|0;T=c[A>>2]|0;S=Q+172|0;U=c[S>>2]|0;do{if(T>>>0<U>>>0){J=T+1|0;c[A>>2]=J;W=d[T]|0;X=J;Y=U}else{J=Q+32|0;if((c[J>>2]|0)==0){W=0;X=T;Y=U;break}R=Q+40|0;O=c_[c[Q+16>>2]&63](c[Q+28>>2]|0,R,c[Q+36>>2]|0)|0;if((O|0)==0){c[J>>2]=0;J=(c[S>>2]|0)-1|0;c[A>>2]=J;a[J]=0;Z=c[A>>2]|0;_=c[S>>2]|0}else{c[A>>2]=R;J=Q+40+O|0;c[S>>2]=J;Z=R;_=J}J=Z+1|0;c[A>>2]=J;W=d[Z]|0;X=J;Y=_}}while(0);_=W<<8;do{if(X>>>0<Y>>>0){c[A>>2]=X+1;$=d[X]|0}else{W=Q+32|0;if((c[W>>2]|0)==0){$=0;break}Z=Q+40|0;U=c_[c[Q+16>>2]&63](c[Q+28>>2]|0,Z,c[Q+36>>2]|0)|0;if((U|0)==0){c[W>>2]=0;W=(c[S>>2]|0)-1|0;c[A>>2]=W;a[W]=0;aa=c[A>>2]|0}else{c[A>>2]=Z;c[S>>2]=Q+40+U;aa=Z}c[A>>2]=aa+1;$=d[aa]|0}}while(0);if(($|_|0)!=4){c[4668]=2088;F=0;i=f;return F|0}_=c[V>>2]|0;V=_+168|0;$=c[V>>2]|0;aa=_+172|0;A=c[aa>>2]|0;do{if($>>>0<A>>>0){Q=$+1|0;c[V>>2]=Q;ab=d[$]|0;ac=Q;ad=A}else{Q=_+32|0;if((c[Q>>2]|0)==0){ab=0;ac=$;ad=A;break}S=_+40|0;X=c_[c[_+16>>2]&63](c[_+28>>2]|0,S,c[_+36>>2]|0)|0;if((X|0)==0){c[Q>>2]=0;Q=(c[aa>>2]|0)-1|0;c[V>>2]=Q;a[Q]=0;ae=c[V>>2]|0;af=c[aa>>2]|0}else{c[V>>2]=S;Q=_+40+X|0;c[aa>>2]=Q;ae=S;af=Q}Q=ae+1|0;c[V>>2]=Q;ab=d[ae]|0;ac=Q;ad=af}}while(0);af=ab<<8;do{if(ac>>>0<ad>>>0){c[V>>2]=ac+1;ag=d[ac]|0}else{ab=_+32|0;if((c[ab>>2]|0)==0){ag=0;break}ae=_+40|0;A=c_[c[_+16>>2]&63](c[_+28>>2]|0,ae,c[_+36>>2]|0)|0;if((A|0)==0){c[ab>>2]=0;ab=(c[aa>>2]|0)-1|0;c[V>>2]=ab;a[ab]=0;ah=c[V>>2]|0}else{c[V>>2]=ae;c[aa>>2]=_+40+A;ah=ae}c[V>>2]=ah+1;ag=d[ah]|0}}while(0);c[b+13984>>2]=ag|af;F=1;i=f;return F|0};default:{if(!((e-224|0)>>>0<16>>>0|(e|0)==254)){F=0;i=f;return F|0}e=c[b>>2]|0;b=e+168|0;af=c[b>>2]|0;ag=e+172|0;ah=c[ag>>2]|0;do{if(af>>>0<ah>>>0){V=af+1|0;c[b>>2]=V;ai=d[af]|0;aj=V;ak=ah}else{V=e+32|0;if((c[V>>2]|0)==0){ai=0;aj=af;ak=ah;break}_=e+40|0;aa=c_[c[e+16>>2]&63](c[e+28>>2]|0,_,c[e+36>>2]|0)|0;if((aa|0)==0){c[V>>2]=0;V=(c[ag>>2]|0)-1|0;c[b>>2]=V;a[V]=0;al=c[b>>2]|0;am=c[ag>>2]|0}else{c[b>>2]=_;V=e+40+aa|0;c[ag>>2]=V;al=_;am=V}V=al+1|0;c[b>>2]=V;ai=d[al]|0;aj=V;ak=am}}while(0);am=ai<<8;do{if(aj>>>0<ak>>>0){ai=aj+1|0;c[b>>2]=ai;an=d[aj]|0;ao=ai}else{ai=e+32|0;if((c[ai>>2]|0)==0){an=0;ao=aj;break}al=e+40|0;ah=c_[c[e+16>>2]&63](c[e+28>>2]|0,al,c[e+36>>2]|0)|0;if((ah|0)==0){c[ai>>2]=0;ai=(c[ag>>2]|0)-1|0;c[b>>2]=ai;a[ai]=0;ap=c[b>>2]|0}else{c[b>>2]=al;c[ag>>2]=e+40+ah;ap=al}al=ap+1|0;c[b>>2]=al;an=d[ap]|0;ao=al}}while(0);ap=(an|am)-2|0;do{if((c[e+16>>2]|0)!=0){am=c[ag>>2]|0;an=am-ao|0;if((an|0)>=(ap|0)){break}c[b>>2]=am;cV[c[e+20>>2]&255](c[e+28>>2]|0,ap-an|0);F=1;i=f;return F|0}}while(0);c[b>>2]=ao+ap;F=1;i=f;return F|0}}return 0}function eW(f,g){f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;h=0;i=0;while(1){j=g+(i<<2)|0;k=i+1|0;if((c[j>>2]|0)>0){l=k&255;m=h;n=0;while(1){o=m+1|0;a[f+1280+m|0]=l;p=n+1|0;if((p|0)<(c[j>>2]|0)){m=o;n=p}else{q=o;break}}}else{q=h}if((k|0)<16){h=q;i=k}else{break}}a[f+1280+q|0]=0;q=0;i=0;h=1;while(1){c[f+1612+(h<<2)>>2]=q-i;if((d[f+1280+q|0]|0|0)==(h|0)){g=q;n=i;while(1){r=n+1|0;s=g+1|0;b[f+512+(g<<1)>>1]=n&65535;if((d[f+1280+s|0]|0|0)==(h|0)){g=s;n=r}else{break}}if((n|0)<(1<<h|0)){t=r;u=s}else{v=892;break}}else{t=i;u=q}c[f+1540+(h<<2)>>2]=t<<16-h;w=h+1|0;if((w|0)<17){q=u;i=t<<1;h=w}else{break}}if((v|0)==892){c[4668]=1792;x=0;return x|0}c[f+1540+(w<<2)>>2]=-1;oe(f|0,-1|0,512);if((u|0)>0){y=0}else{x=1;return x|0}while(1){w=a[f+1280+y|0]|0;do{if((w&255)>>>0<10>>>0){v=9-(w&255)|0;h=1<<v;if((h|0)<=0){break}oe(f+((e[f+512+(y<<1)>>1]|0)<<v)|0,y&255|0,h|0)}}while(0);w=y+1|0;if((w|0)<(u|0)){y=w}else{x=1;break}}return x|0}function eX(f,g,h){f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;j=i;i=i+136|0;k=j|0;l=j+64|0;oe(l|0,0,68);oe(f|0,-1|0,1024);m=(h|0)>0;if(m){n=0;do{o=l+((d[g+n|0]|0)<<2)|0;c[o>>2]=(c[o>>2]|0)+1;n=n+1|0;}while((n|0)<(h|0))}c[l>>2]=0;n=1;while(1){if((n|0)>=16){p=0;q=0;r=1;break}if((c[l+(n<<2)>>2]|0)>(1<<n|0)){s=908;break}else{n=n+1|0}}if((s|0)==908){cm(1152,2848,2002,4616);return 0}while(1){c[k+(r<<2)>>2]=q;b[f+1024+(r<<1)>>1]=q&65535;b[f+1124+(r<<1)>>1]=p&65535;n=c[l+(r<<2)>>2]|0;o=n+q|0;if((n|0)!=0){if((o-1|0)>=(1<<r|0)){s=911;break}}c[f+1056+(r<<2)>>2]=o<<16-r;t=r+1|0;if((t|0)<16){p=n+p|0;q=o<<1;r=t}else{break}}if((s|0)==911){c[4668]=1216;u=0;i=j;return u|0}c[f+1120>>2]=65536;if(m){v=0}else{u=1;i=j;return u|0}while(1){m=a[g+v|0]|0;s=m&255;if(m<<24>>24!=0){r=k+(s<<2)|0;q=c[r>>2]|0;p=q-(e[f+1024+(s<<1)>>1]|0)+(e[f+1124+(s<<1)>>1]|0)|0;a[f+1156+p|0]=m;b[f+1444+(p<<1)>>1]=v&65535;do{if((m&255)>>>0<10>>>0){l=q>>>1&21845|q<<1&43690;t=l>>>2&13107|l<<2&52428;l=t>>>4&3855|t<<4&61680;t=(l<<8&65280|l>>>8)>>>((16-s|0)>>>0);if((t|0)>=512){break}l=p&65535;o=1<<s;n=t;do{b[f+(n<<1)>>1]=l;n=n+o|0;}while((n|0)<512)}}while(0);c[r>>2]=q+1}s=v+1|0;if((s|0)<(h|0)){v=s}else{u=1;break}}i=j;return u|0}function eY(a,f){a=a|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;g=a+8|0;h=c[g>>2]|0;i=a+12|0;L1241:do{if((h|0)<16){j=a|0;k=a+4|0;l=c[i>>2]|0;m=h;while(1){if(l>>>0>=1<<m>>>0){break}n=c[j>>2]|0;if(n>>>0<(c[k>>2]|0)>>>0){c[j>>2]=n+1;o=d[n]|0}else{o=0}n=o<<m|l;c[i>>2]=n;p=m+8|0;c[g>>2]=p;if((p|0)<25){l=n;m=p}else{q=p;r=n;break L1241}}cm(1368,2848,2064,4456);return 0}else{q=h;r=c[i>>2]|0}}while(0);i=a+12|0;a=b[f+((r&511)<<1)>>1]|0;h=a&65535;if(a<<16>>16!=-1){a=d[f+1156+h|0]|0;c[i>>2]=r>>>(a>>>0);c[g>>2]=q-a;s=e[f+1444+(h<<1)>>1]|0;return s|0}h=r>>>1&21845|r<<1&43690;a=h>>>2&13107|h<<2&52428;h=a>>>4&3855|a<<4&61680;a=h<<8&65280|h>>>8;h=10;while(1){if((a|0)<(c[f+1056+(h<<2)>>2]|0)){break}else{h=h+1|0}}if((h|0)==16){s=-1;return s|0}o=(a>>>((16-h|0)>>>0))-(e[f+1024+(h<<1)>>1]|0)+(e[f+1124+(h<<1)>>1]|0)|0;if((d[f+1156+o|0]|0|0)!=(h|0)){cm(1456,2848,2101,4600);return 0}c[i>>2]=r>>>(h>>>0);c[g>>2]=q-h;s=e[f+1444+(o<<1)>>1]|0;return s|0}function eZ(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0;if((f|0)==(e|0)){i=b;return i|0}if((f-1|0)>>>0>=4>>>0){cm(776,2848,838,4648);return 0}j=n$(ag(ag(g,f)|0,h)|0)|0;if((j|0)==0){n0(b);c[4668]=3032;i=0;return i|0}L1277:do{if((h|0)>0){k=(e<<3)+f|0;l=g-1|0;m=(l|0)>-1;n=0;L1279:while(1){o=ag(n,g)|0;p=b+(ag(o,e)|0)|0;q=j+(ag(o,f)|0)|0;L1281:do{switch(k|0){case 10:{if(m){r=p;s=q;t=l}else{break L1281}while(1){a[s]=a[r]|0;a[s+1|0]=-1;o=t-1|0;if((o|0)>-1){r=r+1|0;s=s+2|0;t=o}else{break}}break};case 11:{if(m){u=p;v=q;w=l}else{break L1281}while(1){o=a[u]|0;a[v+2|0]=o;a[v+1|0]=o;a[v]=o;o=w-1|0;if((o|0)>-1){u=u+1|0;v=v+3|0;w=o}else{break}}break};case 12:{if(m){x=p;y=q;z=l}else{break L1281}while(1){o=a[x]|0;a[y+2|0]=o;a[y+1|0]=o;a[y]=o;a[y+3|0]=-1;o=z-1|0;if((o|0)>-1){x=x+1|0;y=y+4|0;z=o}else{break}}break};case 17:{if(m){A=p;B=q;C=l}else{break L1281}while(1){a[B]=a[A]|0;o=C-1|0;if((o|0)>-1){A=A+2|0;B=B+1|0;C=o}else{break}}break};case 19:{if(m){D=p;E=q;F=l}else{break L1281}while(1){o=a[D]|0;a[E+2|0]=o;a[E+1|0]=o;a[E]=o;o=F-1|0;if((o|0)>-1){D=D+2|0;E=E+3|0;F=o}else{break}}break};case 20:{if(m){G=p;H=q;I=l}else{break L1281}while(1){o=a[G]|0;a[H+2|0]=o;a[H+1|0]=o;a[H]=o;a[H+3|0]=a[G+1|0]|0;o=I-1|0;if((o|0)>-1){G=G+2|0;H=H+4|0;I=o}else{break}}break};case 28:{if(m){J=p;K=q;L=l}else{break L1281}while(1){a[K]=a[J]|0;a[K+1|0]=a[J+1|0]|0;a[K+2|0]=a[J+2|0]|0;a[K+3|0]=-1;o=L-1|0;if((o|0)>-1){J=J+3|0;K=K+4|0;L=o}else{break}}break};case 25:{if(m){M=p;N=q;O=l}else{break L1281}while(1){a[N]=(((d[M+1|0]|0)*150|0)+((d[M]|0)*77|0)+((d[M+2|0]|0)*29|0)|0)>>>8&255;o=O-1|0;if((o|0)>-1){M=M+3|0;N=N+1|0;O=o}else{break}}break};case 26:{if(m){P=p;Q=q;R=l}else{break L1281}while(1){a[Q]=(((d[P+1|0]|0)*150|0)+((d[P]|0)*77|0)+((d[P+2|0]|0)*29|0)|0)>>>8&255;a[Q+1|0]=-1;o=R-1|0;if((o|0)>-1){P=P+3|0;Q=Q+2|0;R=o}else{break}}break};case 33:{if(m){S=p;T=q;U=l}else{break L1281}while(1){a[T]=(((d[S+1|0]|0)*150|0)+((d[S]|0)*77|0)+((d[S+2|0]|0)*29|0)|0)>>>8&255;o=U-1|0;if((o|0)>-1){S=S+4|0;T=T+1|0;U=o}else{break}}break};case 34:{if(m){V=p;W=q;X=l}else{break L1281}while(1){a[W]=(((d[V+1|0]|0)*150|0)+((d[V]|0)*77|0)+((d[V+2|0]|0)*29|0)|0)>>>8&255;a[W+1|0]=a[V+3|0]|0;o=X-1|0;if((o|0)>-1){V=V+4|0;W=W+2|0;X=o}else{break}}break};case 35:{if(m){Y=p;Z=q;_=l}else{break L1281}while(1){a[Z]=a[Y]|0;a[Z+1|0]=a[Y+1|0]|0;a[Z+2|0]=a[Y+2|0]|0;o=_-1|0;if((o|0)>-1){Y=Y+4|0;Z=Z+3|0;_=o}else{break}}break};default:{break L1279}}}while(0);n=n+1|0;if((n|0)>=(h|0)){break L1277}}cm(768,2848,867,4648);return 0}}while(0);n0(b);i=j;return i|0}function e_(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;f=b+16|0;g=b+168|0;h=b+172|0;i=b+24|0;j=b+28|0;k=b+32|0;L1323:do{if((d&128|0)==0){l=991}else{do{if((c[f>>2]|0)==0){l=988}else{if((cZ[c[i>>2]&255](c[j>>2]|0)|0)==0){break}if((c[k>>2]|0)==0){break L1323}else{l=988}}}while(0);if((l|0)==988){if((c[g>>2]|0)>>>0>=(c[h>>2]|0)>>>0){break}}a[e]=eN(b)|0;l=991}}while(0);L1331:do{if((l|0)==991){if((d&64|0)!=0){do{if((c[f>>2]|0)==0){l=996}else{if((cZ[c[i>>2]&255](c[j>>2]|0)|0)==0){break}if((c[k>>2]|0)==0){break L1331}else{l=996}}}while(0);if((l|0)==996){if((c[g>>2]|0)>>>0>=(c[h>>2]|0)>>>0){break}}a[e+1|0]=eN(b)|0}if((d&32|0)!=0){do{if((c[f>>2]|0)==0){l=1002}else{if((cZ[c[i>>2]&255](c[j>>2]|0)|0)==0){break}if((c[k>>2]|0)==0){break L1331}else{l=1002}}}while(0);if((l|0)==1002){if((c[g>>2]|0)>>>0>=(c[h>>2]|0)>>>0){break}}a[e+2|0]=eN(b)|0}if((d&16|0)==0){m=e;return m|0}do{if((c[f>>2]|0)==0){l=1008}else{if((cZ[c[i>>2]&255](c[j>>2]|0)|0)==0){break}if((c[k>>2]|0)==0){break L1331}else{l=1008}}}while(0);if((l|0)==1008){if((c[g>>2]|0)>>>0>=(c[h>>2]|0)>>>0){break}}a[e+3|0]=eN(b)|0;m=e;return m|0}}while(0);c[4668]=848;m=0;return m|0}function e$(e,f){e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;g=f&65535;f=b[e+2080+(g<<2)>>1]|0;if(f<<16>>16>-1){e$(e,f)}f=e+18500|0;h=c[f>>2]|0;i=e+18492|0;if((h|0)>=(c[i>>2]|0)){return}j=e+18496|0;k=c[j>>2]|0;l=k+h|0;h=c[e+8>>2]|0;m=d[e+2080+(g<<2)+3|0]<<2;g=c[e+18464>>2]|0;n=g+(m|3)|0;if((a[n]|0)<0){a[h+l|0]=a[g+(m|2)|0]|0;a[h+(l+1)|0]=a[g+(m|1)|0]|0;a[h+(l+2)|0]=a[g+m|0]|0;a[h+(l+3)|0]=a[n]|0;o=c[j>>2]|0}else{o=k}k=o+4|0;c[j>>2]=k;if((k|0)<(c[e+18488>>2]|0)){return}c[j>>2]=c[e+18480>>2];j=e+18472|0;k=(c[f>>2]|0)+(c[j>>2]|0)|0;c[f>>2]=k;o=e+18468|0;n=c[i>>2]|0;if((k|0)<(n|0)){return}k=e+18504|0;i=e+18484|0;e=c[o>>2]|0;while(1){if((e|0)<=0){p=1028;break}l=c[k>>2]<<e;c[j>>2]=l;h=(l>>1)+(c[i>>2]|0)|0;c[f>>2]=h;l=e-1|0;c[o>>2]=l;if((h|0)<(n|0)){p=1027;break}else{e=l}}if((p|0)==1027){return}else if((p|0)==1028){return}}
function j2(b,d,e,f,g,h,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0;l=i;i=i+328|0;m=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[m>>2];m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=l|0;n=l+8|0;o=l+16|0;p=l+24|0;q=l+32|0;r=l+40|0;s=l+48|0;t=l+56|0;u=l+64|0;v=l+72|0;w=l+80|0;x=l+88|0;y=l+96|0;z=l+112|0;A=l+120|0;B=l+128|0;C=l+136|0;D=l+144|0;E=l+152|0;F=l+160|0;G=l+168|0;H=l+176|0;I=l+184|0;J=l+192|0;K=l+200|0;L=l+208|0;M=l+216|0;N=l+224|0;O=l+232|0;P=l+240|0;Q=l+248|0;R=l+256|0;S=l+264|0;T=l+272|0;U=l+280|0;V=l+288|0;W=l+296|0;X=l+304|0;Y=l+312|0;Z=l+320|0;c[h>>2]=0;hi(z,g);_=z|0;z=c[_>>2]|0;if((c[4532]|0)!=-1){c[y>>2]=18128;c[y+4>>2]=16;c[y+8>>2]=0;gV(18128,y,108)}y=(c[4533]|0)-1|0;$=c[z+8>>2]|0;do{if((c[z+12>>2]|0)-$>>2>>>0>y>>>0){aa=c[$+(y<<2)>>2]|0;if((aa|0)==0){break}ab=aa;aa=c[_>>2]|0;gA(aa)|0;L1386:do{switch(k<<24>>24|0){case 110:case 116:{c[J>>2]=c[f>>2];j3(0,e,J,h,ab);break};case 82:{aa=e|0;c[P>>2]=c[aa>>2];c[Q>>2]=c[f>>2];jV(O,d,P,Q,g,h,j,4872,4892);c[aa>>2]=c[O>>2];break};case 98:case 66:case 104:{aa=c[f>>2]|0;ac=d+8|0;ad=cZ[c[(c[ac>>2]|0)+4>>2]&255](ac)|0;c[w>>2]=aa;aa=(iQ(e,w,ad,ad+288|0,ab,h,0)|0)-ad|0;if((aa|0)>=288){break L1386}c[j+16>>2]=((aa|0)/12|0|0)%12|0;break};case 72:{c[u>>2]=c[f>>2];aa=j6(e,u,h,ab,2)|0;ad=c[h>>2]|0;if((ad&4|0)==0&(aa|0)<24){c[j+8>>2]=aa;break L1386}else{c[h>>2]=ad|4;break L1386}break};case 88:{ad=d+8|0;aa=cZ[c[(c[ad>>2]|0)+24>>2]&255](ad)|0;ad=e|0;c[X>>2]=c[ad>>2];c[Y>>2]=c[f>>2];ac=a[aa]|0;if((ac&1)==0){ae=aa+4|0;af=aa+4|0}else{ag=c[aa+8>>2]|0;ae=ag;af=ag}ag=ac&255;if((ag&1|0)==0){ah=ag>>>1}else{ah=c[aa+4>>2]|0}jV(W,d,X,Y,g,h,j,af,ae+(ah<<2)|0);c[ad>>2]=c[W>>2];break};case 112:{c[K>>2]=c[f>>2];j4(d,j+8|0,e,K,h,ab);break};case 114:{ad=e|0;c[M>>2]=c[ad>>2];c[N>>2]=c[f>>2];jV(L,d,M,N,g,h,j,4896,4940);c[ad>>2]=c[L>>2];break};case 100:case 101:{ad=j+12|0;c[v>>2]=c[f>>2];aa=j6(e,v,h,ab,2)|0;ag=c[h>>2]|0;do{if((ag&4|0)==0){if((aa-1|0)>>>0>=31>>>0){break}c[ad>>2]=aa;break L1386}}while(0);c[h>>2]=ag|4;break};case 106:{c[s>>2]=c[f>>2];aa=j6(e,s,h,ab,3)|0;ad=c[h>>2]|0;if((ad&4|0)==0&(aa|0)<366){c[j+28>>2]=aa;break L1386}else{c[h>>2]=ad|4;break L1386}break};case 120:{ad=c[(c[d>>2]|0)+20>>2]|0;c[U>>2]=c[e>>2];c[V>>2]=c[f>>2];c$[ad&127](b,d,U,V,g,h,j);i=l;return};case 97:case 65:{ad=c[f>>2]|0;aa=d+8|0;ac=cZ[c[c[aa>>2]>>2]&255](aa)|0;c[x>>2]=ad;ad=(iQ(e,x,ac,ac+168|0,ab,h,0)|0)-ac|0;if((ad|0)>=168){break L1386}c[j+24>>2]=((ad|0)/12|0|0)%7|0;break};case 73:{ad=j+8|0;c[t>>2]=c[f>>2];ac=j6(e,t,h,ab,2)|0;aa=c[h>>2]|0;do{if((aa&4|0)==0){if((ac-1|0)>>>0>=12>>>0){break}c[ad>>2]=ac;break L1386}}while(0);c[h>>2]=aa|4;break};case 99:{ac=d+8|0;ad=cZ[c[(c[ac>>2]|0)+12>>2]&255](ac)|0;ac=e|0;c[B>>2]=c[ac>>2];c[C>>2]=c[f>>2];ag=a[ad]|0;if((ag&1)==0){ai=ad+4|0;aj=ad+4|0}else{ak=c[ad+8>>2]|0;ai=ak;aj=ak}ak=ag&255;if((ak&1|0)==0){al=ak>>>1}else{al=c[ad+4>>2]|0}jV(A,d,B,C,g,h,j,aj,ai+(al<<2)|0);c[ac>>2]=c[A>>2];break};case 109:{c[r>>2]=c[f>>2];ac=(j6(e,r,h,ab,2)|0)-1|0;ad=c[h>>2]|0;if((ad&4|0)==0&(ac|0)<12){c[j+16>>2]=ac;break L1386}else{c[h>>2]=ad|4;break L1386}break};case 77:{c[q>>2]=c[f>>2];ad=j6(e,q,h,ab,2)|0;ac=c[h>>2]|0;if((ac&4|0)==0&(ad|0)<60){c[j+4>>2]=ad;break L1386}else{c[h>>2]=ac|4;break L1386}break};case 68:{ac=e|0;c[E>>2]=c[ac>>2];c[F>>2]=c[f>>2];jV(D,d,E,F,g,h,j,4944,4976);c[ac>>2]=c[D>>2];break};case 70:{ac=e|0;c[H>>2]=c[ac>>2];c[I>>2]=c[f>>2];jV(G,d,H,I,g,h,j,4808,4840);c[ac>>2]=c[G>>2];break};case 83:{c[p>>2]=c[f>>2];ac=j6(e,p,h,ab,2)|0;ad=c[h>>2]|0;if((ad&4|0)==0&(ac|0)<61){c[j>>2]=ac;break L1386}else{c[h>>2]=ad|4;break L1386}break};case 84:{ad=e|0;c[S>>2]=c[ad>>2];c[T>>2]=c[f>>2];jV(R,d,S,T,g,h,j,4840,4872);c[ad>>2]=c[R>>2];break};case 119:{c[o>>2]=c[f>>2];ad=j6(e,o,h,ab,1)|0;ac=c[h>>2]|0;if((ac&4|0)==0&(ad|0)<7){c[j+24>>2]=ad;break L1386}else{c[h>>2]=ac|4;break L1386}break};case 89:{c[m>>2]=c[f>>2];ac=j6(e,m,h,ab,4)|0;if((c[h>>2]&4|0)!=0){break L1386}c[j+20>>2]=ac-1900;break};case 37:{c[Z>>2]=c[f>>2];j5(0,e,Z,h,ab);break};case 121:{c[n>>2]=c[f>>2];ac=j6(e,n,h,ab,4)|0;if((c[h>>2]&4|0)!=0){break L1386}if((ac|0)<69){am=ac+2e3|0}else{am=(ac-69|0)>>>0<31>>>0?ac+1900|0:ac}c[j+20>>2]=am-1900;break};default:{c[h>>2]=c[h>>2]|4}}}while(0);c[b>>2]=c[e>>2];i=l;return}}while(0);l=cy(4)|0;nG(l);bK(l|0,11832,162)}function j3(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;a=i;g=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[g>>2];g=b|0;b=d|0;d=f;L1467:while(1){h=c[g>>2]|0;do{if((h|0)==0){j=1}else{k=c[h+12>>2]|0;if((k|0)==(c[h+16>>2]|0)){l=cZ[c[(c[h>>2]|0)+36>>2]&255](h)|0}else{l=c[k>>2]|0}if((l|0)==-1){c[g>>2]=0;j=1;break}else{j=(c[g>>2]|0)==0;break}}}while(0);h=c[b>>2]|0;do{if((h|0)==0){m=1230}else{k=c[h+12>>2]|0;if((k|0)==(c[h+16>>2]|0)){n=cZ[c[(c[h>>2]|0)+36>>2]&255](h)|0}else{n=c[k>>2]|0}if((n|0)==-1){c[b>>2]=0;m=1230;break}else{k=(h|0)==0;if(j^k){o=h;p=k;break}else{q=h;r=k;break L1467}}}}while(0);if((m|0)==1230){m=0;if(j){q=0;r=1;break}else{o=0;p=1}}h=c[g>>2]|0;k=c[h+12>>2]|0;if((k|0)==(c[h+16>>2]|0)){s=cZ[c[(c[h>>2]|0)+36>>2]&255](h)|0}else{s=c[k>>2]|0}if(!(c_[c[(c[d>>2]|0)+12>>2]&63](f,8192,s)|0)){q=o;r=p;break}k=c[g>>2]|0;h=k+12|0;t=c[h>>2]|0;if((t|0)==(c[k+16>>2]|0)){u=c[(c[k>>2]|0)+40>>2]|0;cZ[u&255](k)|0;continue}else{c[h>>2]=t+4;continue}}p=c[g>>2]|0;do{if((p|0)==0){v=1}else{o=c[p+12>>2]|0;if((o|0)==(c[p+16>>2]|0)){w=cZ[c[(c[p>>2]|0)+36>>2]&255](p)|0}else{w=c[o>>2]|0}if((w|0)==-1){c[g>>2]=0;v=1;break}else{v=(c[g>>2]|0)==0;break}}}while(0);do{if(r){m=1252}else{g=c[q+12>>2]|0;if((g|0)==(c[q+16>>2]|0)){x=cZ[c[(c[q>>2]|0)+36>>2]&255](q)|0}else{x=c[g>>2]|0}if((x|0)==-1){c[b>>2]=0;m=1252;break}if(!(v^(q|0)==0)){break}i=a;return}}while(0);do{if((m|0)==1252){if(v){break}i=a;return}}while(0);c[e>>2]=c[e>>2]|2;i=a;return}function j4(a,b,e,f,g,h){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+8|0;k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=j|0;l=a+8|0;a=cZ[c[(c[l>>2]|0)+8>>2]&255](l)|0;l=d[a]|0;if((l&1|0)==0){m=l>>>1}else{m=c[a+4>>2]|0}l=d[a+12|0]|0;if((l&1|0)==0){n=l>>>1}else{n=c[a+16>>2]|0}if((m|0)==(-n|0)){c[g>>2]=c[g>>2]|4;i=j;return}c[k>>2]=c[f>>2];f=iQ(e,k,a,a+24|0,h,g,0)|0;g=f-a|0;do{if((f|0)==(a|0)){if((c[b>>2]|0)!=12){break}c[b>>2]=0;i=j;return}}while(0);if((g|0)!=12){i=j;return}g=c[b>>2]|0;if((g|0)>=12){i=j;return}c[b>>2]=g+12;i=j;return}function j5(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;a=i;g=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[g>>2];g=b|0;b=c[g>>2]|0;do{if((b|0)==0){h=1}else{j=c[b+12>>2]|0;if((j|0)==(c[b+16>>2]|0)){k=cZ[c[(c[b>>2]|0)+36>>2]&255](b)|0}else{k=c[j>>2]|0}if((k|0)==-1){c[g>>2]=0;h=1;break}else{h=(c[g>>2]|0)==0;break}}}while(0);k=d|0;d=c[k>>2]|0;do{if((d|0)==0){l=1292}else{b=c[d+12>>2]|0;if((b|0)==(c[d+16>>2]|0)){m=cZ[c[(c[d>>2]|0)+36>>2]&255](d)|0}else{m=c[b>>2]|0}if((m|0)==-1){c[k>>2]=0;l=1292;break}else{b=(d|0)==0;if(h^b){n=d;o=b;break}else{l=1294;break}}}}while(0);if((l|0)==1292){if(h){l=1294}else{n=0;o=1}}if((l|0)==1294){c[e>>2]=c[e>>2]|6;i=a;return}h=c[g>>2]|0;d=c[h+12>>2]|0;if((d|0)==(c[h+16>>2]|0)){p=cZ[c[(c[h>>2]|0)+36>>2]&255](h)|0}else{p=c[d>>2]|0}if((c_[c[(c[f>>2]|0)+52>>2]&63](f,p,0)|0)<<24>>24!=37){c[e>>2]=c[e>>2]|4;i=a;return}p=c[g>>2]|0;f=p+12|0;d=c[f>>2]|0;if((d|0)==(c[p+16>>2]|0)){h=c[(c[p>>2]|0)+40>>2]|0;cZ[h&255](p)|0}else{c[f>>2]=d+4}d=c[g>>2]|0;do{if((d|0)==0){q=1}else{f=c[d+12>>2]|0;if((f|0)==(c[d+16>>2]|0)){r=cZ[c[(c[d>>2]|0)+36>>2]&255](d)|0}else{r=c[f>>2]|0}if((r|0)==-1){c[g>>2]=0;q=1;break}else{q=(c[g>>2]|0)==0;break}}}while(0);do{if(o){l=1316}else{g=c[n+12>>2]|0;if((g|0)==(c[n+16>>2]|0)){s=cZ[c[(c[n>>2]|0)+36>>2]&255](n)|0}else{s=c[g>>2]|0}if((s|0)==-1){c[k>>2]=0;l=1316;break}if(!(q^(n|0)==0)){break}i=a;return}}while(0);do{if((l|0)==1316){if(q){break}i=a;return}}while(0);c[e>>2]=c[e>>2]|2;i=a;return}function j6(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;g=i;h=b;b=i;i=i+4|0;i=i+7&-8;c[b>>2]=c[h>>2];h=a|0;a=c[h>>2]|0;do{if((a|0)==0){j=1}else{k=c[a+12>>2]|0;if((k|0)==(c[a+16>>2]|0)){l=cZ[c[(c[a>>2]|0)+36>>2]&255](a)|0}else{l=c[k>>2]|0}if((l|0)==-1){c[h>>2]=0;j=1;break}else{j=(c[h>>2]|0)==0;break}}}while(0);l=b|0;b=c[l>>2]|0;do{if((b|0)==0){m=1338}else{a=c[b+12>>2]|0;if((a|0)==(c[b+16>>2]|0)){n=cZ[c[(c[b>>2]|0)+36>>2]&255](b)|0}else{n=c[a>>2]|0}if((n|0)==-1){c[l>>2]=0;m=1338;break}else{if(j^(b|0)==0){o=b;break}else{m=1340;break}}}}while(0);if((m|0)==1338){if(j){m=1340}else{o=0}}if((m|0)==1340){c[d>>2]=c[d>>2]|6;p=0;i=g;return p|0}j=c[h>>2]|0;b=c[j+12>>2]|0;if((b|0)==(c[j+16>>2]|0)){q=cZ[c[(c[j>>2]|0)+36>>2]&255](j)|0}else{q=c[b>>2]|0}b=e;if(!(c_[c[(c[b>>2]|0)+12>>2]&63](e,2048,q)|0)){c[d>>2]=c[d>>2]|4;p=0;i=g;return p|0}j=e;n=(c_[c[(c[j>>2]|0)+52>>2]&63](e,q,0)|0)<<24>>24;q=c[h>>2]|0;a=q+12|0;k=c[a>>2]|0;if((k|0)==(c[q+16>>2]|0)){r=c[(c[q>>2]|0)+40>>2]|0;cZ[r&255](q)|0;s=n;t=f;u=o}else{c[a>>2]=k+4;s=n;t=f;u=o}while(1){v=s-48|0;o=t-1|0;f=c[h>>2]|0;do{if((f|0)==0){w=0}else{n=c[f+12>>2]|0;if((n|0)==(c[f+16>>2]|0)){x=cZ[c[(c[f>>2]|0)+36>>2]&255](f)|0}else{x=c[n>>2]|0}if((x|0)==-1){c[h>>2]=0;w=0;break}else{w=c[h>>2]|0;break}}}while(0);f=(w|0)==0;if((u|0)==0){y=w;z=0}else{n=c[u+12>>2]|0;if((n|0)==(c[u+16>>2]|0)){A=cZ[c[(c[u>>2]|0)+36>>2]&255](u)|0}else{A=c[n>>2]|0}if((A|0)==-1){c[l>>2]=0;B=0}else{B=u}y=c[h>>2]|0;z=B}C=(z|0)==0;if(!((f^C)&(o|0)>0)){break}f=c[y+12>>2]|0;if((f|0)==(c[y+16>>2]|0)){D=cZ[c[(c[y>>2]|0)+36>>2]&255](y)|0}else{D=c[f>>2]|0}if(!(c_[c[(c[b>>2]|0)+12>>2]&63](e,2048,D)|0)){p=v;m=1392;break}f=((c_[c[(c[j>>2]|0)+52>>2]&63](e,D,0)|0)<<24>>24)+(v*10|0)|0;n=c[h>>2]|0;k=n+12|0;a=c[k>>2]|0;if((a|0)==(c[n+16>>2]|0)){q=c[(c[n>>2]|0)+40>>2]|0;cZ[q&255](n)|0;s=f;t=o;u=z;continue}else{c[k>>2]=a+4;s=f;t=o;u=z;continue}}if((m|0)==1392){i=g;return p|0}do{if((y|0)==0){E=1}else{u=c[y+12>>2]|0;if((u|0)==(c[y+16>>2]|0)){F=cZ[c[(c[y>>2]|0)+36>>2]&255](y)|0}else{F=c[u>>2]|0}if((F|0)==-1){c[h>>2]=0;E=1;break}else{E=(c[h>>2]|0)==0;break}}}while(0);do{if(C){m=1384}else{h=c[z+12>>2]|0;if((h|0)==(c[z+16>>2]|0)){G=cZ[c[(c[z>>2]|0)+36>>2]&255](z)|0}else{G=c[h>>2]|0}if((G|0)==-1){c[l>>2]=0;m=1384;break}if(E^(z|0)==0){p=v}else{break}i=g;return p|0}}while(0);do{if((m|0)==1384){if(E){break}else{p=v}i=g;return p|0}}while(0);c[d>>2]=c[d>>2]|2;p=v;i=g;return p|0}function j7(b){b=b|0;var d=0,e=0,f=0,g=0;d=b;e=b+8|0;f=c[e>>2]|0;do{if((a[19040]|0)==0){if((bx(19040)|0)==0){break}c[4176]=a0(2147483647,3232,0)|0}}while(0);if((f|0)==(c[4176]|0)){g=b|0;gy(g);n6(d);return}bq(c[e>>2]|0);g=b|0;gy(g);n6(d);return}function j8(b){b=b|0;var d=0,e=0,f=0;d=b+8|0;e=c[d>>2]|0;do{if((a[19040]|0)==0){if((bx(19040)|0)==0){break}c[4176]=a0(2147483647,3232,0)|0}}while(0);if((e|0)==(c[4176]|0)){f=b|0;gy(f);return}bq(c[d>>2]|0);f=b|0;gy(f);return}function j9(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;g=i;i=i+112|0;f=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[f>>2];f=g|0;l=g+8|0;m=l|0;n=f|0;a[n]=37;o=f+1|0;a[o]=j;p=f+2|0;a[p]=k;a[f+3|0]=0;if(k<<24>>24!=0){a[o]=k;a[p]=j}j=bH(m|0,100,n|0,h|0,c[d+8>>2]|0)|0;d=l+j|0;l=c[e>>2]|0;if((j|0)==0){q=l;r=b|0;c[r>>2]=q;i=g;return}else{s=l;t=m}while(1){m=a[t]|0;if((s|0)==0){u=0}else{l=s+24|0;j=c[l>>2]|0;if((j|0)==(c[s+28>>2]|0)){v=c6[c[(c[s>>2]|0)+52>>2]&63](s,m&255)|0}else{c[l>>2]=j+1;a[j]=m;v=m&255}u=(v|0)==-1?0:s}m=t+1|0;if((m|0)==(d|0)){q=u;break}else{s=u;t=m}}r=b|0;c[r>>2]=q;i=g;return}function ka(b){b=b|0;var d=0,e=0,f=0,g=0;d=b;e=b+8|0;f=c[e>>2]|0;do{if((a[19040]|0)==0){if((bx(19040)|0)==0){break}c[4176]=a0(2147483647,3232,0)|0}}while(0);if((f|0)==(c[4176]|0)){g=b|0;gy(g);n6(d);return}bq(c[e>>2]|0);g=b|0;gy(g);n6(d);return}function kb(b){b=b|0;var d=0,e=0,f=0;d=b+8|0;e=c[d>>2]|0;do{if((a[19040]|0)==0){if((bx(19040)|0)==0){break}c[4176]=a0(2147483647,3232,0)|0}}while(0);if((e|0)==(c[4176]|0)){f=b|0;gy(f);return}bq(c[d>>2]|0);f=b|0;gy(f);return}function kc(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;f=i;i=i+408|0;e=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[e>>2];e=f|0;k=f+400|0;l=e|0;c[k>>2]=e+400;kd(b+8|0,l,k,g,h,j);j=c[k>>2]|0;k=c[d>>2]|0;if((l|0)==(j|0)){m=k;n=a|0;c[n>>2]=m;i=f;return}else{o=k;p=l}while(1){l=c[p>>2]|0;if((o|0)==0){q=0}else{k=o+24|0;d=c[k>>2]|0;if((d|0)==(c[o+28>>2]|0)){r=c6[c[(c[o>>2]|0)+52>>2]&63](o,l)|0}else{c[k>>2]=d+4;c[d>>2]=l;r=l}q=(r|0)==-1?0:o}l=p+4|0;if((l|0)==(j|0)){m=q;break}else{o=q;p=l}}n=a|0;c[n>>2]=m;i=f;return}function kd(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;j=i;i=i+120|0;k=j|0;l=j+112|0;m=i;i=i+4|0;i=i+7&-8;n=j+8|0;o=k|0;a[o]=37;p=k+1|0;a[p]=g;q=k+2|0;a[q]=h;a[k+3|0]=0;if(h<<24>>24!=0){a[p]=h;a[q]=g}g=b|0;bH(n|0,100,o|0,f|0,c[g>>2]|0)|0;c[l>>2]=0;c[l+4>>2]=0;c[m>>2]=n;n=(c[e>>2]|0)-d>>2;f=ch(c[g>>2]|0)|0;g=nw(d,m,n,l)|0;if((f|0)!=0){ch(f|0)|0}if((g|0)==-1){k$(2280)}else{c[e>>2]=d+(g<<2);i=j;return}}function ke(a){a=a|0;gy(a|0);n6(a);return}function kf(a){a=a|0;gy(a|0);return}function kg(a){a=a|0;return 127}function kh(a){a=a|0;return 127}function ki(a,b){a=a|0;b=b|0;oe(a|0,0,12);return}function kj(a,b){a=a|0;b=b|0;oe(a|0,0,12);return}function kk(a,b){a=a|0;b=b|0;oe(a|0,0,12);return}function kl(a,b){a=a|0;b=b|0;gZ(a,1,45);return}function km(a){a=a|0;return 0}function kn(b,c){b=b|0;c=c|0;c=b;C=67109634;a[c]=C&255;C=C>>8;a[c+1|0]=C&255;C=C>>8;a[c+2|0]=C&255;C=C>>8;a[c+3|0]=C&255;return}function ko(b,c){b=b|0;c=c|0;c=b;C=67109634;a[c]=C&255;C=C>>8;a[c+1|0]=C&255;C=C>>8;a[c+2|0]=C&255;C=C>>8;a[c+3|0]=C&255;return}function kp(a){a=a|0;gy(a|0);n6(a);return}function kq(a){a=a|0;gy(a|0);return}function kr(a){a=a|0;return 127}function ks(a){a=a|0;return 127}function kt(a,b){a=a|0;b=b|0;oe(a|0,0,12);return}function ku(a,b){a=a|0;b=b|0;oe(a|0,0,12);return}function kv(a,b){a=a|0;b=b|0;oe(a|0,0,12);return}function kw(a,b){a=a|0;b=b|0;gZ(a,1,45);return}function kx(a){a=a|0;return 0}function ky(b,c){b=b|0;c=c|0;c=b;C=67109634;a[c]=C&255;C=C>>8;a[c+1|0]=C&255;C=C>>8;a[c+2|0]=C&255;C=C>>8;a[c+3|0]=C&255;return}function kz(b,c){b=b|0;c=c|0;c=b;C=67109634;a[c]=C&255;C=C>>8;a[c+1|0]=C&255;C=C>>8;a[c+2|0]=C&255;C=C>>8;a[c+3|0]=C&255;return}function kA(a){a=a|0;gy(a|0);n6(a);return}function kB(a){a=a|0;gy(a|0);return}function kC(a){a=a|0;return 2147483647}function kD(a){a=a|0;return 2147483647}function kE(a,b){a=a|0;b=b|0;oe(a|0,0,12);return}function kF(a,b){a=a|0;b=b|0;oe(a|0,0,12);return}function kG(a,b){a=a|0;b=b|0;oe(a|0,0,12);return}function kH(a,b){a=a|0;b=b|0;g8(a,1,45);return}function kI(a){a=a|0;return 0}function kJ(b,c){b=b|0;c=c|0;c=b;C=67109634;a[c]=C&255;C=C>>8;a[c+1|0]=C&255;C=C>>8;a[c+2|0]=C&255;C=C>>8;a[c+3|0]=C&255;return}function kK(b,c){b=b|0;c=c|0;c=b;C=67109634;a[c]=C&255;C=C>>8;a[c+1|0]=C&255;C=C>>8;a[c+2|0]=C&255;C=C>>8;a[c+3|0]=C&255;return}function kL(a){a=a|0;gy(a|0);n6(a);return}function kM(a){a=a|0;gy(a|0);return}function kN(a){a=a|0;return 2147483647}function kO(a){a=a|0;return 2147483647}function kP(a,b){a=a|0;b=b|0;oe(a|0,0,12);return}function kQ(a,b){a=a|0;b=b|0;oe(a|0,0,12);return}function kR(a,b){a=a|0;b=b|0;oe(a|0,0,12);return}function kS(a,b){a=a|0;b=b|0;g8(a,1,45);return}function kT(a){a=a|0;return 0}function kU(b,c){b=b|0;c=c|0;c=b;C=67109634;a[c]=C&255;C=C>>8;a[c+1|0]=C&255;C=C>>8;a[c+2|0]=C&255;C=C>>8;a[c+3|0]=C&255;return}function kV(b,c){b=b|0;c=c|0;c=b;C=67109634;a[c]=C&255;C=C>>8;a[c+1|0]=C&255;C=C>>8;a[c+2|0]=C&255;C=C>>8;a[c+3|0]=C&255;return}function kW(a){a=a|0;gy(a|0);n6(a);return}function kX(a){a=a|0;gy(a|0);return}function kY(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;d=i;i=i+280|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d|0;m=d+16|0;n=d+120|0;o=d+128|0;p=d+136|0;q=d+144|0;r=d+152|0;s=d+160|0;t=d+176|0;u=n|0;c[u>>2]=m;v=n+4|0;c[v>>2]=198;w=m+100|0;hi(p,h);m=p|0;x=c[m>>2]|0;if((c[4534]|0)!=-1){c[l>>2]=18136;c[l+4>>2]=16;c[l+8>>2]=0;gV(18136,l,108)}l=(c[4535]|0)-1|0;y=c[x+8>>2]|0;do{if((c[x+12>>2]|0)-y>>2>>>0>l>>>0){z=c[y+(l<<2)>>2]|0;if((z|0)==0){break}A=z;a[q]=0;B=f|0;c[r>>2]=c[B>>2];do{if(k_(e,r,g,p,c[h+4>>2]|0,j,q,A,n,o,w)|0){C=s|0;D=c[(c[z>>2]|0)+32>>2]|0;cX[D&15](A,4792,4802,C)|0;D=t|0;E=c[o>>2]|0;F=c[u>>2]|0;G=E-F|0;do{if((G|0)>98){H=n$(G+2|0)|0;if((H|0)!=0){I=H;J=H;break}ob();I=0;J=0}else{I=D;J=0}}while(0);if((a[q]&1)==0){K=I}else{a[I]=45;K=I+1|0}if(F>>>0<E>>>0){G=s+10|0;H=s;L=K;M=F;while(1){N=C;while(1){if((N|0)==(G|0)){O=G;break}if((a[N]|0)==(a[M]|0)){O=N;break}else{N=N+1|0}}a[L]=a[4792+(O-H)|0]|0;N=M+1|0;P=L+1|0;if(N>>>0<(c[o>>2]|0)>>>0){L=P;M=N}else{Q=P;break}}}else{Q=K}a[Q]=0;M=ck(D|0,3600,(L=i,i=i+8|0,c[L>>2]=k,L)|0)|0;i=L;if((M|0)==1){if((J|0)==0){break}n0(J);break}M=cy(8)|0;gG(M,3536);bK(M|0,11848,28)}}while(0);A=e|0;z=c[A>>2]|0;do{if((z|0)==0){R=0}else{if((c[z+12>>2]|0)!=(c[z+16>>2]|0)){R=z;break}if((cZ[c[(c[z>>2]|0)+36>>2]&255](z)|0)!=-1){R=z;break}c[A>>2]=0;R=0}}while(0);A=(R|0)==0;z=c[B>>2]|0;do{if((z|0)==0){S=1567}else{if((c[z+12>>2]|0)!=(c[z+16>>2]|0)){if(A){break}else{S=1569;break}}if((cZ[c[(c[z>>2]|0)+36>>2]&255](z)|0)==-1){c[B>>2]=0;S=1567;break}else{if(A^(z|0)==0){break}else{S=1569;break}}}}while(0);if((S|0)==1567){if(A){S=1569}}if((S|0)==1569){c[j>>2]=c[j>>2]|2}c[b>>2]=R;z=c[m>>2]|0;gA(z)|0;z=c[u>>2]|0;c[u>>2]=0;if((z|0)==0){i=d;return}cU[c[v>>2]&511](z);i=d;return}}while(0);d=cy(4)|0;nG(d);bK(d|0,11832,162)}function kZ(a){a=a|0;return}function k_(e,f,g,h,j,k,l,m,n,o,p){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;var q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aK=0,aL=0,aM=0,aN=0,aO=0,aP=0,aQ=0,aR=0,aS=0,aT=0,aU=0,aV=0,aW=0,aX=0,aY=0,aZ=0,a_=0,a$=0,a0=0,a1=0,a2=0,a3=0,a4=0,a5=0,a6=0,a7=0,a8=0,a9=0,ba=0,bb=0,bc=0,bd=0,be=0,bf=0,bg=0,bh=0,bi=0,bj=0,bk=0,bl=0,bm=0,bn=0,bo=0,bp=0,bq=0,br=0,bs=0,bt=0,bu=0,bv=0,bw=0,bx=0,by=0,bz=0,bA=0,bB=0,bC=0,bD=0,bE=0,bF=0,bG=0,bH=0,bI=0,bJ=0;q=i;i=i+440|0;r=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[r>>2];r=q|0;s=q+400|0;t=q+408|0;u=q+416|0;v=q+424|0;w=v;x=i;i=i+12|0;i=i+7&-8;y=i;i=i+12|0;i=i+7&-8;z=i;i=i+12|0;i=i+7&-8;A=i;i=i+12|0;i=i+7&-8;B=i;i=i+4|0;i=i+7&-8;C=i;i=i+4|0;i=i+7&-8;D=r|0;oe(w|0,0,12);E=x;F=y;G=z;H=A;oe(E|0,0,12);oe(F|0,0,12);oe(G|0,0,12);oe(H|0,0,12);k2(g,h,s,t,u,v,x,y,z,B);h=n|0;c[o>>2]=c[h>>2];g=e|0;e=f|0;f=m+8|0;m=z+1|0;I=z+4|0;J=z+8|0;K=y+1|0;L=y+4|0;M=y+8|0;N=(j&512|0)!=0;j=x+1|0;O=x+4|0;P=x+8|0;Q=A+1|0;R=A+4|0;S=A+8|0;T=s+3|0;U=v+4|0;V=n+4|0;n=p;p=198;W=D;X=D;D=r+400|0;r=0;Y=0;L1899:while(1){Z=c[g>>2]|0;do{if((Z|0)==0){_=0}else{if((c[Z+12>>2]|0)!=(c[Z+16>>2]|0)){_=Z;break}if((cZ[c[(c[Z>>2]|0)+36>>2]&255](Z)|0)==-1){c[g>>2]=0;_=0;break}else{_=c[g>>2]|0;break}}}while(0);Z=(_|0)==0;$=c[e>>2]|0;do{if(($|0)==0){aa=1595}else{if((c[$+12>>2]|0)!=(c[$+16>>2]|0)){if(Z){ab=$;break}else{ac=p;ad=W;ae=X;af=r;aa=1854;break L1899}}if((cZ[c[(c[$>>2]|0)+36>>2]&255]($)|0)==-1){c[e>>2]=0;aa=1595;break}else{if(Z){ab=$;break}else{ac=p;ad=W;ae=X;af=r;aa=1854;break L1899}}}}while(0);if((aa|0)==1595){aa=0;if(Z){ac=p;ad=W;ae=X;af=r;aa=1854;break}else{ab=0}}L1921:do{switch(a[s+Y|0]|0){case 1:{if((Y|0)==3){ac=p;ad=W;ae=X;af=r;aa=1854;break L1899}$=c[g>>2]|0;ag=c[$+12>>2]|0;if((ag|0)==(c[$+16>>2]|0)){ah=(cZ[c[(c[$>>2]|0)+36>>2]&255]($)|0)&255}else{ah=a[ag]|0}ag=ah<<24>>24;if((b4(ag|0)|0)==0){aa=1622;break L1899}if((b[(c[f>>2]|0)+(ag<<1)>>1]&8192)==0){aa=1622;break L1899}ag=c[g>>2]|0;$=ag+12|0;ai=c[$>>2]|0;if((ai|0)==(c[ag+16>>2]|0)){aj=(cZ[c[(c[ag>>2]|0)+40>>2]&255](ag)|0)&255}else{c[$>>2]=ai+1;aj=a[ai]|0}g3(A,aj);aa=1623;break};case 0:{aa=1623;break};case 2:{if(!((r|0)!=0|Y>>>0<2>>>0)){if((Y|0)==2){ak=(a[T]|0)!=0}else{ak=0}if(!(N|ak)){al=0;am=D;an=X;ao=W;ap=p;aq=n;break L1921}}ai=a[E]|0;$=c[P>>2]|0;ag=(ai&1)==0?j:$;L1944:do{if((Y|0)==0){ar=ag;as=ai;at=$}else{if((d[s+(Y-1)|0]|0)>>>0>=2>>>0){ar=ag;as=ai;at=$;break}au=ai&255;L1947:do{if((((au&1|0)==0?au>>>1:c[O>>2]|0)|0)==0){av=ag;aw=ai;ax=$}else{ay=ag;while(1){az=a[ay]|0;if((b4(az|0)|0)==0){break}if((b[(c[f>>2]|0)+(az<<1)>>1]&8192)==0){break}az=ay+1|0;aA=a[E]|0;aB=c[P>>2]|0;aC=aA&255;if((az|0)==(((aA&1)==0?j:aB)+((aC&1|0)==0?aC>>>1:c[O>>2]|0)|0)){av=az;aw=aA;ax=aB;break L1947}else{ay=az}}av=ay;aw=a[E]|0;ax=c[P>>2]|0}}while(0);au=(aw&1)==0?j:ax;az=av-au|0;aB=a[H]|0;aA=aB&255;aC=(aA&1|0)==0?aA>>>1:c[R>>2]|0;if(az>>>0>aC>>>0){ar=au;as=aw;at=ax;break}aA=(aB&1)==0?Q:c[S>>2]|0;aB=aA+aC|0;if((av|0)==(au|0)){ar=av;as=aw;at=ax;break}aD=aA+(aC-az)|0;az=au;while(1){if((a[aD]|0)!=(a[az]|0)){ar=au;as=aw;at=ax;break L1944}aC=aD+1|0;if((aC|0)==(aB|0)){ar=av;as=aw;at=ax;break}else{aD=aC;az=az+1|0}}}}while(0);ag=as&255;L1961:do{if((ar|0)==(((as&1)==0?j:at)+((ag&1|0)==0?ag>>>1:c[O>>2]|0)|0)){aE=ar}else{$=ab;ai=ar;while(1){az=c[g>>2]|0;do{if((az|0)==0){aF=0}else{if((c[az+12>>2]|0)!=(c[az+16>>2]|0)){aF=az;break}if((cZ[c[(c[az>>2]|0)+36>>2]&255](az)|0)==-1){c[g>>2]=0;aF=0;break}else{aF=c[g>>2]|0;break}}}while(0);az=(aF|0)==0;do{if(($|0)==0){aa=1721}else{if((c[$+12>>2]|0)!=(c[$+16>>2]|0)){if(az){aG=$;break}else{aE=ai;break L1961}}if((cZ[c[(c[$>>2]|0)+36>>2]&255]($)|0)==-1){c[e>>2]=0;aa=1721;break}else{if(az){aG=$;break}else{aE=ai;break L1961}}}}while(0);if((aa|0)==1721){aa=0;if(az){aE=ai;break L1961}else{aG=0}}ay=c[g>>2]|0;aD=c[ay+12>>2]|0;if((aD|0)==(c[ay+16>>2]|0)){aH=(cZ[c[(c[ay>>2]|0)+36>>2]&255](ay)|0)&255}else{aH=a[aD]|0}if(aH<<24>>24!=(a[ai]|0)){aE=ai;break L1961}aD=c[g>>2]|0;ay=aD+12|0;aB=c[ay>>2]|0;if((aB|0)==(c[aD+16>>2]|0)){au=c[(c[aD>>2]|0)+40>>2]|0;cZ[au&255](aD)|0}else{c[ay>>2]=aB+1}aB=ai+1|0;ay=a[E]|0;aD=ay&255;if((aB|0)==(((ay&1)==0?j:c[P>>2]|0)+((aD&1|0)==0?aD>>>1:c[O>>2]|0)|0)){aE=aB;break}else{$=aG;ai=aB}}}}while(0);if(!N){al=r;am=D;an=X;ao=W;ap=p;aq=n;break L1921}ag=a[E]|0;ai=ag&255;if((aE|0)==(((ag&1)==0?j:c[P>>2]|0)+((ai&1|0)==0?ai>>>1:c[O>>2]|0)|0)){al=r;am=D;an=X;ao=W;ap=p;aq=n}else{aa=1734;break L1899}break};case 3:{ai=a[F]|0;ag=ai&255;$=(ag&1|0)==0?ag>>>1:c[L>>2]|0;ag=a[G]|0;aB=ag&255;aD=(aB&1|0)==0?aB>>>1:c[I>>2]|0;if(($|0)==(-aD|0)){al=r;am=D;an=X;ao=W;ap=p;aq=n;break L1921}aB=($|0)==0;$=c[g>>2]|0;ay=c[$+12>>2]|0;au=c[$+16>>2]|0;aC=(ay|0)==(au|0);if(!(aB|(aD|0)==0)){if(aC){aD=(cZ[c[(c[$>>2]|0)+36>>2]&255]($)|0)&255;aA=c[g>>2]|0;aI=aD;aJ=a[F]|0;aK=aA;aL=c[aA+12>>2]|0;aM=c[aA+16>>2]|0}else{aI=a[ay]|0;aJ=ai;aK=$;aL=ay;aM=au}au=aK+12|0;aA=(aL|0)==(aM|0);if(aI<<24>>24==(a[(aJ&1)==0?K:c[M>>2]|0]|0)){if(aA){aD=c[(c[aK>>2]|0)+40>>2]|0;cZ[aD&255](aK)|0}else{c[au>>2]=aL+1}au=d[F]|0;al=((au&1|0)==0?au>>>1:c[L>>2]|0)>>>0>1>>>0?y:r;am=D;an=X;ao=W;ap=p;aq=n;break L1921}if(aA){aN=(cZ[c[(c[aK>>2]|0)+36>>2]&255](aK)|0)&255}else{aN=a[aL]|0}if(aN<<24>>24!=(a[(a[G]&1)==0?m:c[J>>2]|0]|0)){aa=1690;break L1899}aA=c[g>>2]|0;au=aA+12|0;aD=c[au>>2]|0;if((aD|0)==(c[aA+16>>2]|0)){aO=c[(c[aA>>2]|0)+40>>2]|0;cZ[aO&255](aA)|0}else{c[au>>2]=aD+1}a[l]=1;aD=d[G]|0;al=((aD&1|0)==0?aD>>>1:c[I>>2]|0)>>>0>1>>>0?z:r;am=D;an=X;ao=W;ap=p;aq=n;break L1921}if(aB){if(aC){aB=(cZ[c[(c[$>>2]|0)+36>>2]&255]($)|0)&255;aP=aB;aQ=a[G]|0}else{aP=a[ay]|0;aQ=ag}if(aP<<24>>24!=(a[(aQ&1)==0?m:c[J>>2]|0]|0)){al=r;am=D;an=X;ao=W;ap=p;aq=n;break L1921}ag=c[g>>2]|0;aB=ag+12|0;aD=c[aB>>2]|0;if((aD|0)==(c[ag+16>>2]|0)){au=c[(c[ag>>2]|0)+40>>2]|0;cZ[au&255](ag)|0}else{c[aB>>2]=aD+1}a[l]=1;aD=d[G]|0;al=((aD&1|0)==0?aD>>>1:c[I>>2]|0)>>>0>1>>>0?z:r;am=D;an=X;ao=W;ap=p;aq=n;break L1921}if(aC){aC=(cZ[c[(c[$>>2]|0)+36>>2]&255]($)|0)&255;aR=aC;aS=a[F]|0}else{aR=a[ay]|0;aS=ai}if(aR<<24>>24!=(a[(aS&1)==0?K:c[M>>2]|0]|0)){a[l]=1;al=r;am=D;an=X;ao=W;ap=p;aq=n;break L1921}ai=c[g>>2]|0;ay=ai+12|0;aC=c[ay>>2]|0;if((aC|0)==(c[ai+16>>2]|0)){$=c[(c[ai>>2]|0)+40>>2]|0;cZ[$&255](ai)|0}else{c[ay>>2]=aC+1}aC=d[F]|0;al=((aC&1|0)==0?aC>>>1:c[L>>2]|0)>>>0>1>>>0?y:r;am=D;an=X;ao=W;ap=p;aq=n;break};case 4:{aC=0;ay=D;ai=X;$=W;aD=p;aB=n;L2048:while(1){ag=c[g>>2]|0;do{if((ag|0)==0){aT=0}else{if((c[ag+12>>2]|0)!=(c[ag+16>>2]|0)){aT=ag;break}if((cZ[c[(c[ag>>2]|0)+36>>2]&255](ag)|0)==-1){c[g>>2]=0;aT=0;break}else{aT=c[g>>2]|0;break}}}while(0);ag=(aT|0)==0;au=c[e>>2]|0;do{if((au|0)==0){aa=1747}else{if((c[au+12>>2]|0)!=(c[au+16>>2]|0)){if(ag){break}else{break L2048}}if((cZ[c[(c[au>>2]|0)+36>>2]&255](au)|0)==-1){c[e>>2]=0;aa=1747;break}else{if(ag){break}else{break L2048}}}}while(0);if((aa|0)==1747){aa=0;if(ag){break}}au=c[g>>2]|0;aA=c[au+12>>2]|0;if((aA|0)==(c[au+16>>2]|0)){aU=(cZ[c[(c[au>>2]|0)+36>>2]&255](au)|0)&255}else{aU=a[aA]|0}aA=aU<<24>>24;do{if((b4(aA|0)|0)==0){aa=1767}else{if((b[(c[f>>2]|0)+(aA<<1)>>1]&2048)==0){aa=1767;break}au=c[o>>2]|0;if((au|0)==(aB|0)){aO=(c[V>>2]|0)!=198;aV=c[h>>2]|0;aW=aB-aV|0;aX=aW>>>0<2147483647>>>0?aW<<1:-1;aY=n1(aO?aV:0,aX)|0;if((aY|0)==0){ob()}do{if(aO){c[h>>2]=aY;aZ=aY}else{aV=c[h>>2]|0;c[h>>2]=aY;if((aV|0)==0){aZ=aY;break}cU[c[V>>2]&511](aV);aZ=c[h>>2]|0}}while(0);c[V>>2]=92;aY=aZ+aW|0;c[o>>2]=aY;a_=(c[h>>2]|0)+aX|0;a$=aY}else{a_=aB;a$=au}c[o>>2]=a$+1;a[a$]=aU;a0=aC+1|0;a1=ay;a2=ai;a3=$;a4=aD;a5=a_}}while(0);if((aa|0)==1767){aa=0;aA=d[w]|0;if((((aA&1|0)==0?aA>>>1:c[U>>2]|0)|0)==0|(aC|0)==0){break}if(aU<<24>>24!=(a[u]|0)){break}if((ai|0)==(ay|0)){aA=ai-$|0;ag=aA>>>0<2147483647>>>0?aA<<1:-1;if((aD|0)==198){a6=0}else{a6=$}aY=n1(a6,ag)|0;aO=aY;if((aY|0)==0){ob()}a7=aO+(ag>>>2<<2)|0;a8=aO+(aA>>2<<2)|0;a9=aO;ba=92}else{a7=ay;a8=ai;a9=$;ba=aD}c[a8>>2]=aC;a0=0;a1=a7;a2=a8+4|0;a3=a9;a4=ba;a5=aB}aO=c[g>>2]|0;aA=aO+12|0;ag=c[aA>>2]|0;if((ag|0)==(c[aO+16>>2]|0)){aY=c[(c[aO>>2]|0)+40>>2]|0;cZ[aY&255](aO)|0;aC=a0;ay=a1;ai=a2;$=a3;aD=a4;aB=a5;continue}else{c[aA>>2]=ag+1;aC=a0;ay=a1;ai=a2;$=a3;aD=a4;aB=a5;continue}}if(($|0)==(ai|0)|(aC|0)==0){bb=ay;bc=ai;bd=$;be=aD}else{if((ai|0)==(ay|0)){ag=ai-$|0;aA=ag>>>0<2147483647>>>0?ag<<1:-1;if((aD|0)==198){bf=0}else{bf=$}aO=n1(bf,aA)|0;aY=aO;if((aO|0)==0){ob()}bg=aY+(aA>>>2<<2)|0;bh=aY+(ag>>2<<2)|0;bi=aY;bj=92}else{bg=ay;bh=ai;bi=$;bj=aD}c[bh>>2]=aC;bb=bg;bc=bh+4|0;bd=bi;be=bj}if((c[B>>2]|0)>0){aY=c[g>>2]|0;do{if((aY|0)==0){bk=0}else{if((c[aY+12>>2]|0)!=(c[aY+16>>2]|0)){bk=aY;break}if((cZ[c[(c[aY>>2]|0)+36>>2]&255](aY)|0)==-1){c[g>>2]=0;bk=0;break}else{bk=c[g>>2]|0;break}}}while(0);aY=(bk|0)==0;aC=c[e>>2]|0;do{if((aC|0)==0){aa=1800}else{if((c[aC+12>>2]|0)!=(c[aC+16>>2]|0)){if(aY){bl=aC;break}else{aa=1807;break L1899}}if((cZ[c[(c[aC>>2]|0)+36>>2]&255](aC)|0)==-1){c[e>>2]=0;aa=1800;break}else{if(aY){bl=aC;break}else{aa=1807;break L1899}}}}while(0);if((aa|0)==1800){aa=0;if(aY){aa=1807;break L1899}else{bl=0}}aC=c[g>>2]|0;aD=c[aC+12>>2]|0;if((aD|0)==(c[aC+16>>2]|0)){bm=(cZ[c[(c[aC>>2]|0)+36>>2]&255](aC)|0)&255}else{bm=a[aD]|0}if(bm<<24>>24!=(a[t]|0)){aa=1807;break L1899}aD=c[g>>2]|0;aC=aD+12|0;$=c[aC>>2]|0;if(($|0)==(c[aD+16>>2]|0)){ai=c[(c[aD>>2]|0)+40>>2]|0;cZ[ai&255](aD)|0;bn=aB;bo=bl}else{c[aC>>2]=$+1;bn=aB;bo=bl}while(1){$=c[g>>2]|0;do{if(($|0)==0){bp=0}else{if((c[$+12>>2]|0)!=(c[$+16>>2]|0)){bp=$;break}if((cZ[c[(c[$>>2]|0)+36>>2]&255]($)|0)==-1){c[g>>2]=0;bp=0;break}else{bp=c[g>>2]|0;break}}}while(0);$=(bp|0)==0;do{if((bo|0)==0){aa=1823}else{if((c[bo+12>>2]|0)!=(c[bo+16>>2]|0)){if($){bq=bo;break}else{aa=1832;break L1899}}if((cZ[c[(c[bo>>2]|0)+36>>2]&255](bo)|0)==-1){c[e>>2]=0;aa=1823;break}else{if($){bq=bo;break}else{aa=1832;break L1899}}}}while(0);if((aa|0)==1823){aa=0;if($){aa=1832;break L1899}else{bq=0}}aC=c[g>>2]|0;aD=c[aC+12>>2]|0;if((aD|0)==(c[aC+16>>2]|0)){br=(cZ[c[(c[aC>>2]|0)+36>>2]&255](aC)|0)&255}else{br=a[aD]|0}aD=br<<24>>24;if((b4(aD|0)|0)==0){aa=1832;break L1899}if((b[(c[f>>2]|0)+(aD<<1)>>1]&2048)==0){aa=1832;break L1899}aD=c[o>>2]|0;if((aD|0)==(bn|0)){aC=(c[V>>2]|0)!=198;ai=c[h>>2]|0;ay=bn-ai|0;ag=ay>>>0<2147483647>>>0?ay<<1:-1;aA=n1(aC?ai:0,ag)|0;if((aA|0)==0){ob()}do{if(aC){c[h>>2]=aA;bs=aA}else{ai=c[h>>2]|0;c[h>>2]=aA;if((ai|0)==0){bs=aA;break}cU[c[V>>2]&511](ai);bs=c[h>>2]|0}}while(0);c[V>>2]=92;aA=bs+ay|0;c[o>>2]=aA;bt=(c[h>>2]|0)+ag|0;bu=aA}else{bt=bn;bu=aD}aA=c[g>>2]|0;aC=c[aA+12>>2]|0;if((aC|0)==(c[aA+16>>2]|0)){$=(cZ[c[(c[aA>>2]|0)+36>>2]&255](aA)|0)&255;bv=$;bw=c[o>>2]|0}else{bv=a[aC]|0;bw=bu}c[o>>2]=bw+1;a[bw]=bv;aC=(c[B>>2]|0)-1|0;c[B>>2]=aC;$=c[g>>2]|0;aA=$+12|0;ai=c[aA>>2]|0;if((ai|0)==(c[$+16>>2]|0)){aO=c[(c[$>>2]|0)+40>>2]|0;cZ[aO&255]($)|0}else{c[aA>>2]=ai+1}if((aC|0)>0){bn=bt;bo=bq}else{bx=bt;break}}}else{bx=aB}if((c[o>>2]|0)==(c[h>>2]|0)){aa=1852;break L1899}else{al=r;am=bb;an=bc;ao=bd;ap=be;aq=bx}break};default:{al=r;am=D;an=X;ao=W;ap=p;aq=n}}}while(0);L2204:do{if((aa|0)==1623){aa=0;if((Y|0)==3){ac=p;ad=W;ae=X;af=r;aa=1854;break L1899}else{by=ab}while(1){Z=c[g>>2]|0;do{if((Z|0)==0){bz=0}else{if((c[Z+12>>2]|0)!=(c[Z+16>>2]|0)){bz=Z;break}if((cZ[c[(c[Z>>2]|0)+36>>2]&255](Z)|0)==-1){c[g>>2]=0;bz=0;break}else{bz=c[g>>2]|0;break}}}while(0);Z=(bz|0)==0;do{if((by|0)==0){aa=1636}else{if((c[by+12>>2]|0)!=(c[by+16>>2]|0)){if(Z){bA=by;break}else{al=r;am=D;an=X;ao=W;ap=p;aq=n;break L2204}}if((cZ[c[(c[by>>2]|0)+36>>2]&255](by)|0)==-1){c[e>>2]=0;aa=1636;break}else{if(Z){bA=by;break}else{al=r;am=D;an=X;ao=W;ap=p;aq=n;break L2204}}}}while(0);if((aa|0)==1636){aa=0;if(Z){al=r;am=D;an=X;ao=W;ap=p;aq=n;break L2204}else{bA=0}}aD=c[g>>2]|0;ag=c[aD+12>>2]|0;if((ag|0)==(c[aD+16>>2]|0)){bB=(cZ[c[(c[aD>>2]|0)+36>>2]&255](aD)|0)&255}else{bB=a[ag]|0}ag=bB<<24>>24;if((b4(ag|0)|0)==0){al=r;am=D;an=X;ao=W;ap=p;aq=n;break L2204}if((b[(c[f>>2]|0)+(ag<<1)>>1]&8192)==0){al=r;am=D;an=X;ao=W;ap=p;aq=n;break L2204}ag=c[g>>2]|0;aD=ag+12|0;ay=c[aD>>2]|0;if((ay|0)==(c[ag+16>>2]|0)){bC=(cZ[c[(c[ag>>2]|0)+40>>2]&255](ag)|0)&255}else{c[aD>>2]=ay+1;bC=a[ay]|0}g3(A,bC);by=bA}}}while(0);aB=Y+1|0;if(aB>>>0<4>>>0){n=aq;p=ap;W=ao;X=an;D=am;r=al;Y=aB}else{ac=ap;ad=ao;ae=an;af=al;aa=1854;break}}L2242:do{if((aa|0)==1622){c[k>>2]=c[k>>2]|4;bD=0;bE=W;bF=p}else if((aa|0)==1690){c[k>>2]=c[k>>2]|4;bD=0;bE=W;bF=p}else if((aa|0)==1734){c[k>>2]=c[k>>2]|4;bD=0;bE=W;bF=p}else if((aa|0)==1807){c[k>>2]=c[k>>2]|4;bD=0;bE=bd;bF=be}else if((aa|0)==1832){c[k>>2]=c[k>>2]|4;bD=0;bE=bd;bF=be}else if((aa|0)==1852){c[k>>2]=c[k>>2]|4;bD=0;bE=bd;bF=be}else if((aa|0)==1854){L2250:do{if((af|0)!=0){al=af;an=af+1|0;ao=af+8|0;ap=af+4|0;Y=1;L2252:while(1){r=d[al]|0;if((r&1|0)==0){bG=r>>>1}else{bG=c[ap>>2]|0}if(Y>>>0>=bG>>>0){break L2250}r=c[g>>2]|0;do{if((r|0)==0){bH=0}else{if((c[r+12>>2]|0)!=(c[r+16>>2]|0)){bH=r;break}if((cZ[c[(c[r>>2]|0)+36>>2]&255](r)|0)==-1){c[g>>2]=0;bH=0;break}else{bH=c[g>>2]|0;break}}}while(0);r=(bH|0)==0;Z=c[e>>2]|0;do{if((Z|0)==0){aa=1872}else{if((c[Z+12>>2]|0)!=(c[Z+16>>2]|0)){if(r){break}else{break L2252}}if((cZ[c[(c[Z>>2]|0)+36>>2]&255](Z)|0)==-1){c[e>>2]=0;aa=1872;break}else{if(r){break}else{break L2252}}}}while(0);if((aa|0)==1872){aa=0;if(r){break}}Z=c[g>>2]|0;am=c[Z+12>>2]|0;if((am|0)==(c[Z+16>>2]|0)){bI=(cZ[c[(c[Z>>2]|0)+36>>2]&255](Z)|0)&255}else{bI=a[am]|0}if((a[al]&1)==0){bJ=an}else{bJ=c[ao>>2]|0}if(bI<<24>>24!=(a[bJ+Y|0]|0)){break}am=Y+1|0;Z=c[g>>2]|0;D=Z+12|0;X=c[D>>2]|0;if((X|0)==(c[Z+16>>2]|0)){aq=c[(c[Z>>2]|0)+40>>2]|0;cZ[aq&255](Z)|0;Y=am;continue}else{c[D>>2]=X+1;Y=am;continue}}c[k>>2]=c[k>>2]|4;bD=0;bE=ad;bF=ac;break L2242}}while(0);if((ad|0)==(ae|0)){bD=1;bE=ae;bF=ac;break}c[C>>2]=0;k3(v,ad,ae,C);if((c[C>>2]|0)==0){bD=1;bE=ad;bF=ac;break}c[k>>2]=c[k>>2]|4;bD=0;bE=ad;bF=ac}}while(0);g_(A);g_(z);g_(y);g_(x);g_(v);if((bE|0)==0){i=q;return bD|0}cU[bF&511](bE);i=q;return bD|0}function k$(a){a=a|0;var b=0;b=cy(8)|0;gG(b,a);bK(b|0,11848,28)}function k0(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;d=i;i=i+160|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d|0;m=d+16|0;n=d+120|0;o=d+128|0;p=d+136|0;q=d+144|0;r=d+152|0;s=n|0;c[s>>2]=m;t=n+4|0;c[t>>2]=198;u=m+100|0;hi(p,h);m=p|0;v=c[m>>2]|0;if((c[4534]|0)!=-1){c[l>>2]=18136;c[l+4>>2]=16;c[l+8>>2]=0;gV(18136,l,108)}l=(c[4535]|0)-1|0;w=c[v+8>>2]|0;do{if((c[v+12>>2]|0)-w>>2>>>0>l>>>0){x=c[w+(l<<2)>>2]|0;if((x|0)==0){break}y=x;a[q]=0;z=f|0;A=c[z>>2]|0;c[r>>2]=A;if(k_(e,r,g,p,c[h+4>>2]|0,j,q,y,n,o,u)|0){B=k;if((a[B]&1)==0){a[k+1|0]=0;a[B]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}B=x;if((a[q]&1)!=0){g3(k,c6[c[(c[B>>2]|0)+28>>2]&63](y,45)|0)}x=c6[c[(c[B>>2]|0)+28>>2]&63](y,48)|0;y=c[o>>2]|0;B=y-1|0;C=c[s>>2]|0;while(1){if(C>>>0>=B>>>0){break}if((a[C]|0)==x<<24>>24){C=C+1|0}else{break}}k1(k,C,y)|0}x=e|0;B=c[x>>2]|0;do{if((B|0)==0){D=0}else{if((c[B+12>>2]|0)!=(c[B+16>>2]|0)){D=B;break}if((cZ[c[(c[B>>2]|0)+36>>2]&255](B)|0)!=-1){D=B;break}c[x>>2]=0;D=0}}while(0);x=(D|0)==0;do{if((A|0)==0){E=1930}else{if((c[A+12>>2]|0)!=(c[A+16>>2]|0)){if(x){break}else{E=1932;break}}if((cZ[c[(c[A>>2]|0)+36>>2]&255](A)|0)==-1){c[z>>2]=0;E=1930;break}else{if(x^(A|0)==0){break}else{E=1932;break}}}}while(0);if((E|0)==1930){if(x){E=1932}}if((E|0)==1932){c[j>>2]=c[j>>2]|2}c[b>>2]=D;A=c[m>>2]|0;gA(A)|0;A=c[s>>2]|0;c[s>>2]=0;if((A|0)==0){i=d;return}cU[c[t>>2]&511](A);i=d;return}}while(0);d=cy(4)|0;nG(d);bK(d|0,11832,162)}function k1(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;f=b;g=d;h=a[f]|0;i=h&255;if((i&1|0)==0){j=i>>>1}else{j=c[b+4>>2]|0}if((h&1)==0){k=10;l=h}else{h=c[b>>2]|0;k=(h&-2)-1|0;l=h&255}h=e-g|0;if((e|0)==(d|0)){return b|0}if((k-j|0)>>>0<h>>>0){g6(b,k,j+h-k|0,j,j,0,0);m=a[f]|0}else{m=l}if((m&1)==0){n=b+1|0}else{n=c[b+8>>2]|0}m=e+(j-g)|0;g=d;d=n+j|0;while(1){a[d]=a[g]|0;l=g+1|0;if((l|0)==(e|0)){break}else{g=l;d=d+1|0}}a[n+m|0]=0;m=j+h|0;if((a[f]&1)==0){a[f]=m<<1&255;return b|0}else{c[b+4>>2]=m;return b|0}return 0}function k2(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;n=i;i=i+56|0;o=n|0;p=n+16|0;q=n+32|0;r=n+40|0;s=r;t=i;i=i+12|0;i=i+7&-8;u=t;v=i;i=i+12|0;i=i+7&-8;w=v;x=i;i=i+12|0;i=i+7&-8;y=x;z=i;i=i+4|0;i=i+7&-8;A=i;i=i+12|0;i=i+7&-8;B=A;D=i;i=i+12|0;i=i+7&-8;E=D;F=i;i=i+12|0;i=i+7&-8;G=F;H=i;i=i+12|0;i=i+7&-8;I=H;if(b){b=c[d>>2]|0;if((c[4652]|0)!=-1){c[p>>2]=18608;c[p+4>>2]=16;c[p+8>>2]=0;gV(18608,p,108)}p=(c[4653]|0)-1|0;J=c[b+8>>2]|0;if((c[b+12>>2]|0)-J>>2>>>0<=p>>>0){K=cy(4)|0;L=K;nG(L);bK(K|0,11832,162)}b=c[J+(p<<2)>>2]|0;if((b|0)==0){K=cy(4)|0;L=K;nG(L);bK(K|0,11832,162)}K=b;cV[c[(c[b>>2]|0)+44>>2]&255](q,K);L=e;C=c[q>>2]|0;a[L]=C&255;C=C>>8;a[L+1|0]=C&255;C=C>>8;a[L+2|0]=C&255;C=C>>8;a[L+3|0]=C&255;L=b;cV[c[(c[L>>2]|0)+32>>2]&255](r,K);q=l;if((a[q]&1)==0){a[l+1|0]=0;a[q]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}g2(l,0);c[q>>2]=c[s>>2];c[q+4>>2]=c[s+4>>2];c[q+8>>2]=c[s+8>>2];oe(s|0,0,12);g_(r);cV[c[(c[L>>2]|0)+28>>2]&255](t,K);r=k;if((a[r]&1)==0){a[k+1|0]=0;a[r]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}g2(k,0);c[r>>2]=c[u>>2];c[r+4>>2]=c[u+4>>2];c[r+8>>2]=c[u+8>>2];oe(u|0,0,12);g_(t);t=b;a[f]=cZ[c[(c[t>>2]|0)+12>>2]&255](K)|0;a[g]=cZ[c[(c[t>>2]|0)+16>>2]&255](K)|0;cV[c[(c[L>>2]|0)+20>>2]&255](v,K);t=h;if((a[t]&1)==0){a[h+1|0]=0;a[t]=0}else{a[c[h+8>>2]|0]=0;c[h+4>>2]=0}g2(h,0);c[t>>2]=c[w>>2];c[t+4>>2]=c[w+4>>2];c[t+8>>2]=c[w+8>>2];oe(w|0,0,12);g_(v);cV[c[(c[L>>2]|0)+24>>2]&255](x,K);L=j;if((a[L]&1)==0){a[j+1|0]=0;a[L]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}g2(j,0);c[L>>2]=c[y>>2];c[L+4>>2]=c[y+4>>2];c[L+8>>2]=c[y+8>>2];oe(y|0,0,12);g_(x);M=cZ[c[(c[b>>2]|0)+36>>2]&255](K)|0;c[m>>2]=M;i=n;return}else{K=c[d>>2]|0;if((c[4654]|0)!=-1){c[o>>2]=18616;c[o+4>>2]=16;c[o+8>>2]=0;gV(18616,o,108)}o=(c[4655]|0)-1|0;d=c[K+8>>2]|0;if((c[K+12>>2]|0)-d>>2>>>0<=o>>>0){N=cy(4)|0;O=N;nG(O);bK(N|0,11832,162)}K=c[d+(o<<2)>>2]|0;if((K|0)==0){N=cy(4)|0;O=N;nG(O);bK(N|0,11832,162)}N=K;cV[c[(c[K>>2]|0)+44>>2]&255](z,N);O=e;C=c[z>>2]|0;a[O]=C&255;C=C>>8;a[O+1|0]=C&255;C=C>>8;a[O+2|0]=C&255;C=C>>8;a[O+3|0]=C&255;O=K;cV[c[(c[O>>2]|0)+32>>2]&255](A,N);z=l;if((a[z]&1)==0){a[l+1|0]=0;a[z]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}g2(l,0);c[z>>2]=c[B>>2];c[z+4>>2]=c[B+4>>2];c[z+8>>2]=c[B+8>>2];oe(B|0,0,12);g_(A);cV[c[(c[O>>2]|0)+28>>2]&255](D,N);A=k;if((a[A]&1)==0){a[k+1|0]=0;a[A]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}g2(k,0);c[A>>2]=c[E>>2];c[A+4>>2]=c[E+4>>2];c[A+8>>2]=c[E+8>>2];oe(E|0,0,12);g_(D);D=K;a[f]=cZ[c[(c[D>>2]|0)+12>>2]&255](N)|0;a[g]=cZ[c[(c[D>>2]|0)+16>>2]&255](N)|0;cV[c[(c[O>>2]|0)+20>>2]&255](F,N);D=h;if((a[D]&1)==0){a[h+1|0]=0;a[D]=0}else{a[c[h+8>>2]|0]=0;c[h+4>>2]=0}g2(h,0);c[D>>2]=c[G>>2];c[D+4>>2]=c[G+4>>2];c[D+8>>2]=c[G+8>>2];oe(G|0,0,12);g_(F);cV[c[(c[O>>2]|0)+24>>2]&255](H,N);O=j;if((a[O]&1)==0){a[j+1|0]=0;a[O]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}g2(j,0);c[O>>2]=c[I>>2];c[O+4>>2]=c[I+4>>2];c[O+8>>2]=c[I+8>>2];oe(I|0,0,12);g_(H);M=cZ[c[(c[K>>2]|0)+36>>2]&255](N)|0;c[m>>2]=M;i=n;return}}function k3(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;g=b;h=b;i=a[h]|0;j=i&255;if((j&1|0)==0){k=j>>>1}else{k=c[b+4>>2]|0}if((k|0)==0){return}do{if((d|0)==(e|0)){l=i}else{k=e-4|0;if(k>>>0>d>>>0){m=d;n=k}else{l=i;break}do{k=c[m>>2]|0;c[m>>2]=c[n>>2];c[n>>2]=k;m=m+4|0;n=n-4|0;}while(m>>>0<n>>>0);l=a[h]|0}}while(0);if((l&1)==0){o=g+1|0}else{o=c[b+8>>2]|0}g=l&255;if((g&1|0)==0){p=g>>>1}else{p=c[b+4>>2]|0}b=e-4|0;e=a[o]|0;g=e<<24>>24;l=e<<24>>24<1|e<<24>>24==127;L2465:do{if(b>>>0>d>>>0){e=o+p|0;h=o;n=d;m=g;i=l;while(1){if(!i){if((m|0)!=(c[n>>2]|0)){break}}k=(e-h|0)>1?h+1|0:h;j=n+4|0;q=a[k]|0;r=q<<24>>24;s=q<<24>>24<1|q<<24>>24==127;if(j>>>0<b>>>0){h=k;n=j;m=r;i=s}else{t=r;u=s;break L2465}}c[f>>2]=4;return}else{t=g;u=l}}while(0);if(u){return}u=c[b>>2]|0;if(!(t>>>0<u>>>0|(u|0)==0)){return}c[f>>2]=4;return}function k4(a){a=a|0;gy(a|0);n6(a);return}function k5(a){a=a|0;gy(a|0);return}function k6(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;d=i;i=i+600|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d|0;m=d+16|0;n=d+416|0;o=d+424|0;p=d+432|0;q=d+440|0;r=d+448|0;s=d+456|0;t=d+496|0;u=n|0;c[u>>2]=m;v=n+4|0;c[v>>2]=198;w=m+400|0;hi(p,h);m=p|0;x=c[m>>2]|0;if((c[4532]|0)!=-1){c[l>>2]=18128;c[l+4>>2]=16;c[l+8>>2]=0;gV(18128,l,108)}l=(c[4533]|0)-1|0;y=c[x+8>>2]|0;do{if((c[x+12>>2]|0)-y>>2>>>0>l>>>0){z=c[y+(l<<2)>>2]|0;if((z|0)==0){break}A=z;a[q]=0;B=f|0;c[r>>2]=c[B>>2];do{if(k7(e,r,g,p,c[h+4>>2]|0,j,q,A,n,o,w)|0){C=s|0;D=c[(c[z>>2]|0)+48>>2]|0;cX[D&15](A,4776,4786,C)|0;D=t|0;E=c[o>>2]|0;F=c[u>>2]|0;G=E-F|0;do{if((G|0)>392){H=n$((G>>2)+2|0)|0;if((H|0)!=0){I=H;J=H;break}ob();I=0;J=0}else{I=D;J=0}}while(0);if((a[q]&1)==0){K=I}else{a[I]=45;K=I+1|0}if(F>>>0<E>>>0){G=s+40|0;H=s;L=K;M=F;while(1){N=C;while(1){if((N|0)==(G|0)){O=G;break}if((c[N>>2]|0)==(c[M>>2]|0)){O=N;break}else{N=N+4|0}}a[L]=a[4776+(O-H>>2)|0]|0;N=M+4|0;P=L+1|0;if(N>>>0<(c[o>>2]|0)>>>0){L=P;M=N}else{Q=P;break}}}else{Q=K}a[Q]=0;M=ck(D|0,3600,(L=i,i=i+8|0,c[L>>2]=k,L)|0)|0;i=L;if((M|0)==1){if((J|0)==0){break}n0(J);break}M=cy(8)|0;gG(M,3536);bK(M|0,11848,28)}}while(0);A=e|0;z=c[A>>2]|0;do{if((z|0)==0){R=0}else{M=c[z+12>>2]|0;if((M|0)==(c[z+16>>2]|0)){S=cZ[c[(c[z>>2]|0)+36>>2]&255](z)|0}else{S=c[M>>2]|0}if((S|0)!=-1){R=z;break}c[A>>2]=0;R=0}}while(0);A=(R|0)==0;z=c[B>>2]|0;do{if((z|0)==0){T=2099}else{M=c[z+12>>2]|0;if((M|0)==(c[z+16>>2]|0)){U=cZ[c[(c[z>>2]|0)+36>>2]&255](z)|0}else{U=c[M>>2]|0}if((U|0)==-1){c[B>>2]=0;T=2099;break}else{if(A^(z|0)==0){break}else{T=2101;break}}}}while(0);if((T|0)==2099){if(A){T=2101}}if((T|0)==2101){c[j>>2]=c[j>>2]|2}c[b>>2]=R;z=c[m>>2]|0;gA(z)|0;z=c[u>>2]|0;c[u>>2]=0;if((z|0)==0){i=d;return}cU[c[v>>2]&511](z);i=d;return}}while(0);d=cy(4)|0;nG(d);bK(d|0,11832,162)}function k7(b,e,f,g,h,j,k,l,m,n,o){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aK=0,aL=0,aM=0,aN=0,aO=0,aP=0,aQ=0,aR=0,aS=0,aT=0,aU=0,aV=0,aW=0,aX=0,aY=0,aZ=0,a_=0,a$=0,a0=0,a1=0,a2=0,a3=0,a4=0,a5=0,a6=0,a7=0,a8=0,a9=0,ba=0,bb=0,bc=0,bd=0,be=0,bf=0,bg=0,bh=0,bi=0,bj=0,bk=0,bl=0,bm=0,bn=0,bo=0,bp=0,bq=0,br=0,bs=0,bt=0,bu=0,bv=0,bw=0,bx=0,by=0,bz=0,bA=0,bB=0,bC=0,bD=0,bE=0,bF=0,bG=0;p=i;i=i+448|0;q=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[q>>2];q=p|0;r=p+8|0;s=p+408|0;t=p+416|0;u=p+424|0;v=p+432|0;w=v;x=i;i=i+12|0;i=i+7&-8;y=i;i=i+12|0;i=i+7&-8;z=i;i=i+12|0;i=i+7&-8;A=i;i=i+12|0;i=i+7&-8;B=i;i=i+4|0;i=i+7&-8;C=i;i=i+4|0;i=i+7&-8;c[q>>2]=o;o=r|0;oe(w|0,0,12);D=x;E=y;F=z;G=A;oe(D|0,0,12);oe(E|0,0,12);oe(F|0,0,12);oe(G|0,0,12);la(f,g,s,t,u,v,x,y,z,B);g=m|0;c[n>>2]=c[g>>2];f=b|0;b=e|0;e=l;H=z+4|0;I=z+8|0;J=y+4|0;K=y+8|0;L=(h&512|0)!=0;h=x+4|0;M=x+8|0;N=A+4|0;O=A+8|0;P=s+3|0;Q=v+4|0;R=198;S=o;T=o;o=r+400|0;r=0;U=0;L2:while(1){V=c[f>>2]|0;do{if((V|0)==0){W=1}else{X=c[V+12>>2]|0;if((X|0)==(c[V+16>>2]|0)){Y=cZ[c[(c[V>>2]|0)+36>>2]&255](V)|0}else{Y=c[X>>2]|0}if((Y|0)==-1){c[f>>2]=0;W=1;break}else{W=(c[f>>2]|0)==0;break}}}while(0);V=c[b>>2]|0;do{if((V|0)==0){Z=16}else{X=c[V+12>>2]|0;if((X|0)==(c[V+16>>2]|0)){_=cZ[c[(c[V>>2]|0)+36>>2]&255](V)|0}else{_=c[X>>2]|0}if((_|0)==-1){c[b>>2]=0;Z=16;break}else{if(W^(V|0)==0){$=V;break}else{aa=R;ab=S;ac=T;ad=r;Z=256;break L2}}}}while(0);if((Z|0)==16){Z=0;if(W){aa=R;ab=S;ac=T;ad=r;Z=256;break}else{$=0}}L26:do{switch(a[s+U|0]|0){case 1:{if((U|0)==3){aa=R;ab=S;ac=T;ad=r;Z=256;break L2}V=c[f>>2]|0;X=c[V+12>>2]|0;if((X|0)==(c[V+16>>2]|0)){ae=cZ[c[(c[V>>2]|0)+36>>2]&255](V)|0}else{ae=c[X>>2]|0}if(!(c_[c[(c[e>>2]|0)+12>>2]&63](l,8192,ae)|0)){Z=40;break L2}X=c[f>>2]|0;V=X+12|0;af=c[V>>2]|0;if((af|0)==(c[X+16>>2]|0)){ag=cZ[c[(c[X>>2]|0)+40>>2]&255](X)|0}else{c[V>>2]=af+4;ag=c[af>>2]|0}hd(A,ag);Z=41;break};case 0:{Z=41;break};case 3:{af=a[E]|0;V=af&255;X=(V&1|0)==0;ah=a[F]|0;ai=ah&255;aj=(ai&1|0)==0;if(((X?V>>>1:c[J>>2]|0)|0)==(-(aj?ai>>>1:c[H>>2]|0)|0)){ak=r;al=o;am=T;an=S;ao=R;break L26}do{if(((X?V>>>1:c[J>>2]|0)|0)!=0){if(((aj?ai>>>1:c[H>>2]|0)|0)==0){break}ap=c[f>>2]|0;aq=c[ap+12>>2]|0;if((aq|0)==(c[ap+16>>2]|0)){ar=cZ[c[(c[ap>>2]|0)+36>>2]&255](ap)|0;as=ar;at=a[E]|0}else{as=c[aq>>2]|0;at=af}aq=c[f>>2]|0;ar=aq+12|0;ap=c[ar>>2]|0;au=(ap|0)==(c[aq+16>>2]|0);if((as|0)==(c[((at&1)==0?J:c[K>>2]|0)>>2]|0)){if(au){av=c[(c[aq>>2]|0)+40>>2]|0;cZ[av&255](aq)|0}else{c[ar>>2]=ap+4}ar=d[E]|0;ak=((ar&1|0)==0?ar>>>1:c[J>>2]|0)>>>0>1>>>0?y:r;al=o;am=T;an=S;ao=R;break L26}if(au){aw=cZ[c[(c[aq>>2]|0)+36>>2]&255](aq)|0}else{aw=c[ap>>2]|0}if((aw|0)!=(c[((a[F]&1)==0?H:c[I>>2]|0)>>2]|0)){Z=106;break L2}ap=c[f>>2]|0;aq=ap+12|0;au=c[aq>>2]|0;if((au|0)==(c[ap+16>>2]|0)){ar=c[(c[ap>>2]|0)+40>>2]|0;cZ[ar&255](ap)|0}else{c[aq>>2]=au+4}a[k]=1;au=d[F]|0;ak=((au&1|0)==0?au>>>1:c[H>>2]|0)>>>0>1>>>0?z:r;al=o;am=T;an=S;ao=R;break L26}}while(0);ai=c[f>>2]|0;aj=c[ai+12>>2]|0;au=(aj|0)==(c[ai+16>>2]|0);if(((X?V>>>1:c[J>>2]|0)|0)==0){if(au){aq=cZ[c[(c[ai>>2]|0)+36>>2]&255](ai)|0;ax=aq;ay=a[F]|0}else{ax=c[aj>>2]|0;ay=ah}if((ax|0)!=(c[((ay&1)==0?H:c[I>>2]|0)>>2]|0)){ak=r;al=o;am=T;an=S;ao=R;break L26}aq=c[f>>2]|0;ap=aq+12|0;ar=c[ap>>2]|0;if((ar|0)==(c[aq+16>>2]|0)){av=c[(c[aq>>2]|0)+40>>2]|0;cZ[av&255](aq)|0}else{c[ap>>2]=ar+4}a[k]=1;ar=d[F]|0;ak=((ar&1|0)==0?ar>>>1:c[H>>2]|0)>>>0>1>>>0?z:r;al=o;am=T;an=S;ao=R;break L26}if(au){au=cZ[c[(c[ai>>2]|0)+36>>2]&255](ai)|0;az=au;aA=a[E]|0}else{az=c[aj>>2]|0;aA=af}if((az|0)!=(c[((aA&1)==0?J:c[K>>2]|0)>>2]|0)){a[k]=1;ak=r;al=o;am=T;an=S;ao=R;break L26}aj=c[f>>2]|0;au=aj+12|0;ai=c[au>>2]|0;if((ai|0)==(c[aj+16>>2]|0)){ar=c[(c[aj>>2]|0)+40>>2]|0;cZ[ar&255](aj)|0}else{c[au>>2]=ai+4}ai=d[E]|0;ak=((ai&1|0)==0?ai>>>1:c[J>>2]|0)>>>0>1>>>0?y:r;al=o;am=T;an=S;ao=R;break};case 2:{if(!((r|0)!=0|U>>>0<2>>>0)){if((U|0)==2){aB=(a[P]|0)!=0}else{aB=0}if(!(L|aB)){ak=0;al=o;am=T;an=S;ao=R;break L26}}ai=a[D]|0;au=(ai&1)==0?h:c[M>>2]|0;L98:do{if((U|0)==0){aC=au;aD=ai;aE=$}else{if((d[s+(U-1)|0]|0)>>>0<2>>>0){aF=au;aG=ai}else{aC=au;aD=ai;aE=$;break}while(1){aj=aG&255;if((aF|0)==(((aG&1)==0?h:c[M>>2]|0)+(((aj&1|0)==0?aj>>>1:c[h>>2]|0)<<2)|0)){aH=aG;break}if(!(c_[c[(c[e>>2]|0)+12>>2]&63](l,8192,c[aF>>2]|0)|0)){Z=117;break}aF=aF+4|0;aG=a[D]|0}if((Z|0)==117){Z=0;aH=a[D]|0}aj=(aH&1)==0;ar=aF-(aj?h:c[M>>2]|0)>>2;ap=a[G]|0;aq=ap&255;av=(aq&1|0)==0;L108:do{if(ar>>>0<=(av?aq>>>1:c[N>>2]|0)>>>0){aI=(ap&1)==0;aJ=(aI?N:c[O>>2]|0)+((av?aq>>>1:c[N>>2]|0)-ar<<2)|0;aK=(aI?N:c[O>>2]|0)+((av?aq>>>1:c[N>>2]|0)<<2)|0;if((aJ|0)==(aK|0)){aC=aF;aD=aH;aE=$;break L98}else{aL=aJ;aM=aj?h:c[M>>2]|0}while(1){if((c[aL>>2]|0)!=(c[aM>>2]|0)){break L108}aJ=aL+4|0;if((aJ|0)==(aK|0)){aC=aF;aD=aH;aE=$;break L98}aL=aJ;aM=aM+4|0}}}while(0);aC=aj?h:c[M>>2]|0;aD=aH;aE=$}}while(0);L115:while(1){ai=aD&255;if((aC|0)==(((aD&1)==0?h:c[M>>2]|0)+(((ai&1|0)==0?ai>>>1:c[h>>2]|0)<<2)|0)){break}ai=c[f>>2]|0;do{if((ai|0)==0){aN=1}else{au=c[ai+12>>2]|0;if((au|0)==(c[ai+16>>2]|0)){aO=cZ[c[(c[ai>>2]|0)+36>>2]&255](ai)|0}else{aO=c[au>>2]|0}if((aO|0)==-1){c[f>>2]=0;aN=1;break}else{aN=(c[f>>2]|0)==0;break}}}while(0);do{if((aE|0)==0){Z=138}else{ai=c[aE+12>>2]|0;if((ai|0)==(c[aE+16>>2]|0)){aP=cZ[c[(c[aE>>2]|0)+36>>2]&255](aE)|0}else{aP=c[ai>>2]|0}if((aP|0)==-1){c[b>>2]=0;Z=138;break}else{if(aN^(aE|0)==0){aQ=aE;break}else{break L115}}}}while(0);if((Z|0)==138){Z=0;if(aN){break}else{aQ=0}}ai=c[f>>2]|0;aj=c[ai+12>>2]|0;if((aj|0)==(c[ai+16>>2]|0)){aR=cZ[c[(c[ai>>2]|0)+36>>2]&255](ai)|0}else{aR=c[aj>>2]|0}if((aR|0)!=(c[aC>>2]|0)){break}aj=c[f>>2]|0;ai=aj+12|0;au=c[ai>>2]|0;if((au|0)==(c[aj+16>>2]|0)){af=c[(c[aj>>2]|0)+40>>2]|0;cZ[af&255](aj)|0}else{c[ai>>2]=au+4}aC=aC+4|0;aD=a[D]|0;aE=aQ}if(!L){ak=r;al=o;am=T;an=S;ao=R;break L26}au=a[D]|0;ai=au&255;if((aC|0)==(((au&1)==0?h:c[M>>2]|0)+(((ai&1|0)==0?ai>>>1:c[h>>2]|0)<<2)|0)){ak=r;al=o;am=T;an=S;ao=R}else{Z=150;break L2}break};case 4:{ai=0;au=o;aj=T;af=S;ah=R;L151:while(1){V=c[f>>2]|0;do{if((V|0)==0){aS=1}else{X=c[V+12>>2]|0;if((X|0)==(c[V+16>>2]|0)){aT=cZ[c[(c[V>>2]|0)+36>>2]&255](V)|0}else{aT=c[X>>2]|0}if((aT|0)==-1){c[f>>2]=0;aS=1;break}else{aS=(c[f>>2]|0)==0;break}}}while(0);V=c[b>>2]|0;do{if((V|0)==0){Z=164}else{X=c[V+12>>2]|0;if((X|0)==(c[V+16>>2]|0)){aU=cZ[c[(c[V>>2]|0)+36>>2]&255](V)|0}else{aU=c[X>>2]|0}if((aU|0)==-1){c[b>>2]=0;Z=164;break}else{if(aS^(V|0)==0){break}else{break L151}}}}while(0);if((Z|0)==164){Z=0;if(aS){break}}V=c[f>>2]|0;X=c[V+12>>2]|0;if((X|0)==(c[V+16>>2]|0)){aV=cZ[c[(c[V>>2]|0)+36>>2]&255](V)|0}else{aV=c[X>>2]|0}if(c_[c[(c[e>>2]|0)+12>>2]&63](l,2048,aV)|0){X=c[n>>2]|0;if((X|0)==(c[q>>2]|0)){lb(m,n,q);aW=c[n>>2]|0}else{aW=X}c[n>>2]=aW+4;c[aW>>2]=aV;aX=ai+1|0;aY=au;aZ=aj;a_=af;a$=ah}else{X=d[w]|0;if((((X&1|0)==0?X>>>1:c[Q>>2]|0)|0)==0|(ai|0)==0){break}if((aV|0)!=(c[u>>2]|0)){break}if((aj|0)==(au|0)){X=(ah|0)!=198;V=aj-af|0;aq=V>>>0<2147483647>>>0?V<<1:-1;if(X){a0=af}else{a0=0}X=n1(a0,aq)|0;av=X;if((X|0)==0){ob()}a1=av+(aq>>>2<<2)|0;a2=av+(V>>2<<2)|0;a3=av;a4=92}else{a1=au;a2=aj;a3=af;a4=ah}c[a2>>2]=ai;aX=0;aY=a1;aZ=a2+4|0;a_=a3;a$=a4}av=c[f>>2]|0;V=av+12|0;aq=c[V>>2]|0;if((aq|0)==(c[av+16>>2]|0)){X=c[(c[av>>2]|0)+40>>2]|0;cZ[X&255](av)|0;ai=aX;au=aY;aj=aZ;af=a_;ah=a$;continue}else{c[V>>2]=aq+4;ai=aX;au=aY;aj=aZ;af=a_;ah=a$;continue}}if((af|0)==(aj|0)|(ai|0)==0){a5=au;a6=aj;a7=af;a8=ah}else{if((aj|0)==(au|0)){aq=(ah|0)!=198;V=aj-af|0;av=V>>>0<2147483647>>>0?V<<1:-1;if(aq){a9=af}else{a9=0}aq=n1(a9,av)|0;X=aq;if((aq|0)==0){ob()}ba=X+(av>>>2<<2)|0;bb=X+(V>>2<<2)|0;bc=X;bd=92}else{ba=au;bb=aj;bc=af;bd=ah}c[bb>>2]=ai;a5=ba;a6=bb+4|0;a7=bc;a8=bd}X=c[B>>2]|0;if((X|0)>0){V=c[f>>2]|0;do{if((V|0)==0){be=1}else{av=c[V+12>>2]|0;if((av|0)==(c[V+16>>2]|0)){bf=cZ[c[(c[V>>2]|0)+36>>2]&255](V)|0}else{bf=c[av>>2]|0}if((bf|0)==-1){c[f>>2]=0;be=1;break}else{be=(c[f>>2]|0)==0;break}}}while(0);V=c[b>>2]|0;do{if((V|0)==0){Z=213}else{ai=c[V+12>>2]|0;if((ai|0)==(c[V+16>>2]|0)){bg=cZ[c[(c[V>>2]|0)+36>>2]&255](V)|0}else{bg=c[ai>>2]|0}if((bg|0)==-1){c[b>>2]=0;Z=213;break}else{if(be^(V|0)==0){bh=V;break}else{Z=219;break L2}}}}while(0);if((Z|0)==213){Z=0;if(be){Z=219;break L2}else{bh=0}}V=c[f>>2]|0;ai=c[V+12>>2]|0;if((ai|0)==(c[V+16>>2]|0)){bi=cZ[c[(c[V>>2]|0)+36>>2]&255](V)|0}else{bi=c[ai>>2]|0}if((bi|0)!=(c[t>>2]|0)){Z=219;break L2}ai=c[f>>2]|0;V=ai+12|0;ah=c[V>>2]|0;if((ah|0)==(c[ai+16>>2]|0)){af=c[(c[ai>>2]|0)+40>>2]|0;cZ[af&255](ai)|0;bj=bh;bk=X}else{c[V>>2]=ah+4;bj=bh;bk=X}while(1){ah=c[f>>2]|0;do{if((ah|0)==0){bl=1}else{V=c[ah+12>>2]|0;if((V|0)==(c[ah+16>>2]|0)){bm=cZ[c[(c[ah>>2]|0)+36>>2]&255](ah)|0}else{bm=c[V>>2]|0}if((bm|0)==-1){c[f>>2]=0;bl=1;break}else{bl=(c[f>>2]|0)==0;break}}}while(0);do{if((bj|0)==0){Z=236}else{ah=c[bj+12>>2]|0;if((ah|0)==(c[bj+16>>2]|0)){bn=cZ[c[(c[bj>>2]|0)+36>>2]&255](bj)|0}else{bn=c[ah>>2]|0}if((bn|0)==-1){c[b>>2]=0;Z=236;break}else{if(bl^(bj|0)==0){bo=bj;break}else{Z=243;break L2}}}}while(0);if((Z|0)==236){Z=0;if(bl){Z=243;break L2}else{bo=0}}ah=c[f>>2]|0;V=c[ah+12>>2]|0;if((V|0)==(c[ah+16>>2]|0)){bp=cZ[c[(c[ah>>2]|0)+36>>2]&255](ah)|0}else{bp=c[V>>2]|0}if(!(c_[c[(c[e>>2]|0)+12>>2]&63](l,2048,bp)|0)){Z=243;break L2}if((c[n>>2]|0)==(c[q>>2]|0)){lb(m,n,q)}V=c[f>>2]|0;ah=c[V+12>>2]|0;if((ah|0)==(c[V+16>>2]|0)){bq=cZ[c[(c[V>>2]|0)+36>>2]&255](V)|0}else{bq=c[ah>>2]|0}ah=c[n>>2]|0;c[n>>2]=ah+4;c[ah>>2]=bq;ah=bk-1|0;c[B>>2]=ah;V=c[f>>2]|0;ai=V+12|0;af=c[ai>>2]|0;if((af|0)==(c[V+16>>2]|0)){aj=c[(c[V>>2]|0)+40>>2]|0;cZ[aj&255](V)|0}else{c[ai>>2]=af+4}if((ah|0)>0){bj=bo;bk=ah}else{break}}}if((c[n>>2]|0)==(c[g>>2]|0)){Z=254;break L2}else{ak=r;al=a5;am=a6;an=a7;ao=a8}break};default:{ak=r;al=o;am=T;an=S;ao=R}}}while(0);L295:do{if((Z|0)==41){Z=0;if((U|0)==3){aa=R;ab=S;ac=T;ad=r;Z=256;break L2}else{br=$}while(1){X=c[f>>2]|0;do{if((X|0)==0){bs=1}else{ah=c[X+12>>2]|0;if((ah|0)==(c[X+16>>2]|0)){bt=cZ[c[(c[X>>2]|0)+36>>2]&255](X)|0}else{bt=c[ah>>2]|0}if((bt|0)==-1){c[f>>2]=0;bs=1;break}else{bs=(c[f>>2]|0)==0;break}}}while(0);do{if((br|0)==0){Z=55}else{X=c[br+12>>2]|0;if((X|0)==(c[br+16>>2]|0)){bu=cZ[c[(c[br>>2]|0)+36>>2]&255](br)|0}else{bu=c[X>>2]|0}if((bu|0)==-1){c[b>>2]=0;Z=55;break}else{if(bs^(br|0)==0){bv=br;break}else{ak=r;al=o;am=T;an=S;ao=R;break L295}}}}while(0);if((Z|0)==55){Z=0;if(bs){ak=r;al=o;am=T;an=S;ao=R;break L295}else{bv=0}}X=c[f>>2]|0;ah=c[X+12>>2]|0;if((ah|0)==(c[X+16>>2]|0)){bw=cZ[c[(c[X>>2]|0)+36>>2]&255](X)|0}else{bw=c[ah>>2]|0}if(!(c_[c[(c[e>>2]|0)+12>>2]&63](l,8192,bw)|0)){ak=r;al=o;am=T;an=S;ao=R;break L295}ah=c[f>>2]|0;X=ah+12|0;af=c[X>>2]|0;if((af|0)==(c[ah+16>>2]|0)){bx=cZ[c[(c[ah>>2]|0)+40>>2]&255](ah)|0}else{c[X>>2]=af+4;bx=c[af>>2]|0}hd(A,bx);br=bv}}}while(0);af=U+1|0;if(af>>>0<4>>>0){R=ao;S=an;T=am;o=al;r=ak;U=af}else{aa=ao;ab=an;ac=am;ad=ak;Z=256;break}}L332:do{if((Z|0)==40){c[j>>2]=c[j>>2]|4;by=0;bz=S;bA=R}else if((Z|0)==106){c[j>>2]=c[j>>2]|4;by=0;bz=S;bA=R}else if((Z|0)==150){c[j>>2]=c[j>>2]|4;by=0;bz=S;bA=R}else if((Z|0)==219){c[j>>2]=c[j>>2]|4;by=0;bz=a7;bA=a8}else if((Z|0)==243){c[j>>2]=c[j>>2]|4;by=0;bz=a7;bA=a8}else if((Z|0)==254){c[j>>2]=c[j>>2]|4;by=0;bz=a7;bA=a8}else if((Z|0)==256){L340:do{if((ad|0)!=0){ak=ad;am=ad+4|0;an=ad+8|0;ao=1;L342:while(1){U=d[ak]|0;if((U&1|0)==0){bB=U>>>1}else{bB=c[am>>2]|0}if(ao>>>0>=bB>>>0){break L340}U=c[f>>2]|0;do{if((U|0)==0){bC=1}else{r=c[U+12>>2]|0;if((r|0)==(c[U+16>>2]|0)){bD=cZ[c[(c[U>>2]|0)+36>>2]&255](U)|0}else{bD=c[r>>2]|0}if((bD|0)==-1){c[f>>2]=0;bC=1;break}else{bC=(c[f>>2]|0)==0;break}}}while(0);U=c[b>>2]|0;do{if((U|0)==0){Z=275}else{r=c[U+12>>2]|0;if((r|0)==(c[U+16>>2]|0)){bE=cZ[c[(c[U>>2]|0)+36>>2]&255](U)|0}else{bE=c[r>>2]|0}if((bE|0)==-1){c[b>>2]=0;Z=275;break}else{if(bC^(U|0)==0){break}else{break L342}}}}while(0);if((Z|0)==275){Z=0;if(bC){break}}U=c[f>>2]|0;r=c[U+12>>2]|0;if((r|0)==(c[U+16>>2]|0)){bF=cZ[c[(c[U>>2]|0)+36>>2]&255](U)|0}else{bF=c[r>>2]|0}if((a[ak]&1)==0){bG=am}else{bG=c[an>>2]|0}if((bF|0)!=(c[bG+(ao<<2)>>2]|0)){break}r=ao+1|0;U=c[f>>2]|0;al=U+12|0;o=c[al>>2]|0;if((o|0)==(c[U+16>>2]|0)){T=c[(c[U>>2]|0)+40>>2]|0;cZ[T&255](U)|0;ao=r;continue}else{c[al>>2]=o+4;ao=r;continue}}c[j>>2]=c[j>>2]|4;by=0;bz=ab;bA=aa;break L332}}while(0);if((ab|0)==(ac|0)){by=1;bz=ac;bA=aa;break}c[C>>2]=0;k3(v,ab,ac,C);if((c[C>>2]|0)==0){by=1;bz=ab;bA=aa;break}c[j>>2]=c[j>>2]|4;by=0;bz=ab;bA=aa}}while(0);g9(A);g9(z);g9(y);g9(x);g_(v);if((bz|0)==0){i=p;return by|0}cU[bA&511](bz);i=p;return by|0}function k8(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;d=i;i=i+456|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d|0;m=d+16|0;n=d+416|0;o=d+424|0;p=d+432|0;q=d+440|0;r=d+448|0;s=n|0;c[s>>2]=m;t=n+4|0;c[t>>2]=198;u=m+400|0;hi(p,h);m=p|0;v=c[m>>2]|0;if((c[4532]|0)!=-1){c[l>>2]=18128;c[l+4>>2]=16;c[l+8>>2]=0;gV(18128,l,108)}l=(c[4533]|0)-1|0;w=c[v+8>>2]|0;do{if((c[v+12>>2]|0)-w>>2>>>0>l>>>0){x=c[w+(l<<2)>>2]|0;if((x|0)==0){break}y=x;a[q]=0;z=f|0;A=c[z>>2]|0;c[r>>2]=A;if(k7(e,r,g,p,c[h+4>>2]|0,j,q,y,n,o,u)|0){B=k;if((a[B]&1)==0){c[k+4>>2]=0;a[B]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}B=x;if((a[q]&1)!=0){hd(k,c6[c[(c[B>>2]|0)+44>>2]&63](y,45)|0)}x=c6[c[(c[B>>2]|0)+44>>2]&63](y,48)|0;y=c[o>>2]|0;B=y-4|0;C=c[s>>2]|0;while(1){if(C>>>0>=B>>>0){break}if((c[C>>2]|0)==(x|0)){C=C+4|0}else{break}}k9(k,C,y)|0}x=e|0;B=c[x>>2]|0;do{if((B|0)==0){D=0}else{E=c[B+12>>2]|0;if((E|0)==(c[B+16>>2]|0)){F=cZ[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{F=c[E>>2]|0}if((F|0)!=-1){D=B;break}c[x>>2]=0;D=0}}while(0);x=(D|0)==0;do{if((A|0)==0){G=330}else{B=c[A+12>>2]|0;if((B|0)==(c[A+16>>2]|0)){H=cZ[c[(c[A>>2]|0)+36>>2]&255](A)|0}else{H=c[B>>2]|0}if((H|0)==-1){c[z>>2]=0;G=330;break}else{if(x^(A|0)==0){break}else{G=332;break}}}}while(0);if((G|0)==330){if(x){G=332}}if((G|0)==332){c[j>>2]=c[j>>2]|2}c[b>>2]=D;A=c[m>>2]|0;gA(A)|0;A=c[s>>2]|0;c[s>>2]=0;if((A|0)==0){i=d;return}cU[c[t>>2]&511](A);i=d;return}}while(0);d=cy(4)|0;nG(d);bK(d|0,11832,162)}function k9(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;f=b;g=d;h=a[f]|0;i=h&255;if((i&1|0)==0){j=i>>>1}else{j=c[b+4>>2]|0}if((h&1)==0){k=1;l=h}else{h=c[b>>2]|0;k=(h&-2)-1|0;l=h&255}h=e-g>>2;if((h|0)==0){return b|0}if((k-j|0)>>>0<h>>>0){hf(b,k,j+h-k|0,j,j,0,0);m=a[f]|0}else{m=l}if((m&1)==0){n=b+4|0}else{n=c[b+8>>2]|0}m=n+(j<<2)|0;if((d|0)==(e|0)){o=m}else{l=j+((e-4+(-g|0)|0)>>>2)+1|0;g=d;d=m;while(1){c[d>>2]=c[g>>2];m=g+4|0;if((m|0)==(e|0)){break}else{g=m;d=d+4|0}}o=n+(l<<2)|0}c[o>>2]=0;o=j+h|0;if((a[f]&1)==0){a[f]=o<<1&255;return b|0}else{c[b+4>>2]=o;return b|0}return 0}function la(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;n=i;i=i+56|0;o=n|0;p=n+16|0;q=n+32|0;r=n+40|0;s=r;t=i;i=i+12|0;i=i+7&-8;u=t;v=i;i=i+12|0;i=i+7&-8;w=v;x=i;i=i+12|0;i=i+7&-8;y=x;z=i;i=i+4|0;i=i+7&-8;A=i;i=i+12|0;i=i+7&-8;B=A;D=i;i=i+12|0;i=i+7&-8;E=D;F=i;i=i+12|0;i=i+7&-8;G=F;H=i;i=i+12|0;i=i+7&-8;I=H;if(b){b=c[d>>2]|0;if((c[4648]|0)!=-1){c[p>>2]=18592;c[p+4>>2]=16;c[p+8>>2]=0;gV(18592,p,108)}p=(c[4649]|0)-1|0;J=c[b+8>>2]|0;if((c[b+12>>2]|0)-J>>2>>>0<=p>>>0){K=cy(4)|0;L=K;nG(L);bK(K|0,11832,162)}b=c[J+(p<<2)>>2]|0;if((b|0)==0){K=cy(4)|0;L=K;nG(L);bK(K|0,11832,162)}K=b;cV[c[(c[b>>2]|0)+44>>2]&255](q,K);L=e;C=c[q>>2]|0;a[L]=C&255;C=C>>8;a[L+1|0]=C&255;C=C>>8;a[L+2|0]=C&255;C=C>>8;a[L+3|0]=C&255;L=b;cV[c[(c[L>>2]|0)+32>>2]&255](r,K);q=l;if((a[q]&1)==0){c[l+4>>2]=0;a[q]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}hc(l,0);c[q>>2]=c[s>>2];c[q+4>>2]=c[s+4>>2];c[q+8>>2]=c[s+8>>2];oe(s|0,0,12);g9(r);cV[c[(c[L>>2]|0)+28>>2]&255](t,K);r=k;if((a[r]&1)==0){c[k+4>>2]=0;a[r]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}hc(k,0);c[r>>2]=c[u>>2];c[r+4>>2]=c[u+4>>2];c[r+8>>2]=c[u+8>>2];oe(u|0,0,12);g9(t);t=b;c[f>>2]=cZ[c[(c[t>>2]|0)+12>>2]&255](K)|0;c[g>>2]=cZ[c[(c[t>>2]|0)+16>>2]&255](K)|0;cV[c[(c[b>>2]|0)+20>>2]&255](v,K);b=h;if((a[b]&1)==0){a[h+1|0]=0;a[b]=0}else{a[c[h+8>>2]|0]=0;c[h+4>>2]=0}g2(h,0);c[b>>2]=c[w>>2];c[b+4>>2]=c[w+4>>2];c[b+8>>2]=c[w+8>>2];oe(w|0,0,12);g_(v);cV[c[(c[L>>2]|0)+24>>2]&255](x,K);L=j;if((a[L]&1)==0){c[j+4>>2]=0;a[L]=0}else{c[c[j+8>>2]>>2]=0;c[j+4>>2]=0}hc(j,0);c[L>>2]=c[y>>2];c[L+4>>2]=c[y+4>>2];c[L+8>>2]=c[y+8>>2];oe(y|0,0,12);g9(x);M=cZ[c[(c[t>>2]|0)+36>>2]&255](K)|0;c[m>>2]=M;i=n;return}else{K=c[d>>2]|0;if((c[4650]|0)!=-1){c[o>>2]=18600;c[o+4>>2]=16;c[o+8>>2]=0;gV(18600,o,108)}o=(c[4651]|0)-1|0;d=c[K+8>>2]|0;if((c[K+12>>2]|0)-d>>2>>>0<=o>>>0){N=cy(4)|0;O=N;nG(O);bK(N|0,11832,162)}K=c[d+(o<<2)>>2]|0;if((K|0)==0){N=cy(4)|0;O=N;nG(O);bK(N|0,11832,162)}N=K;cV[c[(c[K>>2]|0)+44>>2]&255](z,N);O=e;C=c[z>>2]|0;a[O]=C&255;C=C>>8;a[O+1|0]=C&255;C=C>>8;a[O+2|0]=C&255;C=C>>8;a[O+3|0]=C&255;O=K;cV[c[(c[O>>2]|0)+32>>2]&255](A,N);z=l;if((a[z]&1)==0){c[l+4>>2]=0;a[z]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}hc(l,0);c[z>>2]=c[B>>2];c[z+4>>2]=c[B+4>>2];c[z+8>>2]=c[B+8>>2];oe(B|0,0,12);g9(A);cV[c[(c[O>>2]|0)+28>>2]&255](D,N);A=k;if((a[A]&1)==0){c[k+4>>2]=0;a[A]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}hc(k,0);c[A>>2]=c[E>>2];c[A+4>>2]=c[E+4>>2];c[A+8>>2]=c[E+8>>2];oe(E|0,0,12);g9(D);D=K;c[f>>2]=cZ[c[(c[D>>2]|0)+12>>2]&255](N)|0;c[g>>2]=cZ[c[(c[D>>2]|0)+16>>2]&255](N)|0;cV[c[(c[K>>2]|0)+20>>2]&255](F,N);K=h;if((a[K]&1)==0){a[h+1|0]=0;a[K]=0}else{a[c[h+8>>2]|0]=0;c[h+4>>2]=0}g2(h,0);c[K>>2]=c[G>>2];c[K+4>>2]=c[G+4>>2];c[K+8>>2]=c[G+8>>2];oe(G|0,0,12);g_(F);cV[c[(c[O>>2]|0)+24>>2]&255](H,N);O=j;if((a[O]&1)==0){c[j+4>>2]=0;a[O]=0}else{c[c[j+8>>2]>>2]=0;c[j+4>>2]=0}hc(j,0);c[O>>2]=c[I>>2];c[O+4>>2]=c[I+4>>2];c[O+8>>2]=c[I+8>>2];oe(I|0,0,12);g9(H);M=cZ[c[(c[D>>2]|0)+36>>2]&255](N)|0;c[m>>2]=M;i=n;return}}function lb(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=a+4|0;f=(c[e>>2]|0)!=198;g=a|0;a=c[g>>2]|0;h=a;i=(c[d>>2]|0)-h|0;j=i>>>0<2147483647>>>0?i<<1:-1;i=(c[b>>2]|0)-h>>2;if(f){k=a}else{k=0}a=n1(k,j)|0;k=a;if((a|0)==0){ob()}do{if(f){c[g>>2]=k;l=k}else{a=c[g>>2]|0;c[g>>2]=k;if((a|0)==0){l=k;break}cU[c[e>>2]&511](a);l=c[g>>2]|0}}while(0);c[e>>2]=92;c[b>>2]=l+(i<<2);c[d>>2]=(c[g>>2]|0)+(j>>>2<<2);return}function lc(a){a=a|0;gy(a|0);n6(a);return}function ld(a){a=a|0;gy(a|0);return}function le(b,e,f,g,j,k,l){b=b|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;l=+l;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0;e=i;i=i+280|0;m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=e|0;n=e+120|0;o=e+232|0;p=e+240|0;q=e+248|0;r=e+256|0;s=e+264|0;t=s;u=i;i=i+12|0;i=i+7&-8;v=u;w=i;i=i+12|0;i=i+7&-8;x=w;y=i;i=i+4|0;i=i+7&-8;z=i;i=i+100|0;i=i+7&-8;A=i;i=i+4|0;i=i+7&-8;B=i;i=i+4|0;i=i+7&-8;C=i;i=i+4|0;i=i+7&-8;D=e+16|0;c[n>>2]=D;E=e+128|0;F=bb(D|0,100,3504,(D=i,i=i+8|0,h[D>>3]=l,D)|0)|0;i=D;do{if(F>>>0>99>>>0){do{if((a[19040]|0)==0){if((bx(19040)|0)==0){break}c[4176]=a0(2147483647,3232,0)|0}}while(0);G=jq(n,c[4176]|0,3504,(D=i,i=i+8|0,h[D>>3]=l,D)|0)|0;i=D;H=c[n>>2]|0;if((H|0)==0){ob();I=c[n>>2]|0}else{I=H}H=n$(G)|0;if((H|0)!=0){J=H;K=G;L=I;M=H;break}ob();J=0;K=G;L=I;M=0}else{J=E;K=F;L=0;M=0}}while(0);hi(o,j);F=o|0;E=c[F>>2]|0;if((c[4534]|0)!=-1){c[m>>2]=18136;c[m+4>>2]=16;c[m+8>>2]=0;gV(18136,m,108)}m=(c[4535]|0)-1|0;I=c[E+8>>2]|0;do{if((c[E+12>>2]|0)-I>>2>>>0>m>>>0){D=c[I+(m<<2)>>2]|0;if((D|0)==0){break}G=D;H=c[n>>2]|0;N=H+K|0;O=c[(c[D>>2]|0)+32>>2]|0;cX[O&15](G,H,N,J)|0;if((K|0)==0){P=0}else{P=(a[c[n>>2]|0]|0)==45}oe(t|0,0,12);oe(v|0,0,12);oe(x|0,0,12);lf(g,P,o,p,q,r,s,u,w,y);N=z|0;H=c[y>>2]|0;if((K|0)>(H|0)){O=d[x]|0;if((O&1|0)==0){Q=O>>>1}else{Q=c[w+4>>2]|0}O=d[v]|0;if((O&1|0)==0){R=O>>>1}else{R=c[u+4>>2]|0}S=(K-H<<1|1)+Q+R|0}else{O=d[x]|0;if((O&1|0)==0){T=O>>>1}else{T=c[w+4>>2]|0}O=d[v]|0;if((O&1|0)==0){U=O>>>1}else{U=c[u+4>>2]|0}S=T+2+U|0}O=S+H|0;do{if(O>>>0>100>>>0){D=n$(O)|0;if((D|0)!=0){V=D;W=D;break}ob();V=0;W=0}else{V=N;W=0}}while(0);lg(V,A,B,c[j+4>>2]|0,J,J+K|0,G,P,p,a[q]|0,a[r]|0,s,u,w,H);c[C>>2]=c[f>>2];jl(b,C,V,c[A>>2]|0,c[B>>2]|0,j,k);if((W|0)!=0){n0(W)}g_(w);g_(u);g_(s);N=c[F>>2]|0;gA(N)|0;if((M|0)!=0){n0(M)}if((L|0)==0){i=e;return}n0(L);i=e;return}}while(0);e=cy(4)|0;nG(e);bK(e|0,11832,162)}function lf(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;n=i;i=i+40|0;o=n|0;p=n+16|0;q=n+32|0;r=q;s=i;i=i+12|0;i=i+7&-8;t=s;u=i;i=i+4|0;i=i+7&-8;v=u;w=i;i=i+12|0;i=i+7&-8;x=w;y=i;i=i+12|0;i=i+7&-8;z=y;A=i;i=i+12|0;i=i+7&-8;B=A;D=i;i=i+4|0;i=i+7&-8;E=D;F=i;i=i+12|0;i=i+7&-8;G=F;H=i;i=i+4|0;i=i+7&-8;I=H;J=i;i=i+12|0;i=i+7&-8;K=J;L=i;i=i+12|0;i=i+7&-8;M=L;N=i;i=i+12|0;i=i+7&-8;O=N;P=c[e>>2]|0;if(b){if((c[4652]|0)!=-1){c[p>>2]=18608;c[p+4>>2]=16;c[p+8>>2]=0;gV(18608,p,108)}p=(c[4653]|0)-1|0;b=c[P+8>>2]|0;if((c[P+12>>2]|0)-b>>2>>>0<=p>>>0){Q=cy(4)|0;R=Q;nG(R);bK(Q|0,11832,162)}e=c[b+(p<<2)>>2]|0;if((e|0)==0){Q=cy(4)|0;R=Q;nG(R);bK(Q|0,11832,162)}Q=e;R=c[e>>2]|0;if(d){cV[c[R+44>>2]&255](r,Q);r=f;C=c[q>>2]|0;a[r]=C&255;C=C>>8;a[r+1|0]=C&255;C=C>>8;a[r+2|0]=C&255;C=C>>8;a[r+3|0]=C&255;cV[c[(c[e>>2]|0)+32>>2]&255](s,Q);r=l;if((a[r]&1)==0){a[l+1|0]=0;a[r]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}g2(l,0);c[r>>2]=c[t>>2];c[r+4>>2]=c[t+4>>2];c[r+8>>2]=c[t+8>>2];oe(t|0,0,12);g_(s)}else{cV[c[R+40>>2]&255](v,Q);v=f;C=c[u>>2]|0;a[v]=C&255;C=C>>8;a[v+1|0]=C&255;C=C>>8;a[v+2|0]=C&255;C=C>>8;a[v+3|0]=C&255;cV[c[(c[e>>2]|0)+28>>2]&255](w,Q);v=l;if((a[v]&1)==0){a[l+1|0]=0;a[v]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}g2(l,0);c[v>>2]=c[x>>2];c[v+4>>2]=c[x+4>>2];c[v+8>>2]=c[x+8>>2];oe(x|0,0,12);g_(w)}w=e;a[g]=cZ[c[(c[w>>2]|0)+12>>2]&255](Q)|0;a[h]=cZ[c[(c[w>>2]|0)+16>>2]&255](Q)|0;w=e;cV[c[(c[w>>2]|0)+20>>2]&255](y,Q);x=j;if((a[x]&1)==0){a[j+1|0]=0;a[x]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}g2(j,0);c[x>>2]=c[z>>2];c[x+4>>2]=c[z+4>>2];c[x+8>>2]=c[z+8>>2];oe(z|0,0,12);g_(y);cV[c[(c[w>>2]|0)+24>>2]&255](A,Q);w=k;if((a[w]&1)==0){a[k+1|0]=0;a[w]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}g2(k,0);c[w>>2]=c[B>>2];c[w+4>>2]=c[B+4>>2];c[w+8>>2]=c[B+8>>2];oe(B|0,0,12);g_(A);S=cZ[c[(c[e>>2]|0)+36>>2]&255](Q)|0;c[m>>2]=S;i=n;return}else{if((c[4654]|0)!=-1){c[o>>2]=18616;c[o+4>>2]=16;c[o+8>>2]=0;gV(18616,o,108)}o=(c[4655]|0)-1|0;Q=c[P+8>>2]|0;if((c[P+12>>2]|0)-Q>>2>>>0<=o>>>0){T=cy(4)|0;U=T;nG(U);bK(T|0,11832,162)}P=c[Q+(o<<2)>>2]|0;if((P|0)==0){T=cy(4)|0;U=T;nG(U);bK(T|0,11832,162)}T=P;U=c[P>>2]|0;if(d){cV[c[U+44>>2]&255](E,T);E=f;C=c[D>>2]|0;a[E]=C&255;C=C>>8;a[E+1|0]=C&255;C=C>>8;a[E+2|0]=C&255;C=C>>8;a[E+3|0]=C&255;cV[c[(c[P>>2]|0)+32>>2]&255](F,T);E=l;if((a[E]&1)==0){a[l+1|0]=0;a[E]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}g2(l,0);c[E>>2]=c[G>>2];c[E+4>>2]=c[G+4>>2];c[E+8>>2]=c[G+8>>2];oe(G|0,0,12);g_(F)}else{cV[c[U+40>>2]&255](I,T);I=f;C=c[H>>2]|0;a[I]=C&255;C=C>>8;a[I+1|0]=C&255;C=C>>8;a[I+2|0]=C&255;C=C>>8;a[I+3|0]=C&255;cV[c[(c[P>>2]|0)+28>>2]&255](J,T);I=l;if((a[I]&1)==0){a[l+1|0]=0;a[I]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}g2(l,0);c[I>>2]=c[K>>2];c[I+4>>2]=c[K+4>>2];c[I+8>>2]=c[K+8>>2];oe(K|0,0,12);g_(J)}J=P;a[g]=cZ[c[(c[J>>2]|0)+12>>2]&255](T)|0;a[h]=cZ[c[(c[J>>2]|0)+16>>2]&255](T)|0;J=P;cV[c[(c[J>>2]|0)+20>>2]&255](L,T);h=j;if((a[h]&1)==0){a[j+1|0]=0;a[h]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}g2(j,0);c[h>>2]=c[M>>2];c[h+4>>2]=c[M+4>>2];c[h+8>>2]=c[M+8>>2];oe(M|0,0,12);g_(L);cV[c[(c[J>>2]|0)+24>>2]&255](N,T);J=k;if((a[J]&1)==0){a[k+1|0]=0;a[J]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}g2(k,0);c[J>>2]=c[O>>2];c[J+4>>2]=c[O+4>>2];c[J+8>>2]=c[O+8>>2];oe(O|0,0,12);g_(N);S=cZ[c[(c[P>>2]|0)+36>>2]&255](T)|0;c[m>>2]=S;i=n;return}}function lg(d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;r=r|0;var s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0;c[f>>2]=d;s=j;t=q;u=q+1|0;v=q+8|0;w=q+4|0;q=p;x=(g&512|0)==0;y=p+1|0;z=p+4|0;A=p+8|0;p=j+8|0;B=(r|0)>0;C=o;D=o+1|0;E=o+8|0;F=o+4|0;o=-r|0;G=h;h=0;while(1){L692:do{switch(a[l+h|0]|0){case 0:{c[e>>2]=c[f>>2];H=G;break};case 1:{c[e>>2]=c[f>>2];I=c6[c[(c[s>>2]|0)+28>>2]&63](j,32)|0;J=c[f>>2]|0;c[f>>2]=J+1;a[J]=I;H=G;break};case 3:{I=a[t]|0;J=I&255;if((J&1|0)==0){K=J>>>1}else{K=c[w>>2]|0}if((K|0)==0){H=G;break L692}if((I&1)==0){L=u}else{L=c[v>>2]|0}I=a[L]|0;J=c[f>>2]|0;c[f>>2]=J+1;a[J]=I;H=G;break};case 2:{I=a[q]|0;J=I&255;M=(J&1|0)==0;if(M){N=J>>>1}else{N=c[z>>2]|0}if((N|0)==0|x){H=G;break L692}if((I&1)==0){O=y;P=y}else{I=c[A>>2]|0;O=I;P=I}if(M){Q=J>>>1}else{Q=c[z>>2]|0}J=O+Q|0;M=c[f>>2]|0;if((P|0)==(J|0)){R=M}else{I=P;S=M;while(1){a[S]=a[I]|0;M=I+1|0;T=S+1|0;if((M|0)==(J|0)){R=T;break}else{I=M;S=T}}}c[f>>2]=R;H=G;break};case 4:{S=c[f>>2]|0;I=k?G+1|0:G;J=I;while(1){if(J>>>0>=i>>>0){break}T=a[J]|0;if(T<<24>>24<0){break}if((b[(c[p>>2]|0)+(T<<24>>24<<1)>>1]&2048)==0){break}else{J=J+1|0}}T=J;if(B){if(J>>>0>I>>>0){M=I+(-T|0)|0;T=M>>>0<o>>>0?o:M;M=T+r|0;U=J;V=r;W=S;while(1){X=U-1|0;Y=a[X]|0;c[f>>2]=W+1;a[W]=Y;Y=V-1|0;Z=(Y|0)>0;if(!(X>>>0>I>>>0&Z)){break}U=X;V=Y;W=c[f>>2]|0}W=J+T|0;if(Z){_=M;$=W;aa=603}else{ab=0;ac=M;ad=W}}else{_=r;$=J;aa=603}if((aa|0)==603){aa=0;ab=c6[c[(c[s>>2]|0)+28>>2]&63](j,48)|0;ac=_;ad=$}W=c[f>>2]|0;c[f>>2]=W+1;if((ac|0)>0){V=ac;U=W;while(1){a[U]=ab;Y=V-1|0;X=c[f>>2]|0;c[f>>2]=X+1;if((Y|0)>0){V=Y;U=X}else{ae=X;break}}}else{ae=W}a[ae]=m;af=ad}else{af=J}if((af|0)==(I|0)){U=c6[c[(c[s>>2]|0)+28>>2]&63](j,48)|0;V=c[f>>2]|0;c[f>>2]=V+1;a[V]=U}else{U=a[C]|0;V=U&255;if((V&1|0)==0){ag=V>>>1}else{ag=c[F>>2]|0}if((ag|0)==0){ah=af;ai=0;aj=0;ak=-1}else{if((U&1)==0){al=D}else{al=c[E>>2]|0}ah=af;ai=0;aj=0;ak=a[al]|0}while(1){do{if((ai|0)==(ak|0)){U=c[f>>2]|0;c[f>>2]=U+1;a[U]=n;U=aj+1|0;V=a[C]|0;M=V&255;if((M&1|0)==0){am=M>>>1}else{am=c[F>>2]|0}if(U>>>0>=am>>>0){an=ak;ao=U;ap=0;break}M=(V&1)==0;if(M){aq=D}else{aq=c[E>>2]|0}if((a[aq+U|0]|0)==127){an=-1;ao=U;ap=0;break}if(M){ar=D}else{ar=c[E>>2]|0}an=a[ar+U|0]|0;ao=U;ap=0}else{an=ak;ao=aj;ap=ai}}while(0);U=ah-1|0;M=a[U]|0;V=c[f>>2]|0;c[f>>2]=V+1;a[V]=M;if((U|0)==(I|0)){break}else{ah=U;ai=ap+1|0;aj=ao;ak=an}}}J=c[f>>2]|0;if((S|0)==(J|0)){H=I;break L692}W=J-1|0;if(S>>>0<W>>>0){as=S;at=W}else{H=I;break L692}while(1){W=a[as]|0;a[as]=a[at]|0;a[at]=W;W=as+1|0;J=at-1|0;if(W>>>0<J>>>0){as=W;at=J}else{H=I;break}}break};default:{H=G}}}while(0);I=h+1|0;if(I>>>0<4>>>0){G=H;h=I}else{break}}h=a[t]|0;t=h&255;H=(t&1|0)==0;if(H){au=t>>>1}else{au=c[w>>2]|0}if(au>>>0>1>>>0){if((h&1)==0){av=u;aw=u}else{u=c[v>>2]|0;av=u;aw=u}if(H){ax=t>>>1}else{ax=c[w>>2]|0}w=av+ax|0;ax=c[f>>2]|0;av=aw+1|0;if((av|0)==(w|0)){ay=ax}else{aw=ax;ax=av;while(1){a[aw]=a[ax]|0;av=aw+1|0;t=ax+1|0;if((t|0)==(w|0)){ay=av;break}else{aw=av;ax=t}}}c[f>>2]=ay}ay=g&176;if((ay|0)==32){c[e>>2]=c[f>>2];return}else if((ay|0)==16){return}else{c[e>>2]=d;return}}function lh(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0;e=i;i=i+64|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=e|0;m=e+16|0;n=e+24|0;o=e+32|0;p=e+40|0;q=e+48|0;r=q;s=i;i=i+12|0;i=i+7&-8;t=s;u=i;i=i+12|0;i=i+7&-8;v=u;w=i;i=i+4|0;i=i+7&-8;x=i;i=i+100|0;i=i+7&-8;y=i;i=i+4|0;i=i+7&-8;z=i;i=i+4|0;i=i+7&-8;A=i;i=i+4|0;i=i+7&-8;hi(m,h);B=m|0;C=c[B>>2]|0;if((c[4534]|0)!=-1){c[l>>2]=18136;c[l+4>>2]=16;c[l+8>>2]=0;gV(18136,l,108)}l=(c[4535]|0)-1|0;D=c[C+8>>2]|0;do{if((c[C+12>>2]|0)-D>>2>>>0>l>>>0){E=c[D+(l<<2)>>2]|0;if((E|0)==0){break}F=E;G=k;H=k;I=a[H]|0;J=I&255;if((J&1|0)==0){K=J>>>1}else{K=c[k+4>>2]|0}if((K|0)==0){L=0}else{if((I&1)==0){M=G+1|0}else{M=c[k+8>>2]|0}I=a[M]|0;L=I<<24>>24==(c6[c[(c[E>>2]|0)+28>>2]&63](F,45)|0)<<24>>24}oe(r|0,0,12);oe(t|0,0,12);oe(v|0,0,12);lf(g,L,m,n,o,p,q,s,u,w);E=x|0;I=a[H]|0;J=I&255;N=(J&1|0)==0;if(N){O=J>>>1}else{O=c[k+4>>2]|0}P=c[w>>2]|0;if((O|0)>(P|0)){if(N){Q=J>>>1}else{Q=c[k+4>>2]|0}J=d[v]|0;if((J&1|0)==0){R=J>>>1}else{R=c[u+4>>2]|0}J=d[t]|0;if((J&1|0)==0){S=J>>>1}else{S=c[s+4>>2]|0}T=(Q-P<<1|1)+R+S|0}else{J=d[v]|0;if((J&1|0)==0){U=J>>>1}else{U=c[u+4>>2]|0}J=d[t]|0;if((J&1|0)==0){V=J>>>1}else{V=c[s+4>>2]|0}T=U+2+V|0}J=T+P|0;do{if(J>>>0>100>>>0){N=n$(J)|0;if((N|0)!=0){W=N;X=N;Y=I;break}ob();W=0;X=0;Y=a[H]|0}else{W=E;X=0;Y=I}}while(0);if((Y&1)==0){Z=G+1|0;_=G+1|0}else{I=c[k+8>>2]|0;Z=I;_=I}I=Y&255;if((I&1|0)==0){$=I>>>1}else{$=c[k+4>>2]|0}lg(W,y,z,c[h+4>>2]|0,_,Z+$|0,F,L,n,a[o]|0,a[p]|0,q,s,u,P);c[A>>2]=c[f>>2];jl(b,A,W,c[y>>2]|0,c[z>>2]|0,h,j);if((X|0)==0){g_(u);g_(s);g_(q);aa=c[B>>2]|0;ab=aa|0;ac=gA(ab)|0;i=e;return}n0(X);g_(u);g_(s);g_(q);aa=c[B>>2]|0;ab=aa|0;ac=gA(ab)|0;i=e;return}}while(0);e=cy(4)|0;nG(e);bK(e|0,11832,162)}function li(a){a=a|0;gy(a|0);n6(a);return}function lj(a){a=a|0;gy(a|0);return}function lk(b,e,f,g,j,k,l){b=b|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;l=+l;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;e=i;i=i+576|0;m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=e|0;n=e+120|0;o=e+528|0;p=e+536|0;q=e+544|0;r=e+552|0;s=e+560|0;t=s;u=i;i=i+12|0;i=i+7&-8;v=u;w=i;i=i+12|0;i=i+7&-8;x=w;y=i;i=i+4|0;i=i+7&-8;z=i;i=i+400|0;A=i;i=i+4|0;i=i+7&-8;B=i;i=i+4|0;i=i+7&-8;C=i;i=i+4|0;i=i+7&-8;D=e+16|0;c[n>>2]=D;E=e+128|0;F=bb(D|0,100,3504,(D=i,i=i+8|0,h[D>>3]=l,D)|0)|0;i=D;do{if(F>>>0>99>>>0){do{if((a[19040]|0)==0){if((bx(19040)|0)==0){break}c[4176]=a0(2147483647,3232,0)|0}}while(0);G=jq(n,c[4176]|0,3504,(D=i,i=i+8|0,h[D>>3]=l,D)|0)|0;i=D;H=c[n>>2]|0;if((H|0)==0){ob();I=c[n>>2]|0}else{I=H}H=n$(G<<2)|0;J=H;if((H|0)!=0){K=J;L=G;M=I;N=J;break}ob();K=J;L=G;M=I;N=J}else{K=E;L=F;M=0;N=0}}while(0);hi(o,j);F=o|0;E=c[F>>2]|0;if((c[4532]|0)!=-1){c[m>>2]=18128;c[m+4>>2]=16;c[m+8>>2]=0;gV(18128,m,108)}m=(c[4533]|0)-1|0;I=c[E+8>>2]|0;do{if((c[E+12>>2]|0)-I>>2>>>0>m>>>0){D=c[I+(m<<2)>>2]|0;if((D|0)==0){break}J=D;G=c[n>>2]|0;H=G+L|0;O=c[(c[D>>2]|0)+48>>2]|0;cX[O&15](J,G,H,K)|0;if((L|0)==0){P=0}else{P=(a[c[n>>2]|0]|0)==45}oe(t|0,0,12);oe(v|0,0,12);oe(x|0,0,12);ll(g,P,o,p,q,r,s,u,w,y);H=z|0;G=c[y>>2]|0;if((L|0)>(G|0)){O=d[x]|0;if((O&1|0)==0){Q=O>>>1}else{Q=c[w+4>>2]|0}O=d[v]|0;if((O&1|0)==0){R=O>>>1}else{R=c[u+4>>2]|0}S=(L-G<<1|1)+Q+R|0}else{O=d[x]|0;if((O&1|0)==0){T=O>>>1}else{T=c[w+4>>2]|0}O=d[v]|0;if((O&1|0)==0){U=O>>>1}else{U=c[u+4>>2]|0}S=T+2+U|0}O=S+G|0;do{if(O>>>0>100>>>0){D=n$(O<<2)|0;V=D;if((D|0)!=0){W=V;X=V;break}ob();W=V;X=V}else{W=H;X=0}}while(0);lm(W,A,B,c[j+4>>2]|0,K,K+(L<<2)|0,J,P,p,c[q>>2]|0,c[r>>2]|0,s,u,w,G);c[C>>2]=c[f>>2];jz(b,C,W,c[A>>2]|0,c[B>>2]|0,j,k);if((X|0)!=0){n0(X)}g9(w);g9(u);g_(s);H=c[F>>2]|0;gA(H)|0;if((N|0)!=0){n0(N)}if((M|0)==0){i=e;return}n0(M);i=e;return}}while(0);e=cy(4)|0;nG(e);bK(e|0,11832,162)}function ll(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;n=i;i=i+40|0;o=n|0;p=n+16|0;q=n+32|0;r=q;s=i;i=i+12|0;i=i+7&-8;t=s;u=i;i=i+4|0;i=i+7&-8;v=u;w=i;i=i+12|0;i=i+7&-8;x=w;y=i;i=i+12|0;i=i+7&-8;z=y;A=i;i=i+12|0;i=i+7&-8;B=A;D=i;i=i+4|0;i=i+7&-8;E=D;F=i;i=i+12|0;i=i+7&-8;G=F;H=i;i=i+4|0;i=i+7&-8;I=H;J=i;i=i+12|0;i=i+7&-8;K=J;L=i;i=i+12|0;i=i+7&-8;M=L;N=i;i=i+12|0;i=i+7&-8;O=N;P=c[e>>2]|0;if(b){if((c[4648]|0)!=-1){c[p>>2]=18592;c[p+4>>2]=16;c[p+8>>2]=0;gV(18592,p,108)}p=(c[4649]|0)-1|0;b=c[P+8>>2]|0;if((c[P+12>>2]|0)-b>>2>>>0<=p>>>0){Q=cy(4)|0;R=Q;nG(R);bK(Q|0,11832,162)}e=c[b+(p<<2)>>2]|0;if((e|0)==0){Q=cy(4)|0;R=Q;nG(R);bK(Q|0,11832,162)}Q=e;R=c[e>>2]|0;if(d){cV[c[R+44>>2]&255](r,Q);r=f;C=c[q>>2]|0;a[r]=C&255;C=C>>8;a[r+1|0]=C&255;C=C>>8;a[r+2|0]=C&255;C=C>>8;a[r+3|0]=C&255;cV[c[(c[e>>2]|0)+32>>2]&255](s,Q);r=l;if((a[r]&1)==0){c[l+4>>2]=0;a[r]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}hc(l,0);c[r>>2]=c[t>>2];c[r+4>>2]=c[t+4>>2];c[r+8>>2]=c[t+8>>2];oe(t|0,0,12);g9(s)}else{cV[c[R+40>>2]&255](v,Q);v=f;C=c[u>>2]|0;a[v]=C&255;C=C>>8;a[v+1|0]=C&255;C=C>>8;a[v+2|0]=C&255;C=C>>8;a[v+3|0]=C&255;cV[c[(c[e>>2]|0)+28>>2]&255](w,Q);v=l;if((a[v]&1)==0){c[l+4>>2]=0;a[v]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}hc(l,0);c[v>>2]=c[x>>2];c[v+4>>2]=c[x+4>>2];c[v+8>>2]=c[x+8>>2];oe(x|0,0,12);g9(w)}w=e;c[g>>2]=cZ[c[(c[w>>2]|0)+12>>2]&255](Q)|0;c[h>>2]=cZ[c[(c[w>>2]|0)+16>>2]&255](Q)|0;cV[c[(c[e>>2]|0)+20>>2]&255](y,Q);x=j;if((a[x]&1)==0){a[j+1|0]=0;a[x]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}g2(j,0);c[x>>2]=c[z>>2];c[x+4>>2]=c[z+4>>2];c[x+8>>2]=c[z+8>>2];oe(z|0,0,12);g_(y);cV[c[(c[e>>2]|0)+24>>2]&255](A,Q);e=k;if((a[e]&1)==0){c[k+4>>2]=0;a[e]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}hc(k,0);c[e>>2]=c[B>>2];c[e+4>>2]=c[B+4>>2];c[e+8>>2]=c[B+8>>2];oe(B|0,0,12);g9(A);S=cZ[c[(c[w>>2]|0)+36>>2]&255](Q)|0;c[m>>2]=S;i=n;return}else{if((c[4650]|0)!=-1){c[o>>2]=18600;c[o+4>>2]=16;c[o+8>>2]=0;gV(18600,o,108)}o=(c[4651]|0)-1|0;Q=c[P+8>>2]|0;if((c[P+12>>2]|0)-Q>>2>>>0<=o>>>0){T=cy(4)|0;U=T;nG(U);bK(T|0,11832,162)}P=c[Q+(o<<2)>>2]|0;if((P|0)==0){T=cy(4)|0;U=T;nG(U);bK(T|0,11832,162)}T=P;U=c[P>>2]|0;if(d){cV[c[U+44>>2]&255](E,T);E=f;C=c[D>>2]|0;a[E]=C&255;C=C>>8;a[E+1|0]=C&255;C=C>>8;a[E+2|0]=C&255;C=C>>8;a[E+3|0]=C&255;cV[c[(c[P>>2]|0)+32>>2]&255](F,T);E=l;if((a[E]&1)==0){c[l+4>>2]=0;a[E]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}hc(l,0);c[E>>2]=c[G>>2];c[E+4>>2]=c[G+4>>2];c[E+8>>2]=c[G+8>>2];oe(G|0,0,12);g9(F)}else{cV[c[U+40>>2]&255](I,T);I=f;C=c[H>>2]|0;a[I]=C&255;C=C>>8;a[I+1|0]=C&255;C=C>>8;a[I+2|0]=C&255;C=C>>8;a[I+3|0]=C&255;cV[c[(c[P>>2]|0)+28>>2]&255](J,T);I=l;if((a[I]&1)==0){c[l+4>>2]=0;a[I]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}hc(l,0);c[I>>2]=c[K>>2];c[I+4>>2]=c[K+4>>2];c[I+8>>2]=c[K+8>>2];oe(K|0,0,12);g9(J)}J=P;c[g>>2]=cZ[c[(c[J>>2]|0)+12>>2]&255](T)|0;c[h>>2]=cZ[c[(c[J>>2]|0)+16>>2]&255](T)|0;cV[c[(c[P>>2]|0)+20>>2]&255](L,T);h=j;if((a[h]&1)==0){a[j+1|0]=0;a[h]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}g2(j,0);c[h>>2]=c[M>>2];c[h+4>>2]=c[M+4>>2];c[h+8>>2]=c[M+8>>2];oe(M|0,0,12);g_(L);cV[c[(c[P>>2]|0)+24>>2]&255](N,T);P=k;if((a[P]&1)==0){c[k+4>>2]=0;a[P]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}hc(k,0);c[P>>2]=c[O>>2];c[P+4>>2]=c[O+4>>2];c[P+8>>2]=c[O+8>>2];oe(O|0,0,12);g9(N);S=cZ[c[(c[J>>2]|0)+36>>2]&255](T)|0;c[m>>2]=S;i=n;return}}function lm(b,d,e,f,g,h,i,j,k,l,m,n,o,p,q){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;var r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0;c[e>>2]=b;r=i;s=p;t=p+4|0;u=p+8|0;p=o;v=(f&512|0)==0;w=o+4|0;x=o+8|0;o=i;y=(q|0)>0;z=n;A=n+1|0;B=n+8|0;C=n+4|0;n=g;g=0;while(1){L1013:do{switch(a[k+g|0]|0){case 0:{c[d>>2]=c[e>>2];D=n;break};case 1:{c[d>>2]=c[e>>2];E=c6[c[(c[r>>2]|0)+44>>2]&63](i,32)|0;F=c[e>>2]|0;c[e>>2]=F+4;c[F>>2]=E;D=n;break};case 3:{E=a[s]|0;F=E&255;if((F&1|0)==0){G=F>>>1}else{G=c[t>>2]|0}if((G|0)==0){D=n;break L1013}if((E&1)==0){H=t}else{H=c[u>>2]|0}E=c[H>>2]|0;F=c[e>>2]|0;c[e>>2]=F+4;c[F>>2]=E;D=n;break};case 2:{E=a[p]|0;F=E&255;I=(F&1|0)==0;if(I){J=F>>>1}else{J=c[w>>2]|0}if((J|0)==0|v){D=n;break L1013}if((E&1)==0){K=w;L=w;M=w}else{E=c[x>>2]|0;K=E;L=E;M=E}if(I){N=F>>>1}else{N=c[w>>2]|0}F=K+(N<<2)|0;I=c[e>>2]|0;if((L|0)==(F|0)){O=I}else{E=(K+(N-1<<2)+(-M|0)|0)>>>2;P=L;Q=I;while(1){c[Q>>2]=c[P>>2];R=P+4|0;if((R|0)==(F|0)){break}P=R;Q=Q+4|0}O=I+(E+1<<2)|0}c[e>>2]=O;D=n;break};case 4:{Q=c[e>>2]|0;P=j?n+4|0:n;F=P;while(1){if(F>>>0>=h>>>0){break}if(c_[c[(c[o>>2]|0)+12>>2]&63](i,2048,c[F>>2]|0)|0){F=F+4|0}else{break}}if(y){if(F>>>0>P>>>0){E=F;I=q;do{E=E-4|0;R=c[E>>2]|0;S=c[e>>2]|0;c[e>>2]=S+4;c[S>>2]=R;I=I-1|0;T=(I|0)>0;}while(E>>>0>P>>>0&T);if(T){U=I;V=E;W=879}else{X=0;Y=I;Z=E}}else{U=q;V=F;W=879}if((W|0)==879){W=0;X=c6[c[(c[r>>2]|0)+44>>2]&63](i,48)|0;Y=U;Z=V}R=c[e>>2]|0;c[e>>2]=R+4;if((Y|0)>0){S=Y;_=R;while(1){c[_>>2]=X;$=S-1|0;aa=c[e>>2]|0;c[e>>2]=aa+4;if(($|0)>0){S=$;_=aa}else{ab=aa;break}}}else{ab=R}c[ab>>2]=l;ac=Z}else{ac=F}if((ac|0)==(P|0)){_=c6[c[(c[r>>2]|0)+44>>2]&63](i,48)|0;S=c[e>>2]|0;c[e>>2]=S+4;c[S>>2]=_}else{_=a[z]|0;S=_&255;if((S&1|0)==0){ad=S>>>1}else{ad=c[C>>2]|0}if((ad|0)==0){ae=ac;af=0;ag=0;ah=-1}else{if((_&1)==0){ai=A}else{ai=c[B>>2]|0}ae=ac;af=0;ag=0;ah=a[ai]|0}while(1){do{if((af|0)==(ah|0)){_=c[e>>2]|0;c[e>>2]=_+4;c[_>>2]=m;_=ag+1|0;S=a[z]|0;E=S&255;if((E&1|0)==0){aj=E>>>1}else{aj=c[C>>2]|0}if(_>>>0>=aj>>>0){ak=ah;al=_;am=0;break}E=(S&1)==0;if(E){an=A}else{an=c[B>>2]|0}if((a[an+_|0]|0)==127){ak=-1;al=_;am=0;break}if(E){ao=A}else{ao=c[B>>2]|0}ak=a[ao+_|0]|0;al=_;am=0}else{ak=ah;al=ag;am=af}}while(0);_=ae-4|0;E=c[_>>2]|0;S=c[e>>2]|0;c[e>>2]=S+4;c[S>>2]=E;if((_|0)==(P|0)){break}else{ae=_;af=am+1|0;ag=al;ah=ak}}}F=c[e>>2]|0;if((Q|0)==(F|0)){D=P;break L1013}R=F-4|0;if(Q>>>0<R>>>0){ap=Q;aq=R}else{D=P;break L1013}while(1){R=c[ap>>2]|0;c[ap>>2]=c[aq>>2];c[aq>>2]=R;R=ap+4|0;F=aq-4|0;if(R>>>0<F>>>0){ap=R;aq=F}else{D=P;break}}break};default:{D=n}}}while(0);P=g+1|0;if(P>>>0<4>>>0){n=D;g=P}else{break}}g=a[s]|0;s=g&255;D=(s&1|0)==0;if(D){ar=s>>>1}else{ar=c[t>>2]|0}if(ar>>>0>1>>>0){if((g&1)==0){as=t;at=t;au=t}else{g=c[u>>2]|0;as=g;at=g;au=g}if(D){av=s>>>1}else{av=c[t>>2]|0}t=as+(av<<2)|0;s=c[e>>2]|0;D=at+4|0;if((D|0)==(t|0)){aw=s}else{at=((as+(av-2<<2)+(-au|0)|0)>>>2)+1|0;au=s;av=D;while(1){c[au>>2]=c[av>>2];D=av+4|0;if((D|0)==(t|0)){break}else{au=au+4|0;av=D}}aw=s+(at<<2)|0}c[e>>2]=aw}aw=f&176;if((aw|0)==16){return}else if((aw|0)==32){c[d>>2]=c[e>>2];return}else{c[d>>2]=b;return}}function ln(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0;e=i;i=i+64|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=e|0;m=e+16|0;n=e+24|0;o=e+32|0;p=e+40|0;q=e+48|0;r=q;s=i;i=i+12|0;i=i+7&-8;t=s;u=i;i=i+12|0;i=i+7&-8;v=u;w=i;i=i+4|0;i=i+7&-8;x=i;i=i+400|0;y=i;i=i+4|0;i=i+7&-8;z=i;i=i+4|0;i=i+7&-8;A=i;i=i+4|0;i=i+7&-8;hi(m,h);B=m|0;C=c[B>>2]|0;if((c[4532]|0)!=-1){c[l>>2]=18128;c[l+4>>2]=16;c[l+8>>2]=0;gV(18128,l,108)}l=(c[4533]|0)-1|0;D=c[C+8>>2]|0;do{if((c[C+12>>2]|0)-D>>2>>>0>l>>>0){E=c[D+(l<<2)>>2]|0;if((E|0)==0){break}F=E;G=k;H=a[G]|0;I=H&255;if((I&1|0)==0){J=I>>>1}else{J=c[k+4>>2]|0}if((J|0)==0){K=0}else{if((H&1)==0){L=k+4|0}else{L=c[k+8>>2]|0}H=c[L>>2]|0;K=(H|0)==(c6[c[(c[E>>2]|0)+44>>2]&63](F,45)|0)}oe(r|0,0,12);oe(t|0,0,12);oe(v|0,0,12);ll(g,K,m,n,o,p,q,s,u,w);E=x|0;H=a[G]|0;I=H&255;M=(I&1|0)==0;if(M){N=I>>>1}else{N=c[k+4>>2]|0}O=c[w>>2]|0;if((N|0)>(O|0)){if(M){P=I>>>1}else{P=c[k+4>>2]|0}I=d[v]|0;if((I&1|0)==0){Q=I>>>1}else{Q=c[u+4>>2]|0}I=d[t]|0;if((I&1|0)==0){R=I>>>1}else{R=c[s+4>>2]|0}S=(P-O<<1|1)+Q+R|0}else{I=d[v]|0;if((I&1|0)==0){T=I>>>1}else{T=c[u+4>>2]|0}I=d[t]|0;if((I&1|0)==0){U=I>>>1}else{U=c[s+4>>2]|0}S=T+2+U|0}I=S+O|0;do{if(I>>>0>100>>>0){M=n$(I<<2)|0;V=M;if((M|0)!=0){W=V;X=V;Y=H;break}ob();W=V;X=V;Y=a[G]|0}else{W=E;X=0;Y=H}}while(0);if((Y&1)==0){Z=k+4|0;_=k+4|0}else{H=c[k+8>>2]|0;Z=H;_=H}H=Y&255;if((H&1|0)==0){$=H>>>1}else{$=c[k+4>>2]|0}lm(W,y,z,c[h+4>>2]|0,_,Z+($<<2)|0,F,K,n,c[o>>2]|0,c[p>>2]|0,q,s,u,O);c[A>>2]=c[f>>2];jz(b,A,W,c[y>>2]|0,c[z>>2]|0,h,j);if((X|0)==0){g9(u);g9(s);g_(q);aa=c[B>>2]|0;ab=aa|0;ac=gA(ab)|0;i=e;return}n0(X);g9(u);g9(s);g_(q);aa=c[B>>2]|0;ab=aa|0;ac=gA(ab)|0;i=e;return}}while(0);e=cy(4)|0;nG(e);bK(e|0,11832,162)}function lo(a){a=a|0;gy(a|0);n6(a);return}function lp(a){a=a|0;gy(a|0);return}function lq(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((a[d]&1)==0){f=d+1|0}else{f=c[d+8>>2]|0}d=cE(f|0,1)|0;return d>>>(((d|0)!=-1|0)>>>0)|0}function lr(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;d=i;i=i+16|0;j=d|0;k=j;oe(k|0,0,12);l=b;m=h;n=a[h]|0;if((n&1)==0){o=m+1|0;p=m+1|0}else{m=c[h+8>>2]|0;o=m;p=m}m=n&255;if((m&1|0)==0){q=m>>>1}else{q=c[h+4>>2]|0}h=o+q|0;do{if(p>>>0<h>>>0){q=p;do{g3(j,a[q]|0);q=q+1|0;}while(q>>>0<h>>>0);q=(e|0)==-1?-1:e<<1;if((a[k]&1)==0){r=q;s=1011;break}t=c[j+8>>2]|0;u=q}else{r=(e|0)==-1?-1:e<<1;s=1011}}while(0);if((s|0)==1011){t=j+1|0;u=r}r=bt(u|0,f|0,g|0,t|0)|0;oe(l|0,0,12);l=og(r|0)|0;t=r+l|0;if((l|0)>0){v=r}else{g_(j);i=d;return}do{g3(b,a[v]|0);v=v+1|0;}while(v>>>0<t>>>0);g_(j);i=d;return}function ls(a,b){a=a|0;b=b|0;cb(((b|0)==-1?-1:b<<1)|0)|0;return}function lt(a){a=a|0;gy(a|0);n6(a);return}function lu(a){a=a|0;gy(a|0);return}function lv(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((a[d]&1)==0){f=d+1|0}else{f=c[d+8>>2]|0}d=cE(f|0,1)|0;return d>>>(((d|0)!=-1|0)>>>0)|0}function lw(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;d=i;i=i+224|0;j=d|0;k=d+8|0;l=d+40|0;m=d+48|0;n=d+56|0;o=d+64|0;p=d+192|0;q=d+200|0;r=d+208|0;s=r;t=i;i=i+8|0;u=i;i=i+8|0;oe(s|0,0,12);v=b;w=t|0;c[t+4>>2]=0;c[t>>2]=7048;x=a[h]|0;if((x&1)==0){y=h+4|0;z=h+4|0}else{A=c[h+8>>2]|0;y=A;z=A}A=x&255;if((A&1|0)==0){B=A>>>1}else{B=c[h+4>>2]|0}h=y+(B<<2)|0;L1246:do{if(z>>>0<h>>>0){B=t;y=k|0;A=k+32|0;x=z;C=7048;while(1){c[m>>2]=x;D=(c2[c[C+12>>2]&31](w,j,x,h,m,y,A,l)|0)==2;E=c[m>>2]|0;if(D|(E|0)==(x|0)){break}if(y>>>0<(c[l>>2]|0)>>>0){D=y;do{g3(r,a[D]|0);D=D+1|0;}while(D>>>0<(c[l>>2]|0)>>>0);F=c[m>>2]|0}else{F=E}if(F>>>0>=h>>>0){break L1246}x=F;C=c[B>>2]|0}B=cy(8)|0;gG(B,2280);bK(B|0,11848,28)}}while(0);gy(t|0);if((a[s]&1)==0){G=r+1|0}else{G=c[r+8>>2]|0}s=bt(((e|0)==-1?-1:e<<1)|0,f|0,g|0,G|0)|0;oe(v|0,0,12);v=u|0;c[u+4>>2]=0;c[u>>2]=6992;G=og(s|0)|0;g=s+G|0;if((G|0)<1){H=u|0;gy(H);g_(r);i=d;return}G=u;f=g;e=o|0;t=o+128|0;o=s;s=6992;while(1){c[q>>2]=o;F=(c2[c[s+16>>2]&31](v,n,o,(f-o|0)>32?o+32|0:g,q,e,t,p)|0)==2;h=c[q>>2]|0;if(F|(h|0)==(o|0)){break}if(e>>>0<(c[p>>2]|0)>>>0){F=e;do{hd(b,c[F>>2]|0);F=F+4|0;}while(F>>>0<(c[p>>2]|0)>>>0);I=c[q>>2]|0}else{I=h}if(I>>>0>=g>>>0){J=1077;break}o=I;s=c[G>>2]|0}if((J|0)==1077){H=u|0;gy(H);g_(r);i=d;return}d=cy(8)|0;gG(d,2280);bK(d|0,11848,28)}function lx(a,b){a=a|0;b=b|0;cb(((b|0)==-1?-1:b<<1)|0)|0;return}function ly(b){b=b|0;var d=0,e=0,f=0;c[b>>2]=6512;d=b+8|0;e=c[d>>2]|0;do{if((a[19040]|0)==0){if((bx(19040)|0)==0){break}c[4176]=a0(2147483647,3232,0)|0}}while(0);if((e|0)==(c[4176]|0)){f=b|0;gy(f);return}bq(c[d>>2]|0);f=b|0;gy(f);return}function lz(a){a=a|0;a=cy(8)|0;gB(a,3256);c[a>>2]=5448;bK(a|0,11880,42)}function lA(a){a=a|0;a=cy(8)|0;gB(a,3256);c[a>>2]=5416;bK(a|0,11864,6)}function lB(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;e=i;i=i+448|0;f=e|0;g=e+16|0;h=e+32|0;j=e+48|0;k=e+64|0;l=e+80|0;m=e+96|0;n=e+112|0;o=e+128|0;p=e+144|0;q=e+160|0;r=e+176|0;s=e+192|0;t=e+208|0;u=e+224|0;v=e+240|0;w=e+256|0;x=e+272|0;y=e+288|0;z=e+304|0;A=e+320|0;B=e+336|0;C=e+352|0;D=e+368|0;E=e+384|0;F=e+400|0;G=e+416|0;H=e+432|0;c[b+4>>2]=d-1;c[b>>2]=6768;d=b+8|0;I=b+12|0;a[b+136|0]=1;J=b+24|0;K=J;c[I>>2]=K;c[d>>2]=K;c[b+16>>2]=J+112;J=28;L=K;do{if((L|0)==0){M=0}else{c[L>>2]=0;M=c[I>>2]|0}L=M+4|0;c[I>>2]=L;J=J-1|0;}while((J|0)!=0);gY(b+144|0,3232,1);J=c[d>>2]|0;d=c[I>>2]|0;if((J|0)!=(d|0)){c[I>>2]=d+(~((d-4+(-J|0)|0)>>>2)<<2)}c[4209]=0;c[4208]=6472;if((c[4454]|0)!=-1){c[H>>2]=17816;c[H+4>>2]=16;c[H+8>>2]=0;gV(17816,H,108)}lC(b,16832,(c[4455]|0)-1|0);c[4207]=0;c[4206]=6432;if((c[4452]|0)!=-1){c[G>>2]=17808;c[G+4>>2]=16;c[G+8>>2]=0;gV(17808,G,108)}lC(b,16824,(c[4453]|0)-1|0);c[4259]=0;c[4258]=6880;c[4260]=0;a[17044]=0;c[4260]=c[(bp()|0)>>2];if((c[4534]|0)!=-1){c[F>>2]=18136;c[F+4>>2]=16;c[F+8>>2]=0;gV(18136,F,108)}lC(b,17032,(c[4535]|0)-1|0);c[4257]=0;c[4256]=6800;if((c[4532]|0)!=-1){c[E>>2]=18128;c[E+4>>2]=16;c[E+8>>2]=0;gV(18128,E,108)}lC(b,17024,(c[4533]|0)-1|0);c[4211]=0;c[4210]=6568;if((c[4458]|0)!=-1){c[D>>2]=17832;c[D+4>>2]=16;c[D+8>>2]=0;gV(17832,D,108)}lC(b,16840,(c[4459]|0)-1|0);c[1191]=0;c[1190]=6512;do{if((a[19040]|0)==0){if((bx(19040)|0)==0){break}c[4176]=a0(2147483647,3232,0)|0}}while(0);c[1192]=c[4176];if((c[4456]|0)!=-1){c[C>>2]=17824;c[C+4>>2]=16;c[C+8>>2]=0;gV(17824,C,108)}lC(b,4760,(c[4457]|0)-1|0);c[4213]=0;c[4212]=6624;if((c[4460]|0)!=-1){c[B>>2]=17840;c[B+4>>2]=16;c[B+8>>2]=0;gV(17840,B,108)}lC(b,16848,(c[4461]|0)-1|0);c[4215]=0;c[4214]=6680;if((c[4462]|0)!=-1){c[A>>2]=17848;c[A+4>>2]=16;c[A+8>>2]=0;gV(17848,A,108)}lC(b,16856,(c[4463]|0)-1|0);c[4189]=0;c[4188]=5976;a[16760]=46;a[16761]=44;oe(16764,0,12);if((c[4438]|0)!=-1){c[z>>2]=17752;c[z+4>>2]=16;c[z+8>>2]=0;gV(17752,z,108)}lC(b,16752,(c[4439]|0)-1|0);c[1183]=0;c[1182]=5928;c[1184]=46;c[1185]=44;oe(4744,0,12);if((c[4436]|0)!=-1){c[y>>2]=17744;c[y+4>>2]=16;c[y+8>>2]=0;gV(17744,y,108)}lC(b,4728,(c[4437]|0)-1|0);c[4205]=0;c[4204]=6360;if((c[4450]|0)!=-1){c[x>>2]=17800;c[x+4>>2]=16;c[x+8>>2]=0;gV(17800,x,108)}lC(b,16816,(c[4451]|0)-1|0);c[4203]=0;c[4202]=6288;if((c[4448]|0)!=-1){c[w>>2]=17792;c[w+4>>2]=16;c[w+8>>2]=0;gV(17792,w,108)}lC(b,16808,(c[4449]|0)-1|0);c[4201]=0;c[4200]=6224;if((c[4446]|0)!=-1){c[v>>2]=17784;c[v+4>>2]=16;c[v+8>>2]=0;gV(17784,v,108)}lC(b,16800,(c[4447]|0)-1|0);c[4199]=0;c[4198]=6160;if((c[4444]|0)!=-1){c[u>>2]=17776;c[u+4>>2]=16;c[u+8>>2]=0;gV(17776,u,108)}lC(b,16792,(c[4445]|0)-1|0);c[4269]=0;c[4268]=7808;if((c[4654]|0)!=-1){c[t>>2]=18616;c[t+4>>2]=16;c[t+8>>2]=0;gV(18616,t,108)}lC(b,17072,(c[4655]|0)-1|0);c[4267]=0;c[4266]=7744;if((c[4652]|0)!=-1){c[s>>2]=18608;c[s+4>>2]=16;c[s+8>>2]=0;gV(18608,s,108)}lC(b,17064,(c[4653]|0)-1|0);c[4265]=0;c[4264]=7680;if((c[4650]|0)!=-1){c[r>>2]=18600;c[r+4>>2]=16;c[r+8>>2]=0;gV(18600,r,108)}lC(b,17056,(c[4651]|0)-1|0);c[4263]=0;c[4262]=7616;if((c[4648]|0)!=-1){c[q>>2]=18592;c[q+4>>2]=16;c[q+8>>2]=0;gV(18592,q,108)}lC(b,17048,(c[4649]|0)-1|0);c[4187]=0;c[4186]=5632;if((c[4426]|0)!=-1){c[p>>2]=17704;c[p+4>>2]=16;c[p+8>>2]=0;gV(17704,p,108)}lC(b,16744,(c[4427]|0)-1|0);c[4185]=0;c[4184]=5592;if((c[4424]|0)!=-1){c[o>>2]=17696;c[o+4>>2]=16;c[o+8>>2]=0;gV(17696,o,108)}lC(b,16736,(c[4425]|0)-1|0);c[4183]=0;c[4182]=5552;if((c[4422]|0)!=-1){c[n>>2]=17688;c[n+4>>2]=16;c[n+8>>2]=0;gV(17688,n,108)}lC(b,16728,(c[4423]|0)-1|0);c[4181]=0;c[4180]=5512;if((c[4420]|0)!=-1){c[m>>2]=17680;c[m+4>>2]=16;c[m+8>>2]=0;gV(17680,m,108)}lC(b,16720,(c[4421]|0)-1|0);c[1179]=0;c[1178]=5832;c[1180]=5880;if((c[4434]|0)!=-1){c[l>>2]=17736;c[l+4>>2]=16;c[l+8>>2]=0;gV(17736,l,108)}lC(b,4712,(c[4435]|0)-1|0);c[1175]=0;c[1174]=5736;c[1176]=5784;if((c[4432]|0)!=-1){c[k>>2]=17728;c[k+4>>2]=16;c[k+8>>2]=0;gV(17728,k,108)}lC(b,4696,(c[4433]|0)-1|0);c[1171]=0;c[1170]=6736;do{if((a[19040]|0)==0){if((bx(19040)|0)==0){break}c[4176]=a0(2147483647,3232,0)|0}}while(0);c[1172]=c[4176];c[1170]=5704;if((c[4430]|0)!=-1){c[j>>2]=17720;c[j+4>>2]=16;c[j+8>>2]=0;gV(17720,j,108)}lC(b,4680,(c[4431]|0)-1|0);c[1167]=0;c[1166]=6736;do{if((a[19040]|0)==0){if((bx(19040)|0)==0){break}c[4176]=a0(2147483647,3232,0)|0}}while(0);c[1168]=c[4176];c[1166]=5672;if((c[4428]|0)!=-1){c[h>>2]=17712;c[h+4>>2]=16;c[h+8>>2]=0;gV(17712,h,108)}lC(b,4664,(c[4429]|0)-1|0);c[4197]=0;c[4196]=6064;if((c[4442]|0)!=-1){c[g>>2]=17768;c[g+4>>2]=16;c[g+8>>2]=0;gV(17768,g,108)}lC(b,16784,(c[4443]|0)-1|0);c[4195]=0;c[4194]=6024;if((c[4440]|0)!=-1){c[f>>2]=17760;c[f+4>>2]=16;c[f+8>>2]=0;gV(17760,f,108)}lC(b,16776,(c[4441]|0)-1|0);i=e;return}function lC(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;gz(b|0);e=a+8|0;f=a+12|0;a=c[f>>2]|0;g=e|0;h=c[g>>2]|0;i=a-h>>2;do{if(i>>>0>d>>>0){j=h}else{k=d+1|0;if(i>>>0<k>>>0){nm(e,k-i|0);j=c[g>>2]|0;break}if(i>>>0<=k>>>0){j=h;break}l=h+(k<<2)|0;if((l|0)==(a|0)){j=h;break}c[f>>2]=a+(~((a-4+(-l|0)|0)>>>2)<<2);j=h}}while(0);h=c[j+(d<<2)>>2]|0;if((h|0)==0){m=j;n=m+(d<<2)|0;c[n>>2]=b;return}gA(h|0)|0;m=c[g>>2]|0;n=m+(d<<2)|0;c[n>>2]=b;return}function lD(a){a=a|0;lE(a);n6(a);return}function lE(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;c[b>>2]=6768;d=b+12|0;e=c[d>>2]|0;f=b+8|0;g=c[f>>2]|0;if((e|0)!=(g|0)){h=0;i=g;g=e;while(1){e=c[i+(h<<2)>>2]|0;if((e|0)==0){j=g;k=i}else{l=e|0;gA(l)|0;j=c[d>>2]|0;k=c[f>>2]|0}l=h+1|0;if(l>>>0<j-k>>2>>>0){h=l;i=k;g=j}else{break}}}g_(b+144|0);j=c[f>>2]|0;if((j|0)==0){m=b|0;gy(m);return}f=c[d>>2]|0;if((j|0)!=(f|0)){c[d>>2]=f+(~((f-4+(-j|0)|0)>>>2)<<2)}if((j|0)==(b+24|0)){a[b+136|0]=0;m=b|0;gy(m);return}else{n6(j);m=b|0;gy(m);return}}function lF(){var b=0,d=0;if((a[19024]|0)!=0){b=c[4168]|0;return b|0}if((bx(19024)|0)==0){b=c[4168]|0;return b|0}do{if((a[19032]|0)==0){if((bx(19032)|0)==0){break}lB(16864,1);c[4172]=16864;c[4170]=16688}}while(0);d=c[c[4170]>>2]|0;c[4174]=d;gz(d|0);c[4168]=16696;b=c[4168]|0;return b|0}function lG(a){a=a|0;var b=0;b=c[(lF()|0)>>2]|0;c[a>>2]=b;gz(b|0);return}function lH(a,b){a=a|0;b=b|0;var d=0;d=c[b>>2]|0;c[a>>2]=d;gz(d|0);return}function lI(a){a=a|0;gA(c[a>>2]|0)|0;return}function lJ(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d|0;f=c[a>>2]|0;a=b|0;if((c[a>>2]|0)!=-1){c[e>>2]=b;c[e+4>>2]=16;c[e+8>>2]=0;gV(a,e,108)}e=(c[b+4>>2]|0)-1|0;b=c[f+8>>2]|0;if((c[f+12>>2]|0)-b>>2>>>0<=e>>>0){g=cy(4)|0;h=g;nG(h);bK(g|0,11832,162);return 0}f=c[b+(e<<2)>>2]|0;if((f|0)==0){g=cy(4)|0;h=g;nG(h);bK(g|0,11832,162);return 0}else{i=d;return f|0}return 0}function lK(a){a=a|0;gy(a|0);n6(a);return}function lL(a){a=a|0;if((a|0)==0){return}cU[c[(c[a>>2]|0)+4>>2]&511](a);return}function lM(a){a=a|0;c[a+4>>2]=(I=c[4464]|0,c[4464]=I+1,I)+1;return}function lN(a){a=a|0;gy(a|0);n6(a);return}function lO(a,d,e){a=a|0;d=d|0;e=e|0;var f=0;if(e>>>0>=128>>>0){f=0;return f|0}f=(b[(c[(bp()|0)>>2]|0)+(e<<1)>>1]&d)<<16>>16!=0;return f|0}function lP(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;if((d|0)==(e|0)){g=d;return g|0}else{h=d;i=f}while(1){f=c[h>>2]|0;if(f>>>0<128>>>0){j=b[(c[(bp()|0)>>2]|0)+(f<<1)>>1]|0}else{j=0}b[i>>1]=j;f=h+4|0;if((f|0)==(e|0)){g=e;break}else{h=f;i=i+2|0}}return g|0}function lQ(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;if((e|0)==(f|0)){g=e;return g|0}else{h=e}while(1){e=c[h>>2]|0;if(e>>>0<128>>>0){if((b[(c[(bp()|0)>>2]|0)+(e<<1)>>1]&d)<<16>>16!=0){g=h;i=1304;break}}e=h+4|0;if((e|0)==(f|0)){g=f;i=1303;break}else{h=e}}if((i|0)==1304){return g|0}else if((i|0)==1303){return g|0}return 0}function lR(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;a=e;while(1){if((a|0)==(f|0)){g=f;h=1313;break}e=c[a>>2]|0;if(e>>>0>=128>>>0){g=a;h=1315;break}if((b[(c[(bp()|0)>>2]|0)+(e<<1)>>1]&d)<<16>>16==0){g=a;h=1314;break}else{a=a+4|0}}if((h|0)==1313){return g|0}else if((h|0)==1314){return g|0}else if((h|0)==1315){return g|0}return 0}function lS(a,b){a=a|0;b=b|0;var d=0;if(b>>>0>=128>>>0){d=b;return d|0}d=c[(c[(cF()|0)>>2]|0)+(b<<2)>>2]|0;return d|0}function lT(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;if((b|0)==(d|0)){e=b;return e|0}else{f=b}while(1){b=c[f>>2]|0;if(b>>>0<128>>>0){g=c[(c[(cF()|0)>>2]|0)+(b<<2)>>2]|0}else{g=b}c[f>>2]=g;b=f+4|0;if((b|0)==(d|0)){e=d;break}else{f=b}}return e|0}function lU(a,b){a=a|0;b=b|0;var d=0;if(b>>>0>=128>>>0){d=b;return d|0}d=c[(c[(cG()|0)>>2]|0)+(b<<2)>>2]|0;return d|0}function lV(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;if((b|0)==(d|0)){e=b;return e|0}else{f=b}while(1){b=c[f>>2]|0;if(b>>>0<128>>>0){g=c[(c[(cG()|0)>>2]|0)+(b<<2)>>2]|0}else{g=b}c[f>>2]=g;b=f+4|0;if((b|0)==(d|0)){e=d;break}else{f=b}}return e|0}function lW(a,b){a=a|0;b=b|0;return b<<24>>24|0}function lX(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;if((d|0)==(e|0)){g=d;return g|0}else{h=d;i=f}while(1){c[i>>2]=a[h]|0;f=h+1|0;if((f|0)==(e|0)){g=e;break}else{h=f;i=i+4|0}}return g|0}function lY(a,b,c){a=a|0;b=b|0;c=c|0;return(b>>>0<128>>>0?b&255:c)|0}function lZ(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;if((d|0)==(e|0)){h=d;return h|0}b=((e-4+(-d|0)|0)>>>2)+1|0;i=d;j=g;while(1){g=c[i>>2]|0;a[j]=g>>>0<128>>>0?g&255:f;g=i+4|0;if((g|0)==(e|0)){break}else{i=g;j=j+1|0}}h=d+(b<<2)|0;return h|0}function l_(b){b=b|0;var d=0;c[b>>2]=6880;d=c[b+8>>2]|0;do{if((d|0)!=0){if((a[b+12|0]&1)==0){break}n7(d)}}while(0);gy(b|0);n6(b);return}function l$(b){b=b|0;var d=0;c[b>>2]=6880;d=c[b+8>>2]|0;do{if((d|0)!=0){if((a[b+12|0]&1)==0){break}n7(d)}}while(0);gy(b|0);return}function l0(a,b){a=a|0;b=b|0;var d=0;if(b<<24>>24<0){d=b;return d|0}d=c[(c[(cF()|0)>>2]|0)+((b&255)<<2)>>2]&255;return d|0}function l1(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;if((d|0)==(e|0)){f=d;return f|0}else{g=d}while(1){d=a[g]|0;if(d<<24>>24<0){h=d}else{h=c[(c[(cF()|0)>>2]|0)+(d<<24>>24<<2)>>2]&255}a[g]=h;d=g+1|0;if((d|0)==(e|0)){f=e;break}else{g=d}}return f|0}function l2(a,b){a=a|0;b=b|0;var d=0;if(b<<24>>24<0){d=b;return d|0}d=c[(c[(cG()|0)>>2]|0)+(b<<24>>24<<2)>>2]&255;return d|0}function l3(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;if((d|0)==(e|0)){f=d;return f|0}else{g=d}while(1){d=a[g]|0;if(d<<24>>24<0){h=d}else{h=c[(c[(cG()|0)>>2]|0)+(d<<24>>24<<2)>>2]&255}a[g]=h;d=g+1|0;if((d|0)==(e|0)){f=e;break}else{g=d}}return f|0}function l4(a,b){a=a|0;b=b|0;return b|0}function l5(b,c,d,e){b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0;if((c|0)==(d|0)){f=c;return f|0}else{g=c;h=e}while(1){a[h]=a[g]|0;e=g+1|0;if((e|0)==(d|0)){f=d;break}else{g=e;h=h+1|0}}return f|0}function l6(a,b,c){a=a|0;b=b|0;c=c|0;return(b<<24>>24<0?c:b)|0}function l7(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;if((c|0)==(d|0)){g=c;return g|0}else{h=c;i=f}while(1){f=a[h]|0;a[i]=f<<24>>24<0?e:f;f=h+1|0;if((f|0)==(d|0)){g=d;break}else{h=f;i=i+1|0}}return g|0}function l8(a){a=a|0;gy(a|0);n6(a);return}function l9(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;c[f>>2]=d;c[i>>2]=g;return 3}function ma(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;c[f>>2]=d;c[i>>2]=g;return 3}function mb(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3}function mc(a){a=a|0;return 1}function md(a){a=a|0;return 1}function me(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;b=d-c|0;return(b>>>0<e>>>0?b:e)|0}function mf(a){a=a|0;return 1}function mg(a){a=a|0;ly(a);n6(a);return}function mh(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;l=i;i=i+8|0;m=l|0;n=m;o=i;i=i+4|0;i=i+7&-8;p=e;while(1){if((p|0)==(f|0)){q=f;break}if((c[p>>2]|0)==0){q=p;break}else{p=p+4|0}}c[k>>2]=h;c[g>>2]=e;L1666:do{if((e|0)==(f|0)|(h|0)==(j|0)){r=e}else{p=d;s=j;t=b+8|0;u=o|0;v=h;w=e;x=q;while(1){y=c[p+4>>2]|0;c[m>>2]=c[p>>2];c[m+4>>2]=y;y=ch(c[t>>2]|0)|0;z=nz(v,g,x-w>>2,s-v|0,d)|0;if((y|0)!=0){ch(y|0)|0}if((z|0)==(-1|0)){A=1437;break}else if((z|0)==0){B=1;A=1476;break}y=(c[k>>2]|0)+z|0;c[k>>2]=y;if((y|0)==(j|0)){A=1470;break}if((x|0)==(f|0)){C=f;D=y;E=c[g>>2]|0}else{y=ch(c[t>>2]|0)|0;z=ny(u,0,d)|0;if((y|0)!=0){ch(y|0)|0}if((z|0)==-1){B=2;A=1473;break}y=c[k>>2]|0;if(z>>>0>(s-y|0)>>>0){B=1;A=1474;break}L1685:do{if((z|0)!=0){F=z;G=u;H=y;while(1){I=a[G]|0;c[k>>2]=H+1;a[H]=I;I=F-1|0;if((I|0)==0){break L1685}F=I;G=G+1|0;H=c[k>>2]|0}}}while(0);y=(c[g>>2]|0)+4|0;c[g>>2]=y;z=y;while(1){if((z|0)==(f|0)){J=f;break}if((c[z>>2]|0)==0){J=z;break}else{z=z+4|0}}C=J;D=c[k>>2]|0;E=y}if((E|0)==(f|0)|(D|0)==(j|0)){r=E;break L1666}else{v=D;w=E;x=C}}if((A|0)==1470){r=c[g>>2]|0;break}else if((A|0)==1437){c[k>>2]=v;L1698:do{if((w|0)==(c[g>>2]|0)){K=w}else{x=w;u=v;while(1){s=c[x>>2]|0;p=ch(c[t>>2]|0)|0;z=ny(u,s,n)|0;if((p|0)!=0){ch(p|0)|0}if((z|0)==-1){K=x;break L1698}p=(c[k>>2]|0)+z|0;c[k>>2]=p;z=x+4|0;if((z|0)==(c[g>>2]|0)){K=z;break}else{x=z;u=p}}}}while(0);c[g>>2]=K;B=2;i=l;return B|0}else if((A|0)==1474){i=l;return B|0}else if((A|0)==1476){i=l;return B|0}else if((A|0)==1473){i=l;return B|0}}}while(0);B=(r|0)!=(f|0)|0;i=l;return B|0}function mi(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;l=i;i=i+8|0;m=l|0;n=m;o=e;while(1){if((o|0)==(f|0)){p=f;break}if((a[o]|0)==0){p=o;break}else{o=o+1|0}}c[k>>2]=h;c[g>>2]=e;L1718:do{if((e|0)==(f|0)|(h|0)==(j|0)){q=e}else{o=d;r=j;s=b+8|0;t=h;u=e;v=p;while(1){w=c[o+4>>2]|0;c[m>>2]=c[o>>2];c[m+4>>2]=w;x=v;w=ch(c[s>>2]|0)|0;y=nv(t,g,x-u|0,r-t>>2,d)|0;if((w|0)!=0){ch(w|0)|0}if((y|0)==0){z=2;A=1527;break}else if((y|0)==(-1|0)){A=1492;break}w=(c[k>>2]|0)+(y<<2)|0;c[k>>2]=w;if((w|0)==(j|0)){A=1524;break}y=c[g>>2]|0;if((v|0)==(f|0)){B=f;C=w;D=y}else{E=ch(c[s>>2]|0)|0;F=nu(w,y,1,d)|0;if((E|0)!=0){ch(E|0)|0}if((F|0)!=0){z=2;A=1531;break}c[k>>2]=(c[k>>2]|0)+4;F=(c[g>>2]|0)+1|0;c[g>>2]=F;E=F;while(1){if((E|0)==(f|0)){G=f;break}if((a[E]|0)==0){G=E;break}else{E=E+1|0}}B=G;C=c[k>>2]|0;D=F}if((D|0)==(f|0)|(C|0)==(j|0)){q=D;break L1718}else{t=C;u=D;v=B}}if((A|0)==1527){i=l;return z|0}else if((A|0)==1492){c[k>>2]=t;L1743:do{if((u|0)==(c[g>>2]|0)){H=u}else{v=t;r=u;while(1){o=ch(c[s>>2]|0)|0;E=nu(v,r,x-r|0,n)|0;if((o|0)!=0){ch(o|0)|0}if((E|0)==(-2|0)){A=1504;break}else if((E|0)==0){I=r+1|0}else if((E|0)==(-1|0)){A=1503;break}else{I=r+E|0}E=(c[k>>2]|0)+4|0;c[k>>2]=E;if((I|0)==(c[g>>2]|0)){H=I;break L1743}else{v=E;r=I}}if((A|0)==1504){c[g>>2]=r;z=1;i=l;return z|0}else if((A|0)==1503){c[g>>2]=r;z=2;i=l;return z|0}}}while(0);c[g>>2]=H;z=(H|0)!=(f|0)|0;i=l;return z|0}else if((A|0)==1524){q=c[g>>2]|0;break}else if((A|0)==1531){i=l;return z|0}}}while(0);z=(q|0)!=(f|0)|0;i=l;return z|0}function mj(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0;h=i;i=i+8|0;c[g>>2]=e;e=h|0;j=ch(c[b+8>>2]|0)|0;b=ny(e,0,d)|0;if((j|0)!=0){ch(j|0)|0}if((b|0)==(-1|0)|(b|0)==0){k=2;i=h;return k|0}j=b-1|0;b=c[g>>2]|0;if(j>>>0>(f-b|0)>>>0){k=1;i=h;return k|0}if((j|0)==0){k=0;i=h;return k|0}else{l=j;m=e;n=b}while(1){b=a[m]|0;c[g>>2]=n+1;a[n]=b;b=l-1|0;if((b|0)==0){k=0;break}l=b;m=m+1|0;n=c[g>>2]|0}i=h;return k|0}function mk(a){a=a|0;var b=0,d=0,e=0;b=a+8|0;a=ch(c[b>>2]|0)|0;d=nx(0,0,4)|0;if((a|0)!=0){ch(a|0)|0}if((d|0)!=0){e=-1;return e|0}d=c[b>>2]|0;if((d|0)==0){e=1;return e|0}b=ch(d|0)|0;if((b|0)==0){e=0;return e|0}ch(b|0)|0;e=0;return e|0}function ml(a){a=a|0;return 0}function mm(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;if((f|0)==0|(d|0)==(e|0)){g=0;return g|0}h=e;i=a+8|0;a=d;d=0;j=0;while(1){k=ch(c[i>>2]|0)|0;l=nt(a,h-a|0,b)|0;if((k|0)!=0){ch(k|0)|0}if((l|0)==0){m=1;n=a+1|0}else if((l|0)==(-1|0)|(l|0)==(-2|0)){g=d;o=1588;break}else{m=l;n=a+l|0}l=m+d|0;k=j+1|0;if(k>>>0>=f>>>0|(n|0)==(e|0)){g=l;o=1589;break}else{a=n;d=l;j=k}}if((o|0)==1589){return g|0}else if((o|0)==1588){return g|0}return 0}function mn(a){a=a|0;var b=0,d=0;b=c[a+8>>2]|0;do{if((b|0)==0){d=1}else{a=ch(b|0)|0;if((a|0)==0){d=4;break}ch(a|0)|0;d=4}}while(0);return d|0}function mo(a){a=a|0;gy(a|0);n6(a);return}function mp(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b|0;k=b+8|0;c[a>>2]=d;c[k>>2]=g;l=mq(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=d+((c[a>>2]|0)-d>>1<<1);c[j>>2]=g+((c[k>>2]|0)-g);i=b;return l|0}function mq(d,f,g,h,i,j,k,l){d=d|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0;c[g>>2]=d;c[j>>2]=h;do{if((l&2|0)!=0){if((i-h|0)<3){m=1;return m|0}else{c[j>>2]=h+1;a[h]=-17;d=c[j>>2]|0;c[j>>2]=d+1;a[d]=-69;d=c[j>>2]|0;c[j>>2]=d+1;a[d]=-65;break}}}while(0);h=f;l=c[g>>2]|0;if(l>>>0>=f>>>0){m=0;return m|0}d=i;i=l;L1835:while(1){l=b[i>>1]|0;n=l&65535;if(n>>>0>k>>>0){m=2;o=1635;break}do{if((l&65535)>>>0<128>>>0){p=c[j>>2]|0;if((d-p|0)<1){m=1;o=1636;break L1835}c[j>>2]=p+1;a[p]=l&255}else{if((l&65535)>>>0<2048>>>0){p=c[j>>2]|0;if((d-p|0)<2){m=1;o=1638;break L1835}c[j>>2]=p+1;a[p]=(n>>>6|192)&255;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=(n&63|128)&255;break}if((l&65535)>>>0<55296>>>0){p=c[j>>2]|0;if((d-p|0)<3){m=1;o=1633;break L1835}c[j>>2]=p+1;a[p]=(n>>>12|224)&255;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=(n>>>6&63|128)&255;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=(n&63|128)&255;break}if((l&65535)>>>0>=56320>>>0){if((l&65535)>>>0<57344>>>0){m=2;o=1632;break L1835}p=c[j>>2]|0;if((d-p|0)<3){m=1;o=1626;break L1835}c[j>>2]=p+1;a[p]=(n>>>12|224)&255;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=(n>>>6&63|128)&255;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=(n&63|128)&255;break}if((h-i|0)<4){m=1;o=1628;break L1835}p=i+2|0;q=e[p>>1]|0;if((q&64512|0)!=56320){m=2;o=1629;break L1835}if((d-(c[j>>2]|0)|0)<4){m=1;o=1630;break L1835}r=n&960;if(((r<<10)+65536|n<<10&64512|q&1023)>>>0>k>>>0){m=2;o=1631;break L1835}c[g>>2]=p;p=(r>>>6)+1|0;r=c[j>>2]|0;c[j>>2]=r+1;a[r]=(p>>>2|240)&255;r=c[j>>2]|0;c[j>>2]=r+1;a[r]=(n>>>2&15|p<<4&48|128)&255;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=(n<<4&48|q>>>6&15|128)&255;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=(q&63|128)&255}}while(0);n=(c[g>>2]|0)+2|0;c[g>>2]=n;if(n>>>0<f>>>0){i=n}else{m=0;o=1627;break}}if((o|0)==1626){return m|0}else if((o|0)==1627){return m|0}else if((o|0)==1635){return m|0}else if((o|0)==1636){return m|0}else if((o|0)==1638){return m|0}else if((o|0)==1628){return m|0}else if((o|0)==1629){return m|0}else if((o|0)==1630){return m|0}else if((o|0)==1631){return m|0}else if((o|0)==1632){return m|0}else if((o|0)==1633){return m|0}return 0}function mr(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b|0;k=b+8|0;c[a>>2]=d;c[k>>2]=g;l=ms(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=d+((c[a>>2]|0)-d);c[j>>2]=g+((c[k>>2]|0)-g>>1<<1);i=b;return l|0}function ms(e,f,g,h,i,j,k,l){e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;c[g>>2]=e;c[j>>2]=h;h=c[g>>2]|0;do{if((l&4|0)==0){m=h}else{if((f-h|0)<=2){m=h;break}if((a[h]|0)!=-17){m=h;break}if((a[h+1|0]|0)!=-69){m=h;break}if((a[h+2|0]|0)!=-65){m=h;break}e=h+3|0;c[g>>2]=e;m=e}}while(0);L1881:do{if(m>>>0<f>>>0){h=f;l=i;e=c[j>>2]|0;n=m;L1883:while(1){if(e>>>0>=i>>>0){o=n;break L1881}p=a[n]|0;q=p&255;if(q>>>0>k>>>0){r=2;s=1681;break}do{if(p<<24>>24>-1){b[e>>1]=p&255;c[g>>2]=(c[g>>2]|0)+1}else{if((p&255)>>>0<194>>>0){r=2;s=1682;break L1883}if((p&255)>>>0<224>>>0){if((h-n|0)<2){r=1;s=1683;break L1883}t=d[n+1|0]|0;if((t&192|0)!=128){r=2;s=1684;break L1883}u=t&63|q<<6&1984;if(u>>>0>k>>>0){r=2;s=1685;break L1883}b[e>>1]=u&65535;c[g>>2]=(c[g>>2]|0)+2;break}if((p&255)>>>0<240>>>0){if((h-n|0)<3){r=1;s=1686;break L1883}u=a[n+1|0]|0;t=a[n+2|0]|0;if((q|0)==224){if((u&-32)<<24>>24!=-96){r=2;s=1687;break L1883}}else if((q|0)==237){if((u&-32)<<24>>24!=-128){r=2;s=1688;break L1883}}else{if((u&-64)<<24>>24!=-128){r=2;s=1689;break L1883}}v=t&255;if((v&192|0)!=128){r=2;s=1690;break L1883}t=(u&255)<<6&4032|q<<12|v&63;if((t&65535)>>>0>k>>>0){r=2;s=1691;break L1883}b[e>>1]=t&65535;c[g>>2]=(c[g>>2]|0)+3;break}if((p&255)>>>0>=245>>>0){r=2;s=1692;break L1883}if((h-n|0)<4){r=1;s=1693;break L1883}t=a[n+1|0]|0;v=a[n+2|0]|0;u=a[n+3|0]|0;if((q|0)==240){if((t+112&255)>>>0>=48>>>0){r=2;s=1694;break L1883}}else if((q|0)==244){if((t&-16)<<24>>24!=-128){r=2;s=1695;break L1883}}else{if((t&-64)<<24>>24!=-128){r=2;s=1696;break L1883}}w=v&255;if((w&192|0)!=128){r=2;s=1697;break L1883}v=u&255;if((v&192|0)!=128){r=2;s=1698;break L1883}if((l-e|0)<4){r=1;s=1699;break L1883}u=q&7;x=t&255;t=w<<6;y=v&63;if((x<<12&258048|u<<18|t&4032|y)>>>0>k>>>0){r=2;s=1700;break L1883}b[e>>1]=(x<<2&60|w>>>4&3|((x>>>4&3|u<<2)<<6)+16320|55296)&65535;u=(c[j>>2]|0)+2|0;c[j>>2]=u;b[u>>1]=(y|t&960|56320)&65535;c[g>>2]=(c[g>>2]|0)+4}}while(0);q=(c[j>>2]|0)+2|0;c[j>>2]=q;p=c[g>>2]|0;if(p>>>0<f>>>0){e=q;n=p}else{o=p;break L1881}}if((s|0)==1681){return r|0}else if((s|0)==1689){return r|0}else if((s|0)==1690){return r|0}else if((s|0)==1691){return r|0}else if((s|0)==1692){return r|0}else if((s|0)==1693){return r|0}else if((s|0)==1694){return r|0}else if((s|0)==1695){return r|0}else if((s|0)==1696){return r|0}else if((s|0)==1697){return r|0}else if((s|0)==1698){return r|0}else if((s|0)==1699){return r|0}else if((s|0)==1700){return r|0}else if((s|0)==1682){return r|0}else if((s|0)==1683){return r|0}else if((s|0)==1684){return r|0}else if((s|0)==1685){return r|0}else if((s|0)==1686){return r|0}else if((s|0)==1687){return r|0}else if((s|0)==1688){return r|0}}else{o=m}}while(0);r=o>>>0<f>>>0|0;return r|0}function mt(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3}function mu(a){a=a|0;return 0}function mv(a){a=a|0;return 0}function mw(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return mx(c,d,e,1114111,0)|0}function mx(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;do{if((g&4|0)==0){h=b}else{if((c-b|0)<=2){h=b;break}if((a[b]|0)!=-17){h=b;break}if((a[b+1|0]|0)!=-69){h=b;break}h=(a[b+2|0]|0)==-65?b+3|0:b}}while(0);L1954:do{if(h>>>0<c>>>0&(e|0)!=0){g=c;i=0;j=h;L1956:while(1){k=a[j]|0;l=k&255;if(l>>>0>f>>>0){m=j;break L1954}do{if(k<<24>>24>-1){n=j+1|0;o=i}else{if((k&255)>>>0<194>>>0){m=j;break L1954}if((k&255)>>>0<224>>>0){if((g-j|0)<2){m=j;break L1954}p=d[j+1|0]|0;if((p&192|0)!=128){m=j;break L1954}if((p&63|l<<6&1984)>>>0>f>>>0){m=j;break L1954}n=j+2|0;o=i;break}if((k&255)>>>0<240>>>0){q=j;if((g-q|0)<3){m=j;break L1954}p=a[j+1|0]|0;r=a[j+2|0]|0;if((l|0)==224){if((p&-32)<<24>>24!=-96){s=1726;break L1956}}else if((l|0)==237){if((p&-32)<<24>>24!=-128){s=1728;break L1956}}else{if((p&-64)<<24>>24!=-128){s=1730;break L1956}}t=r&255;if((t&192|0)!=128){m=j;break L1954}if(((p&255)<<6&4032|l<<12&61440|t&63)>>>0>f>>>0){m=j;break L1954}n=j+3|0;o=i;break}if((k&255)>>>0>=245>>>0){m=j;break L1954}u=j;if((g-u|0)<4){m=j;break L1954}if((e-i|0)>>>0<2>>>0){m=j;break L1954}t=a[j+1|0]|0;p=a[j+2|0]|0;r=a[j+3|0]|0;if((l|0)==244){if((t&-16)<<24>>24!=-128){s=1741;break L1956}}else if((l|0)==240){if((t+112&255)>>>0>=48>>>0){s=1739;break L1956}}else{if((t&-64)<<24>>24!=-128){s=1743;break L1956}}v=p&255;if((v&192|0)!=128){m=j;break L1954}p=r&255;if((p&192|0)!=128){m=j;break L1954}if(((t&255)<<12&258048|l<<18&1835008|v<<6&4032|p&63)>>>0>f>>>0){m=j;break L1954}n=j+4|0;o=i+1|0}}while(0);l=o+1|0;if(n>>>0<c>>>0&l>>>0<e>>>0){i=l;j=n}else{m=n;break L1954}}if((s|0)==1726){w=q-b|0;return w|0}else if((s|0)==1728){w=q-b|0;return w|0}else if((s|0)==1730){w=q-b|0;return w|0}else if((s|0)==1739){w=u-b|0;return w|0}else if((s|0)==1743){w=u-b|0;return w|0}else if((s|0)==1741){w=u-b|0;return w|0}}else{m=h}}while(0);w=m-b|0;return w|0}function my(a){a=a|0;return 4}function mz(a){a=a|0;gy(a|0);n6(a);return}function mA(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b|0;k=b+8|0;c[a>>2]=d;c[k>>2]=g;l=mB(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=d+((c[a>>2]|0)-d>>2<<2);c[j>>2]=g+((c[k>>2]|0)-g);i=b;return l|0}function mB(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0;c[e>>2]=b;c[h>>2]=f;do{if((j&2|0)!=0){if((g-f|0)<3){k=1;return k|0}else{c[h>>2]=f+1;a[f]=-17;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=-69;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=-65;break}}}while(0);f=c[e>>2]|0;if(f>>>0>=d>>>0){k=0;return k|0}j=g;g=f;L2020:while(1){f=c[g>>2]|0;if((f&-2048|0)==55296|f>>>0>i>>>0){k=2;l=1785;break}do{if(f>>>0<128>>>0){b=c[h>>2]|0;if((j-b|0)<1){k=1;l=1786;break L2020}c[h>>2]=b+1;a[b]=f&255}else{if(f>>>0<2048>>>0){b=c[h>>2]|0;if((j-b|0)<2){k=1;l=1781;break L2020}c[h>>2]=b+1;a[b]=(f>>>6|192)&255;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=(f&63|128)&255;break}b=c[h>>2]|0;m=j-b|0;if(f>>>0<65536>>>0){if((m|0)<3){k=1;l=1782;break L2020}c[h>>2]=b+1;a[b]=(f>>>12|224)&255;n=c[h>>2]|0;c[h>>2]=n+1;a[n]=(f>>>6&63|128)&255;n=c[h>>2]|0;c[h>>2]=n+1;a[n]=(f&63|128)&255;break}else{if((m|0)<4){k=1;l=1780;break L2020}c[h>>2]=b+1;a[b]=(f>>>18|240)&255;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=(f>>>12&63|128)&255;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=(f>>>6&63|128)&255;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=(f&63|128)&255;break}}}while(0);f=(c[e>>2]|0)+4|0;c[e>>2]=f;if(f>>>0<d>>>0){g=f}else{k=0;l=1783;break}}if((l|0)==1786){return k|0}else if((l|0)==1780){return k|0}else if((l|0)==1783){return k|0}else if((l|0)==1785){return k|0}else if((l|0)==1782){return k|0}else if((l|0)==1781){return k|0}return 0}function mC(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b|0;k=b+8|0;c[a>>2]=d;c[k>>2]=g;l=mD(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=d+((c[a>>2]|0)-d);c[j>>2]=g+((c[k>>2]|0)-g>>2<<2);i=b;return l|0}function mD(b,e,f,g,h,i,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;c[f>>2]=b;c[i>>2]=g;g=c[f>>2]|0;do{if((k&4|0)==0){l=g}else{if((e-g|0)<=2){l=g;break}if((a[g]|0)!=-17){l=g;break}if((a[g+1|0]|0)!=-69){l=g;break}if((a[g+2|0]|0)!=-65){l=g;break}b=g+3|0;c[f>>2]=b;l=b}}while(0);L2053:do{if(l>>>0<e>>>0){g=e;k=c[i>>2]|0;b=l;L2055:while(1){if(k>>>0>=h>>>0){m=b;break L2053}n=a[b]|0;o=n&255;do{if(n<<24>>24>-1){if(o>>>0>j>>>0){p=2;q=1848;break L2055}c[k>>2]=o;c[f>>2]=(c[f>>2]|0)+1}else{if((n&255)>>>0<194>>>0){p=2;q=1834;break L2055}if((n&255)>>>0<224>>>0){if((g-b|0)<2){p=1;q=1842;break L2055}r=d[b+1|0]|0;if((r&192|0)!=128){p=2;q=1843;break L2055}s=r&63|o<<6&1984;if(s>>>0>j>>>0){p=2;q=1844;break L2055}c[k>>2]=s;c[f>>2]=(c[f>>2]|0)+2;break}if((n&255)>>>0<240>>>0){if((g-b|0)<3){p=1;q=1846;break L2055}s=a[b+1|0]|0;r=a[b+2|0]|0;if((o|0)==237){if((s&-32)<<24>>24!=-128){p=2;q=1835;break L2055}}else if((o|0)==224){if((s&-32)<<24>>24!=-96){p=2;q=1841;break L2055}}else{if((s&-64)<<24>>24!=-128){p=2;q=1837;break L2055}}t=r&255;if((t&192|0)!=128){p=2;q=1838;break L2055}r=(s&255)<<6&4032|o<<12&61440|t&63;if(r>>>0>j>>>0){p=2;q=1831;break L2055}c[k>>2]=r;c[f>>2]=(c[f>>2]|0)+3;break}if((n&255)>>>0>=245>>>0){p=2;q=1832;break L2055}if((g-b|0)<4){p=1;q=1847;break L2055}r=a[b+1|0]|0;t=a[b+2|0]|0;s=a[b+3|0]|0;if((o|0)==244){if((r&-16)<<24>>24!=-128){p=2;q=1829;break L2055}}else if((o|0)==240){if((r+112&255)>>>0>=48>>>0){p=2;q=1839;break L2055}}else{if((r&-64)<<24>>24!=-128){p=2;q=1830;break L2055}}u=t&255;if((u&192|0)!=128){p=2;q=1833;break L2055}t=s&255;if((t&192|0)!=128){p=2;q=1840;break L2055}s=(r&255)<<12&258048|o<<18&1835008|u<<6&4032|t&63;if(s>>>0>j>>>0){p=2;q=1845;break L2055}c[k>>2]=s;c[f>>2]=(c[f>>2]|0)+4}}while(0);o=(c[i>>2]|0)+4|0;c[i>>2]=o;n=c[f>>2]|0;if(n>>>0<e>>>0){k=o;b=n}else{m=n;break L2053}}if((q|0)==1840){return p|0}else if((q|0)==1841){return p|0}else if((q|0)==1842){return p|0}else if((q|0)==1843){return p|0}else if((q|0)==1844){return p|0}else if((q|0)==1845){return p|0}else if((q|0)==1846){return p|0}else if((q|0)==1847){return p|0}else if((q|0)==1848){return p|0}else if((q|0)==1832){return p|0}else if((q|0)==1833){return p|0}else if((q|0)==1834){return p|0}else if((q|0)==1835){return p|0}else if((q|0)==1837){return p|0}else if((q|0)==1838){return p|0}else if((q|0)==1839){return p|0}else if((q|0)==1829){return p|0}else if((q|0)==1830){return p|0}else if((q|0)==1831){return p|0}}else{m=l}}while(0);p=m>>>0<e>>>0|0;return p|0}function mE(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3}function mF(a){a=a|0;return 0}function mG(a){a=a|0;return 0}function mH(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return mI(c,d,e,1114111,0)|0}function mI(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;do{if((g&4|0)==0){h=b}else{if((c-b|0)<=2){h=b;break}if((a[b]|0)!=-17){h=b;break}if((a[b+1|0]|0)!=-69){h=b;break}h=(a[b+2|0]|0)==-65?b+3|0:b}}while(0);L2124:do{if(h>>>0<c>>>0&(e|0)!=0){g=c;i=1;j=h;L2126:while(1){k=a[j]|0;l=k&255;do{if(k<<24>>24>-1){if(l>>>0>f>>>0){m=j;break L2124}n=j+1|0}else{if((k&255)>>>0<194>>>0){m=j;break L2124}if((k&255)>>>0<224>>>0){if((g-j|0)<2){m=j;break L2124}o=d[j+1|0]|0;if((o&192|0)!=128){m=j;break L2124}if((o&63|l<<6&1984)>>>0>f>>>0){m=j;break L2124}n=j+2|0;break}if((k&255)>>>0<240>>>0){p=j;if((g-p|0)<3){m=j;break L2124}o=a[j+1|0]|0;q=a[j+2|0]|0;if((l|0)==237){if((o&-32)<<24>>24!=-128){r=1875;break L2126}}else if((l|0)==224){if((o&-32)<<24>>24!=-96){r=1873;break L2126}}else{if((o&-64)<<24>>24!=-128){r=1877;break L2126}}s=q&255;if((s&192|0)!=128){m=j;break L2124}if(((o&255)<<6&4032|l<<12&61440|s&63)>>>0>f>>>0){m=j;break L2124}n=j+3|0;break}if((k&255)>>>0>=245>>>0){m=j;break L2124}t=j;if((g-t|0)<4){m=j;break L2124}s=a[j+1|0]|0;o=a[j+2|0]|0;q=a[j+3|0]|0;if((l|0)==244){if((s&-16)<<24>>24!=-128){r=1887;break L2126}}else if((l|0)==240){if((s+112&255)>>>0>=48>>>0){r=1885;break L2126}}else{if((s&-64)<<24>>24!=-128){r=1889;break L2126}}u=o&255;if((u&192|0)!=128){m=j;break L2124}o=q&255;if((o&192|0)!=128){m=j;break L2124}if(((s&255)<<12&258048|l<<18&1835008|u<<6&4032|o&63)>>>0>f>>>0){m=j;break L2124}n=j+4|0}}while(0);if(!(n>>>0<c>>>0&i>>>0<e>>>0)){m=n;break L2124}i=i+1|0;j=n}if((r|0)==1875){v=p-b|0;return v|0}else if((r|0)==1873){v=p-b|0;return v|0}else if((r|0)==1887){v=t-b|0;return v|0}else if((r|0)==1885){v=t-b|0;return v|0}else if((r|0)==1889){v=t-b|0;return v|0}else if((r|0)==1877){v=p-b|0;return v|0}}else{m=h}}while(0);v=m-b|0;return v|0}function mJ(a){a=a|0;return 4}function mK(a){a=a|0;gy(a|0);n6(a);return}function mL(a){a=a|0;gy(a|0);n6(a);return}function mM(a){a=a|0;c[a>>2]=5976;g_(a+12|0);gy(a|0);n6(a);return}function mN(a){a=a|0;c[a>>2]=5976;g_(a+12|0);gy(a|0);return}function mO(a){a=a|0;c[a>>2]=5928;g_(a+16|0);gy(a|0);n6(a);return}function mP(a){a=a|0;c[a>>2]=5928;g_(a+16|0);gy(a|0);return}function mQ(b){b=b|0;return a[b+8|0]|0}function mR(a){a=a|0;return c[a+8>>2]|0}function mS(b){b=b|0;return a[b+9|0]|0}function mT(a){a=a|0;return c[a+12>>2]|0}function mU(a,b){a=a|0;b=b|0;gX(a,b+12|0);return}function mV(a,b){a=a|0;b=b|0;gX(a,b+16|0);return}function mW(a,b){a=a|0;b=b|0;gY(a,3048,4);return}function mX(a,b){a=a|0;b=b|0;g7(a,3e3,nB(3e3)|0);return}function mY(a,b){a=a|0;b=b|0;gY(a,2968,5);return}function mZ(a,b){a=a|0;b=b|0;g7(a,2888,nB(2888)|0);return}function m_(b){b=b|0;var d=0;if((a[19120]|0)!=0){d=c[4294]|0;return d|0}if((bx(19120)|0)==0){d=c[4294]|0;return d|0}do{if((a[19008]|0)==0){if((bx(19008)|0)==0){break}oe(16216,0,168);bf(310,0,u|0)|0}}while(0);g$(16216,3736)|0;g$(16228,3728)|0;g$(16240,3720)|0;g$(16252,3704)|0;g$(16264,3688)|0;g$(16276,3680)|0;g$(16288,3664)|0;g$(16300,3656)|0;g$(16312,3648)|0;g$(16324,3624)|0;g$(16336,3616)|0;g$(16348,3608)|0;g$(16360,3576)|0;g$(16372,3568)|0;c[4294]=16216;d=c[4294]|0;return d|0}function m$(b){b=b|0;var d=0;if((a[19064]|0)!=0){d=c[4272]|0;return d|0}if((bx(19064)|0)==0){d=c[4272]|0;return d|0}do{if((a[18984]|0)==0){if((bx(18984)|0)==0){break}oe(15472,0,168);bf(182,0,u|0)|0}}while(0);ha(15472,4168)|0;ha(15484,4120)|0;ha(15496,4080)|0;ha(15508,4040)|0;ha(15520,3984)|0;ha(15532,3952)|0;ha(15544,3912)|0;ha(15556,3896)|0;ha(15568,3840)|0;ha(15580,3824)|0;ha(15592,3808)|0;ha(15604,3792)|0;ha(15616,3776)|0;ha(15628,3760)|0;c[4272]=15472;d=c[4272]|0;return d|0}function m0(b){b=b|0;var d=0;if((a[19112]|0)!=0){d=c[4292]|0;return d|0}if((bx(19112)|0)==0){d=c[4292]|0;return d|0}do{if((a[19e3]|0)==0){if((bx(19e3)|0)==0){break}oe(15928,0,288);bf(200,0,u|0)|0}}while(0);g$(15928,656)|0;g$(15940,624)|0;g$(15952,592)|0;g$(15964,560)|0;g$(15976,528)|0;g$(15988,496)|0;g$(16e3,464)|0;g$(16012,440)|0;g$(16024,384)|0;g$(16036,360)|0;g$(16048,280)|0;g$(16060,256)|0;g$(16072,232)|0;g$(16084,216)|0;g$(16096,192)|0;g$(16108,176)|0;g$(16120,528)|0;g$(16132,152)|0;g$(16144,120)|0;g$(16156,4400)|0;g$(16168,4376)|0;g$(16180,4352)|0;g$(16192,4264)|0;g$(16204,4232)|0;c[4292]=15928;d=c[4292]|0;return d|0}function m1(b){b=b|0;var d=0;if((a[19056]|0)!=0){d=c[4270]|0;return d|0}if((bx(19056)|0)==0){d=c[4270]|0;return d|0}do{if((a[18976]|0)==0){if((bx(18976)|0)==0){break}oe(15184,0,288);bf(150,0,u|0)|0}}while(0);ha(15184,1656)|0;ha(15196,1592)|0;ha(15208,1544)|0;ha(15220,1496)|0;ha(15232,928)|0;ha(15244,1432)|0;ha(15256,1408)|0;ha(15268,1336)|0;ha(15280,1272)|0;ha(15292,1232)|0;ha(15304,1176)|0;ha(15316,1112)|0;ha(15328,1072)|0;ha(15340,1032)|0;ha(15352,992)|0;ha(15364,960)|0;ha(15376,928)|0;ha(15388,896)|0;ha(15400,864)|0;ha(15412,832)|0;ha(15424,808)|0;ha(15436,752)|0;ha(15448,720)|0;ha(15460,696)|0;c[4270]=15184;d=c[4270]|0;return d|0}function m2(b){b=b|0;var d=0;if((a[19128]|0)!=0){d=c[4296]|0;return d|0}if((bx(19128)|0)==0){d=c[4296]|0;return d|0}do{if((a[19016]|0)==0){if((bx(19016)|0)==0){break}oe(16384,0,288);bf(148,0,u|0)|0}}while(0);g$(16384,1776)|0;g$(16396,1744)|0;c[4296]=16384;d=c[4296]|0;return d|0}function m3(b){b=b|0;var d=0;if((a[19072]|0)!=0){d=c[4274]|0;return d|0}if((bx(19072)|0)==0){d=c[4274]|0;return d|0}do{if((a[18992]|0)==0){if((bx(18992)|0)==0){break}oe(15640,0,288);bf(276,0,u|0)|0}}while(0);ha(15640,2032)|0;ha(15652,2e3)|0;c[4274]=15640;d=c[4274]|0;return d|0}function m4(b){b=b|0;if((a[19136]|0)!=0){return 17192}if((bx(19136)|0)==0){return 17192}gY(17192,2800,8);bf(300,17192,u|0)|0;return 17192}function m5(b){b=b|0;if((a[19080]|0)!=0){return 17104}if((bx(19080)|0)==0){return 17104}g7(17104,2712,nB(2712)|0);bf(230,17104,u|0)|0;return 17104}function m6(b){b=b|0;if((a[19160]|0)!=0){return 17240}if((bx(19160)|0)==0){return 17240}gY(17240,2672,8);bf(300,17240,u|0)|0;return 17240}function m7(b){b=b|0;if((a[19104]|0)!=0){return 17152}if((bx(19104)|0)==0){return 17152}g7(17152,2616,nB(2616)|0);bf(230,17152,u|0)|0;return 17152}function m8(b){b=b|0;if((a[19152]|0)!=0){return 17224}if((bx(19152)|0)==0){return 17224}gY(17224,2552,20);bf(300,17224,u|0)|0;return 17224}function m9(b){b=b|0;if((a[19096]|0)!=0){return 17136}if((bx(19096)|0)==0){return 17136}g7(17136,2448,nB(2448)|0);bf(230,17136,u|0)|0;return 17136}function na(b){b=b|0;if((a[19144]|0)!=0){return 17208}if((bx(19144)|0)==0){return 17208}gY(17208,2408,11);bf(300,17208,u|0)|0;return 17208}function nb(b){b=b|0;if((a[19088]|0)!=0){return 17120}if((bx(19088)|0)==0){return 17120}g7(17120,2352,nB(2352)|0);bf(230,17120,u|0)|0;return 17120}function nc(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0.0,j=0,k=0,l=0.0;f=i;i=i+8|0;g=f|0;if((b|0)==(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}j=b8()|0;k=c[j>>2]|0;c[j>>2]=0;do{if((a[19040]|0)==0){if((bx(19040)|0)==0){break}c[4176]=a0(2147483647,3232,0)|0}}while(0);l=+od(b,g,c[4176]|0);b=c[j>>2]|0;if((b|0)==0){c[j>>2]=k}if((c[g>>2]|0)!=(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}if((b|0)!=34){h=l;i=f;return+h}c[e>>2]=4;h=l;i=f;return+h}function nd(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0.0,j=0,k=0,l=0.0;f=i;i=i+8|0;g=f|0;if((b|0)==(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}j=b8()|0;k=c[j>>2]|0;c[j>>2]=0;do{if((a[19040]|0)==0){if((bx(19040)|0)==0){break}c[4176]=a0(2147483647,3232,0)|0}}while(0);l=+od(b,g,c[4176]|0);b=c[j>>2]|0;if((b|0)==0){c[j>>2]=k}if((c[g>>2]|0)!=(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}if((b|0)!=34){h=l;i=f;return+h}c[e>>2]=4;h=l;i=f;return+h}function ne(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0.0,j=0,k=0,l=0.0;f=i;i=i+8|0;g=f|0;if((b|0)==(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}j=b8()|0;k=c[j>>2]|0;c[j>>2]=0;do{if((a[19040]|0)==0){if((bx(19040)|0)==0){break}c[4176]=a0(2147483647,3232,0)|0}}while(0);l=+od(b,g,c[4176]|0);b=c[j>>2]|0;if((b|0)==0){c[j>>2]=k}if((c[g>>2]|0)!=(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}if((b|0)==34){c[e>>2]=4}h=l;i=f;return+h}function nf(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;g=i;i=i+8|0;h=g|0;do{if((b|0)==(d|0)){c[e>>2]=4;j=0;k=0}else{if((a[b]|0)==45){c[e>>2]=4;j=0;k=0;break}l=b8()|0;m=c[l>>2]|0;c[l>>2]=0;do{if((a[19040]|0)==0){if((bx(19040)|0)==0){break}c[4176]=a0(2147483647,3232,0)|0}}while(0);n=aN(b|0,h|0,f|0,c[4176]|0)|0;o=c[l>>2]|0;if((o|0)==0){c[l>>2]=m}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;k=0;break}if((o|0)!=34){j=K;k=n;break}c[e>>2]=4;j=-1;k=-1}}while(0);i=g;return(K=j,k)|0}function ng(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+8|0;h=g|0;if((b|0)==(d|0)){c[e>>2]=4;j=0;i=g;return j|0}if((a[b]|0)==45){c[e>>2]=4;j=0;i=g;return j|0}k=b8()|0;l=c[k>>2]|0;c[k>>2]=0;do{if((a[19040]|0)==0){if((bx(19040)|0)==0){break}c[4176]=a0(2147483647,3232,0)|0}}while(0);m=aN(b|0,h|0,f|0,c[4176]|0)|0;f=K;b=c[k>>2]|0;if((b|0)==0){c[k>>2]=l}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;i=g;return j|0}d=0;if((b|0)==34|(f>>>0>d>>>0|f>>>0==d>>>0&m>>>0>-1>>>0)){c[e>>2]=4;j=-1;i=g;return j|0}else{j=m;i=g;return j|0}return 0}function nh(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+8|0;h=g|0;if((b|0)==(d|0)){c[e>>2]=4;j=0;i=g;return j|0}if((a[b]|0)==45){c[e>>2]=4;j=0;i=g;return j|0}k=b8()|0;l=c[k>>2]|0;c[k>>2]=0;do{if((a[19040]|0)==0){if((bx(19040)|0)==0){break}c[4176]=a0(2147483647,3232,0)|0}}while(0);m=aN(b|0,h|0,f|0,c[4176]|0)|0;f=K;b=c[k>>2]|0;if((b|0)==0){c[k>>2]=l}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;i=g;return j|0}d=0;if((b|0)==34|(f>>>0>d>>>0|f>>>0==d>>>0&m>>>0>-1>>>0)){c[e>>2]=4;j=-1;i=g;return j|0}else{j=m;i=g;return j|0}return 0}function ni(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+8|0;h=g|0;if((b|0)==(d|0)){c[e>>2]=4;j=0;i=g;return j|0}if((a[b]|0)==45){c[e>>2]=4;j=0;i=g;return j|0}k=b8()|0;l=c[k>>2]|0;c[k>>2]=0;do{if((a[19040]|0)==0){if((bx(19040)|0)==0){break}c[4176]=a0(2147483647,3232,0)|0}}while(0);m=aN(b|0,h|0,f|0,c[4176]|0)|0;f=K;b=c[k>>2]|0;if((b|0)==0){c[k>>2]=l}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;i=g;return j|0}d=0;if((b|0)==34|(f>>>0>d>>>0|f>>>0==d>>>0&m>>>0>65535>>>0)){c[e>>2]=4;j=-1;i=g;return j|0}else{j=m&65535;i=g;return j|0}return 0}function nj(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;i=i+8|0;h=g|0;if((b|0)==(d|0)){c[e>>2]=4;j=0;k=0;i=g;return(K=j,k)|0}l=b8()|0;m=c[l>>2]|0;c[l>>2]=0;do{if((a[19040]|0)==0){if((bx(19040)|0)==0){break}c[4176]=a0(2147483647,3232,0)|0}}while(0);n=cs(b|0,h|0,f|0,c[4176]|0)|0;f=K;b=c[l>>2]|0;if((b|0)==0){c[l>>2]=m}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;k=0;i=g;return(K=j,k)|0}if((b|0)!=34){j=f;k=n;i=g;return(K=j,k)|0}c[e>>2]=4;e=0;b=(f|0)>(e|0)|(f|0)==(e|0)&n>>>0>0>>>0;j=b?2147483647:-2147483648;k=b?-1:0;i=g;return(K=j,k)|0}function nk(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+8|0;h=g|0;if((b|0)==(d|0)){c[e>>2]=4;j=0;i=g;return j|0}k=b8()|0;l=c[k>>2]|0;c[k>>2]=0;do{if((a[19040]|0)==0){if((bx(19040)|0)==0){break}c[4176]=a0(2147483647,3232,0)|0}}while(0);m=cs(b|0,h|0,f|0,c[4176]|0)|0;f=K;b=c[k>>2]|0;if((b|0)==0){c[k>>2]=l}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;i=g;return j|0}d=-1;h=0;if((b|0)==34|((f|0)<(d|0)|(f|0)==(d|0)&m>>>0<-2147483648>>>0)|((f|0)>(h|0)|(f|0)==(h|0)&m>>>0>2147483647>>>0)){c[e>>2]=4;e=0;j=(f|0)>(e|0)|(f|0)==(e|0)&m>>>0>0>>>0?2147483647:-2147483648;i=g;return j|0}else{j=m;i=g;return j|0}return 0}function nl(a){a=a|0;var b=0,d=0,e=0,f=0;b=a+4|0;d=(c[a>>2]|0)+(c[b+4>>2]|0)|0;a=d;e=c[b>>2]|0;if((e&1|0)==0){f=e;cU[f&511](a);return}else{f=c[(c[d>>2]|0)+(e-1)>>2]|0;cU[f&511](a);return}}function nm(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=b+8|0;f=b+4|0;g=c[f>>2]|0;h=c[e>>2]|0;i=g;if(h-i>>2>>>0>=d>>>0){j=d;k=g;do{if((k|0)==0){l=0}else{c[k>>2]=0;l=c[f>>2]|0}k=l+4|0;c[f>>2]=k;j=j-1|0;}while((j|0)!=0);return}j=b+16|0;k=b|0;l=c[k>>2]|0;g=i-l>>2;i=g+d|0;if(i>>>0>1073741823>>>0){lz(0)}m=h-l|0;do{if(m>>2>>>0>536870910>>>0){n=1073741823;o=2333}else{l=m>>1;h=l>>>0<i>>>0?i:l;if((h|0)==0){p=0;q=0;break}l=b+128|0;if(!((a[l]&1)==0&h>>>0<29>>>0)){n=h;o=2333;break}a[l]=1;p=j;q=h}}while(0);if((o|0)==2333){p=n4(n<<2)|0;q=n}n=d;d=p+(g<<2)|0;do{if((d|0)==0){r=0}else{c[d>>2]=0;r=d}d=r+4|0;n=n-1|0;}while((n|0)!=0);n=p+(q<<2)|0;q=c[k>>2]|0;r=(c[f>>2]|0)-q|0;o=p+(g-(r>>2)<<2)|0;g=o;p=q;of(g|0,p|0,r)|0;c[k>>2]=o;c[f>>2]=d;c[e>>2]=n;if((q|0)==0){return}if((q|0)==(j|0)){a[b+128|0]=0;return}else{n6(p);return}}function nn(a){a=a|0;g9(15916);g9(15904);g9(15892);g9(15880);g9(15868);g9(15856);g9(15844);g9(15832);g9(15820);g9(15808);g9(15796);g9(15784);g9(15772);g9(15760);g9(15748);g9(15736);g9(15724);g9(15712);g9(15700);g9(15688);g9(15676);g9(15664);g9(15652);g9(15640);return}function no(a){a=a|0;g_(16660);g_(16648);g_(16636);g_(16624);g_(16612);g_(16600);g_(16588);g_(16576);g_(16564);g_(16552);g_(16540);g_(16528);g_(16516);g_(16504);g_(16492);g_(16480);g_(16468);g_(16456);g_(16444);g_(16432);g_(16420);g_(16408);g_(16396);g_(16384);return}function np(a){a=a|0;g9(15460);g9(15448);g9(15436);g9(15424);g9(15412);g9(15400);g9(15388);g9(15376);g9(15364);g9(15352);g9(15340);g9(15328);g9(15316);g9(15304);g9(15292);g9(15280);g9(15268);g9(15256);g9(15244);g9(15232);g9(15220);g9(15208);g9(15196);g9(15184);return}function nq(a){a=a|0;g_(16204);g_(16192);g_(16180);g_(16168);g_(16156);g_(16144);g_(16132);g_(16120);g_(16108);g_(16096);g_(16084);g_(16072);g_(16060);g_(16048);g_(16036);g_(16024);g_(16012);g_(16e3);g_(15988);g_(15976);g_(15964);g_(15952);g_(15940);g_(15928);return}function nr(a){a=a|0;g9(15628);g9(15616);g9(15604);g9(15592);g9(15580);g9(15568);g9(15556);g9(15544);g9(15532);g9(15520);g9(15508);g9(15496);g9(15484);g9(15472);return}function ns(a){a=a|0;g_(16372);g_(16360);g_(16348);g_(16336);g_(16324);g_(16312);g_(16300);g_(16288);g_(16276);g_(16264);g_(16252);g_(16240);g_(16228);g_(16216);return}function nt(a,b,c){a=a|0;b=b|0;c=c|0;return nu(0,a,b,(c|0)!=0?c:14608)|0}function nu(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,t=0,u=0,v=0,w=0;g=i;i=i+8|0;h=g|0;c[h>>2]=b;j=((f|0)==0?14600:f)|0;f=c[j>>2]|0;L2673:do{if((d|0)==0){if((f|0)==0){k=0}else{break}i=g;return k|0}else{if((b|0)==0){l=h;c[h>>2]=l;m=l}else{m=b}if((e|0)==0){k=-2;i=g;return k|0}do{if((f|0)==0){l=a[d]|0;n=l&255;if(l<<24>>24>-1){c[m>>2]=n;k=l<<24>>24!=0|0;i=g;return k|0}else{l=n-194|0;if(l>>>0>50>>>0){break L2673}o=d+1|0;p=c[s+(l<<2)>>2]|0;q=e-1|0;break}}else{o=d;p=f;q=e}}while(0);L2691:do{if((q|0)==0){r=p}else{l=a[o]|0;n=(l&255)>>>3;if((n-16|n+(p>>26))>>>0>7>>>0){break L2673}else{t=o;u=p;v=q;w=l}while(1){t=t+1|0;u=(w&255)-128|u<<6;v=v-1|0;if((u|0)>=0){break}if((v|0)==0){r=u;break L2691}w=a[t]|0;if(((w&255)-128|0)>>>0>63>>>0){break L2673}}c[j>>2]=0;c[m>>2]=u;k=e-v|0;i=g;return k|0}}while(0);c[j>>2]=r;k=-2;i=g;return k|0}}while(0);c[j>>2]=0;c[(b8()|0)>>2]=84;k=-1;i=g;return k|0}function nv(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;g=i;i=i+1032|0;h=g|0;j=g+1024|0;k=c[b>>2]|0;c[j>>2]=k;l=(a|0)!=0;m=l?e:256;e=l?a:h|0;L2704:do{if((k|0)==0|(m|0)==0){n=0;o=d;p=m;q=e;r=k}else{a=h|0;s=m;t=d;u=0;v=e;w=k;while(1){x=t>>>2;y=x>>>0>=s>>>0;if(!(y|t>>>0>131>>>0)){n=u;o=t;p=s;q=v;r=w;break L2704}z=y?s:x;A=t-z|0;x=nw(v,j,z,f)|0;if((x|0)==-1){break}if((v|0)==(a|0)){B=a;C=s}else{B=v+(x<<2)|0;C=s-x|0}z=x+u|0;x=c[j>>2]|0;if((x|0)==0|(C|0)==0){n=z;o=A;p=C;q=B;r=x;break L2704}else{s=C;t=A;u=z;v=B;w=x}}n=-1;o=A;p=0;q=v;r=c[j>>2]|0}}while(0);L2715:do{if((r|0)==0){D=n}else{if((p|0)==0|(o|0)==0){D=n;break}else{E=p;F=o;G=n;H=q;I=r}while(1){J=nu(H,I,F,f)|0;if((J+2|0)>>>0<3>>>0){break}A=(c[j>>2]|0)+J|0;c[j>>2]=A;B=E-1|0;C=G+1|0;if((B|0)==0|(F|0)==(J|0)){D=C;break L2715}else{E=B;F=F-J|0;G=C;H=H+4|0;I=A}}if((J|0)==0){c[j>>2]=0;D=G;break}else if((J|0)==(-1|0)){D=-1;break}else{c[f>>2]=0;D=G;break}}}while(0);if(!l){i=g;return D|0}c[b>>2]=c[j>>2];i=g;return D|0}function nw(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0;h=c[e>>2]|0;do{if((g|0)==0){i=2403}else{j=g|0;k=c[j>>2]|0;if((k|0)==0){i=2403;break}if((b|0)==0){l=k;m=h;n=f;i=2414;break}c[j>>2]=0;o=k;p=h;q=b;r=f;i=2434}}while(0);if((i|0)==2403){if((b|0)==0){t=h;u=f;i=2405}else{v=h;w=b;x=f;i=2404}}L2736:while(1){if((i|0)==2414){i=0;h=(d[m]|0)>>>3;if((h-16|h+(l>>26))>>>0>7>>>0){i=2415;break}h=m+1|0;do{if((l&33554432|0)==0){y=h}else{if(((d[h]|0)-128|0)>>>0>63>>>0){i=2418;break L2736}g=m+2|0;if((l&524288|0)==0){y=g;break}if(((d[g]|0)-128|0)>>>0>63>>>0){i=2421;break L2736}y=m+3|0}}while(0);t=y;u=n-1|0;i=2405;continue}else if((i|0)==2434){i=0;h=d[p]|0;g=h>>>3;if((g-16|g+(o>>26))>>>0>7>>>0){i=2435;break}g=p+1|0;z=h-128|o<<6;do{if((z|0)<0){h=(d[g]|0)-128|0;if(h>>>0>63>>>0){i=2438;break L2736}k=p+2|0;A=h|z<<6;if((A|0)>=0){B=A;C=k;break}h=(d[k]|0)-128|0;if(h>>>0>63>>>0){i=2441;break L2736}B=h|A<<6;C=p+3|0}else{B=z;C=g}}while(0);c[q>>2]=B;v=C;w=q+4|0;x=r-1|0;i=2404;continue}else if((i|0)==2404){i=0;if((x|0)==0){D=f;i=2456;break}else{E=x;F=w;G=v}while(1){g=a[G]|0;do{if(((g&255)-1|0)>>>0<127>>>0){if((G&3|0)==0&E>>>0>3>>>0){H=E;I=F;J=G}else{K=G;L=F;M=E;N=g;break}while(1){O=c[J>>2]|0;if(((O-16843009|O)&-2139062144|0)!=0){i=2428;break}c[I>>2]=O&255;c[I+4>>2]=d[J+1|0]|0;c[I+8>>2]=d[J+2|0]|0;P=J+4|0;Q=I+16|0;c[I+12>>2]=d[J+3|0]|0;R=H-4|0;if(R>>>0>3>>>0){H=R;I=Q;J=P}else{i=2429;break}}if((i|0)==2429){i=0;K=P;L=Q;M=R;N=a[P]|0;break}else if((i|0)==2428){i=0;K=J;L=I;M=H;N=O&255;break}}else{K=G;L=F;M=E;N=g}}while(0);S=N&255;if((S-1|0)>>>0>=127>>>0){break}c[L>>2]=S;g=M-1|0;if((g|0)==0){D=f;i=2455;break L2736}else{E=g;F=L+4|0;G=K+1|0}}g=S-194|0;if(g>>>0>50>>>0){T=M;U=L;V=K;i=2445;break}o=c[s+(g<<2)>>2]|0;p=K+1|0;q=L;r=M;i=2434;continue}else if((i|0)==2405){i=0;g=a[t]|0;do{if(((g&255)-1|0)>>>0<127>>>0){if((t&3|0)!=0){W=t;X=u;Y=g;break}h=c[t>>2]|0;if(((h-16843009|h)&-2139062144|0)==0){Z=u;_=t}else{W=t;X=u;Y=h&255;break}do{_=_+4|0;Z=Z-4|0;$=c[_>>2]|0;}while((($-16843009|$)&-2139062144|0)==0);W=_;X=Z;Y=$&255}else{W=t;X=u;Y=g}}while(0);g=Y&255;if((g-1|0)>>>0<127>>>0){t=W+1|0;u=X-1|0;i=2405;continue}h=g-194|0;if(h>>>0>50>>>0){T=X;U=b;V=W;i=2445;break}l=c[s+(h<<2)>>2]|0;m=W+1|0;n=X;i=2414;continue}}if((i|0)==2438){aa=z;ab=p-1|0;ac=q;ad=r;i=2444}else if((i|0)==2421){aa=l;ab=m-1|0;ac=b;ad=n;i=2444}else if((i|0)==2418){aa=l;ab=m-1|0;ac=b;ad=n;i=2444}else if((i|0)==2455){return D|0}else if((i|0)==2456){return D|0}else if((i|0)==2441){aa=A;ab=p-1|0;ac=q;ad=r;i=2444}else if((i|0)==2435){aa=o;ab=p-1|0;ac=q;ad=r;i=2444}else if((i|0)==2415){aa=l;ab=m-1|0;ac=b;ad=n;i=2444}if((i|0)==2444){if((aa|0)==0){T=ad;U=ac;V=ab;i=2445}else{ae=ac;af=ab}}do{if((i|0)==2445){if((a[V]|0)!=0){ae=U;af=V;break}if((U|0)!=0){c[U>>2]=0;c[e>>2]=0}D=f-T|0;return D|0}}while(0);c[(b8()|0)>>2]=84;if((ae|0)==0){D=-1;return D|0}c[e>>2]=af;D=-1;return D|0}function nx(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;i=i+8|0;h=g|0;c[h>>2]=b;if((e|0)==0){j=0;i=g;return j|0}do{if((f|0)!=0){if((b|0)==0){k=h;c[h>>2]=k;l=k}else{l=b}k=a[e]|0;m=k&255;if(k<<24>>24>-1){c[l>>2]=m;j=k<<24>>24!=0|0;i=g;return j|0}k=m-194|0;if(k>>>0>50>>>0){break}m=e+1|0;n=c[s+(k<<2)>>2]|0;if(f>>>0<4>>>0){if((n&-2147483648>>>(((f*6|0)-6|0)>>>0)|0)!=0){break}}k=d[m]|0;m=k>>>3;if((m-16|m+(n>>26))>>>0>7>>>0){break}m=k-128|n<<6;if((m|0)>=0){c[l>>2]=m;j=2;i=g;return j|0}n=(d[e+2|0]|0)-128|0;if(n>>>0>63>>>0){break}k=n|m<<6;if((k|0)>=0){c[l>>2]=k;j=3;i=g;return j|0}m=(d[e+3|0]|0)-128|0;if(m>>>0>63>>>0){break}c[l>>2]=m|k<<6;j=4;i=g;return j|0}}while(0);c[(b8()|0)>>2]=84;j=-1;i=g;return j|0}function ny(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((b|0)==0){f=1;return f|0}if(d>>>0<128>>>0){a[b]=d&255;f=1;return f|0}if(d>>>0<2048>>>0){a[b]=(d>>>6|192)&255;a[b+1|0]=(d&63|128)&255;f=2;return f|0}if(d>>>0<55296>>>0|(d-57344|0)>>>0<8192>>>0){a[b]=(d>>>12|224)&255;a[b+1|0]=(d>>>6&63|128)&255;a[b+2|0]=(d&63|128)&255;f=3;return f|0}if((d-65536|0)>>>0<1048576>>>0){a[b]=(d>>>18|240)&255;a[b+1|0]=(d>>>12&63|128)&255;a[b+2|0]=(d>>>6&63|128)&255;a[b+3|0]=(d&63|128)&255;f=4;return f|0}else{c[(b8()|0)>>2]=84;f=-1;return f|0}return 0}function nz(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;f=i;i=i+264|0;g=f|0;h=f+256|0;j=c[b>>2]|0;c[h>>2]=j;k=(a|0)!=0;l=k?e:256;e=k?a:g|0;L2857:do{if((j|0)==0|(l|0)==0){m=0;n=d;o=l;p=e;q=j}else{a=g|0;r=l;s=d;t=0;u=e;v=j;while(1){w=s>>>0>=r>>>0;if(!(w|s>>>0>32>>>0)){m=t;n=s;o=r;p=u;q=v;break L2857}x=w?r:s;y=s-x|0;w=nA(u,h,x,0)|0;if((w|0)==-1){break}if((u|0)==(a|0)){z=a;A=r}else{z=u+w|0;A=r-w|0}x=w+t|0;w=c[h>>2]|0;if((w|0)==0|(A|0)==0){m=x;n=y;o=A;p=z;q=w;break L2857}else{r=A;s=y;t=x;u=z;v=w}}m=-1;n=y;o=0;p=u;q=c[h>>2]|0}}while(0);L2868:do{if((q|0)==0){B=m}else{if((o|0)==0|(n|0)==0){B=m;break}else{C=o;D=n;E=m;F=p;G=q}while(1){H=ny(F,c[G>>2]|0,0)|0;if((H+1|0)>>>0<2>>>0){break}y=(c[h>>2]|0)+4|0;c[h>>2]=y;z=D-1|0;A=E+1|0;if((C|0)==(H|0)|(z|0)==0){B=A;break L2868}else{C=C-H|0;D=z;E=A;F=F+H|0;G=y}}if((H|0)!=0){B=-1;break}c[h>>2]=0;B=E}}while(0);if(!k){i=f;return B|0}c[b>>2]=c[h>>2];i=f;return B|0}function nA(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;f=i;i=i+8|0;g=f|0;if((b|0)==0){h=c[d>>2]|0;j=g|0;k=c[h>>2]|0;if((k|0)==0){l=0;i=f;return l|0}else{m=0;n=h;o=k}while(1){if(o>>>0>127>>>0){k=ny(j,o,0)|0;if((k|0)==-1){l=-1;p=2549;break}else{q=k}}else{q=1}k=q+m|0;h=n+4|0;r=c[h>>2]|0;if((r|0)==0){l=k;p=2544;break}else{m=k;n=h;o=r}}if((p|0)==2549){i=f;return l|0}else if((p|0)==2544){i=f;return l|0}}L2894:do{if(e>>>0>3>>>0){o=e;n=b;m=c[d>>2]|0;while(1){q=c[m>>2]|0;if((q|0)==0){s=o;t=n;break L2894}if(q>>>0>127>>>0){j=ny(n,q,0)|0;if((j|0)==-1){l=-1;break}u=n+j|0;v=o-j|0;w=m}else{a[n]=q&255;u=n+1|0;v=o-1|0;w=c[d>>2]|0}q=w+4|0;c[d>>2]=q;if(v>>>0>3>>>0){o=v;n=u;m=q}else{s=v;t=u;break L2894}}i=f;return l|0}else{s=e;t=b}}while(0);L2906:do{if((s|0)==0){x=0}else{b=g|0;u=s;v=t;w=c[d>>2]|0;while(1){m=c[w>>2]|0;if((m|0)==0){p=2541;break}if(m>>>0>127>>>0){n=ny(b,m,0)|0;if((n|0)==-1){l=-1;p=2546;break}if(n>>>0>u>>>0){p=2537;break}o=c[w>>2]|0;ny(v,o,0)|0;y=v+n|0;z=u-n|0;A=w}else{a[v]=m&255;y=v+1|0;z=u-1|0;A=c[d>>2]|0}m=A+4|0;c[d>>2]=m;if((z|0)==0){x=0;break L2906}else{u=z;v=y;w=m}}if((p|0)==2541){a[v]=0;x=u;break}else if((p|0)==2546){i=f;return l|0}else if((p|0)==2537){l=e-u|0;i=f;return l|0}}}while(0);c[d>>2]=0;l=e-x|0;i=f;return l|0}function nB(a){a=a|0;var b=0;b=a;while(1){if((c[b>>2]|0)==0){break}else{b=b+4|0}}return b-a>>2|0}function nC(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;if((d|0)==0){return a|0}else{e=b;f=d;g=a}while(1){d=f-1|0;c[g>>2]=c[e>>2];if((d|0)==0){break}else{e=e+4|0;f=d;g=g+4|0}}return a|0}function nD(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=(d|0)==0;if(a-b>>2>>>0<d>>>0){if(e){return a|0}else{f=d}do{f=f-1|0;c[a+(f<<2)>>2]=c[b+(f<<2)>>2];}while((f|0)!=0);return a|0}else{if(e){return a|0}else{g=b;h=d;i=a}while(1){d=h-1|0;c[i>>2]=c[g>>2];if((d|0)==0){break}else{g=g+4|0;h=d;i=i+4|0}}return a|0}return 0}function nE(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;if((d|0)==0){return a|0}else{e=d;f=a}while(1){d=e-1|0;c[f>>2]=b;if((d|0)==0){break}else{e=d;f=f+4|0}}return a|0}function nF(a){a=a|0;return}function nG(a){a=a|0;c[a>>2]=5352;return}function nH(a){a=a|0;n6(a);return}function nI(a){a=a|0;return}function nJ(a){a=a|0;return 2424}function nK(a){a=a|0;nF(a|0);return}function nL(a){a=a|0;return}function nM(a){a=a|0;return}function nN(a){a=a|0;nF(a|0);n6(a);return}function nO(a){a=a|0;nF(a|0);n6(a);return}function nP(a){a=a|0;nF(a|0);n6(a);return}function nQ(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+56|0;f=e|0;if((a|0)==(b|0)){g=1;i=e;return g|0}if((b|0)==0){g=0;i=e;return g|0}h=nU(b,13376,13360,-1)|0;b=h;if((h|0)==0){g=0;i=e;return g|0}oe(f|0,0,56);c[f>>2]=b;c[f+8>>2]=a;c[f+12>>2]=-1;c[f+48>>2]=1;cT[c[(c[h>>2]|0)+28>>2]&31](b,f,c[d>>2]|0,1);if((c[f+24>>2]|0)!=1){g=0;i=e;return g|0}c[d>>2]=c[f+16>>2];g=1;i=e;return g|0}function nR(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0;if((c[d+8>>2]|0)!=(b|0)){return}b=d+16|0;g=c[b>>2]|0;if((g|0)==0){c[b>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1;return}if((g|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;c[d+24>>2]=2;a[d+54|0]=1;return}e=d+24|0;if((c[e>>2]|0)!=2){return}c[e>>2]=f;return}function nS(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0;if((b|0)!=(c[d+8>>2]|0)){g=c[b+8>>2]|0;cT[c[(c[g>>2]|0)+28>>2]&31](g,d,e,f);return}g=d+16|0;b=c[g>>2]|0;if((b|0)==0){c[g>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1;return}if((b|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;c[d+24>>2]=2;a[d+54|0]=1;return}e=d+24|0;if((c[e>>2]|0)!=2){return}c[e>>2]=f;return}function nT(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0;if((b|0)==(c[d+8>>2]|0)){g=d+16|0;h=c[g>>2]|0;if((h|0)==0){c[g>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1;return}if((h|0)!=(e|0)){h=d+36|0;c[h>>2]=(c[h>>2]|0)+1;c[d+24>>2]=2;a[d+54|0]=1;return}h=d+24|0;if((c[h>>2]|0)!=2){return}c[h>>2]=f;return}h=c[b+12>>2]|0;g=b+16+(h<<3)|0;i=c[b+20>>2]|0;j=i>>8;if((i&1|0)==0){k=j}else{k=c[(c[e>>2]|0)+j>>2]|0}j=c[b+16>>2]|0;cT[c[(c[j>>2]|0)+28>>2]&31](j,d,e+k|0,(i&2|0)!=0?f:2);if((h|0)<=1){return}h=d+54|0;i=e;k=b+24|0;while(1){b=c[k+4>>2]|0;j=b>>8;if((b&1|0)==0){l=j}else{l=c[(c[i>>2]|0)+j>>2]|0}j=c[k>>2]|0;cT[c[(c[j>>2]|0)+28>>2]&31](j,d,e+l|0,(b&2|0)!=0?f:2);if((a[h]&1)!=0){m=2641;break}b=k+8|0;if(b>>>0<g>>>0){k=b}else{m=2643;break}}if((m|0)==2643){return}else if((m|0)==2641){return}}function nU(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;i=i+56|0;g=f|0;h=c[a>>2]|0;j=a+(c[h-8>>2]|0)|0;k=c[h-4>>2]|0;h=k;c[g>>2]=d;c[g+4>>2]=a;c[g+8>>2]=b;c[g+12>>2]=e;e=g+16|0;b=g+20|0;a=g+24|0;l=g+28|0;m=g+32|0;n=g+40|0;oe(e|0,0,39);if((k|0)==(d|0)){c[g+48>>2]=1;c5[c[(c[k>>2]|0)+20>>2]&31](h,g,j,j,1,0);i=f;return((c[a>>2]|0)==1?j:0)|0}cR[c[(c[k>>2]|0)+24>>2]&15](h,g,j,1,0);j=c[g+36>>2]|0;if((j|0)==1){do{if((c[a>>2]|0)!=1){if((c[n>>2]|0)!=0){o=0;i=f;return o|0}if((c[l>>2]|0)!=1){o=0;i=f;return o|0}if((c[m>>2]|0)==1){break}else{o=0}i=f;return o|0}}while(0);o=c[e>>2]|0;i=f;return o|0}else if((j|0)==0){if((c[n>>2]|0)!=1){o=0;i=f;return o|0}if((c[l>>2]|0)!=1){o=0;i=f;return o|0}o=(c[m>>2]|0)==1?c[b>>2]|0:0;i=f;return o|0}else{o=0;i=f;return o|0}return 0}function nV(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;h=b|0;if((h|0)==(c[d+8>>2]|0)){if((c[d+4>>2]|0)!=(e|0)){return}i=d+28|0;if((c[i>>2]|0)==1){return}c[i>>2]=f;return}if((h|0)==(c[d>>2]|0)){do{if((c[d+16>>2]|0)!=(e|0)){h=d+20|0;if((c[h>>2]|0)==(e|0)){break}c[d+32>>2]=f;i=d+44|0;if((c[i>>2]|0)==4){return}j=c[b+12>>2]|0;k=b+16+(j<<3)|0;L3088:do{if((j|0)>0){l=d+52|0;m=d+53|0;n=d+54|0;o=b+8|0;p=d+24|0;q=e;r=0;s=b+16|0;t=0;L3090:while(1){a[l]=0;a[m]=0;u=c[s+4>>2]|0;v=u>>8;if((u&1|0)==0){w=v}else{w=c[(c[q>>2]|0)+v>>2]|0}v=c[s>>2]|0;c5[c[(c[v>>2]|0)+20>>2]&31](v,d,e,e+w|0,2-(u>>>1&1)|0,g);if((a[n]&1)!=0){x=t;y=r;break}do{if((a[m]&1)==0){z=t;A=r}else{if((a[l]&1)==0){if((c[o>>2]&1|0)==0){x=1;y=r;break L3090}else{z=1;A=r;break}}if((c[p>>2]|0)==1){B=2692;break L3088}if((c[o>>2]&2|0)==0){B=2692;break L3088}else{z=1;A=1}}}while(0);u=s+8|0;if(u>>>0<k>>>0){r=A;s=u;t=z}else{x=z;y=A;break}}if(y){C=x;B=2691}else{D=x;B=2688}}else{D=0;B=2688}}while(0);do{if((B|0)==2688){c[h>>2]=e;k=d+40|0;c[k>>2]=(c[k>>2]|0)+1;if((c[d+36>>2]|0)!=1){C=D;B=2691;break}if((c[d+24>>2]|0)!=2){C=D;B=2691;break}a[d+54|0]=1;if(D){B=2692}else{B=2693}}}while(0);if((B|0)==2691){if(C){B=2692}else{B=2693}}if((B|0)==2693){c[i>>2]=4;return}else if((B|0)==2692){c[i>>2]=3;return}}}while(0);if((f|0)!=1){return}c[d+32>>2]=1;return}C=c[b+12>>2]|0;D=b+16+(C<<3)|0;x=c[b+20>>2]|0;y=x>>8;if((x&1|0)==0){E=y}else{E=c[(c[e>>2]|0)+y>>2]|0}y=c[b+16>>2]|0;cR[c[(c[y>>2]|0)+24>>2]&15](y,d,e+E|0,(x&2|0)!=0?f:2,g);x=b+24|0;if((C|0)<=1){return}C=c[b+8>>2]|0;do{if((C&2|0)==0){b=d+36|0;if((c[b>>2]|0)==1){break}if((C&1|0)==0){E=d+54|0;y=e;A=x;while(1){if((a[E]&1)!=0){B=2729;break}if((c[b>>2]|0)==1){B=2730;break}z=c[A+4>>2]|0;w=z>>8;if((z&1|0)==0){F=w}else{F=c[(c[y>>2]|0)+w>>2]|0}w=c[A>>2]|0;cR[c[(c[w>>2]|0)+24>>2]&15](w,d,e+F|0,(z&2|0)!=0?f:2,g);z=A+8|0;if(z>>>0<D>>>0){A=z}else{B=2720;break}}if((B|0)==2729){return}else if((B|0)==2730){return}else if((B|0)==2720){return}}A=d+24|0;y=d+54|0;E=e;i=x;while(1){if((a[y]&1)!=0){B=2721;break}if((c[b>>2]|0)==1){if((c[A>>2]|0)==1){B=2722;break}}z=c[i+4>>2]|0;w=z>>8;if((z&1|0)==0){G=w}else{G=c[(c[E>>2]|0)+w>>2]|0}w=c[i>>2]|0;cR[c[(c[w>>2]|0)+24>>2]&15](w,d,e+G|0,(z&2|0)!=0?f:2,g);z=i+8|0;if(z>>>0<D>>>0){i=z}else{B=2728;break}}if((B|0)==2728){return}else if((B|0)==2721){return}else if((B|0)==2722){return}}}while(0);G=d+54|0;F=e;C=x;while(1){if((a[G]&1)!=0){B=2723;break}x=c[C+4>>2]|0;i=x>>8;if((x&1|0)==0){H=i}else{H=c[(c[F>>2]|0)+i>>2]|0}i=c[C>>2]|0;cR[c[(c[i>>2]|0)+24>>2]&15](i,d,e+H|0,(x&2|0)!=0?f:2,g);x=C+8|0;if(x>>>0<D>>>0){C=x}else{B=2727;break}}if((B|0)==2727){return}else if((B|0)==2723){return}}function nW(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0;h=b|0;if((h|0)==(c[d+8>>2]|0)){if((c[d+4>>2]|0)!=(e|0)){return}i=d+28|0;if((c[i>>2]|0)==1){return}c[i>>2]=f;return}if((h|0)!=(c[d>>2]|0)){h=c[b+8>>2]|0;cR[c[(c[h>>2]|0)+24>>2]&15](h,d,e,f,g);return}do{if((c[d+16>>2]|0)!=(e|0)){h=d+20|0;if((c[h>>2]|0)==(e|0)){break}c[d+32>>2]=f;i=d+44|0;if((c[i>>2]|0)==4){return}j=d+52|0;a[j]=0;k=d+53|0;a[k]=0;l=c[b+8>>2]|0;c5[c[(c[l>>2]|0)+20>>2]&31](l,d,e,e,1,g);if((a[k]&1)==0){m=0;n=2748}else{if((a[j]&1)==0){m=1;n=2748}}L3190:do{if((n|0)==2748){c[h>>2]=e;j=d+40|0;c[j>>2]=(c[j>>2]|0)+1;do{if((c[d+36>>2]|0)==1){if((c[d+24>>2]|0)!=2){n=2751;break}a[d+54|0]=1;if(m){break L3190}}else{n=2751}}while(0);if((n|0)==2751){if(m){break}}c[i>>2]=4;return}}while(0);c[i>>2]=3;return}}while(0);if((f|0)!=1){return}c[d+32>>2]=1;return}function nX(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;if((c[d+8>>2]|0)==(b|0)){if((c[d+4>>2]|0)!=(e|0)){return}g=d+28|0;if((c[g>>2]|0)==1){return}c[g>>2]=f;return}if((c[d>>2]|0)!=(b|0)){return}do{if((c[d+16>>2]|0)!=(e|0)){b=d+20|0;if((c[b>>2]|0)==(e|0)){break}c[d+32>>2]=f;c[b>>2]=e;b=d+40|0;c[b>>2]=(c[b>>2]|0)+1;do{if((c[d+36>>2]|0)==1){if((c[d+24>>2]|0)!=2){break}a[d+54|0]=1}}while(0);c[d+44>>2]=4;return}}while(0);if((f|0)!=1){return}c[d+32>>2]=1;return}function nY(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;if((b|0)!=(c[d+8>>2]|0)){i=d+52|0;j=a[i]&1;k=d+53|0;l=a[k]&1;m=c[b+12>>2]|0;n=b+16+(m<<3)|0;a[i]=0;a[k]=0;o=c[b+20>>2]|0;p=o>>8;if((o&1|0)==0){q=p}else{q=c[(c[f>>2]|0)+p>>2]|0}p=c[b+16>>2]|0;c5[c[(c[p>>2]|0)+20>>2]&31](p,d,e,f+q|0,(o&2|0)!=0?g:2,h);L3239:do{if((m|0)>1){o=d+24|0;q=b+8|0;p=d+54|0;r=f;s=b+24|0;do{if((a[p]&1)!=0){break L3239}do{if((a[i]&1)==0){if((a[k]&1)==0){break}if((c[q>>2]&1|0)==0){break L3239}}else{if((c[o>>2]|0)==1){break L3239}if((c[q>>2]&2|0)==0){break L3239}}}while(0);a[i]=0;a[k]=0;t=c[s+4>>2]|0;u=t>>8;if((t&1|0)==0){v=u}else{v=c[(c[r>>2]|0)+u>>2]|0}u=c[s>>2]|0;c5[c[(c[u>>2]|0)+20>>2]&31](u,d,e,f+v|0,(t&2|0)!=0?g:2,h);s=s+8|0;}while(s>>>0<n>>>0)}}while(0);a[i]=j;a[k]=l;return}a[d+53|0]=1;if((c[d+4>>2]|0)!=(f|0)){return}a[d+52|0]=1;f=d+16|0;l=c[f>>2]|0;if((l|0)==0){c[f>>2]=e;c[d+24>>2]=g;c[d+36>>2]=1;if(!((c[d+48>>2]|0)==1&(g|0)==1)){return}a[d+54|0]=1;return}if((l|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;a[d+54|0]=1;return}e=d+24|0;l=c[e>>2]|0;if((l|0)==2){c[e>>2]=g;w=g}else{w=l}if(!((c[d+48>>2]|0)==1&(w|0)==1)){return}a[d+54|0]=1;return}function nZ(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0;if((b|0)!=(c[d+8>>2]|0)){i=c[b+8>>2]|0;c5[c[(c[i>>2]|0)+20>>2]&31](i,d,e,f,g,h);return}a[d+53|0]=1;if((c[d+4>>2]|0)!=(f|0)){return}a[d+52|0]=1;f=d+16|0;h=c[f>>2]|0;if((h|0)==0){c[f>>2]=e;c[d+24>>2]=g;c[d+36>>2]=1;if(!((c[d+48>>2]|0)==1&(g|0)==1)){return}a[d+54|0]=1;return}if((h|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;a[d+54|0]=1;return}e=d+24|0;h=c[e>>2]|0;if((h|0)==2){c[e>>2]=g;j=g}else{j=h}if(!((c[d+48>>2]|0)==1&(j|0)==1)){return}a[d+54|0]=1;return}function n_(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0;if((c[d+8>>2]|0)!=(b|0)){return}a[d+53|0]=1;if((c[d+4>>2]|0)!=(f|0)){return}a[d+52|0]=1;f=d+16|0;b=c[f>>2]|0;if((b|0)==0){c[f>>2]=e;c[d+24>>2]=g;c[d+36>>2]=1;if(!((c[d+48>>2]|0)==1&(g|0)==1)){return}a[d+54|0]=1;return}if((b|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;a[d+54|0]=1;return}e=d+24|0;b=c[e>>2]|0;if((b|0)==2){c[e>>2]=g;i=g}else{i=b}if(!((c[d+48>>2]|0)==1&(i|0)==1)){return}a[d+54|0]=1;return}function n$(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0;do{if(a>>>0<245>>>0){if(a>>>0<11>>>0){b=16}else{b=a+11&-8}d=b>>>3;e=c[3678]|0;f=e>>>(d>>>0);if((f&3|0)!=0){g=(f&1^1)+d|0;h=g<<1;i=14752+(h<<2)|0;j=14752+(h+2<<2)|0;h=c[j>>2]|0;k=h+8|0;l=c[k>>2]|0;do{if((i|0)==(l|0)){c[3678]=e&~(1<<g)}else{if(l>>>0<(c[3682]|0)>>>0){cp();return 0}m=l+12|0;if((c[m>>2]|0)==(h|0)){c[m>>2]=i;c[j>>2]=l;break}else{cp();return 0}}}while(0);l=g<<3;c[h+4>>2]=l|3;j=h+(l|4)|0;c[j>>2]=c[j>>2]|1;n=k;return n|0}if(b>>>0<=(c[3680]|0)>>>0){o=b;break}if((f|0)!=0){j=2<<d;l=f<<d&(j|-j);j=(l&-l)-1|0;l=j>>>12&16;i=j>>>(l>>>0);j=i>>>5&8;m=i>>>(j>>>0);i=m>>>2&4;p=m>>>(i>>>0);m=p>>>1&2;q=p>>>(m>>>0);p=q>>>1&1;r=(j|l|i|m|p)+(q>>>(p>>>0))|0;p=r<<1;q=14752+(p<<2)|0;m=14752+(p+2<<2)|0;p=c[m>>2]|0;i=p+8|0;l=c[i>>2]|0;do{if((q|0)==(l|0)){c[3678]=e&~(1<<r)}else{if(l>>>0<(c[3682]|0)>>>0){cp();return 0}j=l+12|0;if((c[j>>2]|0)==(p|0)){c[j>>2]=q;c[m>>2]=l;break}else{cp();return 0}}}while(0);l=r<<3;m=l-b|0;c[p+4>>2]=b|3;q=p;e=q+b|0;c[q+(b|4)>>2]=m|1;c[q+l>>2]=m;l=c[3680]|0;if((l|0)!=0){q=c[3683]|0;d=l>>>3;l=d<<1;f=14752+(l<<2)|0;k=c[3678]|0;h=1<<d;do{if((k&h|0)==0){c[3678]=k|h;s=f;t=14752+(l+2<<2)|0}else{d=14752+(l+2<<2)|0;g=c[d>>2]|0;if(g>>>0>=(c[3682]|0)>>>0){s=g;t=d;break}cp();return 0}}while(0);c[t>>2]=q;c[s+12>>2]=q;c[q+8>>2]=s;c[q+12>>2]=f}c[3680]=m;c[3683]=e;n=i;return n|0}l=c[3679]|0;if((l|0)==0){o=b;break}h=(l&-l)-1|0;l=h>>>12&16;k=h>>>(l>>>0);h=k>>>5&8;p=k>>>(h>>>0);k=p>>>2&4;r=p>>>(k>>>0);p=r>>>1&2;d=r>>>(p>>>0);r=d>>>1&1;g=c[15016+((h|l|k|p|r)+(d>>>(r>>>0))<<2)>>2]|0;r=g;d=g;p=(c[g+4>>2]&-8)-b|0;while(1){g=c[r+16>>2]|0;if((g|0)==0){k=c[r+20>>2]|0;if((k|0)==0){break}else{u=k}}else{u=g}g=(c[u+4>>2]&-8)-b|0;k=g>>>0<p>>>0;r=u;d=k?u:d;p=k?g:p}r=d;i=c[3682]|0;if(r>>>0<i>>>0){cp();return 0}e=r+b|0;m=e;if(r>>>0>=e>>>0){cp();return 0}e=c[d+24>>2]|0;f=c[d+12>>2]|0;do{if((f|0)==(d|0)){q=d+20|0;g=c[q>>2]|0;if((g|0)==0){k=d+16|0;l=c[k>>2]|0;if((l|0)==0){v=0;break}else{w=l;x=k}}else{w=g;x=q}while(1){q=w+20|0;g=c[q>>2]|0;if((g|0)!=0){w=g;x=q;continue}q=w+16|0;g=c[q>>2]|0;if((g|0)==0){break}else{w=g;x=q}}if(x>>>0<i>>>0){cp();return 0}else{c[x>>2]=0;v=w;break}}else{q=c[d+8>>2]|0;if(q>>>0<i>>>0){cp();return 0}g=q+12|0;if((c[g>>2]|0)!=(d|0)){cp();return 0}k=f+8|0;if((c[k>>2]|0)==(d|0)){c[g>>2]=f;c[k>>2]=q;v=f;break}else{cp();return 0}}}while(0);L78:do{if((e|0)!=0){f=d+28|0;i=15016+(c[f>>2]<<2)|0;do{if((d|0)==(c[i>>2]|0)){c[i>>2]=v;if((v|0)!=0){break}c[3679]=c[3679]&~(1<<c[f>>2]);break L78}else{if(e>>>0<(c[3682]|0)>>>0){cp();return 0}q=e+16|0;if((c[q>>2]|0)==(d|0)){c[q>>2]=v}else{c[e+20>>2]=v}if((v|0)==0){break L78}}}while(0);if(v>>>0<(c[3682]|0)>>>0){cp();return 0}c[v+24>>2]=e;f=c[d+16>>2]|0;do{if((f|0)!=0){if(f>>>0<(c[3682]|0)>>>0){cp();return 0}else{c[v+16>>2]=f;c[f+24>>2]=v;break}}}while(0);f=c[d+20>>2]|0;if((f|0)==0){break}if(f>>>0<(c[3682]|0)>>>0){cp();return 0}else{c[v+20>>2]=f;c[f+24>>2]=v;break}}}while(0);if(p>>>0<16>>>0){e=p+b|0;c[d+4>>2]=e|3;f=r+(e+4)|0;c[f>>2]=c[f>>2]|1}else{c[d+4>>2]=b|3;c[r+(b|4)>>2]=p|1;c[r+(p+b)>>2]=p;f=c[3680]|0;if((f|0)!=0){e=c[3683]|0;i=f>>>3;f=i<<1;q=14752+(f<<2)|0;k=c[3678]|0;g=1<<i;do{if((k&g|0)==0){c[3678]=k|g;y=q;z=14752+(f+2<<2)|0}else{i=14752+(f+2<<2)|0;l=c[i>>2]|0;if(l>>>0>=(c[3682]|0)>>>0){y=l;z=i;break}cp();return 0}}while(0);c[z>>2]=e;c[y+12>>2]=e;c[e+8>>2]=y;c[e+12>>2]=q}c[3680]=p;c[3683]=m}f=d+8|0;if((f|0)==0){o=b;break}else{n=f}return n|0}else{if(a>>>0>4294967231>>>0){o=-1;break}f=a+11|0;g=f&-8;k=c[3679]|0;if((k|0)==0){o=g;break}r=-g|0;i=f>>>8;do{if((i|0)==0){A=0}else{if(g>>>0>16777215>>>0){A=31;break}f=(i+1048320|0)>>>16&8;l=i<<f;h=(l+520192|0)>>>16&4;j=l<<h;l=(j+245760|0)>>>16&2;B=14-(h|f|l)+(j<<l>>>15)|0;A=g>>>((B+7|0)>>>0)&1|B<<1}}while(0);i=c[15016+(A<<2)>>2]|0;L126:do{if((i|0)==0){C=0;D=r;E=0}else{if((A|0)==31){F=0}else{F=25-(A>>>1)|0}d=0;m=r;p=i;q=g<<F;e=0;while(1){B=c[p+4>>2]&-8;l=B-g|0;if(l>>>0<m>>>0){if((B|0)==(g|0)){C=p;D=l;E=p;break L126}else{G=p;H=l}}else{G=d;H=m}l=c[p+20>>2]|0;B=c[p+16+(q>>>31<<2)>>2]|0;j=(l|0)==0|(l|0)==(B|0)?e:l;if((B|0)==0){C=G;D=H;E=j;break}else{d=G;m=H;p=B;q=q<<1;e=j}}}}while(0);if((E|0)==0&(C|0)==0){i=2<<A;r=k&(i|-i);if((r|0)==0){o=g;break}i=(r&-r)-1|0;r=i>>>12&16;e=i>>>(r>>>0);i=e>>>5&8;q=e>>>(i>>>0);e=q>>>2&4;p=q>>>(e>>>0);q=p>>>1&2;m=p>>>(q>>>0);p=m>>>1&1;I=c[15016+((i|r|e|q|p)+(m>>>(p>>>0))<<2)>>2]|0}else{I=E}if((I|0)==0){J=D;K=C}else{p=I;m=D;q=C;while(1){e=(c[p+4>>2]&-8)-g|0;r=e>>>0<m>>>0;i=r?e:m;e=r?p:q;r=c[p+16>>2]|0;if((r|0)!=0){p=r;m=i;q=e;continue}r=c[p+20>>2]|0;if((r|0)==0){J=i;K=e;break}else{p=r;m=i;q=e}}}if((K|0)==0){o=g;break}if(J>>>0>=((c[3680]|0)-g|0)>>>0){o=g;break}q=K;m=c[3682]|0;if(q>>>0<m>>>0){cp();return 0}p=q+g|0;k=p;if(q>>>0>=p>>>0){cp();return 0}e=c[K+24>>2]|0;i=c[K+12>>2]|0;do{if((i|0)==(K|0)){r=K+20|0;d=c[r>>2]|0;if((d|0)==0){j=K+16|0;B=c[j>>2]|0;if((B|0)==0){L=0;break}else{M=B;N=j}}else{M=d;N=r}while(1){r=M+20|0;d=c[r>>2]|0;if((d|0)!=0){M=d;N=r;continue}r=M+16|0;d=c[r>>2]|0;if((d|0)==0){break}else{M=d;N=r}}if(N>>>0<m>>>0){cp();return 0}else{c[N>>2]=0;L=M;break}}else{r=c[K+8>>2]|0;if(r>>>0<m>>>0){cp();return 0}d=r+12|0;if((c[d>>2]|0)!=(K|0)){cp();return 0}j=i+8|0;if((c[j>>2]|0)==(K|0)){c[d>>2]=i;c[j>>2]=r;L=i;break}else{cp();return 0}}}while(0);L176:do{if((e|0)!=0){i=K+28|0;m=15016+(c[i>>2]<<2)|0;do{if((K|0)==(c[m>>2]|0)){c[m>>2]=L;if((L|0)!=0){break}c[3679]=c[3679]&~(1<<c[i>>2]);break L176}else{if(e>>>0<(c[3682]|0)>>>0){cp();return 0}r=e+16|0;if((c[r>>2]|0)==(K|0)){c[r>>2]=L}else{c[e+20>>2]=L}if((L|0)==0){break L176}}}while(0);if(L>>>0<(c[3682]|0)>>>0){cp();return 0}c[L+24>>2]=e;i=c[K+16>>2]|0;do{if((i|0)!=0){if(i>>>0<(c[3682]|0)>>>0){cp();return 0}else{c[L+16>>2]=i;c[i+24>>2]=L;break}}}while(0);i=c[K+20>>2]|0;if((i|0)==0){break}if(i>>>0<(c[3682]|0)>>>0){cp();return 0}else{c[L+20>>2]=i;c[i+24>>2]=L;break}}}while(0);do{if(J>>>0<16>>>0){e=J+g|0;c[K+4>>2]=e|3;i=q+(e+4)|0;c[i>>2]=c[i>>2]|1}else{c[K+4>>2]=g|3;c[q+(g|4)>>2]=J|1;c[q+(J+g)>>2]=J;i=J>>>3;if(J>>>0<256>>>0){e=i<<1;m=14752+(e<<2)|0;r=c[3678]|0;j=1<<i;do{if((r&j|0)==0){c[3678]=r|j;O=m;P=14752+(e+2<<2)|0}else{i=14752+(e+2<<2)|0;d=c[i>>2]|0;if(d>>>0>=(c[3682]|0)>>>0){O=d;P=i;break}cp();return 0}}while(0);c[P>>2]=k;c[O+12>>2]=k;c[q+(g+8)>>2]=O;c[q+(g+12)>>2]=m;break}e=p;j=J>>>8;do{if((j|0)==0){Q=0}else{if(J>>>0>16777215>>>0){Q=31;break}r=(j+1048320|0)>>>16&8;i=j<<r;d=(i+520192|0)>>>16&4;B=i<<d;i=(B+245760|0)>>>16&2;l=14-(d|r|i)+(B<<i>>>15)|0;Q=J>>>((l+7|0)>>>0)&1|l<<1}}while(0);j=15016+(Q<<2)|0;c[q+(g+28)>>2]=Q;c[q+(g+20)>>2]=0;c[q+(g+16)>>2]=0;m=c[3679]|0;l=1<<Q;if((m&l|0)==0){c[3679]=m|l;c[j>>2]=e;c[q+(g+24)>>2]=j;c[q+(g+12)>>2]=e;c[q+(g+8)>>2]=e;break}if((Q|0)==31){R=0}else{R=25-(Q>>>1)|0}l=J<<R;m=c[j>>2]|0;while(1){if((c[m+4>>2]&-8|0)==(J|0)){break}S=m+16+(l>>>31<<2)|0;j=c[S>>2]|0;if((j|0)==0){T=151;break}else{l=l<<1;m=j}}if((T|0)==151){if(S>>>0<(c[3682]|0)>>>0){cp();return 0}else{c[S>>2]=e;c[q+(g+24)>>2]=m;c[q+(g+12)>>2]=e;c[q+(g+8)>>2]=e;break}}l=m+8|0;j=c[l>>2]|0;i=c[3682]|0;if(m>>>0<i>>>0){cp();return 0}if(j>>>0<i>>>0){cp();return 0}else{c[j+12>>2]=e;c[l>>2]=e;c[q+(g+8)>>2]=j;c[q+(g+12)>>2]=m;c[q+(g+24)>>2]=0;break}}}while(0);q=K+8|0;if((q|0)==0){o=g;break}else{n=q}return n|0}}while(0);K=c[3680]|0;if(o>>>0<=K>>>0){S=K-o|0;J=c[3683]|0;if(S>>>0>15>>>0){R=J;c[3683]=R+o;c[3680]=S;c[R+(o+4)>>2]=S|1;c[R+K>>2]=S;c[J+4>>2]=o|3}else{c[3680]=0;c[3683]=0;c[J+4>>2]=K|3;S=J+(K+4)|0;c[S>>2]=c[S>>2]|1}n=J+8|0;return n|0}J=c[3681]|0;if(o>>>0<J>>>0){S=J-o|0;c[3681]=S;J=c[3684]|0;K=J;c[3684]=K+o;c[K+(o+4)>>2]=S|1;c[J+4>>2]=o|3;n=J+8|0;return n|0}do{if((c[3644]|0)==0){J=bU(30)|0;if((J-1&J|0)==0){c[3646]=J;c[3645]=J;c[3647]=-1;c[3648]=-1;c[3649]=0;c[3789]=0;c[3644]=(cP(0)|0)&-16^1431655768;break}else{cp();return 0}}}while(0);J=o+48|0;S=c[3646]|0;K=o+47|0;R=S+K|0;Q=-S|0;S=R&Q;if(S>>>0<=o>>>0){n=0;return n|0}O=c[3788]|0;do{if((O|0)!=0){P=c[3786]|0;L=P+S|0;if(L>>>0<=P>>>0|L>>>0>O>>>0){n=0}else{break}return n|0}}while(0);L268:do{if((c[3789]&4|0)==0){O=c[3684]|0;L270:do{if((O|0)==0){T=181}else{L=O;P=15160;while(1){U=P|0;M=c[U>>2]|0;if(M>>>0<=L>>>0){V=P+4|0;if((M+(c[V>>2]|0)|0)>>>0>L>>>0){break}}M=c[P+8>>2]|0;if((M|0)==0){T=181;break L270}else{P=M}}if((P|0)==0){T=181;break}L=R-(c[3681]|0)&Q;if(L>>>0>=2147483647>>>0){W=0;break}m=b7(L|0)|0;e=(m|0)==((c[U>>2]|0)+(c[V>>2]|0)|0);X=e?m:-1;Y=e?L:0;Z=m;_=L;T=190}}while(0);do{if((T|0)==181){O=b7(0)|0;if((O|0)==-1){W=0;break}g=O;L=c[3645]|0;m=L-1|0;if((m&g|0)==0){$=S}else{$=S-g+(m+g&-L)|0}L=c[3786]|0;g=L+$|0;if(!($>>>0>o>>>0&$>>>0<2147483647>>>0)){W=0;break}m=c[3788]|0;if((m|0)!=0){if(g>>>0<=L>>>0|g>>>0>m>>>0){W=0;break}}m=b7($|0)|0;g=(m|0)==(O|0);X=g?O:-1;Y=g?$:0;Z=m;_=$;T=190}}while(0);L290:do{if((T|0)==190){m=-_|0;if((X|0)!=-1){aa=Y;ab=X;T=201;break L268}do{if((Z|0)!=-1&_>>>0<2147483647>>>0&_>>>0<J>>>0){g=c[3646]|0;O=K-_+g&-g;if(O>>>0>=2147483647>>>0){ac=_;break}if((b7(O|0)|0)==-1){b7(m|0)|0;W=Y;break L290}else{ac=O+_|0;break}}else{ac=_}}while(0);if((Z|0)==-1){W=Y}else{aa=ac;ab=Z;T=201;break L268}}}while(0);c[3789]=c[3789]|4;ad=W;T=198}else{ad=0;T=198}}while(0);do{if((T|0)==198){if(S>>>0>=2147483647>>>0){break}W=b7(S|0)|0;Z=b7(0)|0;if(!((Z|0)!=-1&(W|0)!=-1&W>>>0<Z>>>0)){break}ac=Z-W|0;Z=ac>>>0>(o+40|0)>>>0;Y=Z?W:-1;if((Y|0)!=-1){aa=Z?ac:ad;ab=Y;T=201}}}while(0);do{if((T|0)==201){ad=(c[3786]|0)+aa|0;c[3786]=ad;if(ad>>>0>(c[3787]|0)>>>0){c[3787]=ad}ad=c[3684]|0;L310:do{if((ad|0)==0){S=c[3682]|0;if((S|0)==0|ab>>>0<S>>>0){c[3682]=ab}c[3790]=ab;c[3791]=aa;c[3793]=0;c[3687]=c[3644];c[3686]=-1;S=0;do{Y=S<<1;ac=14752+(Y<<2)|0;c[14752+(Y+3<<2)>>2]=ac;c[14752+(Y+2<<2)>>2]=ac;S=S+1|0;}while(S>>>0<32>>>0);S=ab+8|0;if((S&7|0)==0){ae=0}else{ae=-S&7}S=aa-40-ae|0;c[3684]=ab+ae;c[3681]=S;c[ab+(ae+4)>>2]=S|1;c[ab+(aa-36)>>2]=40;c[3685]=c[3648]}else{S=15160;while(1){af=c[S>>2]|0;ag=S+4|0;ah=c[ag>>2]|0;if((ab|0)==(af+ah|0)){T=213;break}ac=c[S+8>>2]|0;if((ac|0)==0){break}else{S=ac}}do{if((T|0)==213){if((c[S+12>>2]&8|0)!=0){break}ac=ad;if(!(ac>>>0>=af>>>0&ac>>>0<ab>>>0)){break}c[ag>>2]=ah+aa;ac=c[3684]|0;Y=(c[3681]|0)+aa|0;Z=ac;W=ac+8|0;if((W&7|0)==0){ai=0}else{ai=-W&7}W=Y-ai|0;c[3684]=Z+ai;c[3681]=W;c[Z+(ai+4)>>2]=W|1;c[Z+(Y+4)>>2]=40;c[3685]=c[3648];break L310}}while(0);if(ab>>>0<(c[3682]|0)>>>0){c[3682]=ab}S=ab+aa|0;Y=15160;while(1){aj=Y|0;if((c[aj>>2]|0)==(S|0)){T=223;break}Z=c[Y+8>>2]|0;if((Z|0)==0){break}else{Y=Z}}do{if((T|0)==223){if((c[Y+12>>2]&8|0)!=0){break}c[aj>>2]=ab;S=Y+4|0;c[S>>2]=(c[S>>2]|0)+aa;S=ab+8|0;if((S&7|0)==0){ak=0}else{ak=-S&7}S=ab+(aa+8)|0;if((S&7|0)==0){al=0}else{al=-S&7}S=ab+(al+aa)|0;Z=S;W=ak+o|0;ac=ab+W|0;_=ac;K=S-(ab+ak)-o|0;c[ab+(ak+4)>>2]=o|3;do{if((Z|0)==(c[3684]|0)){J=(c[3681]|0)+K|0;c[3681]=J;c[3684]=_;c[ab+(W+4)>>2]=J|1}else{if((Z|0)==(c[3683]|0)){J=(c[3680]|0)+K|0;c[3680]=J;c[3683]=_;c[ab+(W+4)>>2]=J|1;c[ab+(J+W)>>2]=J;break}J=aa+4|0;X=c[ab+(J+al)>>2]|0;if((X&3|0)==1){$=X&-8;V=X>>>3;L355:do{if(X>>>0<256>>>0){U=c[ab+((al|8)+aa)>>2]|0;Q=c[ab+(aa+12+al)>>2]|0;R=14752+(V<<1<<2)|0;do{if((U|0)!=(R|0)){if(U>>>0<(c[3682]|0)>>>0){cp();return 0}if((c[U+12>>2]|0)==(Z|0)){break}cp();return 0}}while(0);if((Q|0)==(U|0)){c[3678]=c[3678]&~(1<<V);break}do{if((Q|0)==(R|0)){am=Q+8|0}else{if(Q>>>0<(c[3682]|0)>>>0){cp();return 0}m=Q+8|0;if((c[m>>2]|0)==(Z|0)){am=m;break}cp();return 0}}while(0);c[U+12>>2]=Q;c[am>>2]=U}else{R=S;m=c[ab+((al|24)+aa)>>2]|0;P=c[ab+(aa+12+al)>>2]|0;do{if((P|0)==(R|0)){O=al|16;g=ab+(J+O)|0;L=c[g>>2]|0;if((L|0)==0){e=ab+(O+aa)|0;O=c[e>>2]|0;if((O|0)==0){an=0;break}else{ao=O;ap=e}}else{ao=L;ap=g}while(1){g=ao+20|0;L=c[g>>2]|0;if((L|0)!=0){ao=L;ap=g;continue}g=ao+16|0;L=c[g>>2]|0;if((L|0)==0){break}else{ao=L;ap=g}}if(ap>>>0<(c[3682]|0)>>>0){cp();return 0}else{c[ap>>2]=0;an=ao;break}}else{g=c[ab+((al|8)+aa)>>2]|0;if(g>>>0<(c[3682]|0)>>>0){cp();return 0}L=g+12|0;if((c[L>>2]|0)!=(R|0)){cp();return 0}e=P+8|0;if((c[e>>2]|0)==(R|0)){c[L>>2]=P;c[e>>2]=g;an=P;break}else{cp();return 0}}}while(0);if((m|0)==0){break}P=ab+(aa+28+al)|0;U=15016+(c[P>>2]<<2)|0;do{if((R|0)==(c[U>>2]|0)){c[U>>2]=an;if((an|0)!=0){break}c[3679]=c[3679]&~(1<<c[P>>2]);break L355}else{if(m>>>0<(c[3682]|0)>>>0){cp();return 0}Q=m+16|0;if((c[Q>>2]|0)==(R|0)){c[Q>>2]=an}else{c[m+20>>2]=an}if((an|0)==0){break L355}}}while(0);if(an>>>0<(c[3682]|0)>>>0){cp();return 0}c[an+24>>2]=m;R=al|16;P=c[ab+(R+aa)>>2]|0;do{if((P|0)!=0){if(P>>>0<(c[3682]|0)>>>0){cp();return 0}else{c[an+16>>2]=P;c[P+24>>2]=an;break}}}while(0);P=c[ab+(J+R)>>2]|0;if((P|0)==0){break}if(P>>>0<(c[3682]|0)>>>0){cp();return 0}else{c[an+20>>2]=P;c[P+24>>2]=an;break}}}while(0);aq=ab+(($|al)+aa)|0;ar=$+K|0}else{aq=Z;ar=K}J=aq+4|0;c[J>>2]=c[J>>2]&-2;c[ab+(W+4)>>2]=ar|1;c[ab+(ar+W)>>2]=ar;J=ar>>>3;if(ar>>>0<256>>>0){V=J<<1;X=14752+(V<<2)|0;P=c[3678]|0;m=1<<J;do{if((P&m|0)==0){c[3678]=P|m;as=X;at=14752+(V+2<<2)|0}else{J=14752+(V+2<<2)|0;U=c[J>>2]|0;if(U>>>0>=(c[3682]|0)>>>0){as=U;at=J;break}cp();return 0}}while(0);c[at>>2]=_;c[as+12>>2]=_;c[ab+(W+8)>>2]=as;c[ab+(W+12)>>2]=X;break}V=ac;m=ar>>>8;do{if((m|0)==0){au=0}else{if(ar>>>0>16777215>>>0){au=31;break}P=(m+1048320|0)>>>16&8;$=m<<P;J=($+520192|0)>>>16&4;U=$<<J;$=(U+245760|0)>>>16&2;Q=14-(J|P|$)+(U<<$>>>15)|0;au=ar>>>((Q+7|0)>>>0)&1|Q<<1}}while(0);m=15016+(au<<2)|0;c[ab+(W+28)>>2]=au;c[ab+(W+20)>>2]=0;c[ab+(W+16)>>2]=0;X=c[3679]|0;Q=1<<au;if((X&Q|0)==0){c[3679]=X|Q;c[m>>2]=V;c[ab+(W+24)>>2]=m;c[ab+(W+12)>>2]=V;c[ab+(W+8)>>2]=V;break}if((au|0)==31){av=0}else{av=25-(au>>>1)|0}Q=ar<<av;X=c[m>>2]|0;while(1){if((c[X+4>>2]&-8|0)==(ar|0)){break}aw=X+16+(Q>>>31<<2)|0;m=c[aw>>2]|0;if((m|0)==0){T=296;break}else{Q=Q<<1;X=m}}if((T|0)==296){if(aw>>>0<(c[3682]|0)>>>0){cp();return 0}else{c[aw>>2]=V;c[ab+(W+24)>>2]=X;c[ab+(W+12)>>2]=V;c[ab+(W+8)>>2]=V;break}}Q=X+8|0;m=c[Q>>2]|0;$=c[3682]|0;if(X>>>0<$>>>0){cp();return 0}if(m>>>0<$>>>0){cp();return 0}else{c[m+12>>2]=V;c[Q>>2]=V;c[ab+(W+8)>>2]=m;c[ab+(W+12)>>2]=X;c[ab+(W+24)>>2]=0;break}}}while(0);n=ab+(ak|8)|0;return n|0}}while(0);Y=ad;W=15160;while(1){ax=c[W>>2]|0;if(ax>>>0<=Y>>>0){ay=c[W+4>>2]|0;az=ax+ay|0;if(az>>>0>Y>>>0){break}}W=c[W+8>>2]|0}W=ax+(ay-39)|0;if((W&7|0)==0){aA=0}else{aA=-W&7}W=ax+(ay-47+aA)|0;ac=W>>>0<(ad+16|0)>>>0?Y:W;W=ac+8|0;_=ab+8|0;if((_&7|0)==0){aB=0}else{aB=-_&7}_=aa-40-aB|0;c[3684]=ab+aB;c[3681]=_;c[ab+(aB+4)>>2]=_|1;c[ab+(aa-36)>>2]=40;c[3685]=c[3648];c[ac+4>>2]=27;c[W>>2]=c[3790];c[W+4>>2]=c[3791];c[W+8>>2]=c[3792];c[W+12>>2]=c[3793];c[3790]=ab;c[3791]=aa;c[3793]=0;c[3792]=W;W=ac+28|0;c[W>>2]=7;if((ac+32|0)>>>0<az>>>0){_=W;while(1){W=_+4|0;c[W>>2]=7;if((_+8|0)>>>0<az>>>0){_=W}else{break}}}if((ac|0)==(Y|0)){break}_=ac-ad|0;W=Y+(_+4)|0;c[W>>2]=c[W>>2]&-2;c[ad+4>>2]=_|1;c[Y+_>>2]=_;W=_>>>3;if(_>>>0<256>>>0){K=W<<1;Z=14752+(K<<2)|0;S=c[3678]|0;m=1<<W;do{if((S&m|0)==0){c[3678]=S|m;aC=Z;aD=14752+(K+2<<2)|0}else{W=14752+(K+2<<2)|0;Q=c[W>>2]|0;if(Q>>>0>=(c[3682]|0)>>>0){aC=Q;aD=W;break}cp();return 0}}while(0);c[aD>>2]=ad;c[aC+12>>2]=ad;c[ad+8>>2]=aC;c[ad+12>>2]=Z;break}K=ad;m=_>>>8;do{if((m|0)==0){aE=0}else{if(_>>>0>16777215>>>0){aE=31;break}S=(m+1048320|0)>>>16&8;Y=m<<S;ac=(Y+520192|0)>>>16&4;W=Y<<ac;Y=(W+245760|0)>>>16&2;Q=14-(ac|S|Y)+(W<<Y>>>15)|0;aE=_>>>((Q+7|0)>>>0)&1|Q<<1}}while(0);m=15016+(aE<<2)|0;c[ad+28>>2]=aE;c[ad+20>>2]=0;c[ad+16>>2]=0;Z=c[3679]|0;Q=1<<aE;if((Z&Q|0)==0){c[3679]=Z|Q;c[m>>2]=K;c[ad+24>>2]=m;c[ad+12>>2]=ad;c[ad+8>>2]=ad;break}if((aE|0)==31){aF=0}else{aF=25-(aE>>>1)|0}Q=_<<aF;Z=c[m>>2]|0;while(1){if((c[Z+4>>2]&-8|0)==(_|0)){break}aG=Z+16+(Q>>>31<<2)|0;m=c[aG>>2]|0;if((m|0)==0){T=331;break}else{Q=Q<<1;Z=m}}if((T|0)==331){if(aG>>>0<(c[3682]|0)>>>0){cp();return 0}else{c[aG>>2]=K;c[ad+24>>2]=Z;c[ad+12>>2]=ad;c[ad+8>>2]=ad;break}}Q=Z+8|0;_=c[Q>>2]|0;m=c[3682]|0;if(Z>>>0<m>>>0){cp();return 0}if(_>>>0<m>>>0){cp();return 0}else{c[_+12>>2]=K;c[Q>>2]=K;c[ad+8>>2]=_;c[ad+12>>2]=Z;c[ad+24>>2]=0;break}}}while(0);ad=c[3681]|0;if(ad>>>0<=o>>>0){break}_=ad-o|0;c[3681]=_;ad=c[3684]|0;Q=ad;c[3684]=Q+o;c[Q+(o+4)>>2]=_|1;c[ad+4>>2]=o|3;n=ad+8|0;return n|0}}while(0);c[(b8()|0)>>2]=12;n=0;return n|0}function n0(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;if((a|0)==0){return}b=a-8|0;d=b;e=c[3682]|0;if(b>>>0<e>>>0){cp()}f=c[a-4>>2]|0;g=f&3;if((g|0)==1){cp()}h=f&-8;i=a+(h-8)|0;j=i;L527:do{if((f&1|0)==0){k=c[b>>2]|0;if((g|0)==0){return}l=-8-k|0;m=a+l|0;n=m;o=k+h|0;if(m>>>0<e>>>0){cp()}if((n|0)==(c[3683]|0)){p=a+(h-4)|0;if((c[p>>2]&3|0)!=3){q=n;r=o;break}c[3680]=o;c[p>>2]=c[p>>2]&-2;c[a+(l+4)>>2]=o|1;c[i>>2]=o;return}p=k>>>3;if(k>>>0<256>>>0){k=c[a+(l+8)>>2]|0;s=c[a+(l+12)>>2]|0;t=14752+(p<<1<<2)|0;do{if((k|0)!=(t|0)){if(k>>>0<e>>>0){cp()}if((c[k+12>>2]|0)==(n|0)){break}cp()}}while(0);if((s|0)==(k|0)){c[3678]=c[3678]&~(1<<p);q=n;r=o;break}do{if((s|0)==(t|0)){u=s+8|0}else{if(s>>>0<e>>>0){cp()}v=s+8|0;if((c[v>>2]|0)==(n|0)){u=v;break}cp()}}while(0);c[k+12>>2]=s;c[u>>2]=k;q=n;r=o;break}t=m;p=c[a+(l+24)>>2]|0;v=c[a+(l+12)>>2]|0;do{if((v|0)==(t|0)){w=a+(l+20)|0;x=c[w>>2]|0;if((x|0)==0){y=a+(l+16)|0;z=c[y>>2]|0;if((z|0)==0){A=0;break}else{B=z;C=y}}else{B=x;C=w}while(1){w=B+20|0;x=c[w>>2]|0;if((x|0)!=0){B=x;C=w;continue}w=B+16|0;x=c[w>>2]|0;if((x|0)==0){break}else{B=x;C=w}}if(C>>>0<e>>>0){cp()}else{c[C>>2]=0;A=B;break}}else{w=c[a+(l+8)>>2]|0;if(w>>>0<e>>>0){cp()}x=w+12|0;if((c[x>>2]|0)!=(t|0)){cp()}y=v+8|0;if((c[y>>2]|0)==(t|0)){c[x>>2]=v;c[y>>2]=w;A=v;break}else{cp()}}}while(0);if((p|0)==0){q=n;r=o;break}v=a+(l+28)|0;m=15016+(c[v>>2]<<2)|0;do{if((t|0)==(c[m>>2]|0)){c[m>>2]=A;if((A|0)!=0){break}c[3679]=c[3679]&~(1<<c[v>>2]);q=n;r=o;break L527}else{if(p>>>0<(c[3682]|0)>>>0){cp()}k=p+16|0;if((c[k>>2]|0)==(t|0)){c[k>>2]=A}else{c[p+20>>2]=A}if((A|0)==0){q=n;r=o;break L527}}}while(0);if(A>>>0<(c[3682]|0)>>>0){cp()}c[A+24>>2]=p;t=c[a+(l+16)>>2]|0;do{if((t|0)!=0){if(t>>>0<(c[3682]|0)>>>0){cp()}else{c[A+16>>2]=t;c[t+24>>2]=A;break}}}while(0);t=c[a+(l+20)>>2]|0;if((t|0)==0){q=n;r=o;break}if(t>>>0<(c[3682]|0)>>>0){cp()}else{c[A+20>>2]=t;c[t+24>>2]=A;q=n;r=o;break}}else{q=d;r=h}}while(0);d=q;if(d>>>0>=i>>>0){cp()}A=a+(h-4)|0;e=c[A>>2]|0;if((e&1|0)==0){cp()}do{if((e&2|0)==0){if((j|0)==(c[3684]|0)){B=(c[3681]|0)+r|0;c[3681]=B;c[3684]=q;c[q+4>>2]=B|1;if((q|0)!=(c[3683]|0)){return}c[3683]=0;c[3680]=0;return}if((j|0)==(c[3683]|0)){B=(c[3680]|0)+r|0;c[3680]=B;c[3683]=q;c[q+4>>2]=B|1;c[d+B>>2]=B;return}B=(e&-8)+r|0;C=e>>>3;L630:do{if(e>>>0<256>>>0){u=c[a+h>>2]|0;g=c[a+(h|4)>>2]|0;b=14752+(C<<1<<2)|0;do{if((u|0)!=(b|0)){if(u>>>0<(c[3682]|0)>>>0){cp()}if((c[u+12>>2]|0)==(j|0)){break}cp()}}while(0);if((g|0)==(u|0)){c[3678]=c[3678]&~(1<<C);break}do{if((g|0)==(b|0)){D=g+8|0}else{if(g>>>0<(c[3682]|0)>>>0){cp()}f=g+8|0;if((c[f>>2]|0)==(j|0)){D=f;break}cp()}}while(0);c[u+12>>2]=g;c[D>>2]=u}else{b=i;f=c[a+(h+16)>>2]|0;t=c[a+(h|4)>>2]|0;do{if((t|0)==(b|0)){p=a+(h+12)|0;v=c[p>>2]|0;if((v|0)==0){m=a+(h+8)|0;k=c[m>>2]|0;if((k|0)==0){E=0;break}else{F=k;G=m}}else{F=v;G=p}while(1){p=F+20|0;v=c[p>>2]|0;if((v|0)!=0){F=v;G=p;continue}p=F+16|0;v=c[p>>2]|0;if((v|0)==0){break}else{F=v;G=p}}if(G>>>0<(c[3682]|0)>>>0){cp()}else{c[G>>2]=0;E=F;break}}else{p=c[a+h>>2]|0;if(p>>>0<(c[3682]|0)>>>0){cp()}v=p+12|0;if((c[v>>2]|0)!=(b|0)){cp()}m=t+8|0;if((c[m>>2]|0)==(b|0)){c[v>>2]=t;c[m>>2]=p;E=t;break}else{cp()}}}while(0);if((f|0)==0){break}t=a+(h+20)|0;u=15016+(c[t>>2]<<2)|0;do{if((b|0)==(c[u>>2]|0)){c[u>>2]=E;if((E|0)!=0){break}c[3679]=c[3679]&~(1<<c[t>>2]);break L630}else{if(f>>>0<(c[3682]|0)>>>0){cp()}g=f+16|0;if((c[g>>2]|0)==(b|0)){c[g>>2]=E}else{c[f+20>>2]=E}if((E|0)==0){break L630}}}while(0);if(E>>>0<(c[3682]|0)>>>0){cp()}c[E+24>>2]=f;b=c[a+(h+8)>>2]|0;do{if((b|0)!=0){if(b>>>0<(c[3682]|0)>>>0){cp()}else{c[E+16>>2]=b;c[b+24>>2]=E;break}}}while(0);b=c[a+(h+12)>>2]|0;if((b|0)==0){break}if(b>>>0<(c[3682]|0)>>>0){cp()}else{c[E+20>>2]=b;c[b+24>>2]=E;break}}}while(0);c[q+4>>2]=B|1;c[d+B>>2]=B;if((q|0)!=(c[3683]|0)){H=B;break}c[3680]=B;return}else{c[A>>2]=e&-2;c[q+4>>2]=r|1;c[d+r>>2]=r;H=r}}while(0);r=H>>>3;if(H>>>0<256>>>0){d=r<<1;e=14752+(d<<2)|0;A=c[3678]|0;E=1<<r;do{if((A&E|0)==0){c[3678]=A|E;I=e;J=14752+(d+2<<2)|0}else{r=14752+(d+2<<2)|0;h=c[r>>2]|0;if(h>>>0>=(c[3682]|0)>>>0){I=h;J=r;break}cp()}}while(0);c[J>>2]=q;c[I+12>>2]=q;c[q+8>>2]=I;c[q+12>>2]=e;return}e=q;I=H>>>8;do{if((I|0)==0){K=0}else{if(H>>>0>16777215>>>0){K=31;break}J=(I+1048320|0)>>>16&8;d=I<<J;E=(d+520192|0)>>>16&4;A=d<<E;d=(A+245760|0)>>>16&2;r=14-(E|J|d)+(A<<d>>>15)|0;K=H>>>((r+7|0)>>>0)&1|r<<1}}while(0);I=15016+(K<<2)|0;c[q+28>>2]=K;c[q+20>>2]=0;c[q+16>>2]=0;r=c[3679]|0;d=1<<K;do{if((r&d|0)==0){c[3679]=r|d;c[I>>2]=e;c[q+24>>2]=I;c[q+12>>2]=q;c[q+8>>2]=q}else{if((K|0)==31){L=0}else{L=25-(K>>>1)|0}A=H<<L;J=c[I>>2]|0;while(1){if((c[J+4>>2]&-8|0)==(H|0)){break}M=J+16+(A>>>31<<2)|0;E=c[M>>2]|0;if((E|0)==0){N=508;break}else{A=A<<1;J=E}}if((N|0)==508){if(M>>>0<(c[3682]|0)>>>0){cp()}else{c[M>>2]=e;c[q+24>>2]=J;c[q+12>>2]=q;c[q+8>>2]=q;break}}A=J+8|0;B=c[A>>2]|0;E=c[3682]|0;if(J>>>0<E>>>0){cp()}if(B>>>0<E>>>0){cp()}else{c[B+12>>2]=e;c[A>>2]=e;c[q+8>>2]=B;c[q+12>>2]=J;c[q+24>>2]=0;break}}}while(0);q=(c[3686]|0)-1|0;c[3686]=q;if((q|0)==0){O=15168}else{return}while(1){q=c[O>>2]|0;if((q|0)==0){break}else{O=q+8|0}}c[3686]=-1;return}function n1(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;if((a|0)==0){d=n$(b)|0;return d|0}if(b>>>0>4294967231>>>0){c[(b8()|0)>>2]=12;d=0;return d|0}if(b>>>0<11>>>0){e=16}else{e=b+11&-8}f=n2(a-8|0,e)|0;if((f|0)!=0){d=f+8|0;return d|0}f=n$(b)|0;if((f|0)==0){d=0;return d|0}e=c[a-4>>2]|0;g=(e&-8)-((e&3|0)==0?8:4)|0;e=g>>>0<b>>>0?g:b;of(f|0,a|0,e)|0;n0(a);d=f;return d|0}function n2(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;d=a+4|0;e=c[d>>2]|0;f=e&-8;g=a;h=g+f|0;i=h;j=c[3682]|0;if(g>>>0<j>>>0){cp();return 0}k=e&3;if(!((k|0)!=1&g>>>0<h>>>0)){cp();return 0}l=g+(f|4)|0;m=c[l>>2]|0;if((m&1|0)==0){cp();return 0}if((k|0)==0){if(b>>>0<256>>>0){n=0;return n|0}do{if(f>>>0>=(b+4|0)>>>0){if((f-b|0)>>>0>c[3646]<<1>>>0){break}else{n=a}return n|0}}while(0);n=0;return n|0}if(f>>>0>=b>>>0){k=f-b|0;if(k>>>0<=15>>>0){n=a;return n|0}c[d>>2]=e&1|b|2;c[g+(b+4)>>2]=k|3;c[l>>2]=c[l>>2]|1;n3(g+b|0,k);n=a;return n|0}if((i|0)==(c[3684]|0)){k=(c[3681]|0)+f|0;if(k>>>0<=b>>>0){n=0;return n|0}l=k-b|0;c[d>>2]=e&1|b|2;c[g+(b+4)>>2]=l|1;c[3684]=g+b;c[3681]=l;n=a;return n|0}if((i|0)==(c[3683]|0)){l=(c[3680]|0)+f|0;if(l>>>0<b>>>0){n=0;return n|0}k=l-b|0;if(k>>>0>15>>>0){c[d>>2]=e&1|b|2;c[g+(b+4)>>2]=k|1;c[g+l>>2]=k;o=g+(l+4)|0;c[o>>2]=c[o>>2]&-2;p=g+b|0;q=k}else{c[d>>2]=e&1|l|2;e=g+(l+4)|0;c[e>>2]=c[e>>2]|1;p=0;q=0}c[3680]=q;c[3683]=p;n=a;return n|0}if((m&2|0)!=0){n=0;return n|0}p=(m&-8)+f|0;if(p>>>0<b>>>0){n=0;return n|0}q=p-b|0;e=m>>>3;L816:do{if(m>>>0<256>>>0){l=c[g+(f+8)>>2]|0;k=c[g+(f+12)>>2]|0;o=14752+(e<<1<<2)|0;do{if((l|0)!=(o|0)){if(l>>>0<j>>>0){cp();return 0}if((c[l+12>>2]|0)==(i|0)){break}cp();return 0}}while(0);if((k|0)==(l|0)){c[3678]=c[3678]&~(1<<e);break}do{if((k|0)==(o|0)){r=k+8|0}else{if(k>>>0<j>>>0){cp();return 0}s=k+8|0;if((c[s>>2]|0)==(i|0)){r=s;break}cp();return 0}}while(0);c[l+12>>2]=k;c[r>>2]=l}else{o=h;s=c[g+(f+24)>>2]|0;t=c[g+(f+12)>>2]|0;do{if((t|0)==(o|0)){u=g+(f+20)|0;v=c[u>>2]|0;if((v|0)==0){w=g+(f+16)|0;x=c[w>>2]|0;if((x|0)==0){y=0;break}else{z=x;A=w}}else{z=v;A=u}while(1){u=z+20|0;v=c[u>>2]|0;if((v|0)!=0){z=v;A=u;continue}u=z+16|0;v=c[u>>2]|0;if((v|0)==0){break}else{z=v;A=u}}if(A>>>0<j>>>0){cp();return 0}else{c[A>>2]=0;y=z;break}}else{u=c[g+(f+8)>>2]|0;if(u>>>0<j>>>0){cp();return 0}v=u+12|0;if((c[v>>2]|0)!=(o|0)){cp();return 0}w=t+8|0;if((c[w>>2]|0)==(o|0)){c[v>>2]=t;c[w>>2]=u;y=t;break}else{cp();return 0}}}while(0);if((s|0)==0){break}t=g+(f+28)|0;l=15016+(c[t>>2]<<2)|0;do{if((o|0)==(c[l>>2]|0)){c[l>>2]=y;if((y|0)!=0){break}c[3679]=c[3679]&~(1<<c[t>>2]);break L816}else{if(s>>>0<(c[3682]|0)>>>0){cp();return 0}k=s+16|0;if((c[k>>2]|0)==(o|0)){c[k>>2]=y}else{c[s+20>>2]=y}if((y|0)==0){break L816}}}while(0);if(y>>>0<(c[3682]|0)>>>0){cp();return 0}c[y+24>>2]=s;o=c[g+(f+16)>>2]|0;do{if((o|0)!=0){if(o>>>0<(c[3682]|0)>>>0){cp();return 0}else{c[y+16>>2]=o;c[o+24>>2]=y;break}}}while(0);o=c[g+(f+20)>>2]|0;if((o|0)==0){break}if(o>>>0<(c[3682]|0)>>>0){cp();return 0}else{c[y+20>>2]=o;c[o+24>>2]=y;break}}}while(0);if(q>>>0<16>>>0){c[d>>2]=p|c[d>>2]&1|2;y=g+(p|4)|0;c[y>>2]=c[y>>2]|1;n=a;return n|0}else{c[d>>2]=c[d>>2]&1|b|2;c[g+(b+4)>>2]=q|3;d=g+(p|4)|0;c[d>>2]=c[d>>2]|1;n3(g+b|0,q);n=a;return n|0}return 0}function n3(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;d=a;e=d+b|0;f=e;g=c[a+4>>2]|0;L892:do{if((g&1|0)==0){h=c[a>>2]|0;if((g&3|0)==0){return}i=d+(-h|0)|0;j=i;k=h+b|0;l=c[3682]|0;if(i>>>0<l>>>0){cp()}if((j|0)==(c[3683]|0)){m=d+(b+4)|0;if((c[m>>2]&3|0)!=3){n=j;o=k;break}c[3680]=k;c[m>>2]=c[m>>2]&-2;c[d+(4-h)>>2]=k|1;c[e>>2]=k;return}m=h>>>3;if(h>>>0<256>>>0){p=c[d+(8-h)>>2]|0;q=c[d+(12-h)>>2]|0;r=14752+(m<<1<<2)|0;do{if((p|0)!=(r|0)){if(p>>>0<l>>>0){cp()}if((c[p+12>>2]|0)==(j|0)){break}cp()}}while(0);if((q|0)==(p|0)){c[3678]=c[3678]&~(1<<m);n=j;o=k;break}do{if((q|0)==(r|0)){s=q+8|0}else{if(q>>>0<l>>>0){cp()}t=q+8|0;if((c[t>>2]|0)==(j|0)){s=t;break}cp()}}while(0);c[p+12>>2]=q;c[s>>2]=p;n=j;o=k;break}r=i;m=c[d+(24-h)>>2]|0;t=c[d+(12-h)>>2]|0;do{if((t|0)==(r|0)){u=16-h|0;v=d+(u+4)|0;w=c[v>>2]|0;if((w|0)==0){x=d+u|0;u=c[x>>2]|0;if((u|0)==0){y=0;break}else{z=u;A=x}}else{z=w;A=v}while(1){v=z+20|0;w=c[v>>2]|0;if((w|0)!=0){z=w;A=v;continue}v=z+16|0;w=c[v>>2]|0;if((w|0)==0){break}else{z=w;A=v}}if(A>>>0<l>>>0){cp()}else{c[A>>2]=0;y=z;break}}else{v=c[d+(8-h)>>2]|0;if(v>>>0<l>>>0){cp()}w=v+12|0;if((c[w>>2]|0)!=(r|0)){cp()}x=t+8|0;if((c[x>>2]|0)==(r|0)){c[w>>2]=t;c[x>>2]=v;y=t;break}else{cp()}}}while(0);if((m|0)==0){n=j;o=k;break}t=d+(28-h)|0;l=15016+(c[t>>2]<<2)|0;do{if((r|0)==(c[l>>2]|0)){c[l>>2]=y;if((y|0)!=0){break}c[3679]=c[3679]&~(1<<c[t>>2]);n=j;o=k;break L892}else{if(m>>>0<(c[3682]|0)>>>0){cp()}i=m+16|0;if((c[i>>2]|0)==(r|0)){c[i>>2]=y}else{c[m+20>>2]=y}if((y|0)==0){n=j;o=k;break L892}}}while(0);if(y>>>0<(c[3682]|0)>>>0){cp()}c[y+24>>2]=m;r=16-h|0;t=c[d+r>>2]|0;do{if((t|0)!=0){if(t>>>0<(c[3682]|0)>>>0){cp()}else{c[y+16>>2]=t;c[t+24>>2]=y;break}}}while(0);t=c[d+(r+4)>>2]|0;if((t|0)==0){n=j;o=k;break}if(t>>>0<(c[3682]|0)>>>0){cp()}else{c[y+20>>2]=t;c[t+24>>2]=y;n=j;o=k;break}}else{n=a;o=b}}while(0);a=c[3682]|0;if(e>>>0<a>>>0){cp()}y=d+(b+4)|0;z=c[y>>2]|0;do{if((z&2|0)==0){if((f|0)==(c[3684]|0)){A=(c[3681]|0)+o|0;c[3681]=A;c[3684]=n;c[n+4>>2]=A|1;if((n|0)!=(c[3683]|0)){return}c[3683]=0;c[3680]=0;return}if((f|0)==(c[3683]|0)){A=(c[3680]|0)+o|0;c[3680]=A;c[3683]=n;c[n+4>>2]=A|1;c[n+A>>2]=A;return}A=(z&-8)+o|0;s=z>>>3;L991:do{if(z>>>0<256>>>0){g=c[d+(b+8)>>2]|0;t=c[d+(b+12)>>2]|0;h=14752+(s<<1<<2)|0;do{if((g|0)!=(h|0)){if(g>>>0<a>>>0){cp()}if((c[g+12>>2]|0)==(f|0)){break}cp()}}while(0);if((t|0)==(g|0)){c[3678]=c[3678]&~(1<<s);break}do{if((t|0)==(h|0)){B=t+8|0}else{if(t>>>0<a>>>0){cp()}m=t+8|0;if((c[m>>2]|0)==(f|0)){B=m;break}cp()}}while(0);c[g+12>>2]=t;c[B>>2]=g}else{h=e;m=c[d+(b+24)>>2]|0;l=c[d+(b+12)>>2]|0;do{if((l|0)==(h|0)){i=d+(b+20)|0;p=c[i>>2]|0;if((p|0)==0){q=d+(b+16)|0;v=c[q>>2]|0;if((v|0)==0){C=0;break}else{D=v;E=q}}else{D=p;E=i}while(1){i=D+20|0;p=c[i>>2]|0;if((p|0)!=0){D=p;E=i;continue}i=D+16|0;p=c[i>>2]|0;if((p|0)==0){break}else{D=p;E=i}}if(E>>>0<a>>>0){cp()}else{c[E>>2]=0;C=D;break}}else{i=c[d+(b+8)>>2]|0;if(i>>>0<a>>>0){cp()}p=i+12|0;if((c[p>>2]|0)!=(h|0)){cp()}q=l+8|0;if((c[q>>2]|0)==(h|0)){c[p>>2]=l;c[q>>2]=i;C=l;break}else{cp()}}}while(0);if((m|0)==0){break}l=d+(b+28)|0;g=15016+(c[l>>2]<<2)|0;do{if((h|0)==(c[g>>2]|0)){c[g>>2]=C;if((C|0)!=0){break}c[3679]=c[3679]&~(1<<c[l>>2]);break L991}else{if(m>>>0<(c[3682]|0)>>>0){cp()}t=m+16|0;if((c[t>>2]|0)==(h|0)){c[t>>2]=C}else{c[m+20>>2]=C}if((C|0)==0){break L991}}}while(0);if(C>>>0<(c[3682]|0)>>>0){cp()}c[C+24>>2]=m;h=c[d+(b+16)>>2]|0;do{if((h|0)!=0){if(h>>>0<(c[3682]|0)>>>0){cp()}else{c[C+16>>2]=h;c[h+24>>2]=C;break}}}while(0);h=c[d+(b+20)>>2]|0;if((h|0)==0){break}if(h>>>0<(c[3682]|0)>>>0){cp()}else{c[C+20>>2]=h;c[h+24>>2]=C;break}}}while(0);c[n+4>>2]=A|1;c[n+A>>2]=A;if((n|0)!=(c[3683]|0)){F=A;break}c[3680]=A;return}else{c[y>>2]=z&-2;c[n+4>>2]=o|1;c[n+o>>2]=o;F=o}}while(0);o=F>>>3;if(F>>>0<256>>>0){z=o<<1;y=14752+(z<<2)|0;C=c[3678]|0;b=1<<o;do{if((C&b|0)==0){c[3678]=C|b;G=y;H=14752+(z+2<<2)|0}else{o=14752+(z+2<<2)|0;d=c[o>>2]|0;if(d>>>0>=(c[3682]|0)>>>0){G=d;H=o;break}cp()}}while(0);c[H>>2]=n;c[G+12>>2]=n;c[n+8>>2]=G;c[n+12>>2]=y;return}y=n;G=F>>>8;do{if((G|0)==0){I=0}else{if(F>>>0>16777215>>>0){I=31;break}H=(G+1048320|0)>>>16&8;z=G<<H;b=(z+520192|0)>>>16&4;C=z<<b;z=(C+245760|0)>>>16&2;o=14-(b|H|z)+(C<<z>>>15)|0;I=F>>>((o+7|0)>>>0)&1|o<<1}}while(0);G=15016+(I<<2)|0;c[n+28>>2]=I;c[n+20>>2]=0;c[n+16>>2]=0;o=c[3679]|0;z=1<<I;if((o&z|0)==0){c[3679]=o|z;c[G>>2]=y;c[n+24>>2]=G;c[n+12>>2]=n;c[n+8>>2]=n;return}if((I|0)==31){J=0}else{J=25-(I>>>1)|0}I=F<<J;J=c[G>>2]|0;while(1){if((c[J+4>>2]&-8|0)==(F|0)){break}K=J+16+(I>>>31<<2)|0;G=c[K>>2]|0;if((G|0)==0){L=788;break}else{I=I<<1;J=G}}if((L|0)==788){if(K>>>0<(c[3682]|0)>>>0){cp()}c[K>>2]=y;c[n+24>>2]=J;c[n+12>>2]=n;c[n+8>>2]=n;return}K=J+8|0;L=c[K>>2]|0;I=c[3682]|0;if(J>>>0<I>>>0){cp()}if(L>>>0<I>>>0){cp()}c[L+12>>2]=y;c[K>>2]=y;c[n+8>>2]=L;c[n+12>>2]=J;c[n+24>>2]=0;return}function n4(a){a=a|0;var b=0,d=0,e=0;b=(a|0)==0?1:a;while(1){d=n$(b)|0;if((d|0)!=0){e=832;break}a=(I=c[4742]|0,c[4742]=I+0,I);if((a|0)==0){break}c1[a&3]()}if((e|0)==832){return d|0}d=cy(4)|0;c[d>>2]=5320;bK(d|0,11816,40);return 0}function n5(a){a=a|0;return n4(a)|0}function n6(a){a=a|0;if((a|0)==0){return}n0(a);return}function n7(a){a=a|0;n6(a);return}function n8(a){a=a|0;n6(a);return}function n9(a){a=a|0;return}function oa(a){a=a|0;return 2600}function ob(){var a=0;a=cy(4)|0;c[a>>2]=5320;bK(a|0,11816,40)}function oc(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0.0,r=0,s=0,t=0,u=0,v=0.0,w=0,x=0,y=0,z=0.0,A=0.0,B=0,C=0,D=0,E=0.0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0.0,O=0,P=0,Q=0.0,R=0.0,S=0.0;e=b;while(1){f=e+1|0;if((aX(a[e]|0)|0)==0){break}else{e=f}}g=a[e]|0;if((g<<24>>24|0)==45){i=f;j=1}else if((g<<24>>24|0)==43){i=f;j=0}else{i=e;j=0}e=-1;f=0;g=i;while(1){k=a[g]|0;if(((k<<24>>24)-48|0)>>>0<10>>>0){l=e}else{if(k<<24>>24!=46|(e|0)>-1){break}else{l=f}}e=l;f=f+1|0;g=g+1|0}l=g+(-f|0)|0;i=(e|0)<0;m=((i^1)<<31>>31)+f|0;n=(m|0)>18;o=(n?-18:-m|0)+(i?f:e)|0;e=n?18:m;do{if((e|0)==0){p=b;q=0.0}else{if((e|0)>9){m=l;n=e;f=0;while(1){i=a[m]|0;r=m+1|0;if(i<<24>>24==46){s=a[r]|0;t=m+2|0}else{s=i;t=r}u=(f*10|0)-48+(s<<24>>24)|0;r=n-1|0;if((r|0)>9){m=t;n=r;f=u}else{break}}v=+(u|0)*1.0e9;w=9;x=t;y=863}else{if((e|0)>0){v=0.0;w=e;x=l;y=863}else{z=0.0;A=0.0}}if((y|0)==863){f=x;n=w;m=0;while(1){r=a[f]|0;i=f+1|0;if(r<<24>>24==46){B=a[i]|0;C=f+2|0}else{B=r;C=i}D=(m*10|0)-48+(B<<24>>24)|0;i=n-1|0;if((i|0)>0){f=C;n=i;m=D}else{break}}z=+(D|0);A=v}E=A+z;do{if((k<<24>>24|0)==69|(k<<24>>24|0)==101){m=g+1|0;n=a[m]|0;if((n<<24>>24|0)==45){F=g+2|0;G=1}else if((n<<24>>24|0)==43){F=g+2|0;G=0}else{F=m;G=0}m=a[F]|0;if(((m<<24>>24)-48|0)>>>0<10>>>0){H=F;I=0;J=m}else{K=0;L=F;M=G;break}while(1){m=(I*10|0)-48+(J<<24>>24)|0;n=H+1|0;f=a[n]|0;if(((f<<24>>24)-48|0)>>>0<10>>>0){H=n;I=m;J=f}else{K=m;L=n;M=G;break}}}else{K=0;L=g;M=0}}while(0);n=o+((M|0)==0?K:-K|0)|0;m=(n|0)<0?-n|0:n;if((m|0)>511){c[(b8()|0)>>2]=34;N=1.0;O=32;P=511;y=880}else{if((m|0)==0){Q=1.0}else{N=1.0;O=32;P=m;y=880}}if((y|0)==880){while(1){y=0;if((P&1|0)==0){R=N}else{R=N*+h[O>>3]}m=P>>1;if((m|0)==0){Q=R;break}else{N=R;O=O+8|0;P=m;y=880}}}if((n|0)>-1){p=L;q=E*Q;break}else{p=L;q=E/Q;break}}}while(0);if((d|0)!=0){c[d>>2]=p}if((j|0)==0){S=q;return+S}S=-0.0-q;return+S}function od(a,b,c){a=a|0;b=b|0;c=c|0;return+(+oc(a,b))}function oe(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=b+e|0;if((e|0)>=20){d=d&255;e=b&3;g=d|d<<8|d<<16|d<<24;h=f&~3;if(e){e=b+4-e|0;while((b|0)<(e|0)){a[b]=d;b=b+1|0}}while((b|0)<(h|0)){c[b>>2]=g;b=b+4|0}}while((b|0)<(f|0)){a[b]=d;b=b+1|0}}function of(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;f=b|0;if((b&3)==(d&3)){while(b&3){if((e|0)==0)return f|0;a[b]=a[d]|0;b=b+1|0;d=d+1|0;e=e-1|0}while((e|0)>=4){c[b>>2]=c[d>>2];b=b+4|0;d=d+4|0;e=e-4|0}}while((e|0)>0){a[b]=a[d]|0;b=b+1|0;d=d+1|0;e=e-1|0}return f|0}function og(b){b=b|0;var c=0;c=b;while(a[c]|0){c=c+1|0}return c-b|0}function oh(b,c,d){b=b|0;c=c|0;d=d|0;if((c|0)<(b|0)&(b|0)<(c+d|0)){c=c+d|0;b=b+d|0;while((d|0)>0){b=b-1|0;c=c-1|0;d=d-1|0;a[b]=a[c]|0}}else{of(b,c,d)|0}}function oi(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=a+c>>>0;return(K=b+d+(e>>>0<a>>>0|0)>>>0,e|0)|0}function oj(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=b-d>>>0;e=b-d-(c>>>0>a>>>0|0)>>>0;return(K=e,a-c>>>0|0)|0}function ok(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){K=b<<c|(a&(1<<c)-1<<32-c)>>>32-c;return a<<c}K=a<<c-32;return 0}function ol(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){K=b>>>c;return a>>>c|(b&(1<<c)-1)<<32-c}K=0;return b>>>c-32|0}function om(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){K=b>>c;return a>>>c|(b&(1<<c)-1)<<32-c}K=(b|0)<0?-1:0;return b>>c-32|0}function on(b){b=b|0;var c=0;c=a[n+(b>>>24)|0]|0;if((c|0)<8)return c|0;c=a[n+(b>>16&255)|0]|0;if((c|0)<8)return c+8|0;c=a[n+(b>>8&255)|0]|0;if((c|0)<8)return c+16|0;return(a[n+(b&255)|0]|0)+24|0}function oo(b){b=b|0;var c=0;c=a[m+(b&255)|0]|0;if((c|0)<8)return c|0;c=a[m+(b>>8&255)|0]|0;if((c|0)<8)return c+8|0;c=a[m+(b>>16&255)|0]|0;if((c|0)<8)return c+16|0;return(a[m+(b>>>24)|0]|0)+24|0}function op(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;c=a&65535;d=b&65535;e=ag(d,c)|0;f=a>>>16;a=(e>>>16)+(ag(d,f)|0)|0;d=b>>>16;b=ag(d,c)|0;return(K=(a>>>16)+(ag(d,f)|0)+(((a&65535)+b|0)>>>16)|0,a+b<<16|e&65535|0)|0}function oq(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=b>>31|((b|0)<0?-1:0)<<1;f=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;g=d>>31|((d|0)<0?-1:0)<<1;h=((d|0)<0?-1:0)>>31|((d|0)<0?-1:0)<<1;i=oj(e^a,f^b,e,f)|0;b=K;a=g^e;e=h^f;f=oj((ov(i,b,oj(g^c,h^d,g,h)|0,K,0)|0)^a,K^e,a,e)|0;return(K=K,f)|0}function or(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+8|0;g=f|0;h=b>>31|((b|0)<0?-1:0)<<1;j=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;k=e>>31|((e|0)<0?-1:0)<<1;l=((e|0)<0?-1:0)>>31|((e|0)<0?-1:0)<<1;m=oj(h^a,j^b,h,j)|0;b=K;a=oj(k^d,l^e,k,l)|0;ov(m,b,a,K,g)|0;a=oj(c[g>>2]^h,c[g+4>>2]^j,h,j)|0;j=K;i=f;return(K=j,a)|0}function os(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=a;a=c;c=op(e,a)|0;f=K;return(K=(ag(b,a)|0)+(ag(d,e)|0)+f|f&0,c|0|0)|0}function ot(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ov(a,b,c,d,0)|0;return(K=K,e)|0}function ou(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+8|0;g=f|0;ov(a,b,d,e,g)|0;i=f;return(K=c[g+4>>2]|0,c[g>>2]|0)|0}function ov(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0;g=a;h=b;i=h;j=d;k=e;l=k;if((i|0)==0){m=(f|0)!=0;if((l|0)==0){if(m){c[f>>2]=(g>>>0)%(j>>>0);c[f+4>>2]=0}n=0;o=(g>>>0)/(j>>>0)>>>0;return(K=n,o)|0}else{if(!m){n=0;o=0;return(K=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=b&0;n=0;o=0;return(K=n,o)|0}}m=(l|0)==0;do{if((j|0)==0){if(m){if((f|0)!=0){c[f>>2]=(i>>>0)%(j>>>0);c[f+4>>2]=0}n=0;o=(i>>>0)/(j>>>0)>>>0;return(K=n,o)|0}if((g|0)==0){if((f|0)!=0){c[f>>2]=0;c[f+4>>2]=(i>>>0)%(l>>>0)}n=0;o=(i>>>0)/(l>>>0)>>>0;return(K=n,o)|0}p=l-1|0;if((p&l|0)==0){if((f|0)!=0){c[f>>2]=a|0;c[f+4>>2]=p&i|b&0}n=0;o=i>>>((oo(l|0)|0)>>>0);return(K=n,o)|0}p=(on(l|0)|0)-(on(i|0)|0)|0;if(p>>>0<=30){q=p+1|0;r=31-p|0;s=q;t=i<<r|g>>>(q>>>0);u=i>>>(q>>>0);v=0;w=g<<r;break}if((f|0)==0){n=0;o=0;return(K=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=h|b&0;n=0;o=0;return(K=n,o)|0}else{if(!m){r=(on(l|0)|0)-(on(i|0)|0)|0;if(r>>>0<=31){q=r+1|0;p=31-r|0;x=r-31>>31;s=q;t=g>>>(q>>>0)&x|i<<p;u=i>>>(q>>>0)&x;v=0;w=g<<p;break}if((f|0)==0){n=0;o=0;return(K=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=h|b&0;n=0;o=0;return(K=n,o)|0}p=j-1|0;if((p&j|0)!=0){x=(on(j|0)|0)+33-(on(i|0)|0)|0;q=64-x|0;r=32-x|0;y=r>>31;z=x-32|0;A=z>>31;s=x;t=r-1>>31&i>>>(z>>>0)|(i<<r|g>>>(x>>>0))&A;u=A&i>>>(x>>>0);v=g<<q&y;w=(i<<q|g>>>(z>>>0))&y|g<<r&x-33>>31;break}if((f|0)!=0){c[f>>2]=p&g;c[f+4>>2]=0}if((j|0)==1){n=h|b&0;o=a|0|0;return(K=n,o)|0}else{p=oo(j|0)|0;n=i>>>(p>>>0)|0;o=i<<32-p|g>>>(p>>>0)|0;return(K=n,o)|0}}}while(0);if((s|0)==0){B=w;C=v;D=u;E=t;F=0;G=0}else{g=d|0|0;d=k|e&0;e=oi(g,d,-1,-1)|0;k=K;i=w;w=v;v=u;u=t;t=s;s=0;while(1){H=w>>>31|i<<1;I=s|w<<1;j=u<<1|i>>>31|0;a=u>>>31|v<<1|0;oj(e,k,j,a)|0;b=K;h=b>>31|((b|0)<0?-1:0)<<1;J=h&1;L=oj(j,a,h&g,(((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1)&d)|0;M=K;b=t-1|0;if((b|0)==0){break}else{i=H;w=I;v=M;u=L;t=b;s=J}}B=H;C=I;D=M;E=L;F=0;G=J}J=C;C=0;if((f|0)!=0){c[f>>2]=E;c[f+4>>2]=D}n=(J|0)>>>31|(B|C)<<1|(C<<1|J>>>31)&0|F;o=(J<<1|0>>>31)&-2|G;return(K=n,o)|0}function ow(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;cR[a&15](b|0,c|0,d|0,e|0,f|0)}function ox(a,b){a=a|0;b=b|0;return+cS[a&7](b|0)}function oy(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;cT[a&31](b|0,c|0,d|0,e|0)}function oz(a,b){a=a|0;b=b|0;cU[a&511](b|0)}function oA(a,b,c){a=a|0;b=b|0;c=c|0;cV[a&255](b|0,c|0)}function oB(a,b,c,d){a=a|0;b=b|0;c=+c;d=+d;cW[a&3](b|0,+c,+d)}function oC(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return cX[a&15](b|0,c|0,d|0,e|0)|0}function oD(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=+h;cY[a&7](b|0,c|0,d|0,e|0,f|0,g|0,+h)}function oE(a,b){a=a|0;b=b|0;return cZ[a&255](b|0)|0}function oF(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return c_[a&63](b|0,c|0,d|0)|0}function oG(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;c$[a&127](b|0,c|0,d|0,e|0,f|0,g|0,h|0)}function oH(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;c0[a&15](b|0,c|0,d|0,e|0,f|0,+g)}function oI(a){a=a|0;c1[a&3]()}function oJ(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;return c2[a&31](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)|0}function oK(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;c3[a&7](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0)}function oL(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;c4[a&15](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)}function oM(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;c5[a&31](b|0,c|0,d|0,e|0,f|0,g|0)}function oN(a,b,c){a=a|0;b=b|0;c=c|0;return c6[a&63](b|0,c|0)|0}function oO(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return c7[a&63](b|0,c|0,d|0,e|0,f|0)|0}function oP(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;c8[a&31](b|0,c|0,d|0)}function oQ(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ah(0)}function oR(a){a=a|0;ah(1);return 0.0}function oS(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ah(2)}function oT(a){a=a|0;ah(3)}function oU(a,b){a=a|0;b=b|0;ah(4)}function oV(a,b,c){a=a|0;b=+b;c=+c;ah(5)}function oW(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ah(6);return 0}function oX(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;ah(7)}function oY(a){a=a|0;ah(8);return 0}function oZ(a,b,c){a=a|0;b=b|0;c=c|0;ah(9);return 0}function o_(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;ah(10)}function o$(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;ah(11)}function o0(){ah(12)}function o1(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;ah(13);return 0}function o2(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;ah(14)}function o3(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;ah(15)}function o4(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;ah(16)}function o5(a,b){a=a|0;b=b|0;ah(17);return 0}function o6(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ah(18);return 0}function o7(a,b,c){a=a|0;b=b|0;c=c|0;ah(19)}
// EMSCRIPTEN_END_FUNCS
var cR=[oQ,oQ,nX,oQ,nW,oQ,ec,oQ,nV,oQ,oQ,oQ,oQ,oQ,oQ,oQ];var cS=[oR,oR,d6,oR,d7,oR,d8,oR];var cT=[oS,oS,nS,oS,nT,oS,nR,oS,ee,oS,hp,oS,il,oS,hD,oS,ig,oS,oS,oS,oS,oS,oS,oS,oS,oS,oS,oS,oS,oS,oS,oS];var cU=[oT,oT,lt,oT,io,oT,gD,oT,jv,oT,gK,oT,hl,oT,ly,oT,lM,oT,gq,oT,gd,oT,jf,oT,fN,oT,mo,oT,gI,oT,iN,oT,gL,oT,ic,oT,h8,oT,fq,oT,n9,oT,gD,oT,lK,oT,fM,oT,l_,oT,jX,oT,iO,oT,nG,oT,h0,oT,lp,oT,ef,oT,lL,oT,hO,oT,ip,oT,kA,oT,fg,oT,lE,oT,nL,oT,mM,oT,h6,oT,gI,oT,ij,oT,kf,oT,mP,oT,gC,oT,lN,oT,n0,oT,li,oT,mL,oT,hS,oT,gc,oT,ii,oT,ka,oT,gD,oT,nl,oT,jg,oT,mN,oT,mz,oT,dL,oT,kB,oT,hN,oT,fH,oT,d1,oT,d4,oT,hZ,oT,dP,oT,j7,oT,jW,oT,h9,oT,kp,oT,n8,oT,hk,oT,fm,oT,dM,oT,no,oT,np,oT,h1,oT,hz,oT,ff,oT,fY,oT,l8,oT,nI,oT,hP,oT,h7,oT,kW,oT,f4,oT,kL,oT,h2,oT,lI,oT,nO,oT,f2,oT,nr,oT,nM,oT,gj,oT,lD,oT,j8,oT,k5,oT,nH,oT,mK,oT,kZ,oT,nq,oT,ke,oT,f1,oT,ju,oT,ib,oT,gk,oT,id,oT,hU,oT,gT,oT,f6,oT,mg,oT,lc,oT,k4,oT,mO,oT,fB,oT,g9,oT,nI,oT,nP,oT,d_,oT,hY,oT,gU,oT,fI,oT,fA,oT,hM,oT,h$,oT,lo,oT,hh,oT,hX,oT,gr,oT,lG,oT,ia,oT,kM,oT,jI,oT,kq,oT,hT,oT,hy,oT,hW,oT,fl,oT,nn,oT,jJ,oT,nN,oT,lu,oT,f5,oT,dI,oT,lj,oT,nK,oT,fr,oT,kb,oT,ld,oT,kX,oT,g_,oT,l$,oT,gH,oT,hR,oT,fZ,oT,ns,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT,oT];var cV=[oU,oU,fh,oU,mY,oU,dX,oU,kR,oU,dN,oU,kt,oU,eq,oU,kK,oU,eb,oU,eo,oU,mU,oU,kz,oU,f7,oU,fP,oU,ls,oU,kF,oU,kl,oU,dE,oU,kU,oU,fi,oU,fc,oU,d5,oU,kH,oU,kk,oU,f0,oU,kP,oU,ft,oU,ki,oU,kS,oU,lH,oU,fJ,oU,gl,oU,d0,oU,ge,oU,kV,oU,mX,oU,fo,oU,fU,oU,ku,oU,gG,oU,kE,oU,mZ,oU,kJ,oU,kw,oU,fz,oU,mW,oU,ky,oU,fF,oU,hm,oU,em,oU,gs,oU,lx,oU,ko,oU,kn,oU,fL,oU,kj,oU,fD,oU,hA,oU,fS,oU,fa,oU,kG,oU,mV,oU,kQ,oU,kv,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU,oU];var cW=[oV,oV,ed,oV];var cX=[oW,oW,lP,oW,lQ,oW,l5,oW,lX,oW,lR,oW,oW,oW,oW,oW];var cY=[oX,oX,lk,oX,le,oX,oX,oX];var cZ=[oY,oY,nb,oY,kD,oY,ht,oY,md,oY,m1,oY,hu,oY,m9,oY,kr,oY,jK,oY,m$,oY,gu,oY,hI,oY,hH,oY,fn,oY,mF,oY,m5,oY,m3,oY,nJ,oY,gJ,oY,mT,oY,mQ,oY,m4,oY,mR,oY,hq,oY,mc,oY,kT,oY,m6,oY,f8,oY,ks,oY,mv,oY,kN,oY,m_,oY,gf,oY,mG,oY,h4,oY,km,oY,oa,oY,gg,oY,mS,oY,hr,oY,hE,oY,gm,oY,mf,oY,kx,oY,na,oY,gt,oY,mu,oY,ml,oY,hF,oY,kg,oY,fb,oY,m0,oY,kh,oY,gE,oY,kC,oY,mn,oY,kI,oY,m2,oY,kO,oY,mk,oY,jY,oY,m8,oY,m7,oY,my,oY,mJ,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY,oY];var c_=[oZ,oZ,ih,oZ,e9,oZ,lV,oZ,nQ,oZ,lY,oZ,im,oZ,gO,oZ,hw,oZ,hs,oZ,lO,oZ,l1,oZ,hB,oZ,lv,oZ,l6,oZ,lT,oZ,f9,oZ,gP,oZ,hG,oZ,l3,oZ,lq,oZ,hn,oZ,gn,oZ,hK,oZ,oZ,oZ,oZ,oZ,oZ,oZ,oZ,oZ,oZ,oZ,oZ,oZ,oZ,oZ,oZ,oZ];var c$=[o_,o_,jP,o_,jZ,o_,j$,o_,ln,o_,jC,o_,jA,o_,lh,o_,jL,o_,jO,o_,jo,o_,i7,o_,jN,o_,iX,o_,j0,o_,j_,o_,iT,o_,jm,o_,i$,o_,iV,o_,iK,o_,iZ,o_,iR,o_,iP,o_,i5,o_,i3,o_,i1,o_,j1,o_,iy,o_,jM,o_,iC,o_,iu,o_,iw,o_,iA,o_,is,o_,iI,o_,iG,o_,iE,o_,iq,o_,o_,o_,o_,o_,o_,o_,o_,o_,o_,o_,o_,o_,o_,o_,o_,o_,o_,o_,o_,o_,o_,o_,o_,o_,o_,o_,o_,o_,o_,o_,o_,o_,o_,o_,o_,o_,o_,o_,o_,o_,o_,o_,o_,o_,o_,o_,o_,o_,o_,o_];var c0=[o$,o$,jF,o$,jD,o$,js,o$,jp,o$,o$,o$,o$,o$,o$,o$];var c1=[o0,o0,dK,o0];var c2=[o1,o1,mh,o1,mr,o1,mp,o1,mC,o1,mi,o1,mA,o1,l9,o1,ma,o1,o1,o1,o1,o1,o1,o1,o1,o1,o1,o1,o1,o1,o1,o1];var c3=[o2,o2,j2,o2,jQ,o2,o2,o2];var c4=[o3,o3,kc,o3,j9,o3,kY,o3,k6,o3,k0,o3,k8,o3,o3,o3];var c5=[o4,o4,nY,o4,jB,o4,jx,o4,jw,o4,nZ,o4,jG,o4,lr,o4,hC,o4,jt,o4,jh,o4,jn,o4,ji,o4,n_,o4,ho,o4,lw,o4];var c6=[o5,o5,gv,o5,lW,o5,hJ,o5,l4,o5,fy,o5,l0,o5,fC,o5,gh,o5,go,o5,lS,o5,fR,o5,l2,o5,hv,o5,dG,o5,fs,o5,hL,o5,lU,o5,fO,o5,fj,o5,hx,o5,fd,o5,ga,o5,fE,o5,f_,o5,o5,o5,o5,o5,o5,o5,o5,o5,o5,o5,o5,o5,o5,o5];var c7=[o6,o6,e1,o6,e4,o6,lZ,o6,mt,o6,e3,o6,ik,o6,mH,o6,e5,o6,mw,o6,l7,o6,mj,o6,ie,o6,mb,o6,me,o6,mE,o6,mm,o6,e2,o6,o6,o6,o6,o6,o6,o6,o6,o6,o6,o6,o6,o6,o6,o6,o6,o6,o6,o6,o6,o6,o6,o6,o6,o6,o6,o6,o6,o6];var c8=[o7,o7,fG,o7,fQ,o7,f$,o7,dA,o7,d$,o7,fu,o7,gN,o7,d2,o7,h5,o7,o7,o7,o7,o7,o7,o7,o7,o7,o7,o7,o7,o7];return{__GLOBAL__I_a263:gx,_strlen:og,_free:n0,_main:dJ,_realloc:n1,_memmove:oh,__GLOBAL__I_a:dO,_memset:oe,_malloc:n$,_memcpy:of,runPostSets:dq,stackAlloc:c9,stackSave:da,stackRestore:db,setThrew:dc,setTempRet0:df,setTempRet1:dg,setTempRet2:dh,setTempRet3:di,setTempRet4:dj,setTempRet5:dk,setTempRet6:dl,setTempRet7:dm,setTempRet8:dn,setTempRet9:dp,dynCall_viiiii:ow,dynCall_fi:ox,dynCall_viiii:oy,dynCall_vi:oz,dynCall_vii:oA,dynCall_vidd:oB,dynCall_iiiii:oC,dynCall_viiiiiid:oD,dynCall_ii:oE,dynCall_iiii:oF,dynCall_viiiiiii:oG,dynCall_viiiiid:oH,dynCall_v:oI,dynCall_iiiiiiiii:oJ,dynCall_viiiiiiiii:oK,dynCall_viiiiiiii:oL,dynCall_viiiiii:oM,dynCall_iii:oN,dynCall_iiiiii:oO,dynCall_viii:oP}})
// EMSCRIPTEN_END_ASM
({ "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array }, { "abort": abort, "assert": assert, "asmPrintInt": asmPrintInt, "asmPrintFloat": asmPrintFloat, "min": Math_min, "invoke_viiiii": invoke_viiiii, "invoke_fi": invoke_fi, "invoke_viiii": invoke_viiii, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_vidd": invoke_vidd, "invoke_iiiii": invoke_iiiii, "invoke_viiiiiid": invoke_viiiiiid, "invoke_ii": invoke_ii, "invoke_iiii": invoke_iiii, "invoke_viiiiiii": invoke_viiiiiii, "invoke_viiiiid": invoke_viiiiid, "invoke_v": invoke_v, "invoke_iiiiiiiii": invoke_iiiiiiiii, "invoke_viiiiiiiii": invoke_viiiiiiiii, "invoke_viiiiiiii": invoke_viiiiiiii, "invoke_viiiiii": invoke_viiiiii, "invoke_iii": invoke_iii, "invoke_iiiiii": invoke_iiiiii, "invoke_viii": invoke_viii, "_llvm_lifetime_end": _llvm_lifetime_end, "_lseek": _lseek, "__scanString": __scanString, "_fclose": _fclose, "_pthread_mutex_lock": _pthread_mutex_lock, "___cxa_end_catch": ___cxa_end_catch, "_glLinkProgram": _glLinkProgram, "_strtoull": _strtoull, "_glBindTexture": _glBindTexture, "_fflush": _fflush, "_isxdigit": _isxdigit, "_strtol": _strtol, "__isLeapYear": __isLeapYear, "_fwrite": _fwrite, "_llvm_eh_exception": _llvm_eh_exception, "_llvm_umul_with_overflow_i32": _llvm_umul_with_overflow_i32, "_glCompileShader": _glCompileShader, "_isspace": _isspace, "_read": _read, "_glfwSetMousePosCallback": _glfwSetMousePosCallback, "_fsync": _fsync, "_glGenTextures": _glGenTextures, "_newlocale": _newlocale, "___gxx_personality_v0": ___gxx_personality_v0, "_glDeleteShader": _glDeleteShader, "_pthread_cond_wait": _pthread_cond_wait, "___cxa_rethrow": ___cxa_rethrow, "___resumeException": ___resumeException, "_div": _div, "_glCreateShader": _glCreateShader, "_strcmp": _strcmp, "_strncmp": _strncmp, "_vsscanf": _vsscanf, "_snprintf": _snprintf, "_fgetc": _fgetc, "_glVertexAttribPointer": _glVertexAttribPointer, "__getFloat": __getFloat, "_atexit": _atexit, "___cxa_free_exception": ___cxa_free_exception, "_glGetUniformLocation": _glGetUniformLocation, "_close": _close, "___setErrNo": ___setErrNo, "___cxa_guard_abort": ___cxa_guard_abort, "_glDrawArrays": _glDrawArrays, "_exit": _exit, "_sprintf": _sprintf, "_asprintf": _asprintf, "___ctype_b_loc": ___ctype_b_loc, "_freelocale": _freelocale, "_glAttachShader": _glAttachShader, "_emscripten_set_main_loop": _emscripten_set_main_loop, "_catgets": _catgets, "___cxa_is_number_type": ___cxa_is_number_type, "_llvm_uadd_with_overflow_i32": _llvm_uadd_with_overflow_i32, "___cxa_does_inherit": ___cxa_does_inherit, "___cxa_guard_acquire": ___cxa_guard_acquire, "___cxa_begin_catch": ___cxa_begin_catch, "_recv": _recv, "_glfwGetMousePos": _glfwGetMousePos, "__parseInt64": __parseInt64, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "_cos": _cos, "___cxa_call_unexpected": ___cxa_call_unexpected, "_glGetShaderiv": _glGetShaderiv, "__exit": __exit, "_strftime": _strftime, "_rand": _rand, "_fabsf": _fabsf, "___cxa_throw": ___cxa_throw, "_glDisableVertexAttribArray": _glDisableVertexAttribArray, "_ldexp": _ldexp, "_send": _send, "_glShaderSource": _glShaderSource, "_pread": _pread, "_fopen": _fopen, "_open": _open, "_sqrtf": _sqrtf, "__arraySum": __arraySum, "_sysconf": _sysconf, "_glClear": _glClear, "_glEnableVertexAttribArray": _glEnableVertexAttribArray, "_glBindBuffer": _glBindBuffer, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "_glUniform4f": _glUniform4f, "_glfwOpenWindow": _glfwOpenWindow, "_glBufferData": _glBufferData, "__reallyNegative": __reallyNegative, "__formatString": __formatString, "_pthread_cond_broadcast": _pthread_cond_broadcast, "__ZSt9terminatev": __ZSt9terminatev, "_isascii": _isascii, "_pthread_mutex_unlock": _pthread_mutex_unlock, "_llvm_pow_f64": _llvm_pow_f64, "_sbrk": _sbrk, "___errno_location": ___errno_location, "_strerror": _strerror, "_glfwInit": _glfwInit, "_catclose": _catclose, "_llvm_lifetime_start": _llvm_lifetime_start, "_glfwSwapBuffers": _glfwSwapBuffers, "__parseInt": __parseInt, "___cxa_guard_release": ___cxa_guard_release, "_ungetc": _ungetc, "_uselocale": _uselocale, "_vsnprintf": _vsnprintf, "_glUseProgram": _glUseProgram, "_sscanf": _sscanf, "_glTexImage2D": _glTexImage2D, "___assert_fail": ___assert_fail, "_glfwGetWindowSize": _glfwGetWindowSize, "_fread": _fread, "_abort": _abort, "_sincos": _sincos, "_isdigit": _isdigit, "_strtoll": _strtoll, "_feof": _feof, "__addDays": __addDays, "_fseek": _fseek, "_write": _write, "_glGenBuffers": _glGenBuffers, "___cxa_allocate_exception": ___cxa_allocate_exception, "_sin": _sin, "_glCreateProgram": _glCreateProgram, "_vasprintf": _vasprintf, "_glViewport": _glViewport, "_glfwPollEvents": _glfwPollEvents, "_catopen": _catopen, "___ctype_toupper_loc": ___ctype_toupper_loc, "___ctype_tolower_loc": ___ctype_tolower_loc, "_llvm_va_end": _llvm_va_end, "_glUniformMatrix4fv": _glUniformMatrix4fv, "_pwrite": _pwrite, "_strerror_r": _strerror_r, "_glTexParameteri": _glTexParameteri, "_glfwSetKeyCallback": _glfwSetKeyCallback, "_glfwSetMouseButtonCallback": _glfwSetMouseButtonCallback, "_atan2": _atan2, "_time": _time, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8, "ctlz_i8": ctlz_i8, "NaN": NaN, "Infinity": Infinity, "_stdin": _stdin, "__ZTVN10__cxxabiv117__class_type_infoE": __ZTVN10__cxxabiv117__class_type_infoE, "__ZTVN10__cxxabiv120__si_class_type_infoE": __ZTVN10__cxxabiv120__si_class_type_infoE, "_stderr": _stderr, "___fsmu8": ___fsmu8, "_stdout": _stdout, "___dso_handle": ___dso_handle }, buffer);
var __GLOBAL__I_a263 = Module["__GLOBAL__I_a263"] = asm["__GLOBAL__I_a263"];
var _strlen = Module["_strlen"] = asm["_strlen"];
var _free = Module["_free"] = asm["_free"];
var _main = Module["_main"] = asm["_main"];
var _realloc = Module["_realloc"] = asm["_realloc"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var __GLOBAL__I_a = Module["__GLOBAL__I_a"] = asm["__GLOBAL__I_a"];
var _memset = Module["_memset"] = asm["_memset"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_fi = Module["dynCall_fi"] = asm["dynCall_fi"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_vidd = Module["dynCall_vidd"] = asm["dynCall_vidd"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_viiiiiid = Module["dynCall_viiiiiid"] = asm["dynCall_viiiiiid"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_viiiiiii = Module["dynCall_viiiiiii"] = asm["dynCall_viiiiiii"];
var dynCall_viiiiid = Module["dynCall_viiiiid"] = asm["dynCall_viiiiid"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_iiiiiiiii = Module["dynCall_iiiiiiiii"] = asm["dynCall_iiiiiiiii"];
var dynCall_viiiiiiiii = Module["dynCall_viiiiiiiii"] = asm["dynCall_viiiiiiiii"];
var dynCall_viiiiiiii = Module["dynCall_viiiiiiii"] = asm["dynCall_viiiiiiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
Runtime.stackAlloc = function(size) { return asm['stackAlloc'](size) };
Runtime.stackSave = function() { return asm['stackSave']() };
Runtime.stackRestore = function(top) { asm['stackRestore'](top) };
// TODO: strip out parts of this we do not need
//======= begin closure i64 code =======
// Copyright 2009 The Closure Library Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Defines a Long class for representing a 64-bit two's-complement
 * integer value, which faithfully simulates the behavior of a Java "long". This
 * implementation is derived from LongLib in GWT.
 *
 */
var i64Math = (function() { // Emscripten wrapper
  var goog = { math: {} };
  /**
   * Constructs a 64-bit two's-complement integer, given its low and high 32-bit
   * values as *signed* integers.  See the from* functions below for more
   * convenient ways of constructing Longs.
   *
   * The internal representation of a long is the two given signed, 32-bit values.
   * We use 32-bit pieces because these are the size of integers on which
   * Javascript performs bit-operations.  For operations like addition and
   * multiplication, we split each number into 16-bit pieces, which can easily be
   * multiplied within Javascript's floating-point representation without overflow
   * or change in sign.
   *
   * In the algorithms below, we frequently reduce the negative case to the
   * positive case by negating the input(s) and then post-processing the result.
   * Note that we must ALWAYS check specially whether those values are MIN_VALUE
   * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
   * a positive number, it overflows back into a negative).  Not handling this
   * case would often result in infinite recursion.
   *
   * @param {number} low  The low (signed) 32 bits of the long.
   * @param {number} high  The high (signed) 32 bits of the long.
   * @constructor
   */
  goog.math.Long = function(low, high) {
    /**
     * @type {number}
     * @private
     */
    this.low_ = low | 0;  // force into 32 signed bits.
    /**
     * @type {number}
     * @private
     */
    this.high_ = high | 0;  // force into 32 signed bits.
  };
  // NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the
  // from* methods on which they depend.
  /**
   * A cache of the Long representations of small integer values.
   * @type {!Object}
   * @private
   */
  goog.math.Long.IntCache_ = {};
  /**
   * Returns a Long representing the given (32-bit) integer value.
   * @param {number} value The 32-bit integer in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromInt = function(value) {
    if (-128 <= value && value < 128) {
      var cachedObj = goog.math.Long.IntCache_[value];
      if (cachedObj) {
        return cachedObj;
      }
    }
    var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
    if (-128 <= value && value < 128) {
      goog.math.Long.IntCache_[value] = obj;
    }
    return obj;
  };
  /**
   * Returns a Long representing the given value, provided that it is a finite
   * number.  Otherwise, zero is returned.
   * @param {number} value The number in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromNumber = function(value) {
    if (isNaN(value) || !isFinite(value)) {
      return goog.math.Long.ZERO;
    } else if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MIN_VALUE;
    } else if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MAX_VALUE;
    } else if (value < 0) {
      return goog.math.Long.fromNumber(-value).negate();
    } else {
      return new goog.math.Long(
          (value % goog.math.Long.TWO_PWR_32_DBL_) | 0,
          (value / goog.math.Long.TWO_PWR_32_DBL_) | 0);
    }
  };
  /**
   * Returns a Long representing the 64-bit integer that comes by concatenating
   * the given high and low bits.  Each is assumed to use 32 bits.
   * @param {number} lowBits The low 32-bits.
   * @param {number} highBits The high 32-bits.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromBits = function(lowBits, highBits) {
    return new goog.math.Long(lowBits, highBits);
  };
  /**
   * Returns a Long representation of the given string, written using the given
   * radix.
   * @param {string} str The textual representation of the Long.
   * @param {number=} opt_radix The radix in which the text is written.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromString = function(str, opt_radix) {
    if (str.length == 0) {
      throw Error('number format error: empty string');
    }
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }
    if (str.charAt(0) == '-') {
      return goog.math.Long.fromString(str.substring(1), radix).negate();
    } else if (str.indexOf('-') >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }
    // Do several (8) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));
    var result = goog.math.Long.ZERO;
    for (var i = 0; i < str.length; i += 8) {
      var size = Math.min(8, str.length - i);
      var value = parseInt(str.substring(i, i + size), radix);
      if (size < 8) {
        var power = goog.math.Long.fromNumber(Math.pow(radix, size));
        result = result.multiply(power).add(goog.math.Long.fromNumber(value));
      } else {
        result = result.multiply(radixToPower);
        result = result.add(goog.math.Long.fromNumber(value));
      }
    }
    return result;
  };
  // NOTE: the compiler should inline these constant values below and then remove
  // these variables, so there should be no runtime penalty for these.
  /**
   * Number used repeated below in calculations.  This must appear before the
   * first call to any from* function below.
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_24_DBL_ = 1 << 24;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_32_DBL_ =
      goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_31_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ / 2;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_48_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_64_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_63_DBL_ =
      goog.math.Long.TWO_PWR_64_DBL_ / 2;
  /** @type {!goog.math.Long} */
  goog.math.Long.ZERO = goog.math.Long.fromInt(0);
  /** @type {!goog.math.Long} */
  goog.math.Long.ONE = goog.math.Long.fromInt(1);
  /** @type {!goog.math.Long} */
  goog.math.Long.NEG_ONE = goog.math.Long.fromInt(-1);
  /** @type {!goog.math.Long} */
  goog.math.Long.MAX_VALUE =
      goog.math.Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);
  /** @type {!goog.math.Long} */
  goog.math.Long.MIN_VALUE = goog.math.Long.fromBits(0, 0x80000000 | 0);
  /**
   * @type {!goog.math.Long}
   * @private
   */
  goog.math.Long.TWO_PWR_24_ = goog.math.Long.fromInt(1 << 24);
  /** @return {number} The value, assuming it is a 32-bit integer. */
  goog.math.Long.prototype.toInt = function() {
    return this.low_;
  };
  /** @return {number} The closest floating-point representation to this value. */
  goog.math.Long.prototype.toNumber = function() {
    return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ +
           this.getLowBitsUnsigned();
  };
  /**
   * @param {number=} opt_radix The radix in which the text should be written.
   * @return {string} The textual representation of this value.
   */
  goog.math.Long.prototype.toString = function(opt_radix) {
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }
    if (this.isZero()) {
      return '0';
    }
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        // We need to change the Long value before it can be negated, so we remove
        // the bottom-most digit in this base and then recurse to do the rest.
        var radixLong = goog.math.Long.fromNumber(radix);
        var div = this.div(radixLong);
        var rem = div.multiply(radixLong).subtract(this);
        return div.toString(radix) + rem.toInt().toString(radix);
      } else {
        return '-' + this.negate().toString(radix);
      }
    }
    // Do several (6) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));
    var rem = this;
    var result = '';
    while (true) {
      var remDiv = rem.div(radixToPower);
      var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
      var digits = intval.toString(radix);
      rem = remDiv;
      if (rem.isZero()) {
        return digits + result;
      } else {
        while (digits.length < 6) {
          digits = '0' + digits;
        }
        result = '' + digits + result;
      }
    }
  };
  /** @return {number} The high 32-bits as a signed value. */
  goog.math.Long.prototype.getHighBits = function() {
    return this.high_;
  };
  /** @return {number} The low 32-bits as a signed value. */
  goog.math.Long.prototype.getLowBits = function() {
    return this.low_;
  };
  /** @return {number} The low 32-bits as an unsigned value. */
  goog.math.Long.prototype.getLowBitsUnsigned = function() {
    return (this.low_ >= 0) ?
        this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
  };
  /**
   * @return {number} Returns the number of bits needed to represent the absolute
   *     value of this Long.
   */
  goog.math.Long.prototype.getNumBitsAbs = function() {
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        return 64;
      } else {
        return this.negate().getNumBitsAbs();
      }
    } else {
      var val = this.high_ != 0 ? this.high_ : this.low_;
      for (var bit = 31; bit > 0; bit--) {
        if ((val & (1 << bit)) != 0) {
          break;
        }
      }
      return this.high_ != 0 ? bit + 33 : bit + 1;
    }
  };
  /** @return {boolean} Whether this value is zero. */
  goog.math.Long.prototype.isZero = function() {
    return this.high_ == 0 && this.low_ == 0;
  };
  /** @return {boolean} Whether this value is negative. */
  goog.math.Long.prototype.isNegative = function() {
    return this.high_ < 0;
  };
  /** @return {boolean} Whether this value is odd. */
  goog.math.Long.prototype.isOdd = function() {
    return (this.low_ & 1) == 1;
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long equals the other.
   */
  goog.math.Long.prototype.equals = function(other) {
    return (this.high_ == other.high_) && (this.low_ == other.low_);
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long does not equal the other.
   */
  goog.math.Long.prototype.notEquals = function(other) {
    return (this.high_ != other.high_) || (this.low_ != other.low_);
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than the other.
   */
  goog.math.Long.prototype.lessThan = function(other) {
    return this.compare(other) < 0;
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than or equal to the other.
   */
  goog.math.Long.prototype.lessThanOrEqual = function(other) {
    return this.compare(other) <= 0;
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than the other.
   */
  goog.math.Long.prototype.greaterThan = function(other) {
    return this.compare(other) > 0;
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than or equal to the other.
   */
  goog.math.Long.prototype.greaterThanOrEqual = function(other) {
    return this.compare(other) >= 0;
  };
  /**
   * Compares this Long with the given one.
   * @param {goog.math.Long} other Long to compare against.
   * @return {number} 0 if they are the same, 1 if the this is greater, and -1
   *     if the given one is greater.
   */
  goog.math.Long.prototype.compare = function(other) {
    if (this.equals(other)) {
      return 0;
    }
    var thisNeg = this.isNegative();
    var otherNeg = other.isNegative();
    if (thisNeg && !otherNeg) {
      return -1;
    }
    if (!thisNeg && otherNeg) {
      return 1;
    }
    // at this point, the signs are the same, so subtraction will not overflow
    if (this.subtract(other).isNegative()) {
      return -1;
    } else {
      return 1;
    }
  };
  /** @return {!goog.math.Long} The negation of this value. */
  goog.math.Long.prototype.negate = function() {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.MIN_VALUE;
    } else {
      return this.not().add(goog.math.Long.ONE);
    }
  };
  /**
   * Returns the sum of this and the given Long.
   * @param {goog.math.Long} other Long to add to this one.
   * @return {!goog.math.Long} The sum of this and the given Long.
   */
  goog.math.Long.prototype.add = function(other) {
    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.
    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;
    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;
    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 + b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 + b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 + b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 + b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };
  /**
   * Returns the difference of this and the given Long.
   * @param {goog.math.Long} other Long to subtract from this.
   * @return {!goog.math.Long} The difference of this and the given Long.
   */
  goog.math.Long.prototype.subtract = function(other) {
    return this.add(other.negate());
  };
  /**
   * Returns the product of this and the given long.
   * @param {goog.math.Long} other Long to multiply with this.
   * @return {!goog.math.Long} The product of this and the other.
   */
  goog.math.Long.prototype.multiply = function(other) {
    if (this.isZero()) {
      return goog.math.Long.ZERO;
    } else if (other.isZero()) {
      return goog.math.Long.ZERO;
    }
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return other.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return this.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    }
    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().multiply(other.negate());
      } else {
        return this.negate().multiply(other).negate();
      }
    } else if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }
    // If both longs are small, use float multiplication
    if (this.lessThan(goog.math.Long.TWO_PWR_24_) &&
        other.lessThan(goog.math.Long.TWO_PWR_24_)) {
      return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
    }
    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.
    // We can skip products that would overflow.
    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;
    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;
    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 * b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 * b00;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c16 += a00 * b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 * b00;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a16 * b16;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a00 * b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };
  /**
   * Returns this Long divided by the given one.
   * @param {goog.math.Long} other Long by which to divide.
   * @return {!goog.math.Long} This Long divided by the given one.
   */
  goog.math.Long.prototype.div = function(other) {
    if (other.isZero()) {
      throw Error('division by zero');
    } else if (this.isZero()) {
      return goog.math.Long.ZERO;
    }
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      if (other.equals(goog.math.Long.ONE) ||
          other.equals(goog.math.Long.NEG_ONE)) {
        return goog.math.Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE
      } else if (other.equals(goog.math.Long.MIN_VALUE)) {
        return goog.math.Long.ONE;
      } else {
        // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.ZERO)) {
          return other.isNegative() ? goog.math.Long.ONE : goog.math.Long.NEG_ONE;
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.ZERO;
    }
    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().div(other.negate());
      } else {
        return this.negate().div(other).negate();
      }
    } else if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }
    // Repeat the following until the remainder is less than other:  find a
    // floating-point that approximates remainder / other *from below*, add this
    // into the result, and subtract it from the remainder.  It is critical that
    // the approximate value is less than or equal to the real value so that the
    // remainder never becomes negative.
    var res = goog.math.Long.ZERO;
    var rem = this;
    while (rem.greaterThanOrEqual(other)) {
      // Approximate the result of division. This may be a little greater or
      // smaller than the actual value.
      var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));
      // We will tweak the approximate result by changing it in the 48-th digit or
      // the smallest non-fractional digit, whichever is larger.
      var log2 = Math.ceil(Math.log(approx) / Math.LN2);
      var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);
      // Decrease the approximation until it is smaller than the remainder.  Note
      // that if it is too large, the product overflows and is negative.
      var approxRes = goog.math.Long.fromNumber(approx);
      var approxRem = approxRes.multiply(other);
      while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
        approx -= delta;
        approxRes = goog.math.Long.fromNumber(approx);
        approxRem = approxRes.multiply(other);
      }
      // We know the answer can't be zero... and actually, zero would cause
      // infinite recursion since we would make no progress.
      if (approxRes.isZero()) {
        approxRes = goog.math.Long.ONE;
      }
      res = res.add(approxRes);
      rem = rem.subtract(approxRem);
    }
    return res;
  };
  /**
   * Returns this Long modulo the given one.
   * @param {goog.math.Long} other Long by which to mod.
   * @return {!goog.math.Long} This Long modulo the given one.
   */
  goog.math.Long.prototype.modulo = function(other) {
    return this.subtract(this.div(other).multiply(other));
  };
  /** @return {!goog.math.Long} The bitwise-NOT of this value. */
  goog.math.Long.prototype.not = function() {
    return goog.math.Long.fromBits(~this.low_, ~this.high_);
  };
  /**
   * Returns the bitwise-AND of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to AND.
   * @return {!goog.math.Long} The bitwise-AND of this and the other.
   */
  goog.math.Long.prototype.and = function(other) {
    return goog.math.Long.fromBits(this.low_ & other.low_,
                                   this.high_ & other.high_);
  };
  /**
   * Returns the bitwise-OR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to OR.
   * @return {!goog.math.Long} The bitwise-OR of this and the other.
   */
  goog.math.Long.prototype.or = function(other) {
    return goog.math.Long.fromBits(this.low_ | other.low_,
                                   this.high_ | other.high_);
  };
  /**
   * Returns the bitwise-XOR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to XOR.
   * @return {!goog.math.Long} The bitwise-XOR of this and the other.
   */
  goog.math.Long.prototype.xor = function(other) {
    return goog.math.Long.fromBits(this.low_ ^ other.low_,
                                   this.high_ ^ other.high_);
  };
  /**
   * Returns this Long with bits shifted to the left by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the left by the given amount.
   */
  goog.math.Long.prototype.shiftLeft = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var low = this.low_;
      if (numBits < 32) {
        var high = this.high_;
        return goog.math.Long.fromBits(
            low << numBits,
            (high << numBits) | (low >>> (32 - numBits)));
      } else {
        return goog.math.Long.fromBits(0, low << (numBits - 32));
      }
    }
  };
  /**
   * Returns this Long with bits shifted to the right by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount.
   */
  goog.math.Long.prototype.shiftRight = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >> numBits);
      } else {
        return goog.math.Long.fromBits(
            high >> (numBits - 32),
            high >= 0 ? 0 : -1);
      }
    }
  };
  /**
   * Returns this Long with bits shifted to the right by the given amount, with
   * the new top bits matching the current sign bit.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount, with
   *     zeros placed into the new leading bits.
   */
  goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >>> numBits);
      } else if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> (numBits - 32), 0);
      }
    }
  };
  //======= begin jsbn =======
  var navigator = { appName: 'Modern Browser' }; // polyfill a little
  // Copyright (c) 2005  Tom Wu
  // All Rights Reserved.
  // http://www-cs-students.stanford.edu/~tjw/jsbn/
  /*
   * Copyright (c) 2003-2005  Tom Wu
   * All Rights Reserved.
   *
   * Permission is hereby granted, free of charge, to any person obtaining
   * a copy of this software and associated documentation files (the
   * "Software"), to deal in the Software without restriction, including
   * without limitation the rights to use, copy, modify, merge, publish,
   * distribute, sublicense, and/or sell copies of the Software, and to
   * permit persons to whom the Software is furnished to do so, subject to
   * the following conditions:
   *
   * The above copyright notice and this permission notice shall be
   * included in all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
   * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
   * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
   *
   * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,
   * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER
   * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF
   * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT
   * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
   *
   * In addition, the following condition applies:
   *
   * All redistributions must retain an intact copy of this copyright notice
   * and disclaimer.
   */
  // Basic JavaScript BN library - subset useful for RSA encryption.
  // Bits per digit
  var dbits;
  // JavaScript engine analysis
  var canary = 0xdeadbeefcafe;
  var j_lm = ((canary&0xffffff)==0xefcafe);
  // (public) Constructor
  function BigInteger(a,b,c) {
    if(a != null)
      if("number" == typeof a) this.fromNumber(a,b,c);
      else if(b == null && "string" != typeof a) this.fromString(a,256);
      else this.fromString(a,b);
  }
  // return new, unset BigInteger
  function nbi() { return new BigInteger(null); }
  // am: Compute w_j += (x*this_i), propagate carries,
  // c is initial carry, returns final carry.
  // c < 3*dvalue, x < 2*dvalue, this_i < dvalue
  // We need to select the fastest one that works in this environment.
  // am1: use a single mult and divide to get the high bits,
  // max digit bits should be 26 because
  // max internal value = 2*dvalue^2-2*dvalue (< 2^53)
  function am1(i,x,w,j,c,n) {
    while(--n >= 0) {
      var v = x*this[i++]+w[j]+c;
      c = Math.floor(v/0x4000000);
      w[j++] = v&0x3ffffff;
    }
    return c;
  }
  // am2 avoids a big mult-and-extract completely.
  // Max digit bits should be <= 30 because we do bitwise ops
  // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
  function am2(i,x,w,j,c,n) {
    var xl = x&0x7fff, xh = x>>15;
    while(--n >= 0) {
      var l = this[i]&0x7fff;
      var h = this[i++]>>15;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);
      c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);
      w[j++] = l&0x3fffffff;
    }
    return c;
  }
  // Alternately, set max digit bits to 28 since some
  // browsers slow down when dealing with 32-bit numbers.
  function am3(i,x,w,j,c,n) {
    var xl = x&0x3fff, xh = x>>14;
    while(--n >= 0) {
      var l = this[i]&0x3fff;
      var h = this[i++]>>14;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x3fff)<<14)+w[j]+c;
      c = (l>>28)+(m>>14)+xh*h;
      w[j++] = l&0xfffffff;
    }
    return c;
  }
  if(j_lm && (navigator.appName == "Microsoft Internet Explorer")) {
    BigInteger.prototype.am = am2;
    dbits = 30;
  }
  else if(j_lm && (navigator.appName != "Netscape")) {
    BigInteger.prototype.am = am1;
    dbits = 26;
  }
  else { // Mozilla/Netscape seems to prefer am3
    BigInteger.prototype.am = am3;
    dbits = 28;
  }
  BigInteger.prototype.DB = dbits;
  BigInteger.prototype.DM = ((1<<dbits)-1);
  BigInteger.prototype.DV = (1<<dbits);
  var BI_FP = 52;
  BigInteger.prototype.FV = Math.pow(2,BI_FP);
  BigInteger.prototype.F1 = BI_FP-dbits;
  BigInteger.prototype.F2 = 2*dbits-BI_FP;
  // Digit conversions
  var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
  var BI_RC = new Array();
  var rr,vv;
  rr = "0".charCodeAt(0);
  for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;
  rr = "a".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  rr = "A".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  function int2char(n) { return BI_RM.charAt(n); }
  function intAt(s,i) {
    var c = BI_RC[s.charCodeAt(i)];
    return (c==null)?-1:c;
  }
  // (protected) copy this to r
  function bnpCopyTo(r) {
    for(var i = this.t-1; i >= 0; --i) r[i] = this[i];
    r.t = this.t;
    r.s = this.s;
  }
  // (protected) set from integer value x, -DV <= x < DV
  function bnpFromInt(x) {
    this.t = 1;
    this.s = (x<0)?-1:0;
    if(x > 0) this[0] = x;
    else if(x < -1) this[0] = x+DV;
    else this.t = 0;
  }
  // return bigint initialized to value
  function nbv(i) { var r = nbi(); r.fromInt(i); return r; }
  // (protected) set from string and radix
  function bnpFromString(s,b) {
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 256) k = 8; // byte array
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else { this.fromRadix(s,b); return; }
    this.t = 0;
    this.s = 0;
    var i = s.length, mi = false, sh = 0;
    while(--i >= 0) {
      var x = (k==8)?s[i]&0xff:intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-") mi = true;
        continue;
      }
      mi = false;
      if(sh == 0)
        this[this.t++] = x;
      else if(sh+k > this.DB) {
        this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;
        this[this.t++] = (x>>(this.DB-sh));
      }
      else
        this[this.t-1] |= x<<sh;
      sh += k;
      if(sh >= this.DB) sh -= this.DB;
    }
    if(k == 8 && (s[0]&0x80) != 0) {
      this.s = -1;
      if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;
    }
    this.clamp();
    if(mi) BigInteger.ZERO.subTo(this,this);
  }
  // (protected) clamp off excess high words
  function bnpClamp() {
    var c = this.s&this.DM;
    while(this.t > 0 && this[this.t-1] == c) --this.t;
  }
  // (public) return string representation in given radix
  function bnToString(b) {
    if(this.s < 0) return "-"+this.negate().toString(b);
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else return this.toRadix(b);
    var km = (1<<k)-1, d, m = false, r = "", i = this.t;
    var p = this.DB-(i*this.DB)%k;
    if(i-- > 0) {
      if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }
      while(i >= 0) {
        if(p < k) {
          d = (this[i]&((1<<p)-1))<<(k-p);
          d |= this[--i]>>(p+=this.DB-k);
        }
        else {
          d = (this[i]>>(p-=k))&km;
          if(p <= 0) { p += this.DB; --i; }
        }
        if(d > 0) m = true;
        if(m) r += int2char(d);
      }
    }
    return m?r:"0";
  }
  // (public) -this
  function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }
  // (public) |this|
  function bnAbs() { return (this.s<0)?this.negate():this; }
  // (public) return + if this > a, - if this < a, 0 if equal
  function bnCompareTo(a) {
    var r = this.s-a.s;
    if(r != 0) return r;
    var i = this.t;
    r = i-a.t;
    if(r != 0) return (this.s<0)?-r:r;
    while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;
    return 0;
  }
  // returns bit length of the integer x
  function nbits(x) {
    var r = 1, t;
    if((t=x>>>16) != 0) { x = t; r += 16; }
    if((t=x>>8) != 0) { x = t; r += 8; }
    if((t=x>>4) != 0) { x = t; r += 4; }
    if((t=x>>2) != 0) { x = t; r += 2; }
    if((t=x>>1) != 0) { x = t; r += 1; }
    return r;
  }
  // (public) return the number of bits in "this"
  function bnBitLength() {
    if(this.t <= 0) return 0;
    return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));
  }
  // (protected) r = this << n*DB
  function bnpDLShiftTo(n,r) {
    var i;
    for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];
    for(i = n-1; i >= 0; --i) r[i] = 0;
    r.t = this.t+n;
    r.s = this.s;
  }
  // (protected) r = this >> n*DB
  function bnpDRShiftTo(n,r) {
    for(var i = n; i < this.t; ++i) r[i-n] = this[i];
    r.t = Math.max(this.t-n,0);
    r.s = this.s;
  }
  // (protected) r = this << n
  function bnpLShiftTo(n,r) {
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<cbs)-1;
    var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;
    for(i = this.t-1; i >= 0; --i) {
      r[i+ds+1] = (this[i]>>cbs)|c;
      c = (this[i]&bm)<<bs;
    }
    for(i = ds-1; i >= 0; --i) r[i] = 0;
    r[ds] = c;
    r.t = this.t+ds+1;
    r.s = this.s;
    r.clamp();
  }
  // (protected) r = this >> n
  function bnpRShiftTo(n,r) {
    r.s = this.s;
    var ds = Math.floor(n/this.DB);
    if(ds >= this.t) { r.t = 0; return; }
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<bs)-1;
    r[0] = this[ds]>>bs;
    for(var i = ds+1; i < this.t; ++i) {
      r[i-ds-1] |= (this[i]&bm)<<cbs;
      r[i-ds] = this[i]>>bs;
    }
    if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;
    r.t = this.t-ds;
    r.clamp();
  }
  // (protected) r = this - a
  function bnpSubTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]-a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c -= a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c -= a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c -= a.s;
    }
    r.s = (c<0)?-1:0;
    if(c < -1) r[i++] = this.DV+c;
    else if(c > 0) r[i++] = c;
    r.t = i;
    r.clamp();
  }
  // (protected) r = this * a, r != this,a (HAC 14.12)
  // "this" should be the larger one if appropriate.
  function bnpMultiplyTo(a,r) {
    var x = this.abs(), y = a.abs();
    var i = x.t;
    r.t = i+y.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);
    r.s = 0;
    r.clamp();
    if(this.s != a.s) BigInteger.ZERO.subTo(r,r);
  }
  // (protected) r = this^2, r != this (HAC 14.16)
  function bnpSquareTo(r) {
    var x = this.abs();
    var i = r.t = 2*x.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < x.t-1; ++i) {
      var c = x.am(i,x[i],r,2*i,0,1);
      if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {
        r[i+x.t] -= x.DV;
        r[i+x.t+1] = 1;
      }
    }
    if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);
    r.s = 0;
    r.clamp();
  }
  // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
  // r != q, this != m.  q or r may be null.
  function bnpDivRemTo(m,q,r) {
    var pm = m.abs();
    if(pm.t <= 0) return;
    var pt = this.abs();
    if(pt.t < pm.t) {
      if(q != null) q.fromInt(0);
      if(r != null) this.copyTo(r);
      return;
    }
    if(r == null) r = nbi();
    var y = nbi(), ts = this.s, ms = m.s;
    var nsh = this.DB-nbits(pm[pm.t-1]);	// normalize modulus
    if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }
    else { pm.copyTo(y); pt.copyTo(r); }
    var ys = y.t;
    var y0 = y[ys-1];
    if(y0 == 0) return;
    var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);
    var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;
    var i = r.t, j = i-ys, t = (q==null)?nbi():q;
    y.dlShiftTo(j,t);
    if(r.compareTo(t) >= 0) {
      r[r.t++] = 1;
      r.subTo(t,r);
    }
    BigInteger.ONE.dlShiftTo(ys,t);
    t.subTo(y,y);	// "negative" y so we can replace sub with am later
    while(y.t < ys) y[y.t++] = 0;
    while(--j >= 0) {
      // Estimate quotient digit
      var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);
      if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {	// Try it out
        y.dlShiftTo(j,t);
        r.subTo(t,r);
        while(r[i] < --qd) r.subTo(t,r);
      }
    }
    if(q != null) {
      r.drShiftTo(ys,q);
      if(ts != ms) BigInteger.ZERO.subTo(q,q);
    }
    r.t = ys;
    r.clamp();
    if(nsh > 0) r.rShiftTo(nsh,r);	// Denormalize remainder
    if(ts < 0) BigInteger.ZERO.subTo(r,r);
  }
  // (public) this mod a
  function bnMod(a) {
    var r = nbi();
    this.abs().divRemTo(a,null,r);
    if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);
    return r;
  }
  // Modular reduction using "classic" algorithm
  function Classic(m) { this.m = m; }
  function cConvert(x) {
    if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);
    else return x;
  }
  function cRevert(x) { return x; }
  function cReduce(x) { x.divRemTo(this.m,null,x); }
  function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }
  Classic.prototype.convert = cConvert;
  Classic.prototype.revert = cRevert;
  Classic.prototype.reduce = cReduce;
  Classic.prototype.mulTo = cMulTo;
  Classic.prototype.sqrTo = cSqrTo;
  // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
  // justification:
  //         xy == 1 (mod m)
  //         xy =  1+km
  //   xy(2-xy) = (1+km)(1-km)
  // x[y(2-xy)] = 1-k^2m^2
  // x[y(2-xy)] == 1 (mod m^2)
  // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
  // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
  // JS multiply "overflows" differently from C/C++, so care is needed here.
  function bnpInvDigit() {
    if(this.t < 1) return 0;
    var x = this[0];
    if((x&1) == 0) return 0;
    var y = x&3;		// y == 1/x mod 2^2
    y = (y*(2-(x&0xf)*y))&0xf;	// y == 1/x mod 2^4
    y = (y*(2-(x&0xff)*y))&0xff;	// y == 1/x mod 2^8
    y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;	// y == 1/x mod 2^16
    // last step - calculate inverse mod DV directly;
    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
    y = (y*(2-x*y%this.DV))%this.DV;		// y == 1/x mod 2^dbits
    // we really want the negative inverse, and -DV < y < DV
    return (y>0)?this.DV-y:-y;
  }
  // Montgomery reduction
  function Montgomery(m) {
    this.m = m;
    this.mp = m.invDigit();
    this.mpl = this.mp&0x7fff;
    this.mph = this.mp>>15;
    this.um = (1<<(m.DB-15))-1;
    this.mt2 = 2*m.t;
  }
  // xR mod m
  function montConvert(x) {
    var r = nbi();
    x.abs().dlShiftTo(this.m.t,r);
    r.divRemTo(this.m,null,r);
    if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);
    return r;
  }
  // x/R mod m
  function montRevert(x) {
    var r = nbi();
    x.copyTo(r);
    this.reduce(r);
    return r;
  }
  // x = x/R mod m (HAC 14.32)
  function montReduce(x) {
    while(x.t <= this.mt2)	// pad x so am has enough room later
      x[x.t++] = 0;
    for(var i = 0; i < this.m.t; ++i) {
      // faster way of calculating u0 = x[i]*mp mod DV
      var j = x[i]&0x7fff;
      var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;
      // use am to combine the multiply-shift-add into one call
      j = i+this.m.t;
      x[j] += this.m.am(0,u0,x,i,0,this.m.t);
      // propagate carry
      while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }
    }
    x.clamp();
    x.drShiftTo(this.m.t,x);
    if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);
  }
  // r = "x^2/R mod m"; x != r
  function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }
  // r = "xy/R mod m"; x,y != r
  function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  Montgomery.prototype.convert = montConvert;
  Montgomery.prototype.revert = montRevert;
  Montgomery.prototype.reduce = montReduce;
  Montgomery.prototype.mulTo = montMulTo;
  Montgomery.prototype.sqrTo = montSqrTo;
  // (protected) true iff this is even
  function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }
  // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
  function bnpExp(e,z) {
    if(e > 0xffffffff || e < 1) return BigInteger.ONE;
    var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;
    g.copyTo(r);
    while(--i >= 0) {
      z.sqrTo(r,r2);
      if((e&(1<<i)) > 0) z.mulTo(r2,g,r);
      else { var t = r; r = r2; r2 = t; }
    }
    return z.revert(r);
  }
  // (public) this^e % m, 0 <= e < 2^32
  function bnModPowInt(e,m) {
    var z;
    if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);
    return this.exp(e,z);
  }
  // protected
  BigInteger.prototype.copyTo = bnpCopyTo;
  BigInteger.prototype.fromInt = bnpFromInt;
  BigInteger.prototype.fromString = bnpFromString;
  BigInteger.prototype.clamp = bnpClamp;
  BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
  BigInteger.prototype.drShiftTo = bnpDRShiftTo;
  BigInteger.prototype.lShiftTo = bnpLShiftTo;
  BigInteger.prototype.rShiftTo = bnpRShiftTo;
  BigInteger.prototype.subTo = bnpSubTo;
  BigInteger.prototype.multiplyTo = bnpMultiplyTo;
  BigInteger.prototype.squareTo = bnpSquareTo;
  BigInteger.prototype.divRemTo = bnpDivRemTo;
  BigInteger.prototype.invDigit = bnpInvDigit;
  BigInteger.prototype.isEven = bnpIsEven;
  BigInteger.prototype.exp = bnpExp;
  // public
  BigInteger.prototype.toString = bnToString;
  BigInteger.prototype.negate = bnNegate;
  BigInteger.prototype.abs = bnAbs;
  BigInteger.prototype.compareTo = bnCompareTo;
  BigInteger.prototype.bitLength = bnBitLength;
  BigInteger.prototype.mod = bnMod;
  BigInteger.prototype.modPowInt = bnModPowInt;
  // "constants"
  BigInteger.ZERO = nbv(0);
  BigInteger.ONE = nbv(1);
  // jsbn2 stuff
  // (protected) convert from radix string
  function bnpFromRadix(s,b) {
    this.fromInt(0);
    if(b == null) b = 10;
    var cs = this.chunkSize(b);
    var d = Math.pow(b,cs), mi = false, j = 0, w = 0;
    for(var i = 0; i < s.length; ++i) {
      var x = intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-" && this.signum() == 0) mi = true;
        continue;
      }
      w = b*w+x;
      if(++j >= cs) {
        this.dMultiply(d);
        this.dAddOffset(w,0);
        j = 0;
        w = 0;
      }
    }
    if(j > 0) {
      this.dMultiply(Math.pow(b,j));
      this.dAddOffset(w,0);
    }
    if(mi) BigInteger.ZERO.subTo(this,this);
  }
  // (protected) return x s.t. r^x < DV
  function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }
  // (public) 0 if this == 0, 1 if this > 0
  function bnSigNum() {
    if(this.s < 0) return -1;
    else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;
    else return 1;
  }
  // (protected) this *= n, this >= 0, 1 < n < DV
  function bnpDMultiply(n) {
    this[this.t] = this.am(0,n-1,this,0,0,this.t);
    ++this.t;
    this.clamp();
  }
  // (protected) this += n << w words, this >= 0
  function bnpDAddOffset(n,w) {
    if(n == 0) return;
    while(this.t <= w) this[this.t++] = 0;
    this[w] += n;
    while(this[w] >= this.DV) {
      this[w] -= this.DV;
      if(++w >= this.t) this[this.t++] = 0;
      ++this[w];
    }
  }
  // (protected) convert to radix string
  function bnpToRadix(b) {
    if(b == null) b = 10;
    if(this.signum() == 0 || b < 2 || b > 36) return "0";
    var cs = this.chunkSize(b);
    var a = Math.pow(b,cs);
    var d = nbv(a), y = nbi(), z = nbi(), r = "";
    this.divRemTo(d,y,z);
    while(y.signum() > 0) {
      r = (a+z.intValue()).toString(b).substr(1) + r;
      y.divRemTo(d,y,z);
    }
    return z.intValue().toString(b) + r;
  }
  // (public) return value as integer
  function bnIntValue() {
    if(this.s < 0) {
      if(this.t == 1) return this[0]-this.DV;
      else if(this.t == 0) return -1;
    }
    else if(this.t == 1) return this[0];
    else if(this.t == 0) return 0;
    // assumes 16 < DB < 32
    return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];
  }
  // (protected) r = this + a
  function bnpAddTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]+a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c += a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c += a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += a.s;
    }
    r.s = (c<0)?-1:0;
    if(c > 0) r[i++] = c;
    else if(c < -1) r[i++] = this.DV+c;
    r.t = i;
    r.clamp();
  }
  BigInteger.prototype.fromRadix = bnpFromRadix;
  BigInteger.prototype.chunkSize = bnpChunkSize;
  BigInteger.prototype.signum = bnSigNum;
  BigInteger.prototype.dMultiply = bnpDMultiply;
  BigInteger.prototype.dAddOffset = bnpDAddOffset;
  BigInteger.prototype.toRadix = bnpToRadix;
  BigInteger.prototype.intValue = bnIntValue;
  BigInteger.prototype.addTo = bnpAddTo;
  //======= end jsbn =======
  // Emscripten wrapper
  var Wrapper = {
    abs: function(l, h) {
      var x = new goog.math.Long(l, h);
      var ret;
      if (x.isNegative()) {
        ret = x.negate();
      } else {
        ret = x;
      }
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
    },
    ensureTemps: function() {
      if (Wrapper.ensuredTemps) return;
      Wrapper.ensuredTemps = true;
      Wrapper.two32 = new BigInteger();
      Wrapper.two32.fromString('4294967296', 10);
      Wrapper.two64 = new BigInteger();
      Wrapper.two64.fromString('18446744073709551616', 10);
      Wrapper.temp1 = new BigInteger();
      Wrapper.temp2 = new BigInteger();
    },
    lh2bignum: function(l, h) {
      var a = new BigInteger();
      a.fromString(h.toString(), 10);
      var b = new BigInteger();
      a.multiplyTo(Wrapper.two32, b);
      var c = new BigInteger();
      c.fromString(l.toString(), 10);
      var d = new BigInteger();
      c.addTo(b, d);
      return d;
    },
    stringify: function(l, h, unsigned) {
      var ret = new goog.math.Long(l, h).toString();
      if (unsigned && ret[0] == '-') {
        // unsign slowly using jsbn bignums
        Wrapper.ensureTemps();
        var bignum = new BigInteger();
        bignum.fromString(ret, 10);
        ret = new BigInteger();
        Wrapper.two64.addTo(bignum, ret);
        ret = ret.toString(10);
      }
      return ret;
    },
    fromString: function(str, base, min, max, unsigned) {
      Wrapper.ensureTemps();
      var bignum = new BigInteger();
      bignum.fromString(str, base);
      var bigmin = new BigInteger();
      bigmin.fromString(min, 10);
      var bigmax = new BigInteger();
      bigmax.fromString(max, 10);
      if (unsigned && bignum.compareTo(BigInteger.ZERO) < 0) {
        var temp = new BigInteger();
        bignum.addTo(Wrapper.two64, temp);
        bignum = temp;
      }
      var error = false;
      if (bignum.compareTo(bigmin) < 0) {
        bignum = bigmin;
        error = true;
      } else if (bignum.compareTo(bigmax) > 0) {
        bignum = bigmax;
        error = true;
      }
      var ret = goog.math.Long.fromString(bignum.toString()); // min-max checks should have clamped this to a range goog.math.Long can handle well
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
      if (error) throw 'range error';
    }
  };
  return Wrapper;
})();
//======= end closure i64 code =======
// === Auto-generated postamble setup entry stuff ===
if (memoryInitializer) {
  function applyData(data) {
    HEAPU8.set(data, STATIC_BASE);
  }
  if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
    applyData(Module['readBinary'](memoryInitializer));
  } else {
    addRunDependency('memory initializer');
    Browser.asyncLoad(memoryInitializer, function(data) {
      applyData(data);
      removeRunDependency('memory initializer');
    }, function(data) {
      throw 'could not load memory initializer ' + memoryInitializer;
    });
  }
}
function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;
var initialStackTop;
var preloadStartTime = null;
var calledMain = false;
dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun'] && shouldRunNow) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}
Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');
  args = args || [];
  if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
    Module.printErr('preload time: ' + (Date.now() - preloadStartTime) + ' ms');
  }
  ensureInitRuntime();
  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString("/bin/this.program"), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);
  initialStackTop = STACKTOP;
  try {
    var ret = Module['_main'](argc, argv, 0);
    // if we're not running an evented main loop, it's time to exit
    if (!Module['noExitRuntime']) {
      exit(ret);
    }
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}
function run(args) {
  args = args || Module['arguments'];
  if (preloadStartTime === null) preloadStartTime = Date.now();
  if (runDependencies > 0) {
    Module.printErr('run() called, but dependencies remain, so not running');
    return;
  }
  preRun();
  if (runDependencies > 0) {
    // a preRun added a dependency, run will be called later
    return;
  }
  function doRun() {
    ensureInitRuntime();
    preMain();
    Module['calledRun'] = true;
    if (Module['_main'] && shouldRunNow) {
      Module['callMain'](args);
    }
    postRun();
  }
  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      if (!ABORT) doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;
function exit(status) {
  ABORT = true;
  EXITSTATUS = status;
  STACKTOP = initialStackTop;
  // exit the runtime
  exitRuntime();
  // TODO We should handle this differently based on environment.
  // In the browser, the best we can do is throw an exception
  // to halt execution, but in node we could process.exit and
  // I'd imagine SM shell would have something equivalent.
  // This would let us set a proper exit status (which
  // would be great for checking test exit statuses).
  // https://github.com/kripken/emscripten/issues/1371
  // throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;
function abort(text) {
  if (text) {
    Module.print(text);
    Module.printErr(text);
  }
  ABORT = true;
  EXITSTATUS = 1;
  throw 'abort() at ' + stackTrace();
}
Module['abort'] = Module.abort = abort;
// {{PRE_RUN_ADDITIONS}}
if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}
// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}
run();
// {{POST_RUN_ADDITIONS}}
// {{MODULE_ADDITIONS}}
